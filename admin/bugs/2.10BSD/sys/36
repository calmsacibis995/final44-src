From sms@WLV.IMSD.CONTEL.COM  Mon Apr 23 21:44:56 1990
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.62/1.37)
	id AA08749; Mon, 23 Apr 90 21:44:56 -0700
Received: from WLV.IMSD.CONTEL.COM by ucbvax.Berkeley.EDU (5.62/1.41)
	id AA12344; Mon, 23 Apr 90 21:45:04 -0700
Received: by WLV.IMSD.CONTEL.COM (5.61/1.25)
	id AA01183; Mon, 23 Apr 90 21:26:05 -0700
Date: Mon, 23 Apr 90 21:26:05 -0700
From: sms@WLV.IMSD.CONTEL.COM (Steven M. Schultz)
Message-Id: <9004240426.AA01183@WLV.IMSD.CONTEL.COM>
Subject: quotas should only affect write not read
Index: 	sys/sys_inode.c 2.10BSD
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Description:
	In the process of reorganizing sys_inode.c to implement the
	rdwri() interface, a bug was introduced in the quota check.

Repeat-By:
	Exceed a quota, then "cat" a file.  A "quota exceeded" error
	will occur on the read.

Fix:
	The problem was caused by adding the check for the file being
	a pipe - enclosing the check for the type in parentheses is the
	fix.  Apply the patch below to sys_inode.c and rebuild the kernel
	if quotas are in use.


*** sys_inode.old	Wed Apr 11 09:49:22 1990
--- sys_inode.c	Mon Apr 23 16:34:41 1990
***************
*** 129,135 ****
  	 * succeed, otherwise we have to check the quota on each block.
  	 * can you say slow?  i knew you could.  SMS
  	*/
! 	if (type == IFREG || type == IFDIR || type == IFLNK && 
  	    rw == UIO_WRITE && !(ip->i_flag & IPIPE)) {
  		if (uio->uio_offset + uio->uio_resid > ip->i_size) {
  			QUOTAMAP();
--- 129,135 ----
  	 * succeed, otherwise we have to check the quota on each block.
  	 * can you say slow?  i knew you could.  SMS
  	*/
! 	if ((type == IFREG || type == IFDIR || type == IFLNK) && 
  	    rw == UIO_WRITE && !(ip->i_flag & IPIPE)) {
  		if (uio->uio_offset + uio->uio_resid > ip->i_size) {
  			QUOTAMAP();
