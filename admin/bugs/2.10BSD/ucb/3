From sms@ETN-WLV.EATON.COM  Wed Apr  5 22:10:37 1989
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.61/1.29)
	id AA04910; Wed, 5 Apr 89 22:10:37 -0700
Received: from ETN-WLV.EATON.COM by ucbvax.Berkeley.EDU (5.61/1.36)
	id AA15400; Wed, 5 Apr 89 22:10:19 -0700
Received: by etn-wlv.EATON.COM (5.61/1.25)
	id AA07512; Wed, 5 Apr 89 22:09:45 -0700
Date: Wed, 5 Apr 89 22:09:45 -0700
From: sms@ETN-WLV.EATON.COM (Steven M. Schultz)
Message-Id: <8904060509.AA07512@etn-wlv.EATON.COM>
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Subject: mkstr truncates strings and incorrectly does octal conversion
Index:	ucb/mkstr.c 2.10BSD

Description:
	'mkstr' incorrectly processes octal character constants in strings.

	Characters of the form \ooo where 'o' is an octal digit
	possibly result in a truncated string (if the first digit
	is 0) AND definitely result in an incorrect value if more
	than one digit is present.

Repeat-By:
	Run 'mkstr' on a file having a string of the form "foo\001bar".
	Note that only "foo\0" makes it to the output.  Guess "0" 
	wasn't considered an octal digit at some point in the past ;-)

	Run 'mkstr' on a file having a string of the form "foo\13", note
	that "foo\203" is the result.  This is a result of shifting by
	7 instead of three in the conversion process.

Fix:
	Apply the following patch to mkstr.c, the extra assign of -1 to ch
	wasn't needed anyway.

*** mkstr.c.old	Wed Apr  5 21:20:30 1989
--- mkstr.c	Wed Apr  5 21:27:03 1989
***************
*** 164,172 ****
  			case 'f':
  				c = '\f';
  				break;
- 			case '0':
- 				c = 0;
- 				break;
  			case '\\':
  				break;
  			default:
--- 164,169 ----
***************
*** 176,186 ****
  				ch = getchar();
  				if (!octdigit(ch))
  					break;
! 				c <<= 7, c += ch - '0';
  				ch = getchar();
  				if (!octdigit(ch))
  					break;
! 				c <<= 3, c+= ch - '0', ch = -1;
  				break;
  			}
  		}
--- 173,183 ----
  				ch = getchar();
  				if (!octdigit(ch))
  					break;
! 				c <<= 3, c += ch - '0';
  				ch = getchar();
  				if (!octdigit(ch))
  					break;
! 				c <<= 3, c += ch - '0';
  				break;
  			}
  		}
