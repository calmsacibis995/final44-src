From sms@WLV.IMSD.CONTEL.COM  Thu Nov  2 10:26:43 1989
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.61/1.37)
	id AA18002; Thu, 2 Nov 89 10:26:43 -0800
Received: from WLV.IMSD.CONTEL.COM by ucbvax.Berkeley.EDU (5.61/1.38)
	id AA19736; Thu, 2 Nov 89 10:26:48 -0800
Received: by WLV.IMSD.CONTEL.COM (5.61/1.25)
	id AA00462; Thu, 2 Nov 89 10:26:56 -0800
Date: Thu, 2 Nov 89 10:26:56 -0800
From: sms@WLV.IMSD.CONTEL.COM (Steven M. Schultz)
Message-Id: <8911021826.AA00462@WLV.IMSD.CONTEL.COM>
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Subject: Mail skips messages when editing a list of messages 
Index:	ucb/Mail/edit.c 2.10BSD

Description:
	When editing a list of messages the sequential processing
	of the list is terminated by NOT making any changes to
	a message.

Repeat-By:
	Given messages 1 and 2 and the Mail prompt of &, do:

	&e 1 2

	Exit the editor without making any changes on Message1.  Note
	that message 2 is not entered at all, rather, the prompt

	&

	is seen.

Fix:
	Turn the "goto out;" lines into "continue;" lines so that the
	scan of the messages goes on even if one of the messages is
	not changed or encounters an error.


*** edit.c.old	Fri Jun 21 20:18:21 1985
--- edit.c	Thu Nov  2 13:02:44 1989
***************
*** 102,108 ****
  			;
  		if (!access(edname, 2)) {
  			printf("%s: file exists\n", edname);
! 			goto out;
  		}
  
  		/*
--- 102,108 ----
  			;
  		if (!access(edname, 2)) {
  			printf("%s: file exists\n", edname);
! 			continue;
  		}
  
  		/*
***************
*** 112,130 ****
  		close(creat(edname, 0600));
  		if ((obuf = fopen(edname, "w")) == NULL) {
  			perror(edname);
! 			goto out;
  		}
  		if (send(mp, obuf, 0) < 0) {
  			perror(edname);
  			fclose(obuf);
  			remove(edname);
! 			goto out;
  		}
  		fflush(obuf);
  		if (ferror(obuf)) {
  			remove(edname);
  			fclose(obuf);
! 			goto out;
  		}
  		fclose(obuf);
  
--- 112,130 ----
  		close(creat(edname, 0600));
  		if ((obuf = fopen(edname, "w")) == NULL) {
  			perror(edname);
! 			continue;
  		}
  		if (send(mp, obuf, 0) < 0) {
  			perror(edname);
  			fclose(obuf);
  			remove(edname);
! 			continue;
  		}
  		fflush(obuf);
  		if (ferror(obuf)) {
  			remove(edname);
  			fclose(obuf);
! 			continue;
  		}
  		fclose(obuf);
  
***************
*** 147,153 ****
  		if (pid == -1) {
  			perror("fork");
  			remove(edname);
! 			goto out;
  		}
  		if (pid == 0) {
  			sigchild();
--- 147,153 ----
  		if (pid == -1) {
  			perror("fork");
  			remove(edname);
! 			continue;
  		}
  		if (pid == 0) {
  			sigchild();
***************
*** 179,194 ****
  
  		if (stat(edname, &statb) < 0) {
  			perror(edname);
! 			goto out;
  		}
  		if (modtime == statb.st_mtime) {
  			remove(edname);
! 			goto out;
  		}
  		if ((ibuf = fopen(edname, "r")) == NULL) {
  			perror(edname);
  			remove(edname);
! 			goto out;
  		}
  		remove(edname);
  		fseek(otf, (long) 0, 2);
--- 179,194 ----
  
  		if (stat(edname, &statb) < 0) {
  			perror(edname);
! 			continue;
  		}
  		if (modtime == statb.st_mtime) {
  			remove(edname);
! 			continue;
  		}
  		if ((ibuf = fopen(edname, "r")) == NULL) {
  			perror(edname);
  			remove(edname);
! 			continue;
  		}
  		remove(edname);
  		fseek(otf, (long) 0, 2);
***************
*** 216,222 ****
  	 * Restore signals and return.
  	 */
  
- out:
  	sigset(SIGINT, sigint);
  	sigset(SIGQUIT, sigquit);
  }
--- 216,221 ----
