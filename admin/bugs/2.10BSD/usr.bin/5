From sms@WLV.IMSD.CONTEL.COM  Tue Jun 27 20:48:43 1989
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.61/1.29)
	id AA11553; Tue, 27 Jun 89 20:48:43 -0700
Received: from WLV.IMSD.CONTEL.COM by ucbvax.Berkeley.EDU (5.61/1.37)
	id AA04902; Tue, 27 Jun 89 20:47:12 -0700
Received: by WLV.IMSD.CONTEL.COM (5.61/1.25)
	id AA00176; Tue, 27 Jun 89 20:47:28 -0700
Date: Tue, 27 Jun 89 20:47:28 -0700
From: sms@WLV.IMSD.CONTEL.COM (Steven M. Schultz(Y))
Message-Id: <8906280347.AA00176@WLV.IMSD.CONTEL.COM>
Subject: bug in f77 equivalence handling
Index: 	usr.bin/f77/equiv.c 2.10BSD
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Description:
	/lib/f77pass1 gives "bad alignment forced by equivalence" error
	on many equivalence statements.

Repeat-By:
	Try to compile this program with f77:

	program	test
	real a(2),a1,a2
	equivalence (a(1),a1),(a(2),a2)
	end

	Note the errors produced for all variables mentioned in the
	equivalence statement.

Fix:
	It's yet another long vs. int gotcha, the lmin() and lmax()
	functions were not declared properly in eqveqv().

	Apply the following patch to equiv.c:

*** equiv.c.old	Tue Jun 27 19:57:21 1989
--- equiv.c	Tue Jun 27 19:54:24 1989
***************
*** 1,6 ****
--- 1,7 ----
  #include "defs"
  #include "string_defs"
  
+ extern ftnint iarrlen(), lmin(), lmax();
  /* ROUTINES RELATED TO EQUIVALENCE CLASS PROCESSING */
  
  /* called at end of declarations section to process chains
***************
*** 10,16 ****
  {
  register int i;
  int inequiv, comno, ovarno;
! ftnint comoffset, offset, leng, iarrlen(), lmin(), lmax();
  register struct equivblock *p;
  register struct eqvchain *q;
  struct primblock *itemp;
--- 11,17 ----
  {
  register int i;
  int inequiv, comno, ovarno;
! ftnint comoffset, offset, leng;
  register struct equivblock *p;
  register struct eqvchain *q;
  struct primblock *itemp;

