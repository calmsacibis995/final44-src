From ihnp4!inmet!faust!dwp  Fri Jul 13 12:34:47 1984
From: ihnp4!inmet!faust!dwp
Date: 13 Jul 84 12:10:52 CDT (Fri)
Subject: ranlib fails to find all symbols defined in object members

Index:	bin/ranlib.c 2.9BSD

Description:
	Ranlib is supposed to scan an object library and extract the
	name and object member of all symbols defined by object modules
	in the library.  However, it misses symbols which are "Common",
	symbols which appear in the namelist with an N_UNDF type flag,
	and a non-zero value.  This will result in the symbol being
	undefined during a subsequent 'ld', if nothing else causes the
	archive member containing it to be loaded.

Repeat-By:
	Create an archive arch.a with member incl.o of the following form,
	WITHOUT running ranlib on it:
		int foo;
	Create a test.c program of the form:
		extern int foo;
		main () { foo = 1; }
	If a "cc test.c arch.a", an a.out will be successfully created.
	Run ranlib on the archive, and a subsequent 'cc' will fail with
	_foo being undefined.
Fix:
	To fix, in ranlib.c, in the loop which reads the namelist of each
	member, change the test for undefined symbols - type of N_UNDF -
	to undefined symbol AND value of 0.  The code section is:

68,71c68,72
< 				switch (sym.n_type&N_TYPE) {
< 
< 				case N_UNDF:
< 					continue;
---
> 				switch (sym.n_type&N_TYPE) { 
>  
> 				case N_UNDF: 
> /* So that common areas will show */	if(!sym.n_value) 
> 						continue; 
