From satz@sri-tsc  Mon May  7 02:14:50 1984
Date:  7 May 1984 0142-PDT (Monday)
From: Greg Satz <Satz@SRI-TSC>
Subject: 2.9 ld problems with large .o files
Subject: ld, as distributed, barfs on large .o files
Index:	bin/ld.c 2.9BSD

Description:
	ld screws up its symbol table when a very large .o file
	is feed to it.

Repeat-By:
	Take a very large .o file, like style and diction from 4.2
	and cc and ld it. ld will say "symbol table botch" or something
	similar.

Fix:
	ld used many many signed integers. Change them to unsigned.
	diffs follow:

*** /tmp/,RCSt1006731	Mon May  7 01:33:47 1984
--- ld.c	Mon May  7 01:33:26 1984
***************
*** 79,86
  	int	symsav;
  	struct liblist	*libsav;
  	char	*vname;
! 	int	ctsav, cdsav, cbsav;
! 	int	offt, offd, offb, offs;
  } vnodes[NOVLY];
  
  /* input management */

--- 79,86 -----
  	int	symsav;
  	struct liblist	*libsav;
  	char	*vname;
! 	unsigned int	ctsav, cdsav, cbsav;
! 	unsigned int	offt, offd, offb, offs;
  } vnodes[NOVLY];
  
  /* input management */
***************
*** 117,127
  
  struct {
  	int	fmagic;
! 	int	tsize;
! 	int	dsize;
! 	int	bsize;
! 	int	ssize;
! 	int	entry;
  	int	pad;
  	int	relflg;
  } filhdr;

--- 117,127 -----
  
  struct {
  	int	fmagic;
! 	unsigned	tsize;
! 	unsigned	dsize;
! 	unsigned	bsize;
! 	unsigned	ssize;
! 	unsigned	entry;
  	int	pad;
  	int	relflg;
  } filhdr;
***************
*** 143,150
  	char	sname[8];
  	char	stype;
  	char	sovly;
! 	int	svalue;
! 	int	sovalue;
  };
  
  struct xsymbol {

--- 143,150 -----
  	char	sname[8];
  	char	stype;
  	char	sovly;
! 	unsigned int svalue;
! 	unsigned int sovalue;
  };
  
  struct xsymbol {
***************
*** 151,157
  	char	sname[8];
  	char	stype;
  	char	sovly;
! 	int	svalue;
  };
  struct local {
  	int locindex;		/* index to symbol in file */

--- 151,157 -----
  	char	sname[8];
  	char	stype;
  	char	sovly;
! 	unsigned int svalue;
  };
  struct local {
  	int locindex;		/* index to symbol in file */
***************
*** 192,201
  char	*filname;
  
  /* cumulative sizes set in pass 1 */
! int	tsize;
! int	dsize;
! int	bsize;
! int	ssize;
  
  /* symbol relocation; both passes */
  int	ctrel;

--- 192,201 -----
  char	*filname;
  
  /* cumulative sizes set in pass 1 */
! unsigned	tsize;
! unsigned	dsize;
! unsigned	bsize;
! unsigned	ssize;
  
  /* symbol relocation; both passes */
  unsigned int	ctrel;
***************
*** 198,206
  int	ssize;
  
  /* symbol relocation; both passes */
! int	ctrel;
! int	cdrel;
! int	cbrel;
  
  int	errlev;
  int	delarg	= 4;

--- 198,206 -----
  unsigned	ssize;
  
  /* symbol relocation; both passes */
! unsigned int	ctrel;
! unsigned int	cdrel;
! unsigned int	cbrel;
  
  int	errlev;
  int	delarg	= 4;
***************
*** 227,234
  				 * the kernel limit. */
  #define THUNKSIZ	8
  
! int	torgwas;		/* Saves torigin while doing overlays */
! int	tsizwas;		/* Saves tsize while doing overlays */
  int	numov;			/* Total number of overlays */
  int	curov;			/* Overlay being worked on just now */
  int	inov;			/* 1 if working on an overlay */

--- 227,234 -----
  				 * the kernel limit. */
  #define THUNKSIZ	8
  
! unsigned torgwas;		/* Saves torigin while doing overlays */
! unsigned tsizwas;		/* Saves tsize while doing overlays */
  int	numov;			/* Total number of overlays */
  int	curov;			/* Overlay being worked on just now */
  int	inov;			/* 1 if working on an overlay */
***************
*** 246,252
  struct	xsymbol ovhndlr =
  	{ "ovhndlr1", EXTERN+UNDEF, 0, 0 };
  #define	HNDLR_NUM 7	/* position of ov number in ovhndlr.sname[] */
! int	ovbase;			/* The base address of the overlays */
  /* end overlay stuff */
  
  struct symbol	**lookup();

--- 246,252 -----
  struct	xsymbol ovhndlr =
  	{ "ovhndlr1", EXTERN+UNDEF, 0, 0 };
  #define	HNDLR_NUM 7	/* position of ov number in ovhndlr.sname[] */
! unsigned int	ovbase;			/* The base address of the overlays */
  /* end overlay stuff */
  
  struct symbol	**lookup();
***************
*** 423,431
  
  /* used after pass 1 */
  int	nsym;
! int	torigin;
! int	dorigin;
! int	borigin;
  
  endload(argc, argv)
  int argc; 

--- 423,431 -----
  
  /* used after pass 1 */
  int	nsym;
! unsigned int	torigin;
! unsigned int	dorigin;
! unsigned int	borigin;
  
  endload(argc, argv)
  int argc; 
***************
*** 622,627
  	return(oldp != libp);
  }
  
  add(a,b,s)
  int a, b;
  char *s;

--- 622,628 -----
  	return(oldp != libp);
  }
  
+ unsigned
  add(a,b,s)
  int a, b;
  char *s;
***************
*** 688,694
  		if ((sp->stype &~ EXTERN) == TEXT)
  			sp->sovly = curov;
  		if (trace)
! 		printf("found %8.8s in overlay %d at %d\n", sp->sname, sp->sovly, sp->svalue);
  	}
  	if (libflg==0 || ndef) {
  		tsize = add(tsize,filhdr.tsize,"text overflow");

--- 689,695 -----
  		if ((sp->stype &~ EXTERN) == TEXT)
  			sp->sovly = curov;
  		if (trace)
! 		printf("found %8.8s in overlay %d at %u\n", sp->sname, sp->sovly, sp->svalue);
  	}
  	if (libflg==0 || ndef) {
  		tsize = add(tsize,filhdr.tsize,"text overflow");
***************
*** 709,717
  middle()
  {
  	register struct symbol *sp, *symp;
! 	register t, csize;
! 	int nund, corigin;
! 	int ttsize;
  
  	torigin=0; 
  	dorigin=0; 

--- 710,719 -----
  middle()
  {
  	register struct symbol *sp, *symp;
! 	register t;
! 	register unsigned int csize;
! 	unsigned int nund, corigin;
! 	unsigned int ttsize;
  
  	torigin=0; 
  	dorigin=0; 
***************
*** 782,788
  
  		ovbase = (tsize + 017777) &~ 017777;
  		if (trace)
! 			printf("overlay base is %d.\n", ovbase);
  		for (sp = symtab; sp < symp; sp++)
  			if (sp->sovly && sp->stype == EXTERN+TEXT) {
  				sp->sovalue += ovbase;

--- 784,790 -----
  
  		ovbase = (tsize + 017777) &~ 017777;
  		if (trace)
! 			printf("overlay base is %u.\n", ovbase);
  		for (sp = symtab; sp < symp; sp++)
  			if (sp->sovly && sp->stype == EXTERN+TEXT) {
  				sp->sovalue += ovbase;
***************
*** 850,855
  
  ldrsym(asp, val, type)
  struct symbol *asp;
  {
  	register struct symbol *sp;
  

--- 852,858 -----
  
  ldrsym(asp, val, type)
  struct symbol *asp;
+ unsigned val;
  {
  	register struct symbol *sp;
  
***************
*** 1033,1038
  
  load2td(lp, creloc, b1, b2)
  struct local *lp;
  struct buf *b1, *b2;
  {
  	register r, t;

--- 1036,1042 -----
  
  load2td(lp, creloc, b1, b2)
  struct local *lp;
+ unsigned creloc;
  struct buf *b1, *b2;
  {
  	register unsigned r, t;
***************
*** 1035,1041
  struct local *lp;
  struct buf *b1, *b2;
  {
! 	register r, t;
  	register struct symbol *sp;
  
  	for (;;) {

--- 1039,1045 -----
  unsigned creloc;
  struct buf *b1, *b2;
  {
! 	register unsigned r, t;
  	register struct symbol *sp;
  
  	for (;;) {
***************
*** 1103,1109
  
  finishout()
  {
! 	register n, *p;
  	register struct symbol *sp, *symp;
  
  /* wnj added */

--- 1107,1113 -----
  
  finishout()
  {
! 	register unsigned n, *p;
  	register struct symbol *sp, *symp;
  
  /* wnj added */
***************
*** 1416,1422
  		if (sp->stype == EXTERN+TEXT) {
  			sp->sovly = curov;
  			if (trace)
! 				printf("found %8.8s in overlay %d at %d\n",
  				    sp->sname, sp->sovly, sp->svalue);
  		}
  		return(1);

--- 1420,1426 -----
  		if (sp->stype == EXTERN+TEXT) {
  			sp->sovly = curov;
  			if (trace)
! 				printf("found %8.8s in overlay %d at %u\n",
  				    sp->sname, sp->sovly, sp->svalue);
  		}
  		return(1);
***************
*** 1487,1493
  readhdr(loc)
  long loc;
  {
! 	register st, sd;
  
  	dseek(&text, loc, sizeof filhdr);
  	mget((int *)&filhdr, sizeof filhdr);

--- 1491,1497 -----
  readhdr(loc)
  long loc;
  {
! 	register unsigned st, sd;
  
  	dseek(&text, loc, sizeof filhdr);
  	mget((int *)&filhdr, sizeof filhdr);
