Return-Path: <LEPREAU@UTAH-20>
Date:  2 Sep 1983 0013-MDT
From: Lepreau@UTAH-20 (Jay Lepreau)
Subject: Boundary bug in stdio (fopen and fdopen)
Index: lib/libc/stdio/fopen.c 4.1BSD Fix
	lib/libc/stdio/fdopen.c 4.1a Fix

Description:
	If the stdio table (_iob) is full, fopen/fdopen can falsely succeed if
	what follows the table has a 0 where _flag would be, returning a
	garbage pointer and trashing what follows _iob.  Off by one
	problem.

Repeat-By:
	Inspection.
Fix:
	Make the same change to fopen.c and fdopen.c as described below.

Return-path: <unix-wizards-request@BRL-VGR>
Received: from [192.5.21.6.] (for BRL-VGR) by UTAH-20; Wed 24 Aug 83 20:48:18-MDT
Received: From Brl-Vld.ARPA by BRL-VGR via smtp;  24 Aug 83 22:22 EDT
Date:     Wed, 24 Aug 83 22:11:15 EDT
From:     Doug Gwyn (VLD/VMB) <gwyn@brl-vld>
To:       unix-wizards@brl-vld
Subject:  System V stdio bug fix

The new, nifty stdio still has the same bug in findiop.c:
The lines reading
	for(iop = _iob; iop->_flag & (_IOREAD | _IOWRT | _IORW); iop++)
		if(iop >= _lastbuf)
should be changed to read
	for(iop = _iob; iop->_flag & (_IOREAD | _IOWRT | _IORW); )
		if(++ _lastbuf)
in order to avoid a "boundary condition" bug.
-------
