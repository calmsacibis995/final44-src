Return-Path: <dlw@ucbopal.CC>
Date: Tue, 22 Nov 83 18:09:19 pst
From: dlw@ucbopal.CC (David L. Wasley)
To: 4bsd-bugs@arpa
Subject: /usr/bin/uuencode

Index: usr.bin/uucp/uuencode.c	4.1BSD Fix

Description:
	The mode of a file read from standard input becomes 0 when
	uudecoded.

Repeat-By:
	uuencode a file from stdin, then uudecode it (elsewhere).

Fix:
	In uuencode.c (SCCS rev 5.1) after line 41, add
	if (mode = 0)
		mode = 0600;

======================================================================
Return-Path: <dlw@ucbopal.CC>
Date: Tue, 22 Nov 83 18:14:17 pst
From: dlw@ucbopal.CC (David L. Wasley)
To: 4bsd-bugs@arpa
Subject: /usr/bin/uuencode

Index: usr.bin/uucp/uuencode.c	4.1BSD

Description:
	(addendum to previous report)
Repeat-By:
	My earlier report was unclear: you must PIPE into stdin
	to see this bug.
Fix:
	(previously submitted)

>>>>> Comment <<<<<

From rick@seismo.css.gov Fri Dec 19 15:54:42 1986
Date: Fri, 19 Dec 86 17:53:02 EST
From: rick@seismo.css.gov (Rick Adams)
To: bostic@ucbarpa.Berkeley.EDU
Subject: Re:  bug report 4.1BSD/usr.bin/2

It's a real bug. This fix is better.

---rick

RCS file: RCS/uuencode.c,v
retrieving revision 2.1
diff -c -r2.1 uuencode.c
*** /tmp/,RCSt1002024	Fri Dec 19 17:52:23 1986
--- uuencode.c	Fri Dec 19 17:51:45 1986
***************
*** 37,44 ****
  	}
  
  	/* figure out the input file mode */
! 	fstat(fileno(in), &sbuf);
! 	mode = sbuf.st_mode & 0777;
  	printf("begin %o %s\n", mode, argv[1]);
  
  	encode(in, stdout);
--- 37,46 ----
  	}
  
  	/* figure out the input file mode */
! 	if (fstat(fileno(in), &sbuf) < 0 || !isatty(fileno(in)))
! 		mode = 0666 & ~umask(0666);
! 	else
! 		mode = sbuf.st_mode & 0777;
  	printf("begin %o %s\n", mode, argv[1]);
  
  	encode(in, stdout);
