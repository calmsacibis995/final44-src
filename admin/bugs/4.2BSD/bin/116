Date: 15 Feb 1983 10:27:25-??? (Tuesday)
From: mazama!thor%Shasta@SU-Score
Subject: bug in cc
Mail-From: SU-NET host Shasta rcvd at 15-Feb-83 2122-PST
Mail-From: UUCP host MAZAMA rcvd at 15 Feb 1983 21:22:11-PST (Tuesday)

Index: bin/cc.c 4.2BSD

Description:
Here is a problem with the 4.1bsd c compiler that I have come across
that has given me a lot of grief. Besides our machine, I've tried
it on ISL@su-score and helens@su-score. I invite you to try it
on your own machine:

#include	<stdio.h>

double	dd[] =	{ 0.0, 2.0 };
float	ff[] =	{ 0.0, 1.0 };
int i = 1;

main(){
	if( ff[i] >= dd[i] ) printf( "ff >= dd\n" );
}

I have characterized the occurrence of this problem.
a) It happens in a relational operation.
b) The immediate left hand operand must be an indexed float.
c) The immediate right hand operand must be an indexed double.

Only under these seemingly rare conditions does the compiler
issue the following assembly construct:

	movl	_i,r0
	movl	_i,r1
	cvtfd	_ff[r0],r0
	cmpd	r0,_dd[r1]
	jlss	L25

which is obviously wrong. Are there fixes to the compiler that
we are not aware of? If so, we would greatly appreciate hearing
about them.
				Jeff Thorson
				Chuck Sword

Repeat-By:
#include	<stdio.h>

double	dd[] =	{ 0.0, 2.0 };
float	ff[] =	{ 0.0, 1.0 };
int i = 1;

main(){
	if( ff[i] >= dd[i] ) printf( "ff >= dd\n" );
}

P.S: I tried sending this message to ucbvax!4bsd-bugs but never
     got an acknowledgement back, so assumed the letter is hung
     up along the line somewhere.		-Jeff Thorson
