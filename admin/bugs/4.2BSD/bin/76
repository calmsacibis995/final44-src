Return-Path: <kcs@Purdue.ARPA>
Date: Fri, 6 Jul 84 10:20:59 est
From: Kevin C Smallwood <kcs@Purdue.ARPA>
Subject: bug (?) in pr(1) with the "-t" option

Index:	bin/pr.c 4.2BSD

Description:
	Using pr(1) with the "-t" option does not produce the results I
	would have thought it should.  Essentially, "pr -t foo.c" is
	the same as "cat foo.c".  What I believe should happen is that
	the output stream should be a multiple of page-length lines.
	That is, at the end of printing a file, the output stream should
	be padded with blank lines until the "last" logical page is filled.
	By "last", I am also referring to the partial, logical page
	between pr'ing several files (eg., pr -t foo.c bar.c).  In this
	situation, the last page of foo.c should be padded with blank lines
	so that bar.c starts at the top of the next logical page.  Is
	this how others see the semantics of "pr -t foo.c"?

Repeat-By:
	Just try "pr -t foo.c" and compare it to "cat foo.c"; they will be
	the same.  No blank line padding will be at the end of the output
	stream.

Fix:
	The fix is very straight-forward.  Here is a diff of a distribution
	(4.2BSD) pr.c verses the slightly modified pr.c:

	RCS file: RCS/pr.c,v
	retrieving revision 1.1
	retrieving revision 1.2
	diff  -r1.1 -r1.2
	247,253c247,251
	< 		if (ntflg==0) {
	< 			if (fflg)
	< 				put('\f');
	< 			else
	< 				while(line<length)
	< 					put('\n');
	< 		}
	---
	> 		if (fflg)
	> 			put('\f');
	> 		else
	> 			while(line<length)
	> 				put('\n');

	This will put out blank lines only for partially filled pages
	that occur between files or at the end of the output stream.
	Of course, the "-f" option will yield formfeeds between pages
	and at the end of the output stream (is that semantically
	correct?).
						Kevin C. Smallwood
						kcs@Purdue
						purdue!kcs
