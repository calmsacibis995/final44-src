Date: 11 Feb 1983 1102-PST (Friday)
From: mark@cbosgd.UUCP
Subject: printf
Index: ideas 4.2BSD

One of my pet peeves is that you can't write your own portable
debugging procedure that takes varargs like printf, because
there is no way to pass the entire list of arguments to printf.
It would be easy to add this capability by adding the 3 functions
	vprintf(fmt, alist);
	vfprintf(file, fmt, alist);
	vsprintf(string, fmt, alist);
where the arguments are as usual except that alist is the thing
you get from va_start (see varargs(3)), e.g. a pointer to the
first argument on the stack.

Rumor has it that this will appear in USG 6.0.  Its portability
would be considerably enhanced if it appeared in 4.2BSD as well.
The implementation is trivial, it's just that the implementation
must know how _doprnt is done internally, which is OK for stdio
itself to know but not for the user program.
