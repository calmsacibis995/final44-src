Subject: TCP idea
Return-Path: <UCBVAX.@SU-DSN.greep@SU-DSN>
Date: Friday, 11 Mar 1983 13:02-PST
From: greep@SU-DSN
Subject: Suggestion for Berkeley TCP
Index: ideas 4.2BSD

I don't know if you're the right person to send TCP suggestions to -- if
not, please forward to whoever is.

I would like to suggest that the TCP be set up so that servers do not
require processes sitting around all the time.  I did my NCP this way and
it made debugging easier, as well as not imposing any overhead for having
lots of servers.  The way I did it was to have a single daemon (which I
needed anyway, since my NCP was not actually in the Vax) which would be
notified by the NCP when a request came in for a low socket number for
which no "listen" or "connect" was outstanding.  The daemon would then read
in a text file which showed socket-number/server correspondences (eg
"3 srvrftp").  If it found a matching number, it would start up (as an orphan)
a process that would open the connection as standard in/out and then exec
the server program.

This system had several advantages:

1.  No overhead (except one line in a file) for servers.  I had lots of
miscellaneous things like time server, echo server, Geoff's pager,
fortune, etc.

2.  Debugging was simplified.  I could debug the servers by running them
manually and typing at them.  That meant I could also run them under sdb.

3.  The same program could be "listening" on several sockets at once.  For
example, I had one program that would answer most of the sockets that were
defined for standard services, and would say "This service not implemented
here" or something like that.
