Return-Path: <@lbl-csam.ARPA:uw-beaver!fluke!telematic!jdr@lbl-csam>
Return-Path: <uw-beaver!fluke!telematic!jdr@lbl-csam>
Date: Fri, 1 Feb 85 07:53:10 pst
From: uw-beaver!fluke!telematic!jdr@lbl-csam (James Robanske)
From: uw-beaver!fluke!telematic!jdr  (James Robanske)
Subject:  non-buffered open call that can delete the root directory

Index:    lib/libc/vax/sys/open.c 4.2BSD

Description:

          We have (I am VERY sorry to say), recently come across a horrible
	  bug in 4.2 bsd.  The following little program will result in the 
	  truncation of any (I repeat, any), file that you choose to use it on,
 	  with the one restriction that you must have read permission on the
	  file stipulated in the open call.  Note that write permission is not
	  required.

	  It seems that the code in the open routine has invalid logic related
	  to checking for permissions when asked to truncate.

	  Therefore if this program is run as it is shown below, it truncates
	  the root directory file, and the system looses its ability to find 
	  any commands and/or files, bringing it down to its knees.

	  Were you folks aware of this problem, and more importantly, can we 
	  get a fix?  I would really appreciate hearing from you!

Repeat-by:
	  
	  Type in this program and run it if you dare!


          /*                  - trash_sys.c -
              Otherwise known as how to bring your system to its
              knees in one easy lesson...
          */     
	  #include <sys/file.h>
	  static char *sccsid = "@(#)trash_sys.c 4.1 (Telematic) 1/25/85";
	  main()
	  {
	  int fd;
          	fd=open("/",O_TRUNC);
	  }

Fix:
	  That's what I would like to see..
