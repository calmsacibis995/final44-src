Return-Path: <jon@cit-vax.ARPA>
Date: Wed, 16 Oct 85 18:10:05 pdt
From: jon@cit-vax.ARPA (Jonathan P. Leech)

Subject: 4.2 BSD and Sun cc converts (unsigned long) -> (double) incorrectly

Index: lib/pcc/??? 4.2BSD

Description:
    Converting unsigned long to double is done as a signed long to
	double conversion.  This generates incorrect results if the
	unsigned long value has the high bit set.

    This behavior is observed under 4.2 BSD (VAX) and the latest (2.0)
	Sun release.

    Interestingly, the example given produces the correct results
	under AMDAHL UTS (Sys V clone with some BSDisms).

Repeat-By:
    #define MAXSIGNEDLONG   ((unsigned long)0x7FFFFFFFL)
    #define MAXUNSIGNEDLONG ((unsigned long)0xFFFFFFFFL)
    main()
    {
	printf("%ul -> %f\n", MAXSIGNEDLONG, (double)MAXSIGNEDLONG);
	printf("%ul -> %f\n", MAXUNSIGNEDLONG, (double)MAXUNSIGNEDLONG);
    }

	This produces

    2147483647l -> 2147483647.000000
    4294967295l -> -1.000000

-- Jon Leech
jon@cit-vax.arpa
__@/


================================================================
From donn@cs.utah.edu Sun Apr 12 15:00:56 1987
Date: Sun, 12 Apr 87 16:18:22 MDT
From: donn@cs.utah.edu (Donn Seeley)
To: bostic@okeeffe.Berkeley.EDU
Subject: Re:  it does what he says it does... (4.2BSD/lib/79)

This is about unsigned => double conversions...  There was a trivial
bug in the distributed compiler which prevents constants from taking
advantage of the new unsigned => double conversion code that applies to
variables.  I posted a fix to the net some time ago.  Note that the
tahoe compiler does not do unsigned => double correctly at all (yet).

Donn
