Return-Path: <decvax!philabs!nyit!rick>
From: decvax!philabs!nyit!rick
Date: Tue, 10 Sep 85 09:50:31 edt
Return-Path: <philabs!nyit!rick>
To: philabs!decvax!ucbvax!4bsd-bugs
Subject: cannot boot when vmunix has bad sectors

Index:  sys/stand/hp.c 4.2BSD

Description:
	When booting from a `vmunix' file that contains a bad block on
	a MASSBUS disk, boot fails.
	Suspect the problem stems from a mis-interface between the hp
	driver and higher level (file management) software.
	File management expects hpstrategy() will not disturb the fields
	i_bn, i_ma, and i_cc in the `iob' structure.  For a normal hp read,
	this is indeed true and everyone is happy.  However, if the I/O
	involves a bad sector on the disk, the BSE recovery logic alters
	these fields, apparently confusing file management.

Repeat-By:
	Perhaps a bit tricky... get a MASSBUS disk with a bad block in
	its root filesystem.  Somehow get that bad block to become one
	of the blocks of /vmunix.  Boot and watch.

Fix:
	Add the following three lines of code to hpstrategy(), immediately
	preceding the "return (bytecnt);" statement at the end of the routine:

		io->i_bn = startblock;	/* restore original value */
		io->i_ma = membase;	/* restore original value */
		io->i_cc = bytecnt;	/* restore original value */

	[End of fix]
