Return-Path: <allegra!jpl>
Date: Thu, 6 Dec 84 11:42:13 pst
From: allegra!jpl
Subject: incorrect check for full table in subr_rmap

Index:	sys/sys/subr_rmap.c 4.2BSD

Description:
	There is a an incorrect check for a full table by rmget in subr_rmap.c.
	It could result in the overflow of a map table.
Repeat-By:
	Probably difficult.  Beat on a table until it is completely full,
	then allocate a chunk out of the middle of any remaining segment.
Fix:
		} else {
			/*
			 * Allocate from middle of segment, but only
			 * if table can be expanded.
			 */
			for (bp2=bp; bp2->m_size; bp2++)
				;
!!!!!!!!!!!!!!!!!!	if ((bp2+1) >= mp->m_limit)
				return (0);
			while (bp2 > bp) {
				(bp2+1)->m_addr = bp2->m_addr;

The exclamatory line originally looked like
			if (bp2 == mp->m_limit)
This test cannot succeed unless the table has already been clobbered
(as it is about to be).  In a full table, the last entry contains the
0 size and addr, and the "next" entry, outside the table, is addressed
by m_limit.  Thus the test will fail, even though the table is too
full for another entry, and the code that follows will start storing
stuff outside the table.  No good is likely to come of it.
