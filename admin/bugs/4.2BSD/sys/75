Return-Path: <mayo@ucbrenoir>
Date: Thu, 2 Feb 84 18:52:59 pst
From: mayo@ucbrenoir (Bob N. Mayo @ U.C. Berkeley Computer Science)
Phone: (415) 642-9716
Subject: Re: some ioctl's don't work from signal handlers
Index: sys/unix 4.2BSD

Description:
	Some tty ioctl calls hang if invoked from a procedure that was
	invoked as the result of a SIGCONT signal.
Repeat-By:
	/*
	 * This program demonstrates a possible problem with Berkeley UNIX.
	 * It seems that you cannot do some 'ioctl's inside of a procedure
	 * that is invoked in response to a signal.
	 *
	 * To see the problem, run this program in the forground.  Then stop it
	 * using ^Z (or whatever).  Now run it in the background.  It should
	 * stop on a 'tty output'.  Everything is fine up to now, but now
	 * move the program to the forground.  AH HA!  You are now totally
	 * dead in the water.
	 */
	#include <stdio.h>
	#include <signal.h>
	#include <sgtty.h>
	struct sgttyb tx_sgtty;
	sigOnResume()
	{
	    printf("\n<< Resume >>\n");
	    ioctl(fileno(stdout), TIOCSETP, (char *) &tx_sgtty);  /* <-- hangs here */
	    printf("\n<< Done With Resume >>\n");
	}
	main()
	{
	    ioctl(fileno(stdout), TIOCGETP, (char *) &tx_sgtty);
	    signal(SIGCONT, sigOnResume);	
	    while(1)
	    {
		printf(".");
		fflush(stdout);
		sleep(1);
	    }
	}


