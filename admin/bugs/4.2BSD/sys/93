Return-Path: <uucp@cmu-cs-h.arpa>
From: Dave Rosenthal <cmuitca!dave@cmu-cs-h.arpa>
Date: 24 Mar 1984 21:58-EST
Subject: EOF thru PF_REMOTE pty
To: 4bsd-bugs@BERKELEY
Index: sys/sys/tty_pty.c 4.2BSD Fix

Description:
	The manual describes TIOCREMOTE as:

	A mode for the master half of a pseudo terminal, independent
	of TIOCPKT.  This mode causes input to the pseudo terminal
	to be flow controlled and not input edited (regardless of the
	terminal mode).  Each write to the control terminal produces
	a record boundary for the process reading the terminal.  In
	normal usage, a write of data is like the data typed as a line
	on the terminal; a write of 0 bytes is like typing an end-of-file
	character.  TIOCREMOTE can be used when doing remote line
	editing in a window manager, or whenever flow controlled input
	is required.

	However,  zero-length writes to the controlling side of a pty do
	NOT result in the slave side getting EOF.

Repeat-by:

	Typing ^D to a process expecting input from a shell window in
	Gosling's EMACS - the process is undisturbed.

Fix:	/*	tty_pty.c	6.3	83/10/01	*/
339a340,347
> #ifdef	PTY_EOF_FIX
> 			while ((pti->pt_flags&PF_REMOTE) && tp->t_rawq.c_cc!=0)
> 				sleep((caddr_t)&tp->t_rawq.c_cf, TTOPRI);
> 			if (pti->pt_flags & PF_REMOTE) {
> 				(void) putc(0, &tp->t_rawq);
> 				wakeup((caddr_t)&tp->t_rawq);
> 			}
> #endif	PTY_EOF_FIX
