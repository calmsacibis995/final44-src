Return-Path: <cbosgd!mark>
Date: 2 Jun 83 01:02:24 EDT (Thu)
From: cbosgd!mark (Mark Horton)
Subject: 4.1c vmstat bug
Index:	ucb/vmstat.c 4.1c Fix

Description:
	The number "60" (indicating 60 ticks/second) is hardcoded into
	the vmstat program.  (I wouldn't be surprised to find it in
	iostat and maybe ps, too.)  Now that you're running at 100
	ticks/second, the numbers based on etime (e.g. number of disk
	I/O's per second) are low by a factor of 6/10.  It's interesting
	to note that, while our disks got about 25 TPS in 4.1, with
	4.1c the same disks seem to peak out at 12-13 TPS (vmstat numbers).
	This bug accounts for much of this, raising the numbers to about 20.
	However, the number is still smaller than the 30 your document claims.
Repeat-By:
	"vmstat 5" will show disk numbers that are too low.
Fix:
	In vmstat.c, change
		etime /= 60.;
	to
		etime /= 100.;
	or better yet, get the number 100 from some more global place,
	like the kernel or an include file.

	I found this while developing a CRT oriented program called sysmon
	which essentially does a "ps axv" every 30 seconds and a "vmstat 10",
	plus displaying lots more info (which the kernel keeps track of but
	vmstat doesn't have room in 1 line to print) as well as the load
	average and the date.  All this and it puts a much lighter load on
	the system (4-5% of a 750) - the speed comes from only having to do
	the kernel poking (namelist lookup, reading /dev, and other overhead)
	once, not every 10 or 30 seconds.  I'm still working on sysmon, but
	I'll be happy to send it to you if you want to use/include it.
	Rather than cutting up vmstat and ps, I put ifdefs into the sources,
	so the program can survive future memory management changes.

	Mark
