From smoot@ut-sally  Thu Dec 15 16:36:13 1983
Date: Thu, 15 Dec 83 17:41:15 cst
From: smoot@ut-sally.ARPA (Smoot Carl-Mitchell)
Subject: Better man command
Index: 	ucb/man.c 4.2BSD

Description:
	The way man searches mano, manl, manl and manp is inadequate
Repeat-By:

Fix:  what follows is a diff listing showing the fix.  This version
	of man will search the special local directories first for
	commands in a particular section of the manual.  The change
	required is to have the correct section extension (i.e. .1, .2)
	in the unformatted man entry in /usr/man/man[opnl]

32,33c32,33
< #define	ALLSECT	"1nl6823457po"	/* order to look through sections */
< #define	SECT1	"1nlo"		/* sections to look at if 1 is specified */
---
> #define	ALLSECT	"16823457"	/* order to look through sections */
> #define	SECTS	"nlxpo"		/* additional sections to look at if 1-8 is specified */
135c135
< 		manual(section, argv[0]);
---
> 		manual(section, subsec, argv[0]);
141,143c141,144
< manual(sec, name)
< 	char sec;
< 	char *name;
---
> manual(sec, subsec, name)
> char sec;
> char subsec;
> char *name;
145d145
< 	char section = sec;
146a147,148
> 	char sects[100], lsects[100];
> 	char section;
150c152,153
< 	char *sp = ALLSECT;
---
> 	char *sp, *lsp, *secp;
> 	extern char *index();
156,158c159,164
< 	if (section == '1') {
< 		sp = SECT1;
< 		section = 0;
---
> 
> 	/* set up sections to search */
> 	if (sec == '\0') {
> 		strcpy(sects, ALLSECT);
> 		sp = sects;
> 		strcpy(lsects, SECTS);	/* special sections */
160,163c166,190
< 	if (section == 0) {
< 		ss = 0;
< 		for (section = *sp++; section; section = *sp++) {
< 			work[3] = section;
---
> 	else {
> 		sects[0] = sec;
> 		sects[1] = '\0';
> 		sp = sects;
> 		if (sec >= '1' && sec <= '8')
> 			strcpy(lsects, SECTS);	/* special sections */
> 		else
> 			strcpy(lsects, "x");	/* only search in specified sectin */
> 	} 
> 
> 	/* do the search */
> 	secp = index(lsects, 'x');
> 	ss = 0;
> 	for (section = *sp++; section; section = *sp++) {
> #ifdef DEBUG
> fprintf (stderr, "section = %c\n", section);
> #endif
> 		*secp = section;
> 		/* special section searching 
> 		   this will search through the specified section plus all
> 		   the sections in lsect
> 		   Note that the 'x' entry in lsect is replaced with
> 		   the specific main section to search */
> 		for (lsp = lsects; *lsp != NULL; lsp++) {
> 			work[3] = *lsp;
165c192
< 			work[last+1] = 0;
---
> 			work[last+1] = subsec;
166a194,196
> #ifdef DEBUG
> fprintf(stderr, "work - %s\n", work);
> #endif
168,169c198,199
< 				break;
< 			if (work[last] >= '1' && work[last] <= '8') {
---
> 				goto found;
> 			if (subsec == '\0') { 
171d200
< search:
190,212d218
< 		if (section == 0) {
< 			if (sec == 0)
< 				printf("No manual entry for %s.\n", name);
< 			else
< 				printf("No entry for %s in section %c of the manual.\n", name, sec);
< 			return;
< 		}
< 	} else {
< 		work[3] = section;
< 		work[last] = section;
< 		work[last+1] = subsec;
< 		work[last+2] = 0;
< 		if (stat(work, &stbuf) < 0) {
< 			if ((section >= '1' && section <= '8') && subsec == 0) {
< 				sp = "\0";
< 				goto search;
< 			}
< 			printf("No entry for %s in section %c", name, section);
< 			if (subsec)
< 				putchar(subsec);
< 			printf(" of the manual.\n");
< 			return;
< 		}
213a220,228
> 	if (sec == 0)
> 		printf("No manual entry for %s.\n", name);
> 	else {
> 		printf("No entry for %s in section %c", name, sec);
> 		if (subsec != '\0')
> 			putchar(subsec);
> 		printf(" of the manual.\n");
> 	}
> 	return;
256a272,275
> #ifdef DEBUG
> fprintf (stderr, "%s %s\n", work, work2);
> exit(0);
> #endif
