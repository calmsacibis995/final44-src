Return-Path: <bill@Cornell.ARPA>
Date: Tue, 25 Jun 85 11:37:34 EDT
From: bill@Cornell.ARPA (William A. Nesheim)
Subject: Spaces in names (in quoted strings)
Index: ucb/Mail 4.2BSD

Description:
While on the subject of blanks in quoted strings, perhaps we all could
start with fixing unix's /usr/ucb/Mail!  I got frustrated recently
with trying to reply to mail from LLL's mfe-net.  Mail would always
split the address at the blank, despite the quotes.

Repeat-by: 
Send mail to someone with a space in their name.

Fix:
a diff follows: (/usr/src/ucb/Mail, 4.2bsd)
RCS file: RCS/names.c,v
retrieving revision 1.1
diff -c -r1.1 names.c
*** /tmp/,RCSt1013587	Tue Jun 25 11:24:16 1985
--- names.c	Wed Jun 19 17:04:57 1985
***************
*** 73,78
  	top = NIL;
  	np = NIL;
  	cp = line;
  	while ((cp = yankword(cp, nbuf)) != NOSTR) {
  		if (np != NIL && equal(nbuf, "at")) {
  			strcpy(abuf, nbuf);

--- 73,80 -----
  	top = NIL;
  	np = NIL;
  	cp = line;
+ 	if(debug) fprintf(stderr,"extract: line = %s, ntype=%d\n",
+ 		line, ntype);
  	while ((cp = yankword(cp, nbuf)) != NOSTR) {
  		if (np != NIL && equal(nbuf, "at")) {
  			strcpy(abuf, nbuf);
***************
*** 157,162
  	register char *cp, *cp2;
  
  	do {
  		for (cp = ap; *cp && any(*cp, " \t,"); cp++)
  			;
  		if (*cp == '(') {

--- 159,165 -----
  	register char *cp, *cp2;
  
  	do {
+ 		/* skip leading blanks & tabs */
  		for (cp = ap; *cp && any(*cp, " \t,"); cp++)
  			;
  		/* remove comments in () */
***************
*** 159,164
  	do {
  		for (cp = ap; *cp && any(*cp, " \t,"); cp++)
  			;
  		if (*cp == '(') {
  			while (*cp && *cp != ')')
  				cp++;

--- 162,168 -----
  		/* skip leading blanks & tabs */
  		for (cp = ap; *cp && any(*cp, " \t,"); cp++)
  			;
+ 		/* remove comments in () */
  		if (*cp == '(') {
  			while (*cp && *cp != ')')
  				cp++;
***************
*** 168,175
  		if (*cp == '\0')
  			return(NOSTR);
  	} while (any(*cp, " \t,("));
! 	for (cp2 = wbuf; *cp && !any(*cp, " \t,("); *cp2++ = *cp++)
! 		;
  	*cp2 = '\0';
  	return(cp);
  }

--- 172,190 -----
  		if (*cp == '\0')
  			return(NOSTR);
  	} while (any(*cp, " \t,("));
! 	
! 	/* cp now points to the start of a word. */
! 	for (cp2 = wbuf; *cp && !any(*cp, " \t,("); *cp2++ = *cp++) {
! 		if( *cp == '"') { /* found opening quote, look for closing */
! 			*cp2++ = *cp++;
! 			while ( *cp && *cp != '"') *cp2++ = *cp++;
! 			if (*cp == '\0') {
! 				fprintf(stderr,"Unmatched \" in address.\n");
! 				return(NOSTR);
! 			}
! 		}
! 	}
! 			
  	*cp2 = '\0';
  	if (debug) fprintf(stderr,"yankword returns wbuf = %s\n", wbuf);
  	return(cp);
***************
*** 171,176
  	for (cp2 = wbuf; *cp && !any(*cp, " \t,("); *cp2++ = *cp++)
  		;
  	*cp2 = '\0';
  	return(cp);
  }
  

--- 186,192 -----
  	}
  			
  	*cp2 = '\0';
+ 	if (debug) fprintf(stderr,"yankword returns wbuf = %s\n", wbuf);
  	return(cp);
  }
  
