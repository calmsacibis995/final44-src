Return-Path: <cotner@brahms.berkeley.edu>
Date: Sun, 9 Mar 86 03:17:43 pst
From: cotner@brahms.berkeley.edu (Carl Cotner)
Subject: pc error
Index: 	ucb/pc 4.2BSD

Description:
	Pascal compiler with -C and interpreter give the correct answers.
	Pascal compiler without -C gives incorrect answers
first five lines of output from interpreted and -C version:
 2.00000000000000e+01 9.18050179330888e+00 1.37511627548179e+00
 4.00000000000000e+01 2.03214973006457e+01 1.87408884672959e+00
 6.00000000000000e+01 2.95836630245796e+01 2.01876183058831e+00
 8.00000000000000e+01 3.60233629775726e+01 1.97319170047810e+00
 1.00000000000000e+02 4.19400807382820e+01 1.93141209413870e+00
first five lines of output from compiled version (incorrect)
 2.00000000000000e+01 2.24859856644257e+01 3.36809964787962e+00
 4.00000000000000e+01 7.11535965548541e+01 6.56192601043783e+00
 6.00000000000000e+01 1.40462402341007e+02 9.58502455369259e+00
 8.00000000000000e+01 2.06841890097018e+02 1.13298333946428e+01
 1.00000000000000e+02 3.03767526895889e+02 1.39890115833228e+01
Repeat-By:
Run the following program after compiling with or without -C, and under pi.
{--------------------------------------------------------------------------}
program sum(input,output);

     var n,x,s: real;

     procedure strip(var n: real; p: real);
	  begin while (trunc(n) mod trunc(p) = 0) do n := n/p end;

     procedure np(var p: real);
	  var r: integer;
	  begin
	       r := trunc(p) mod 6;
	       if (r = 1) then p := p + 4  else
	       if (r = 5) then p := p + 2  else
	       if (p = 2) then p := 3   
		          else p := 5
	  end;
     
     function mup(y,a,p: real): real;
	  begin if (trunc(y) mod trunc(p) = 0) then mup := a/p end;

     function mu(y,a: real): real;
	  var p,m: real;
	  begin
	       p := 2;
	       while (p < a) do
		    begin
		    strip(y,p);
		    np(p)
		    end;
	       m := 0;
	       while (p*p <= y) do
		    begin
		    m := m + mup(y,a,p);
		    strip(y,p);
		    np(p);
		    end;
	       if (y <> 1) then m := m + a/y;
	       mu := m
          end;

     function f(x: real): real;
	  begin
	  f := 46*x*x - 25*x + 1
	  end;

     begin
	  n := 1000;
	  x := 1;
	  s := 0;
	  while (x <= n) do
	       begin
	       s := s + mu(f(x),x);
	       if (trunc(x) mod 20 = 0) then writeln(x,s,s*ln(x)/x);
	       x := x + 1
	       end
     end.
{--------------------------------------------------------------------------}
