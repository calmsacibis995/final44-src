Return-Path: <decvax!philabs!nyit!rick>
From: decvax!philabs!nyit!rick
Date: Wed, 18 Sep 85 17:28:00 edt
Return-Path: <philabs!nyit!rick>
Subject: script(1) and pty etiquette

Index:  ucb/script.c 4.2BSD

Description:
	`script' fails if the slave end of the pty cannot be opened.
	The problem is that script doesn't follow proper pty protocol.
	Script incorrectly assumes that successfully opening the master
	end of the pty implies that a subsequent open() to the slave
	end is guaranteed to succeed.  The open() to the slave device
	can fail if the mode on /dev/ttyp? prohibits it.  This has
	happened on a few instances on our 4.2 systems.

Repeat-By:
	Find a 4.2bsd system where no ptys are in use.  Log in as root and
		chmod 0 /dev/ttyp0
	Log out and log in as a nonprivileged user.
	Run `script' and watch.

Fix:
	My fix to script.c changes getmaster() to open the slave end of
	the pty immediately following a successful open() call to a master
	pty device.  If the slave cannot be opened, close the file
	descriptor on the master and proceed to the next master candidate.
	If the slave was opened successfuly, leave it and the master open.
	Also, remove the code in getslave() to open() the slave (because
	it is already open).  Lastly, in the beginning of dooutput() and
	doinput(), add the line
		(void) close(slave);

	[End of bug report]

