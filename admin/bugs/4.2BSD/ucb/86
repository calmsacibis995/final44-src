Return-Path: <aaz@purdue-asc.arpa>
Date: Sun, 8 Dec 85 15:06:46 est
From: Marc Mengel <aaz@purdue-asc.arpa>
Subject: File Recovery bug in {ex,vi}
Index: 	ucb/ex/ex_cmds.c 4.2BSD

Description:
	recovering a file ( with {vi,ex,...} -r or the :recover command )
	did not correctly set the modified file flag, so that a sequence
	like:
	: recover foo
	: x
	LOST the file, as :x didn't write it because it wasn't changed.

Repeat-By:
	1) edit a file with ex/vi and send it a hangup signal to make it
	   save a file in the recovery area.
	2) recover the file
	3) immediately exit. (:x or ZZ in open mode)
	The recovered file is not written.
Fix:
	Forcibly set the modify bit.  The flag is set in the routine 
	recover() in ex_unix.c, but the flag gets reset somewhere
	between there and returning to the mainline.  The solution is
	to set it in ex_cmds.c where we handle :recover just before
	breaking back to the mainline.  Here are the diffs.
	
	520c520
	< 					chng = 1;  /*to prevent :x not writing*/
	---
	> 					nochng();
