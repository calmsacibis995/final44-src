Return-Path: <jbn@FORD-WDL1.ARPA>
Date:  1-Mar-84 11:33:32-PST
From: jbn@FORD-WDL1.ARPA
Subject: Lisp DEFCONST bug

Index: ucb/lisp 4.2

Description:
     There are definitions of DEFCONST in both machacks.l and loop.l, and
they are different.  If a LOOP call appears in a program being compiled
with Maclisp compatibility, the autoloading of loop.o will result in
the definition of DEFCONST in loop.o overriding the one in machacks.o.
In any case, both don't work properly in terms of pervading the "declare
special" through compiles and loads.  The "defvar" in macros.l does work
properly, and "defconst" in machacks.l should be modified to work like
"defvar", which uses some strange feature named "liszt-declare".
I suggest that "loop.l" should not redefine any standard functions
(names such as "loop-internal-defconst" would be more appropriate for
the internal functions) and "defconst" in "machacks.l" needs to be fixed.

Repeat-By:
    1.  Compile something in Maclisp mode which begins by making
	macros pervasive with (declare (macros t)), and uses DEFCONST.

    2.  Load the above into another compilation and reference the
	variable mentioned in the DEFCONST, and see if the compiler
	issues a "declared special by compiler" warning message.
	It does for me.
