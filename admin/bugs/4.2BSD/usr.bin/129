Return-Path: <mrazek@uxc.cso.uiuc.edu>
Date: Tue, 29 Jul 86 15:59:04 cdt
From: mrazek@uxc.cso.uiuc.edu (Michael Mrazek)
Subject: struct gives core dump on large Fortran programs
Index: usr.bin/struct 4.2BSD

Description:
	Whenever a large Fortran program is input to struct(1) to be
	converted to Ratfor, it gives some kind of crazy error as below:
	
	/usr/bin/struct: 4761 Memory fault - core dumped
	This doesn't occur when a smaller Fortran subrooutine is used
	as input.
Repeat-By:
	Do "struct -s pass1.f" on the following Fortran subroutine:
----------------
      SUBROUTINE PASS1
C
C     THIS ROUTINE COLLECTS STATEMENT NUMBERS, MAKES DIAGNOSTIC COMMENTS
C     AND SETS UP THE FORTRAN STATEMENTS IN A FORM SUITABLE FOR PASS2.
C
      COMMON
     1        JINT(1600)   ,JOB(80)      ,KBUFF(80)
     2       ,LDEF(1500)   ,LOCDEF(1500) ,LREF(1000)
      DIMENSION KIM(80,20),NEWNUM(1500)
      EQUIVALENCE(JINT(1),KIM(1,1),NEWNUM(1))
C
      COMMON /LARGE/        IOUT(1460)
C
C
      COMMON /MISC/
     1        ICOL         ,IFIR         ,IPASS        ,ISTAR
     2       ,JCOL         ,JMAX         ,KILI(4)      ,KOL73(3)
     3       ,L772         ,LAST         ,LCPY         ,LDOS(10)
     4       ,LFIR         ,LQUAL        ,MEOF         ,MILDO
     5       ,MLGC         ,MP2          ,MTRAN        ,NBLC
     6       ,NCD          ,NDEF         ,NDOS         ,NINS
     7       ,NPAR         ,NPUN         ,NREC         ,NREF
     8       ,NRT1         ,NRT2         ,NTEMP(5)     ,NXEQ
     9       ,NTRAN        ,KEND(3)      ,MPUN         ,MPRIN
     A       ,INFILE       ,OUTFIL       ,SCFIL1   ,SCFIL2
     B       ,PUNFIL       ,NMSG         ,IQUIT
     C       ,KB15         ,KPUN         ,MCOL         ,MCOM
     D       ,MEX          ,KD79         ,MLBL         ,MSTOP
     E       ,MLIST        ,NROUT        ,MREF         ,MSKP
     F       ,KD15         ,MSER         ,MRIT         ,JUST
     G       ,KPRIN        ,MDEB         ,MCONT        ,L25
     H       ,LINE         ,MPAGE        ,NPAGE        ,KOUNT
      INTEGER INFILE       ,OUTFIL       ,SCFIL1     ,SCFIL2
     B       ,PUNFIL       ,NMSG
      EQUIVALENCE (KILI(1),KLASS) , ( KILI(2),JTYPE)
      EQUIVALENCE (KILI(3),L15) , (KILI(4),IMAX)
C
      COMMON /ALPHA/ KBL,KDIG(10),KABC(26),KSPK(13)
     X    ,KBL2,KLR2,KLP2,KRP2,KERM
C
      COMMON /CONTDY/ NKTRL,KTRL(4,25)
C
      COMMON /KSTCOM/ NKST,KST(13,70)
C
C     A    B    C    D    E    F    G    H    I    J    K    L    M
C     1    2    3    4    5    6    7    8    9    10   11   12   13
C
C     N    O    P    Q    R    S    T    U    V    W    X    Y    Z
C     14   15   16   17   18   19   20   21   22   23   24   25   26
C
C     =    ,    (    /    )    +    -    *    .    $    -    '    & NONE
C     1    2    3    4    5    6    7    8    9    10   11   12   13  14
C
C
C     SET UP INITIAL CONDITIONS.
C     REWIND TAPE FILES 1 AND 2.
C
 10   CALL IOSYS1 (1,0,1)
      CALL IOSYS2 (1,0,1)
      DO 20 I=1,10
 20   LDOS(I)=0
      IMAX=1460
      IPASS=1
      KOUNT = 0
      MP2=1
      NBLC=2
      MPUN=KPUN
      MPRIN=KPRIN
      NROUT=NROUT+1
      NRT1=0
      NRT2=0
      MILDO=0
      MLGC=0
      MSKP=0
      MPAGE=0
      MTRAN=0
      NDEF=0
      NDOS=0
      NFORT=0
      NREC=0
      NREF=0
      L25=0
      NTRAN=0
      NXEQ=0
      GO TO 50
C
C                  ILLEGAL FIRST CHARACTER.
 30   JGOOF=9
C                  WRITE DIAGNOSTIC
 40   CALL DIAGNO (JGOOF)
C                  GET NEW CARD.
 50   CALL SKARD
      DO 60 I=1,IMAX
 60   IOUT(I)=KBL
C
C     LOOK FOR * IN COLUMN 1
C
      IF (JINT(1).NE.KSPK(8)) GO TO 100
      CALL CONTRL
      IF (ISTAR) 70,80,90
C                  CONTROL CARD FOUND AND EXECUTED.
 70   IF (MSTOP.EQ.0) GO TO 75
C                            *STOP CARD FOUND. QUIT IF FIRST OF ROUTINE
         IF (NFORT.LE.0) RETURN
C                            OTHERWISE BUILD AN END CARD
         GO TO 1000
 75   IF (MSKP.EQ.0) GO TO 50
      MP2=0
      CALL NOPRO (0)
      GO TO 10
C                  CONTROL CARD FOR DELAYED EXECUTION. SAVE FOR PASS 2.
 80   KLASS=0
      GO TO 180
C                  * IN COL 1. NOT A CONTROL CARD.  PUT OUT LITERALLY
C                  UNLESS * IN COL 2. ALSO.
 90   IF (JINT(2).EQ.KSPK(8)) GO TO 50
      GO TO 170
C
C     *STOP COMMAND EXIT.
C
C     NO * IN COLUMN 1, LOOK FOR C, D, I, F, ., OR $.
C
 100  IF (JINT(1).EQ.KBL) GO TO 230
      IF (JINT(1).EQ.KABC(3)) GO TO 120
      IF (JINT(1).EQ.KABC(4)) GO TO 110
      IF (JINT(1).EQ.KABC(9)) GO TO 110
      IF (JINT(1).EQ.KABC(6)) GO TO 110
      IF (JINT(1).EQ.KSPK(10)) GO TO 200
      IF (JINT(1).EQ.KSPK(9)) GO TO 200
      GO TO 230
 110  CALL DIAGNO (8)
      GO TO 50
C
C     COMMENT CARD.  DO WE SAVE THEM...
 120  IF (MCOM) 150,50,130
C                  CHECK COL 2-6. DELETE *, SKIP ON ANYTHING ELSE.
 130  DO 140 JCOL=2,6
      IF (JINT(JCOL).EQ.KBL) GO TO 140
      IF (JINT(JCOL).NE.KSPK(8)) GO TO 210
      JINT(JCOL)=KBL
 140  CONTINUE
C
C     LOOK FOR BLANK COMMENT
C
 150  DO 160 JCOL=2,JMAX
      IF (JINT(JCOL).NE.KBL) GO TO 200
 160  CONTINUE
C
C     BLANK COMMENT. TEST IF TWO PREVIOUS CARDS WERE BLANK
C
      NBLC=NBLC+1
      IF (NBLC.GT.2) GO TO 50
      JINT(1)=KABC(3)
      JMAX=7
 170  KLASS=1
 180  JTYPE=0
C
C     WRITE STATEMENT IMAGE ON TAPE 1 FOR PASS 2.
C
 190  L15=0
      IMAX=JMAX
      CALL IOSYS1 (3,KILI,4)
      CALL IOSYS1 (3,JINT,IMAX)
      NRT1=NRT1+1
      GO TO 50
C
C     NON-BLANK COMMENT.
C
 200  NBLC=0
      IF (JMAX.GT.72) JMAX=72
      GO TO 170
C
C     NON-BLANK IN STATEMENT FIELD.
C
 210  ICOL=6
      DO 220 I=JCOL,JMAX
      ICOL=ICOL+1
 220  IOUT(ICOL)=JINT(I)
      IOUT(1)=KABC(3)
      IF (ICOL.GT.72) ICOL=72
      IMAX=ICOL
      KLASS=1
      JTYPE=0
      L15=0
      CALL IOSYS1 (3,KILI,4)
      CALL IOSYS1 (3,IOUT,IMAX)
      NRT1=NRT1+1
      GO TO 50
C
C               ===============================================
C               *                                             *
C               *      START PROCESSING OF FORTRAN CARDS      *
C               *                                             *
C               ===============================================
C
 230  IF (JMAX.LT.8) GO TO 40
      NFORT=NFORT+1
C                  CHECK AND CHANGE HOLLERITH FIELDS
      CALL HOLSCN
C                  CLEAR FLAGS
      IF (MLGC.EQ.0) GO TO 240
         MTRAN=0
         MLGC=0
 240  NTRAN=MTRAN
      MTRAN=0
      MEOF=-1
      JGOOF=1
C                  CLEAR STATEMENT AND REFERENCE NUMBERS
      L15=0
      L772=0
C                  CLEAR BLANK COMMENT COUNTER
      NBCOLD=NBLC
      NBLC=0
C                  SET POSITION COUNTERS.
      JCOL=7
      ICOL=JUST-1
      IF (JUST.NE.0) GO TO 260
      ICOL=6
 250  IF (JINT(JCOL).NE.KBL) GO TO 260
      JCOL=JCOL+1
      ICOL=ICOL+1
      GO TO 250
C                  ANALYSIS OF LOGICAL IF RE-ENTERS HERE.
C
C                  SELECT NEXT COURSE ON BASIS OF FIRST SPECIAL CH.
C             =   ,   (   /  )  +  -  *   .  $  -  '   &  NONE
 260  GO TO (300,400,270,400,30,30,30,400,30,30,30,400,30,400),IFIR
C
C                  FIRST IS (.  LOOK FOR )
 270  NPAR=0
      DO 280 NF=LFIR,JMAX
         IF (JINT(NF).EQ.KSPK(5)) NPAR=NPAR-1
         IF (JINT(NF).EQ.KSPK(3)) NPAR=NPAR+1
         IF (NPAR.EQ.0) GO TO 290
 280  CONTINUE
C                            MISSING )
      JGOOF=2
      GO TO 40
C                  THIS IS THE END OF THE FIRST STACK OF PARENS.
C                  SKIP BLANKS.
 290  NF=NF+1
      IF (NF.EQ.JMAX) GO TO 400
      IF (JINT(NF).EQ.KBL) GO TO 290
C                  IF NEXT CHARACTER IS NOT = PROCESS AS FORTRAN STATEME
      IF (JINT(NF).NE.KSPK(1)) GO TO 400
C                  OTHERWISE, PROCESS AS ARITHMETIC REPLACEMENT.
      LQUAL=NF
      GO TO 360
C
C                  FIRST SPECIAL CH. IS =.
 300  LQUAL=LFIR
C                  IS IT A DO STATEMENT.  IF NOT, GO TO ARITHMETIC PROC.
C                  LOOK FOR -D- -O-
      I=KABC(4)
      DO 310 J=7,JMAX
      IF (JINT(J).EQ.KBL) GO TO 310
      IF (JINT(J).NE.I) GO TO 360
      IF (I.EQ.KABC(15)) GO TO 320
      I=KABC(15)
 310  CONTINUE
      GO TO 360
C                  FOUND -D- -O- NOW LOOK FOR COMMAS.  ALLOW 1 OR MORE
C                  COMMAS AFTER THE EQUALS AND EXACTLY 1 EQUALS.  THIS
C                  IS NOT A PERFECT CHECK SO SHOULD BE IMPROVED.
 320  NCOMA=0
      JJ=LQUAL+1
      DO 350 J=JJ,JMAX
      IF (JINT(J).EQ.KSPK(1)) GO TO 360
      IF (JINT(J).EQ.KSPK(2)) NCOMA=NCOMA+1
 350  CONTINUE
      IF (NCOMA.LT.1) GO TO 360
C                  O.K.  THIS IS A DO STATEMENT.
      KLASS=10
      JTYPE=14
      GO TO 470
C              =================================================
C              *                                               *
C              *   START PROCESSING OF ARITHMETIC STATEMENT.   *
C              *                                               *
C              =================================================
 360  KLASS=6
      JTYPE=0
 370  CALL COPY (-1)
      IF (MEOF) 370,390,380
 380  IF (LCPY.EQ.KERM) GO TO 390
      ICOL=ICOL+1
      MEOF=-1
      GO TO 370
 390  IF (MLGC.NE.0) GO TO 550
C
C     GET STATEMENT NUMBER.
C
      JCOL=1
      CALL RSTAT
      L15=L772
      GO TO 550
C
C              ========================================
C              *                                      *
C              *     END OF ARITHMETIC PROCESSING     *
C              *  START FORTRAN STATEMENT PROCESSING  *
C              *                                      *
C              ========================================
C
C                  CHECK EVERY LISTED STATEMENT TYPE.
 400  DO 430 ITYPE=1,NKST
         NINS=KST(11,ITYPE)
         LAST=JCOL-1
C
         DO 420 I=1,NINS
 410        LAST=LAST+1
            IF (LAST.GT.JMAX) GO TO 430
            IF (JINT(LAST).EQ.KBL) GO TO 410
            IF (JINT(LAST).NE.KST(I,ITYPE)) GO TO 430
 420     CONTINUE
C                  FOUND IT.
         KLASS=KST(12,ITYPE)
         JTYPE=KST(13,ITYPE)
         IF (MLGC.EQ.0) GO TO 440
C                            FOLLOWS LOGICAL IF
         IF (KLASS.EQ.4.OR.KLASS.EQ.6.OR.KLASS.EQ.7) GO TO 510
         GO TO 40
C                  LOOP FOR NEXT STATEMENT.
 430  CONTINUE
C                  NOT IN TABLE.  PASS IT WITHOUT PROCESSING.
      CALL DIAGNO(30)
      GO TO 170
C
C                  THIS IS A FORTRAN STATEMENT.
C                  SET IMAX IN CASE THIS STATEMENT IS PUT OUT DIRECTLY.
 440  IMAX=JMAX
C                  CHECK FOR EXEMPT STATEMENT.
      IF (KLASS.NE.3) GO TO 460
      DO 450 J=1,6
 450  JINT(J)=KBL
      IF (MEX.EQ.0) GO TO 510
C                  THIS IS A NON-EXECUTABLE (KLASS 3.) FORTRAN STATEMENT
C                  AND THE EXEMPT FLAG IS SET.  SO PUT IT OUT DIRECTLY.
      GO TO 190
C
C                  GET STATEMENT NUMBER UNLESS FOLLOWING LOGICAL IF.
 460  IF (MLGC.NE.0) GO TO 510
 470  DO 500 I=1,5
      IF (JINT(I).EQ.KBL) GO TO 500
      DO 480 J=1,10
      IF (JINT(I).EQ.KDIG(J)) GO TO 490
 480  CONTINUE
      GO TO 510
 490  L15=L15*10+J-1
 500  CONTINUE
C
C     GO TO INDIVIDUAL STATEMENT PROCESSING BY JTYPE.
C
 510  GO TO (580,610,620,630,640,650,700,730,780,790,820,880,890,900,990
     1,1000,1110,1130,1140,1180,1200,590,1210,1230,1290,1310,1320,1330,1
     2360,1370,1380,1440,1450,1480,1490,1510,1590,1610,1640,1650,1660,16
     370,1700,1500,1580,1720,520),JTYPE
C
C     ==================================================================
C     *                                                                *
C     *  AT THIS POINT, COMMENTS AND ARITHMETIC STATEMENTS HAVE BEEN   *
C     *  PROCESSED.  THE STATEMENTS HAVE BEEN CLASSIFIED AS ITYPE AND  *
C     *  KLASS.  THE LAST SYMBOL USED IN SCANNING THE FORTRAN STATE-   *
C     *  MENT IS KST(NINS,ITYPE), AND WAS FOUND AT JINT(LAST).  THE    *
C     *  FIRST SPECIAL CHARACTER, IF ANY, IS KSPK(IFIR), LOCATED AT    *
C     *  JINT(LFIR).  IF A STATEMENT                                   *
C     *  NUMBER IS PERMITTED, IT IS IN L15.  IF NOT, L15=0.            *
C     *  JCOL IS ON THE CURRENT CHARACTER IN THE INPUT STRING (THE     *
C     *  FIRST, UNLESS FOLLOWING A LOGICAL IF).  ICOL IS ON THE MOST   *
C     *  RECENT CHARACTER TO BE PUT INTO THE OUTPUT STRING (E.G. 6.)   *
C     *                                                                *
C     ==================================================================
C
C                  ILLEGAL JTYPE
 520  WRITE (OUTFIL,1760) JTYPE
      STOP
C
C                  COPY REST OF CARD.
 530  ICOL=ICOL+1
 540  CALL COPY (0)
      IF (KLASS.LT.4) GO TO 560
C                  DLIST HANDLES THE STATEMENT NUMBER.
 550  CALL DLIST (MERR)
      IF (MERR.NE.0) GO TO 50
 560  IMAX=ICOL
C                  WRITE STATEMENT IMAGE ON TAPE1 FOR PASS 2.
 570  CALL IOSYS1 (3,KILI,4)
      CALL IOSYS1 (3,IOUT,IMAX)
      NRT1=NRT1+1
      GO TO 50
C
C                  ***** JTYPE = 1
C     ASCENT,MACHINE.
 580  I=0
      GO TO 600
C
C                  ***** JTYPE = 22
C     IDENT
C
 590  I=1
C            (MUST BE THE FIRST CARD OF THIS PASS.)
 600  IF (NFORT.NE.1) CALL DIAGNO (14)
      CALL DIAGNO (26)
      CALL NOPRO (I)
      CALL HEADER
      RETURN
C
C                  ***** JTYPE = 2
C     ASSIGN
C
 610  CALL COPY (6)
      CALL RSTAT
      CALL RLIST
      IOUT(ICOL+2)=KLR2
      IOUT(ICOL+3)=L772
      ICOL=ICOL+4
      CALL COPY (2)
      IF (MEOF.LT.0) GO TO 530
      GO TO 40
C
C                  ***** JTYPE = 3
C     BACKSPACE, EXTERNAL,  IMPLICIT, PAUSE.
C
 620  CALL COPY (NINS)
      GO TO 530
C
C                  ***** JTYPE = 4
C      BLOCK DATA
C
 630  IF (NFORT.NE.1) GO TO 40
      CALL COPY (5)
      GO TO 530
C
C                  ***** JTYPE = 5
C     BUFFER IN (I,P) (A,B) /// BUFFER OUT (I,P) (A,B)
C
 640  CALL COPY (6)
      ICOL=ICOL+1
C                  NINS IS 9 FOR BUFFERIN, 10 FOR BUFFEROUT
      CALL COPY (NINS-7)
      ICOL=ICOL+1
      CALL COPY (-1)
      ICOL=ICOL+1
      CALL COPY (-1)
      IF (MEOF.LT.0.AND.JCOL.GT.JMAX) GO TO 550
      GO TO 40
C
C                  ***** JTYPE = 6
C     CALL   (FUNCTION,SUBROUTINE)
C
 650  JGOOF=10
      CALL COPY (4)
      ICOL=ICOL+1
      IF (IFIR.NE.3) GO TO 540
 660  CALL COPY (1)
      IF (LCPY.EQ.KSPK(3)) GO TO 670
      IF (MEOF.LT.0) GO TO 660
      GO TO 40
 670  IOUT(ICOL)=KBL2
      JCOL=JCOL-1
 680     CALL COPY (1)
         IF (MEOF.GE.0) GO TO 690
         IF (LCPY.NE.KSPK(13)) GO TO 680
C                            ARGUEMENT IS &STATEMENT NUMBER
            IOUT(ICOL+1)=KLR2
            CALL RSTAT
            IF (L772.EQ.0) GO TO 40
            ICOL=ICOL+2
            IOUT(ICOL)=L772
            CALL RLIST
            GO TO 680
 690  IMAX=ICOL
      IF (NPAR.EQ.0) GO TO 550
      GO TO 40
C
C                  ***** JTYPE = 7
C     COMMON
C
 700  CALL COPY (6)
      ICOL=ICOL+1
C          J COUNTS SLASHES
      J=-2
      IF (IFIR.NE.4) GO TO 540
 710  IF (J.EQ.0) GO TO 530
      J=J+1
 720  CALL COPY (1)
      IF (LCPY.EQ.KSPK(4)) GO TO 710
      IF (MEOF.LT.0) GO TO 720
      CALL DIAGNO (11)
      GO TO 570
C
C                  ***** JTYPE = 8
C     CONTINUE
C
 730  JGOOF=12
      IF (L15.EQ.0) GO TO 40
      IF (MLGC.EQ.0) GO TO 750
         DO 740 I=7,ICOL
 740     IOUT(I)=KBL
         ICOL=6
         MLGC = 0
 750  CALL COPY (8)
      IF (MCONT.NE.0) GO TO 550
C                            IS THIS A DO-LOOP TERMINATOR...
      IF (NDOS.EQ.0) GO TO 770
         DO 760 I=1,NDOS
         IF (L15.EQ.LDOS(I)) GO TO 550
 760     CONTINUE
C                            PROCESS STATEMENT NUMBER
 770  CALL DLIST (MERR)
C                            SET A FLAG
      LDEF(NDEF)=-LDEF(NDEF)
      L25=L15
C                            TAKE TRANSFER STATUS OF LAST CARD
      MTRAN=NTRAN
C                            DONT SAVE STATEMENT FOR PASS2
      GO TO 50
C
C                  ***** JTYPE = 9
C     DATA
C
 780  CALL COPY (4)
      ICOL=ICOL+1
      IF (IFIR.NE.4) GO TO 540
      IF (JINT(JMAX).NE.KSPK(4).OR.LFIR.GE.JMAX) CALL DIAGNO (11)
      GO TO 540
C
C                  ***** JTYPE = 10
C     DECODE (C,N,V) LIST  ///  ENCODE (C,N,V) LIST
C
 790  JGOOF=23
      CALL COPY (6)
      ICOL=ICOL+1
      CALL COPY (1)
 800  CALL COPY (1)
      IF (LCPY.EQ.KSPK(2)) GO TO 810
      IF (MEOF.LT.0) GO TO 800
      GO TO 40
 810  CALL RSTAT
      IF (L772.EQ.0) GO TO 1620
      ICOL=ICOL+1
      IOUT(ICOL)=KLR2
      ICOL=ICOL+1
      IOUT(ICOL)=L772
      CALL RLIST
      GO TO 1620
C
C                  ***** JTYPE = 11
C     DIMENSION
C
 820  JGOOF=13
      CALL COPY (9)
      ICOL=ICOL+1
      NPAR=-1
      DO 870 I=JCOL,JMAX
      CALL COPY (1)
      IF (NPAR) 830,840,850
 830  IF (LCPY.EQ.KSPK(3)) GO TO 860
      GO TO 870
 840  IF (LCPY.EQ.KSPK(5)) GO TO 860
      GO TO 870
 850  IF (LCPY.NE.KSPK(2)) GO TO 870
      ICOL=ICOL+1
      NPAR=-1
      GO TO 870
 860  NPAR=NPAR+1
 870  CONTINUE
      IF (NPAR.GT.0) GO TO 560
      GO TO 40
C
C                  ***** JTYPE = 12
C     DOUBLE PRECISION
C
 880  CALL COPY (6)
      ICOL=ICOL+1
      CALL COPY (9)
      GO TO 530
C
C                  ***** JTYPE = 13
C     DOUBLE, (CONVERT TO DOUBLE PRECISION).
C
 890  CALL COPY (6)
      IOUT(ICOL+2)=KABC(16)
      IOUT(ICOL+3)=KABC(18)
      IOUT(ICOL+4)=KABC(5)
      IOUT(ICOL+5)=KABC(3)
      IOUT(ICOL+6)=KABC(9)
      IOUT(ICOL+7)=KABC(19)
      IOUT(ICOL+8)=KABC(9)
      IOUT(ICOL+9)=KABC(15)
      IOUT(ICOL+10)=KABC(14)
      ICOL=ICOL+11
      GO TO 540
C
C                  ***** JTYPE = 14
C     DO STATEMENT
C
 900  MILDO=1
      CALL COPY (2)
      CALL RSTAT
      IF (L772.EQ.0) GO TO 40
      JGOOF=15
      IF (NDEF.LE.0) GO TO 920
      DO 910 I=1,NDEF
      IF (IABS(LDEF(I)).EQ.L772) GO TO 40
 910  CONTINUE
C
C     ADD STATEMENT NUMBER TO DO-LIST.
C
 920  IF (NDOS.EQ.0) GO TO 940
      IF (NDOS.LT.0) STOP 30
      IF (LDOS(NDOS).EQ.L772) GO TO 960
      IF (NDOS.EQ.1) GO TO 940
      DO 930 I=2,NDOS
      IF (LDOS(I-1).EQ.L772) GO TO 40
 930  CONTINUE
      IF (NDOS.GE.10) GO TO 980
 940  NDOS=NDOS+1
      LDOS(NDOS)=L772
      IF (NREF.LE.0) GO TO 960
      DO 950 I=1,NREF
      IF (LREF(I).EQ.L772) GO TO 970
 950  CONTINUE
 960  CALL RLIST
      IOUT(ICOL+2)=KLR2
      IOUT(ICOL+3)=L772
      ICOL=ICOL+4
      GO TO 540
C
 970  CALL DIAGNO (27)
      GO TO 960
C
 980  JGOOF=24
      MPUN=0
      MP2=0
      GO TO 40
C
C     END DO-LOOP STATEMENT PROCESSING.
C
C
C                  ***** JTYPE = 15
C     END FILE
C
 990  IF (IFIR.NE.14) GO TO 30
      CALL COPY (3)
      ICOL=ICOL+1
      CALL COPY (4)
      GO TO 530
C
C                  ***** JTYPE = 16
C     END STATEMENT.
C
C                   IS THERE A FALL-THRU NUMBER?
 1000 IF (L25.EQ.0) GO TO 1005
C                   YES. MAKE A CONTINUE CARD FOR IT TO FALL TO.
         ISAVE = L15
         L15 = 0
         IOUT(7)=KABC( 3)
         IOUT(8)=KABC(15)
         IOUT(9)=KABC(14)
         IOUT(10)=KABC(20)
         IOUT(11)=KABC( 9)
         IOUT(12)=KABC(14)
         IOUT(13)=KABC(21)
         IOUT(14)=KABC( 5)
         MILDO=0
         CALL DLIST (MERR)
         L15 = ISAVE
         IF (MERR.NE.0) GO TO 1005
            JINT(1)=4
            JINT(2)=8
            JINT(3)=L15
            JINT(4)=14
            CALL IOSYS1 (3,JINT,4)
            CALL IOSYS1 (3,IOUT,JINT(4))
            NRT1=NRT1+1
 1005 IF (NDOS.EQ.0) GO TO 1010
         CALL DIAGNO (16)
         CALL PAGE (1)
         WRITE (OUTFIL,1750) (LDOS(I),I=1,NDOS)
C                   DOES THIS STATEMENT HAVE A NUMBER....
 1010 IF (L15.EQ.0) GO TO 1040
C                   YES.  IS IT REFERENCED....
      IF (NREF.LE.0) GO TO 1040
      DO 1020 I=1,NREF
      IF (LREF(I).EQ.L15) GO TO 1030
 1020 CONTINUE
C                   NO.  IGNORE THE NUMBER.
      GO TO 1040
C                   YES.
 1030 CALL DIAGNO (18)
C                           GENERATE NEW STOP COMMAND.
      IOUT(7)=KABC(19)
      IOUT(8)=KABC(20)
      IOUT(9)=KABC(15)
      IOUT(10)=KABC(16)
      MILDO=-1
      CALL DLIST (MERR)
      IF (MERR.NE.0) GO TO 1040
      JINT(1)=6
      JINT(2)=55
      JINT(3)=L15
      JINT(4)=10
      CALL IOSYS1 (3,JINT,4)
      CALL IOSYS1 (3,IOUT,JINT(4))
      NRT1=NRT1+1
C                       PROCESS FORMATS ON TAPE 2
 1040 IF (NRT2.LE.0) GO TO 1090
         CALL IOSYS2 (2,0,1)
C                                  INSERT BLANK COMMENT CARD.
         IF (NBLC.NE.0) GO TO 1060
            IOUT(1)=KABC(3)
            DO 1050 I=2,7
 1050       IOUT(I)=KBL
            KLASS=1
            ITYPE=0
            L15=0
            IMAX=7
            CALL IOSYS1 (3,KILI,4)
            CALL IOSYS1 (3,IOUT,IMAX)
            NRT1=NRT1+1
C                                TRANSFER FORMAT STATEMENTS
 1060    CALL IOSYS2 (4,KILI,4)
         CALL IOSYS2 (4,IOUT,IMAX)
         NRT2=NRT2-1
         NREC=ITYPE
         MILDO=1
         CALL DLIST (MERR)
         IF (MERR.NE.0) GO TO 1070
            CALL IOSYS1 (3,KILI,4)
            CALL IOSYS1 (3,IOUT,IMAX)
            NRT1=NRT1+1
 1070    IF (NRT2.GT.0) GO TO 1060
         CALL IOSYS2 (1,0,1)
C                                      MAKE END STATEMENT
 1090 DO 1100 I=1,6
 1100 IOUT(I)=KBL
      IOUT(7)=KABC(5)
      IOUT(8)=KABC(14)
      IOUT(9)=KABC(4)
      KLASS=8
      ITYPE=20
      L15=0
      IMAX=9
      CALL IOSYS1 (3,KILI,4)
      CALL IOSYS1 (3,IOUT,9)
      NRT1=NRT1+1
      CALL IOSYS1 (2,0,1)
      RETURN
C
C                 ==================================
C                 *   PASS1 NORMALLY EXITS HERE.   *
C                 ==================================
C
C
C                  ***** JTYPE = 17
C     EQUIVALENCE
C
 1110 CALL COPY (10)
 1120    CALL COPY (1)
         ICOL=ICOL+1
         CALL COPY (-1)
         IF (MEOF.LT.0) GO TO 1120
      GO TO 560
C
C                  ***** JTYPE = 18
C     FINIS.
C
 1130 MSTOP=-1
      RETURN
C
C                  ***** JTYPE = 19
C     FORMAT (
C
 1140 JGOOF=17
      IF (L15.EQ.0) GO TO 40
      IF (JINT(JMAX).NE.KSPK(5)) GO TO 40
      IF (MEX.NE.0) GO TO 1160
         CALL COPY (6)
C                            COPY REST OF CARD
         IF (MCOL.EQ.0) GO TO 530
C                            ONTO UNIT 2
            ICOL = ICOL + 1
            CALL COPY(0)
            IMAX=ICOL
            JTYPE=NREC
            CALL IOSYS2 (3,KILI,4)
            CALL IOSYS2 (3,IOUT,IMAX)
            NRT2=NRT2+1
            NBLC=NBCOLD
            GO TO 50
C
C     EXEMPT FLAG IS ON - TRANSFER TO TAPE1 OR TAPE2 WITHOUT REMOVING
C     ANY BLANKS.
C
 1160 IF (MCOL.EQ.0) GO TO 1170
         ITYPE=NREC
         CALL IOSYS2 (3,KILI,4)
         CALL IOSYS2 (3,JINT,JMAX)
         NRT2=NRT2+1
         NBLC=NBCOLD
         GO TO 50
 1170 CALL DLIST (MERR)
      IF (MERR.NE.0) GO TO 50
C
C                  ***** JTYPE = 20
C     FORTRAN,ETC
C
 1180 DO 1190 I=7,JMAX
 1190 IOUT(I)=JINT(I)
      IMAX=JMAX
      GO TO 570
C
C                  ***** JTYPE = 21
C     FREQUENCY
C
 1200 JGOOF=8
      GO TO 40
C
C                  ***** JTYPE = 23
C     GO TO (***,***),N
C
 1210 JGOOF=19
      CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (1)
      MILDO=1
      MTRAN=-1
C
C     PROCESS --GO TO LIST--.
C
 1220 ICOL=ICOL+1
      IOUT(ICOL)=KLR2
      CALL RSTAT
      IF (L772.EQ.0) GO TO 40
      ICOL=ICOL+1
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY.EQ.KSPK(2)) GO TO 1220
      IF (LCPY.NE.KSPK(5)) GO TO 40
      CALL COPY (1)
      IF (LCPY.EQ.KSPK(2)) GO TO 540
      IOUT(ICOL+2)=IOUT(ICOL)
      IOUT(ICOL)=KSPK(2)
      ICOL=ICOL+2
      GO TO 540
C
C                  ***** JTYPE = 24
C     GO TO ****
C
 1230 JGOOF=19
      MILDO=-1
      CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (2)
      ICOL=ICOL+1
      CALL RSTAT
C
C     TEST REF STATEMENT FOR GO TO N OR GO TO N, (LIST)
C
      IF (L772.EQ.0) GO TO 1260
C
C     STATEMENT IS --GO TO 12345--.
C
      IF (L15.EQ.0.AND.L25.EQ.0) GO TO 1250
      IF (MLGC.NE.0) GO TO 1250
C     LABELLED GOTO STATEMENT.
      IF (MCONT.NE.0) GO TO 1240
      CALL DLIST (MERR)
      IF (MERR.NE.0) GO TO 40
C     SET UP REFERENCE TRANSLATION
      IF (NDEF.GE.1500) GO TO 1250
      NDEF=NDEF+1
      LDEF(NDEF)=0
      LOCDEF(NDEF)=L772
      L15=0
C     IF NO WAY TO GET HERE, DELETE IT
      IF (NTRAN.NE.0) GO TO 50
      GO TO 1250
 1240 CALL DIAGNO (18)
 1250 MTRAN=-1
      IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
      GO TO 550
C
C     GO TO N OR GO TO N,LIST
C
 1260 MTRAN=-1
      IF (IFIR.EQ.2) GO TO 1270
C
C     STATEMENT IS --GO TO N--.
C
      IF (IFIR.EQ.14) GO TO 540
      GO TO 40
C
C     GO TO N,(LIST)
C
 1270 CALL COPY (1)
      IF (LCPY.NE.KSPK(2)) GO TO 1270
      ICOL=ICOL+1
      CALL COPY (1)
      IF (LCPY.NE.KSPK(3)) GO TO 40
 1280 CALL RSTAT
      IF (L772.EQ.0) GO TO 40
      IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY.EQ.KSPK(2)) GO TO 1280
      IF (LCPY.EQ.KSPK(5)) GO TO 550
      GO TO 40
C
C                  ***** JTYPE = 25
C     IF ACCUMULATOR OVERFLOW (QUOTIENT, DIVIDE CHECK, END FILE, SENSE)
C
 1290 CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (11)
      ICOL=ICOL+1
      CALL COPY (8)
C
C     PROCESS TWO-WAY TRANSFER.
C
 1300 ICOL=ICOL+1
      JGOOF=20
      MILDO=-1
      IOUT(ICOL)=KLR2
      CALL RSTAT
      IF (L772.EQ.0) GO TO 40
      ICOL=ICOL+1
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY.NE.KSPK(2)) GO TO 40
      CALL RSTAT
      IF (L772.EQ.0) GO TO 40
      GO TO 1250
C
C                  ***** JTYPE = 26
C     IF QUOTIENT OVERFLOW
C
 1310 CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (8)
      ICOL=ICOL+1
      CALL COPY (8)
      GO TO 1300
C
C                  ***** JTYPE = 27
C     IF(DIVIDE CHECK)
C
 1320 CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (7)
      ICOL=ICOL+1
      CALL COPY (6)
      GO TO 1300
C
C                  ***** JTYPE = 28
C     IF(END FILE  I)
C
 1330 CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (8)
      ICOL=ICOL+1
      DO 1340 I=JCOL,JMAX
      IF (JINT(I).EQ.KSPK(5)) GO TO 1350
 1340 CONTINUE
      JGOOF=20
      GO TO 40
 1350 CALL COPY (1)
      IF (LCPY.EQ.KSPK(5)) GO TO 1300
      GO TO 1350
C
C                  ***** JTYPE = 29
C     IF(SENSE LIGHT 5) 1,2
C
 1360 JGOOF=20
      CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (6)
      ICOL=ICOL+1
      CALL COPY (5)
      ICOL=ICOL+1
      CALL COPY (2)
      IF (LCPY.EQ.KSPK(5)) GO TO 1300
      GO TO 40
C
C                  ***** JTYPE = 30
C     IF(SENSE SWITCH 5) 1,2
C
 1370 CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (6)
      ICOL=ICOL+1
      CALL COPY (6)
      ICOL=ICOL+1
      CALL COPY (2)
      JGOOF=20
      IF (LCPY.EQ.KSPK(5)) GO TO 1300
      GO TO 40
C
C                  ***** JTYPE = 31
C     IF (ARITHMETIC) 1,2,3   OR   IF (LOGICAL) STATEMENT.
C
 1380 JGOOF=20
      CALL COPY (2)
      ICOL=ICOL+1
C                  COPY UNTIL CLOSED PARENTHESES
      CALL COPY (-1)
      IF (MEOF.GE.0) GO TO 40
      ICOL=ICOL+1
      CALL RSTAT
      IF (L772.EQ.0) GO TO 1410
C
C     STATEMENT IS    IF (ARITHMETIC) 1,2,3
C
      NCOM=0
      MILDO=-1
      CALL DLIST (MERR)
      IF (MERR.NE.0) GO TO 40
 1390 IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY.EQ.KSPK(2)) GO TO 1400
      IF (LCPY.NE.KERM) GO TO 40
      IF (NCOM.LE.0) GO TO 40
      IF (NCOM.EQ.1) CALL DIAGNO (18)
      MTRAN=-1
      GO TO 560
 1400 NCOM=NCOM+1
      IF (NCOM.GT.3) GO TO 40
      IF (NCOM.EQ.3) CALL DIAGNO (18)
      CALL RSTAT
      IF (L772.EQ.0) GO TO 40
      GO TO 1390
C
C     STATEMENT IS   IF (LOGICAL) STATEMENT
C
 1410 MLGC=-1
C                   LOOK FOR FIRST SPECIAL CHARACTER.
      DO 1430 LFIR=JCOL,JMAX
      JT=JINT(LFIR)
      DO 1420 IFIR=1,11
      IF (JT.EQ.KSPK(IFIR)) GO TO 260
 1420 CONTINUE
 1430 CONTINUE
      LFIR=6
      IFIR=14
      GO TO 260
C
C                  ***** JTYPE = 32
C     NAMELIST
C
 1440 JGOOF=21
      CALL COPY (8)
      ICOL=ICOL+1
      J=-1
      IF (IFIR.EQ.4) GO TO 710
      GO TO 40
C
C                  ***** JTYPE = 33
C     WRITE , PUNCH, READ, ACCEPT.
C
 1450 JGOOF=22
      CALL COPY (NINS)
      ICOL=ICOL+1
      CALL RSTAT
      IF (L772.NE.0) GO TO 1470
C
C     HAVE WRITE  FMT,LIST
C
      IF (IFIR.EQ.2) GO TO 1460
      IF (IFIR.EQ.14) GO TO 540
      GO TO 40
 1460 CALL COPY (1)
      IF (LCPY.EQ.KSPK(2)) GO TO 530
      IF (MEOF.LT.0) GO TO 1460
      GO TO 40
C
C     HAVE WRITE  12345 LIST
C
 1470 CALL RLIST
      IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      IF (IFIR.EQ.2) GO TO 1460
      IF (JMAX.GT.JCOL) GO TO 40
      IMAX=ICOL
      GO TO 550
C
C                  ***** JTYPE = 34
C     SEGMENT,OVERLAY
C
 1480 NFORT=NFORT-1
      IF (NFORT.NE.0) CALL DIAGNO (14)
      CALL COPY (NINS)
      CALL HEADER
      IF (IFIR.EQ.3) GO TO 660
      GO TO 40
C                  ***** JTYPE = 35
C     PROGRAM, SUBROUTINE, FUNCTION.
C
 1490 IF (NFORT.NE.1) CALL DIAGNO (14)
      CALL COPY (NINS)
      CALL HEADER
      ICOL=ICOL+1
      IF (IFIR.EQ.3) GO TO 660
      GO TO 540
C
C
C                  ***** JTYPE = 44
C     WRITE OUTPUT TAPE
C
 1500 CALL COPY (1)
C                  ***** JTYPE = 36
C     READ INPUT TAPE
C
 1510 CALL COPY (4)
C                  CONVERT TO CORRESPONDING READ/WRITE(I,N)LIST
      JGOOF=22
      ICOL=ICOL+2
      IOUT(ICOL)=KSPK(3)
      JCOL=JCOL+1
C                  SKIP TO CHARACTER E
      DO 1520 JAVB=JCOL,JMAX
      IF (JINT(JAVB-1).EQ.KABC(5)) GO TO 1530
 1520 CONTINUE
C                  COPY UNTIL COMMA
 1530 CALL COPY (1)
      IF (MEOF.GE.0) GO TO 40
      IF (LCPY.NE.KSPK(2)) GO TO 1530
C                  PROCESS STATEMENT NUMBER
      CALL RSTAT
      IF (L772.NE.0) GO TO 1570
C                  VARIABLE FORMAT--NO REFERENCE
      KLASS=6
 1540 CALL COPY (1)
C                  LOOK FOR COMMA
      IF (LCPY.EQ.KSPK(2)) GO TO 1560
      IF (MEOF.LT.0) GO TO 1540
C                  NO COMMA. END WITH )
 1550 ICOL=ICOL+1
      IOUT(ICOL)=KSPK(5)
      IMAX=ICOL
      GO TO 550
C                  REPLACE , BY ) AND GO PROCESS LIST
 1560 IOUT(ICOL)=KSPK(5)
      ICOL=ICOL+1
      GO TO 540
 1570 IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY.EQ.KSPK(2)) GO TO 1560
      IF (LCPY.EQ.KERM) GO TO 1550
      GO TO 40
C
C
C                  ***** JTYPE = 45
C     WRITE TAPE
 1580 CALL COPY (1)
C                  ***** JTYPE = 37
C     READ TAPE
C
 1590 CALL COPY (4)
      JCOL=LAST+1
      ICOL=ICOL+2
      IOUT(ICOL)=KSPK(3)
 1600 CALL COPY (1)
      IF (LCPY.NE.KSPK(2)) GO TO 1600
      IOUT(ICOL)=KSPK(5)
      GO TO 530
C
C                  ***** JTYPE = 38
C     READ ( AND WRITE (
C
 1610 JGOOF=23
      CALL COPY (NINS-1)
      ICOL=ICOL+1
 1620 CALL COPY (1)
      IF (MEOF.GE.0) GO TO 40
      IF (LCPY.EQ.KSPK(5)) GO TO 530
      IF (LCPY.NE.KSPK(2) .AND. LCPY.NE.KSPK(1)) GO TO 1620
C
C     GET STATEMENT NUMBER
C
      CALL RSTAT
      IF (L772.EQ.0) GO TO 1620
      IOUT(ICOL+1)=KLR2
      ICOL=ICOL+2
      IOUT(ICOL)=L772
      CALL RLIST
      GO TO 1620
C
C                  ***** JTYPE = 39
C     RETURN
C
 1640 CALL COPY (6)
      MTRAN=-1
      GO TO 530
C
C                  ***** JTYPE = 40
C     SENSE LIGHT
C
 1650 CALL COPY (5)
      ICOL=ICOL+1
      CALL COPY (5)
      GO TO 530
C
C---- JTYPE = 41 STOP
C     FIRST COPY THE -S- -T- -O- -P-
 1660 CALL COPY(4)
C     LEAVE A BLANK SPACE AFTER THE STOP
      ICOL=ICOL+1
      MILDO=-1
      MTRAN=-1
      I=0
C     DELETE LEADING SPACES FOR POSSIBLE ARGUMENT
 1661 IF (JCOL.GT.JMAX) GO TO 550
C     CHECK FOR END OF INPUT LINE
      IF (I.EQ.0.AND.JINT(JCOL).EQ.KBL) GO TO 1662
C     MOVE A CHARACTER INTO OUTPUT
      ICOL=ICOL+1
      IOUT(ICOL)=JINT(JCOL)
      I=1
 1662 JCOL=JCOL+1
      GO TO 1661
C
C                  ***** JTYPE = 42
C     IF (UNIT,N) L1,L2,L3,L4
C
 1670 CALL COPY (2)
      ICOL=ICOL+1
      CALL COPY (-1)
      IF (MEOF.GE.0) GO TO 40
      ICOL=ICOL+1
      MILDO=1
      CALL DLIST (MERR)
      IF (MERR.NE.0) GO TO 40
      DO 1680 I=1,4
      CALL RSTAT
      IF (L772.EQ.0) GO TO 40
      ICOL=ICOL+2
      IOUT(ICOL-1)=KLR2
      IOUT(ICOL)=L772
      CALL RLIST
      CALL COPY (1)
      IF (LCPY.NE.KSPK(2)) GO TO 1690
 1680 CONTINUE
      GO TO 40
 1690 IF (I.EQ.4.AND.LCPY.EQ.KERM) GO TO 560
      GO TO 40
C
C                  ***** JTYPE = 43
C     TYPE INTEGER, TYPE REAL ETC. STATEMENT.
C
C              BLANK THE WORD -TYPE- AND GO AGAIN
 1700 DO 1710 I=7,LAST
 1710 JINT(I)=KBL
      GO TO 400
C
C                        ***** JTYPE = 46
C     COMPLEX,  INTEGER,  REAL,  LOGICAL  ,CHARACTER
C
 1720 CALL COPY (NINS)
      IF (IFIR.NE.8) GO TO 530
C          STATEMENT IS E.G. REAL*8, I.E. WITH BYTE NUMBER
      CALL COPY (1)
      IF (LCPY.NE.KSPK(8)) GO TO 40
 1730 CALL COPY (1)
      DO 1740 I=1,10
      IF (LCPY.EQ.KDIG(I)) GO TO 1730
 1740 CONTINUE
      JCOL=JCOL-1
      IOUT(ICOL)=KBL
      GO TO 540
C
 1750 FORMAT (13X,3H***,10I6,3H***)
 1760 FORMAT (8H0JTYPE =,I3,45H IS ILLEGAL.  I AM CONFUSED AND CANNOT GO
     1 ON.)
      END
