Return-Path: <allegra!astrovax!astrovax!gam>
Date: Mon, 19 Mar 84 23:22:53 est
From: allegra!astrovax!gam (Gary Mamon)
Subject: F77 exponentiation.
Index: usr.bin/f77 4.2BSD

Description:
	4.2 F77 mishandles the following in single precision:

		z = x1**alpha + x2**alpha + ... + xlast**alpha

	where alpha is a floating point constant, and z and x sub i
	are real variables.
	F77 returns for z the value N*xlast**alpha, where N is the
	number of terms in the sum.

	Furthermore F77 mishandles the following in both single and
	double precision.

		z = (x1-y1)**alpha + (x2-y2)**alpha

	where again alpha is a floating point constant, and z, the 
	x sub i and the y sub i are real (real*8 in double precision)
	variables.

Repeat-By:
	compiling and running the following source with f77.

	x = 6.
	y = 8.
	x2 = 1.
	y2 = 1.
	z = x**2.+y**2.
	z2 = (x2-x)**2.+(y2-y)**2.
	print *,z,z2
	stop
	end

The program will print "128 98" instead of "100 74"

The same program starting with the line

	implicit real*8 (a-h,o-z)

will print "100 98" instead of "100 74"

Fix:
	Unknown.

Comment:
	This is one of several 4.2 BSD F77 bugs already discovered at
	our site. The majority of Fortran users here are now using the
	4.1BSD F77 compiler.
