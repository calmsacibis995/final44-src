Return-Path: <dlw@ucbopal.CC>
Date: Wed, 9 Jan 85 10:46:34 pst
From: dlw@ucbopal.CC (David Wasley)
Subject: fix for list read with NULL list
Index: usr.lib/libI77/lread.c 4.2BSD [fix]

Description:
	List directed read with a NULL list did not return EOF
	when appropriate. This caused some programs to loop
	indefinitely. Also, skipping to the end of the next
	logical record did not stop on a '/' as required by
	the ANSI standard.

Repeat by:
		program lloop
	10	read(*,*,end=20)
		go to 10
	20	stop
		end

	The above will loop indefinitely.

Fix:
	In lread.c change:
2c2
< char id_lread[] = "@(#)lread.c	1.7";
---
> char id_lread[] = "@(#)lread.c	1.8";
75,77c75,77
< 	if(curunit->uend) return(OK);
< 	while(GETC(ch) != '\n' && ch != EOF);
< 	return(OK);
---
> 	if(curunit->uend) return(EOF);
> 	while(GETC(ch) != '\n' && ch != '/' && ch != EOF);
> 	return(ch==EOF?EOF:OK);

==========================================================================

Return-Path: <dlw@ucbmonet>
Date: Wed, 9 Jan 85 12:35:54 pst
From: dlw@ucbmonet (David Wasley)
Subject: list read in f77 I/O

Index: usr.lib/libI77/lread.c 4.2BSD [fix]

Description:
	I sent in a bug report earlier with a fix for list directed
	read with a NULL list. My fix included a modification of the
	"skip to end of record" that terminated on '/'. This turns
	out to conflict with a statement in the f77IO writeup and
	is not required by the ANSI standard. Therefore, that part
	of the earlier fix should be backed out.

Repeat by:
	Don't bother.

Fix:
	Here is the revised fix:

2c2
< char id_lread[] = "@(#)lread.c	1.7";
---
> char id_lread[] = "@(#)lread.c	1.8";
75c75
< 	if(curunit->uend) return(OK);
---
> 	if(curunit->uend) return(EOF);
77c77
< 	return(OK);
---
> 	return(ch==EOF?EOF:OK);
