From owner-bugs  Fri Feb 21 13:31:54 1992
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA11132; Fri, 21 Feb 92 13:31:54 -0800
Subject: gcc bugfix for sendmail
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA11051; Fri, 21 Feb 92 13:30:31 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA10973; Fri, 21 Feb 92 13:29:25 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA10862; Fri, 21 Feb 92 13:27:36 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA10795; Fri, 21 Feb 92 13:26:22 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA10701; Fri, 21 Feb 92 13:24:53 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA10620; Fri, 21 Feb 92 13:23:49 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA10531; Fri, 21 Feb 92 13:22:38 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA10157; Fri, 21 Feb 92 13:18:19 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA10065; Fri, 21 Feb 92 13:17:17 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA10035; Fri, 21 Feb 92 13:16:29 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA10019; Fri, 21 Feb 92 13:15:54 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA09993; Fri, 21 Feb 92 13:15:13 -0800
Resent-To: sam, karels, mckusick, torek, bsd-bugs@decvax.dec.com,
        mtxinu!buglist
Received: from ace.ee.lbl.gov by okeeffe.CS.Berkeley.EDU (5.79/1.42)
	id AA09983; Fri, 21 Feb 92 13:15:07 -0800
Received: by ace.ee.lbl.gov for bugs@okeeffe.cs.berkeley.edu (5.65/1.43)
	id AA12074; Fri, 21 Feb 92 13:15:54 -0800
Resent-Message-Id: <9202212115.AA12074@ace.ee.lbl.gov>
Message-Id: <9202212115.AA12074@ace.ee.lbl.gov>
To: bugs@okeeffe.CS.Berkeley.EDU (Bugs BSD Bunny)
Date: Sat, 23 Feb 91 19:29:45 PST
From: Craig Leres <leres@ee.lbl.gov>
Resent-To: bugs@okeeffe.CS.Berkeley.EDU (Bugs BSD Bunny)
Resent-Date: Fri, 21 Feb 92 13:15:52 PST
Resent-From: Craig Leres <leres@ee.lbl.gov>

Index: usr.lib/sendmail/src/util.c 4.3BSD-reno +FIX
Reference: 4.3BSD-reno/usr.lib/12

Reference: 4.3BSD-reno/usr.lib/11

Reference: 4.3BSD-reno/usr.lib/10

Reference: 4.3BSD-reno/usr.lib/9

Reference: 4.3BSD-reno/usr.lib/8

Reference: 4.3BSD-reno/usr.lib/7

Reference: 4.3BSD-reno/usr.lib/6

Reference: 4.3BSD-reno/usr.lib/5

Reference: 4.3BSD-reno/usr.lib/4

Reference: 4.3BSD-reno/usr.lib/3

Reference: 4.3BSD-reno/usr.lib/2

Reference: 4.3BSD-reno/usr.lib/1

Reference: 4.3BSD-reno/usr.lib/0


Description:
	Van discovered a place where sendmail writes in a string that
	can potentially be a literal. This leads to obvious problems
	when sendmail is compiled with gcc.

Repeat-By:
	We had a message stuck in the queue that would trigger this
	bug. Unfortunately, I didn't keep a copy...

Fix:
	Rewrite the code (we're been running it this way for 5 weeks).

RCS file: RCS/util.c,v
retrieving revision 1.4
diff -c -r1.4 util.c
*** /tmp/,RCSt1a26973	Sat Feb 23 19:27:45 1991
--- util.c	Sun Dec 16 21:15:01 1990
***************
*** 483,496 ****
  	MAILER *m;
  {
  	register char *p;
! 	char svchar;
  
  	/* strip out 0200 bits -- these can look like TELNET protocol */
  	if (bitnset(M_LIMITS, m->m_flags))
  	{
! 		p = l;
! 		while ((*p++ &= ~0200) != 0)
! 			continue;
  	}
  
  	do
--- 483,496 ----
  	MAILER *m;
  {
  	register char *p;
! 	register char svchar;
  
  	/* strip out 0200 bits -- these can look like TELNET protocol */
  	if (bitnset(M_LIMITS, m->m_flags))
  	{
! 		for (p = l; svchar = *p; ++p)
! 			if (svchar & 0200)
! 				*p = svchar &~ 0200;
  	}
  
  	do
***************
*** 517,532 ****
  		}
  
  		/* output last part */
- 		svchar = *p;
- 		*p = '\0';
  		if (l[0] == '.' && bitnset(M_XDOT, m->m_flags))
  			(void) putc('.', fp);
! 		fputs(l, fp);
  		fputs(m->m_eol, fp);
- 		*p = svchar;
- 		l = p;
  		if (*l == '\n')
! 			l++;
  	} while (l[0] != '\0');
  }
  /*
--- 517,529 ----
  		}
  
  		/* output last part */
  		if (l[0] == '.' && bitnset(M_XDOT, m->m_flags))
  			(void) putc('.', fp);
! 		for ( ; l < p; ++l)
! 			(void) putc(*l, fp);
  		fputs(m->m_eol, fp);
  		if (*l == '\n')
! 			++l;
  	} while (l[0] != '\0');
  }
  /*
