From sjoerd@cwi.nl  Mon Oct 16 07:23:27 1989
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.61/1.37)
	id AA07291; Mon, 16 Oct 89 07:23:27 -0700
Received: from mcsun.eu.net by ucbvax.Berkeley.EDU (5.61/1.38)
	id AA07902; Mon, 16 Oct 89 07:23:01 -0700
Received: by mcsun.EU.net with SMTP; Mon, 16 Oct 89 15:23:06 +0100 (MET)
Received: by piring.cwi.nl via EUnet; Mon, 16 Oct 89 15:22:52 +0100 (MET)
Date: Mon, 16 Oct 89 15:22:52 +0100
Message-Id: <8910161422.AA06498@piring.cwi.nl>
From: Sjoerd Mullender <sjoerd@cwi.nl>
Subject: quot does not report blocks in 1 Kbyte units
Index: etc 4.3BSD-tahoe
Apparently-To: <4bsd-bugs@BERKELEY.EDU>

Description:
	/etc/quot does not report the number of blocks a user owns
	in units of 1 Kbyte.  When given the (undocumented) flag -h
	quot does report in 1K units.
Repeat-By:
	Compare the output of
		/etc/quot <filesys>
	and
		/etc/quot -h <filesys>
Fix:
	Apply the following context diff.

===================================================================
RCS file: /usr/src/etc/RCS/quot.c,v
retrieving revision 1.1
diff -c -r1.1 /usr/src/etc/quot.c
*** /tmp/,RCSt1006393	Mon Oct 16 15:15:45 1989
--- /usr/src/etc/quot.c	Mon Oct 16 13:13:04 1989
***************
*** 13,18 ****
--- 13,20 ----
  #include <sys/fs.h>
  #include <sys/file.h>
  
+ #define	kbytes(size)	(((size) + 1023) / 1024)
+ 
  #define	ISIZ	(MAXBSIZE/sizeof(struct dinode))
  union {
	struct fs u_sblock;
***************
*** 191,197 ****
	 * The latter does not account for holes in files.
	 */
	if (!hflg)
! 		size = ip->di_blocks / 2;
	else {
		blks = lblkno(&sblock, ip->di_size);
		frags = blks * sblock.fs_frag +
--- 193,199 ----
	 * The latter does not account for holes in files.
	 */
	if (!hflg)
! 		size = kbytes(dbtob(ip->di_blocks));
	else {
		blks = lblkno(&sblock, ip->di_size);
		frags = blks * sblock.fs_frag +
