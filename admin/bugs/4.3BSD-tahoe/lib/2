From mcvax!cwi.nl!epg@seismo.CSS.GOV  Thu Jun 18 07:20:14 1987
Date: Thu, 18 Jun 87 16:10:57 +0200
From: mcvax!cwi.nl!epg@seismo.CSS.GOV (Ed Gronke)
Subject: /lib/ccom produces wrong code for float and double literals that are 0
Index: lib tahoe

Description:
	/lib/ccom will produce wrong (illegal) assembler code when 
	casting a floating literal value of 0. 
Repeat-By:
	Compile the following program. Notice that the assembler gives
	an error about value cannot be a immediate literal
	main()
	{
		long d;
		double t;

		d = (long)( 0.0 / 256 );
		d = (long)( 4.2 / 256);
	}
Fix:
	The problem is in /lib/pcc/pcc.tahoe/local.c
	The following diffs fix the problem by commenting out the
	following code:

	/*
	 * Clobber constants of value zero so
	 * we can generate more efficient code.
	 */
	if ((o == DCON && p->dpn.dval == 0) ||
	    (o == FCON && p->fpn.fval == 0)) {
		p->in.op = ICON;
		p->tn.rval = NONAME;
		return;
	}

------- local.c -------
422a423
> #ifdef notdef
432a434
> #endif notdef
