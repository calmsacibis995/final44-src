From arnold@mathcs.emory.edu  Fri Nov 10 08:28:26 1989
Return-Path: arnold@mathcs.emory.edu
Date: Fri, 10 Nov 89 11:28:30 EST
From: arnold@mathcs.emory.edu (Arnold D. Robbins {EUCC})
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Subject: bug in initstate in random.c
Index: lib/libc/whatever/random.c 4.3BSD-tahoe

Description:
	There is a bug pointed out by Scott Garfinkle in the random.c file.
	This was gotten from UUNET some months back, perhaps it has been fixed
	since then.

	In initstate, if there isn't enough room, it just returns, instead of
	explicitly returning a null pointer.
Repeat-By:
	Call initstate with not enough room.
Fix:
	Apply the following patch.

*** ../patch.0/missing.d/random.c	Thu Apr 13 08:01:19 1989
--- random.c	Fri Nov 10 10:28:46 1989
***************
*** 236,242 ****
  	if(  n  <  BREAK_1  )  {
  	    if(  n  <  BREAK_0  )  {
  		fprintf( stderr, "initstate: not enough state (%d bytes) with which to do jack; ignored.\n", n );
! 		return;
  	    }
  	    rand_type = TYPE_0;
  	    rand_deg = DEG_0;
--- 236,242 ----
  	if(  n  <  BREAK_1  )  {
  	    if(  n  <  BREAK_0  )  {
  		fprintf( stderr, "initstate: not enough state (%d bytes) with which to do jack; ignored.\n", n );
! 		return 0;
  	    }
  	    rand_type = TYPE_0;
  	    rand_deg = DEG_0;
