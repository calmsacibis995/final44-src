From dan%rna.uucp@uunet.uu.net Sun Apr  1 03:01:18 1990
Path: ucbvax!bloom-beacon!snorkelwacker!think!yale!cmcl2!rna!dan
From: dan@rna.UUCP (Dan Ts'o)
Newsgroups: comp.bugs.4bsd,comp.unix.ultrix,alt.sys.sun
Subject: Bug? in %g of printf()
Index: lib/libc/stdio/doprint.c 4.3BSD-tahoe

	It seems that when printf() using the %g format, prints a floating
point number between 100000.0 and 1000000.0, it omits any signal that the
value is a floating point value, and thus makes it look like a whole number:

Example:

main()
{
	printf("%g\n", 100000.0/3.0);
	printf("%g\n", 1000000.0/3.0);
	printf("%g\n", 10000000.0/3.0);
}

Output:
33333.3
333333
3.33333e+06

	Does anyone else think this is bad ? I think it should print 333333. .

	It seems to be a problem with most BSD-derived UNIXes, including
4.3BSD, Ultrix 1.2 to 3.0, and Sun OS 4.0. (MSC 5.0 doesn't have this problem).

	Anyone have a quick fix ?

				Cheers,
				Dan Ts'o		212-570-7671
				Dept. Neurobiology	dan@rna.rockefeller.edu
				Rockefeller Univ.	...cmcl2!rna!dan
				1230 York Ave.		rna!dan@nyu.edu
				NY, NY 10021		tso@rockefeller.arpa
							tso@rockvax.bitnet

=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

This is explicitly required by ANSI C.
