From auspex!auspex.com!guy@uunet.UU.NET  Tue Mar 21 18:18:31 1989
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.61/1.29)
	id AA22232; Tue, 21 Mar 89 18:18:31 -0800
Received: from uunet.UU.NET by ucbvax.Berkeley.EDU (5.61/1.36)
	id AA21479; Tue, 21 Mar 89 18:18:04 -0800
Received: from auspex.UUCP by uunet.UU.NET (5.61/1.14) with UUCP 
	id AA11542; Tue, 21 Mar 89 21:17:24 -0500
Received: by auspex.com (4.0/SMI-4.0)
	id AA14311; Tue, 21 Mar 89 18:16:28 PST
Date: Tue, 21 Mar 89 18:16:28 PST
From: guy@auspex.com (Guy Harris)
Message-Id: <8903220216.AA14311@auspex.com>
Subject: RMT(8) lies about the protocol used to talk to "rmt"
Index: man 4.3BSD-tahoe
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Description:
	The description in RMT(8) of the protocol used to talk to
	"/etc/rmt" is incorrect.  It claims that 1) spaces separate the
	command from the first argument to the command and 2) spaces
	separate the arguments from each other.  In fact, nothing
	separates the command from its first argument, and newlines
	separate the arguments from each other.
Repeat-By:
	Try to use "/etc/rmt" using the protocol described in RMT(8),
	and notice that you don't get very far.
Fix:
*** /home/unix_src/bsd4.3-tahoe/usr/src/man/man8/rmt.8	Tue Dec 20 09:19:58 1988
--- ./rmt.8	Tue Mar 21 18:00:45 1989
***************
*** 29,45 ****
  a status indication.  All responses are in ASCII and in
  one of two forms. 
  Successful commands have responses of
  .PP
- .ti +0.5i
- \fBA\fInumber\fR\en
- .PP
  where 
  .I number
  is an ASCII representation of a decimal number.
  Unsuccessful commands are responded to with
  .PP
! .ti +0.5i
! \fBE\fIerror-number\fR\en\fIerror-message\fR\en,
  .PP
  where
  .I error-number
--- 29,44 ----
  a status indication.  All responses are in ASCII and in
  one of two forms. 
  Successful commands have responses of
+ .IP
+ .BI A number \en
  .PP
  where 
  .I number
  is an ASCII representation of a decimal number.
  Unsuccessful commands are responded to with
  .PP
! .IP
! .BI E error-number \en error-message \en
  .PP
  where
  .I error-number
***************
*** 52,60 ****
  from a call to
  .IR perror (3).
  The protocol is comprised of the
! following commands (a space is present between each token).
  .TP 15
! .B O device mode
  Open the specified 
  .I device
  using the indicated
--- 51,62 ----
  from a call to
  .IR perror (3).
  The protocol is comprised of the
! following commands, which are sent as indicated - no spaces are supplied
! between the command and its arguments, or between its arguments, and
! .B \en
! indicates that a newline should be supplied:
  .TP 15
! .BI O device \en mode \en
  Open the specified 
  .I device
  using the indicated
***************
*** 68,79 ****
  If a device had already been opened, it is
  closed before a new open is performed.
  .TP 15
! .B C device
  Close the currently open device.  The
  .I device
  specified is ignored.
  .TP 15
! .B L whence offset
  Perform an
  .IR lseek (2)
  operation using the specified parameters.
--- 70,81 ----
  If a device had already been opened, it is
  closed before a new open is performed.
  .TP 15
! .BI C device \en
  Close the currently open device.  The
  .I device
  specified is ignored.
  .TP 15
! .BI L whence \en offset \en
  Perform an
  .IR lseek (2)
  operation using the specified parameters.
***************
*** 81,87 ****
  .I lseek
  call.
  .TP 15
! .B W count
  Write data onto the open device.
  .I Rmt
  reads
--- 83,89 ----
  .I lseek
  call.
  .TP 15
! .BI W count \en
  Write data onto the open device.
  .I Rmt
  reads
***************
*** 93,99 ****
  .IR write (2)
  call.
  .TP 15
! .B R count
  Read
  .I count
  bytes of data from the open device.
--- 95,101 ----
  .IR write (2)
  call.
  .TP 15
! .BI R count \en
  Read
  .I count
  bytes of data from the open device.
***************
*** 105,116 ****
  then performs the requested 
  .IR read (2)
  and responds with 
! \fBA\fIcount-read\fR\en if the read was
  successful; otherwise an error in the
  standard format is returned.  If the read
  was successful, the data read is then sent.
  .TP 15
! .B I operation count 
  Perform a MTIOCOP 
  .IR ioctl (2)
  command using the specified parameters.
--- 107,119 ----
  then performs the requested 
  .IR read (2)
  and responds with 
! .BI A count-read \en
! if the read was
  successful; otherwise an error in the
  standard format is returned.  If the read
  was successful, the data read is then sent.
  .TP 15
! .BI I operation \en count \en
  Perform a MTIOCOP 
  .IR ioctl (2)
  command using the specified parameters.
***************
*** 126,132 ****
  .I count
  parameter when the operation is successful.
  .TP 15
! .B S
  Return the status of the open device, as
  obtained with a MTIOCGET 
  .I ioctl
--- 129,135 ----
  .I count
  parameter when the operation is successful.
  .TP 15
! .B S\en
  Return the status of the open device, as
  obtained with a MTIOCGET 
  .I ioctl

