From jik@pit-manager.MIT.EDU  Thu Feb 15 17:07:46 1990
Date: Thu, 15 Feb 90 20:07:42 -0500
From: Jonathan I. Kamens <jik@pit-manager.MIT.EDU>
Sender: jik@pit-manager.MIT.EDU
To: bugs@ucbvax.Berkeley.EDU
Subject: 4.3Tahoe etc/shutdown.c
Index: sbin/shutdown 4.3BSD-tahoe

  Three bugs in shutdown.c in the 4.3Tahoe sources:

1. If the initial fork() fails, shutdown fails to notice this and
   prints "-1" as if it were the PID of the child process, and then
   exits.

2. The code for shutdown.c won't even compile with DEBUG defined.

3. Even if it were to compile, it would do the wrong thing, as you can
   probably convince yourself if you stare at the code for about two
   minutes (I won't bother to go into the details -- I'll let the
   patch speak for itself.).

 Jonathan Kamens
 Project Athena Quality Assurance

		      *************************

*** shutdown.c..orig	Thu Feb 15 20:00:48 1990
--- shutdown.c	Thu Feb 15 20:01:09 1990
***************
*** 172,181 ****
  	h = m/60; 
  	m %= 60;
  	ts = ctime(&sdt);
- 	printf("Shutdown at %5.5s (in ", ts+11);
- 	if (h > 0)
- 		printf("%d hour%s ", h, h != 1 ? "s" : "");
- 	printf("%d minute%s) ", m, m != 1 ? "s" : "");
  #ifndef DEBUG
  	(void) signal(SIGHUP, SIG_IGN);
  	(void) signal(SIGQUIT, SIG_IGN);
--- 172,177 ----
***************
*** 187,196 ****
  	(void) setpriority(PRIO_PROCESS, 0, PRIO_MIN);
  	(void) fflush(stdout);
  #ifndef DEBUG
! 	if (i = fork()) {
! 		printf("[pid %d]\n", i);
! 		exit(0);
  	}
  #else
  	(void) putc('\n', stdout);
  #endif
--- 183,202 ----
  	(void) setpriority(PRIO_PROCESS, 0, PRIO_MIN);
  	(void) fflush(stdout);
  #ifndef DEBUG
! 	if ((i = fork()) == -1) {
! 	     perror("shutdown");
! 	     exit(-1);
  	}
+ 	else if (i) {
+ #endif
+ 	     printf("Shutdown at %5.5s (in ", ts+11);
+ 	     if (h > 0)
+ 		  printf("%d hour%s ", h, h != 1 ? "s" : "");
+ 	     printf("%d minute%s) ", m, m != 1 ? "s" : "");
+ #ifndef DEBUG
+ 	     printf("[pid %d]\n", i);
+ 	     exit(0);
+ 	}
  #else
  	(void) putc('\n', stdout);
  #endif
***************
*** 268,284 ****
  				execle(HALT, "halt", "-l", nosync, 0, 0);
  			(void) kill(1, SIGTERM);	/* to single user */
  #else
! 			if (doreboot)
! 				printf("REBOOT");
! 			if (halt)
! 				printf(" HALT");
! 			if (fast)
! 				printf(" -l %s (without fsck's)\n", nosync);
  			else
! 				printf(" -l %s\n", nosync);
! 			else
! 				printf("kill -HUP 1\n");
! 
  #endif
  			finish();
  		}
--- 274,291 ----
  				execle(HALT, "halt", "-l", nosync, 0, 0);
  			(void) kill(1, SIGTERM);	/* to single user */
  #else
! 			if (doreboot || halt) {
! 			     if (doreboot)
! 				  printf("REBOOT");
! 			     else
! 				  printf("HALT");
! 			     if (fast)
! 				  printf(" -l %s (without fsck's)\n", nosync);
! 			     else
! 				  printf(" -l %s\n", nosync);
! 			}
  			else
! 			     printf("kill -TERM 1\n");
  #endif
  			finish();
  		}

