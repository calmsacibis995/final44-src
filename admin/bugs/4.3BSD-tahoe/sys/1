From jim%chuck@bellcore.com  Tue Apr 28 21:22:58 1987
Subject: a few little things
Date: Wed, 29 Apr 87 00:28:32 -0500
From: jim%chuck@bellcore.com
Index: sys tahoe

Here are a few small problems with the Tahoe beta distribution
after comparing it with the previous Vax distribution. I haven't
had the opportunity yet to actually try booting the Tahoe system.

1) The following sources seemed to be older versions than had 
   previously been distributed:

	ucb/lock.c
	ucb/window/tth19.c
	(ucb/window/tth29.c has the same sccsid but different code)
	sys/vaxif/if_ix.c
	sys/vaxstand/upmaptype.c
	sys/vaxstand/up.c

2) sys/vax/conf.c seems to have a typo, ucclose should be udclose

3) ucb/gprof/gcrt0.c doesn't get made properly depending on machine type.
   I changed the Makefile as follows:

	------- Makefile -------
	36c36,41
	<       cp /usr/src/libc/csu/gcrt0.h gcrt0.h
	---
	>       if [ -r gcrt0.h ] && cmp -s gcrt0.h /usr/src/lib/libc/${MACHINE}/csu/gmon.h; \
	>       then \
	>               :; \
	>       else \
	>               cp /usr/src/lib/libc/${MACHINE}/csu/gmon.h gcrt0.h; \
	>       fi

4) ucb/pascal/Makefile shouldn't use /tmp to force actions.
   I changed the Makefile as follows:

	------- Makefile -------
	16,19c16,19
	< all:  ${SUBDIR}
	< 
	< ${SUBDIR}: /tmp
	<       cd $@; make ${MFLAGS}
	---
	> all:
	>       for i in ${SUBDIR}; do \
	>               (cd $$i; make ${MFLAGS}); \
	>       done

5) ucb/pascal/px/Makefile depends on a symbolic link in order to
   use the correct sed script for machine type.
   I changed the Makefile as follows:

	------- Makefile -------
	20a21
	> MACHINE = unknown
	30c31
	< PXUTL =       interp.sed clean.sed version.c
	---
	> PXUTL =       ${MACHINE}.sed clean.sed version.c
	41c42
	< interp.o interp.s: interp.c interp.sed
	---
	> interp.o interp.s: interp.c ${MACHINE}.sed
	43c44
	<       sed -f interp.sed <interp.s >tmp
	---
	>       sed -f ${MACHINE}.sed <interp.s >tmp

   and added the short 'makefile':

	#
	#       %M%     %I%     %E%
	#
	DESTDIR= 
	MACHINE=`machine`
	
	all:    FRC
	        make -f Makefile ${MFLAGS} MACHINE=${MACHINE}
	
	FRC:
	
	install:
	        make -f Makefile ${MFLAGS} MACHINE=${MACHINE} install
	
	clean:
	        make -f Makefile ${MFLAGS} MACHINE=${MACHINE} clean

6) ucb/pascal/pdx/process/ptrace.c needs initialisation reference to
   INTFP ifdef'ed for tahoe.

7) ucb/pascal/utilities/pc2/Makefile still has dependancies on the Vax
   inline code.

8) ucb/lisp/lisp.tahoe/Readme.tahoe mentions a problem with the C optimiser
   c2 which hasn't been fixed. (Has anyone verified that the source in
   'lisp.tahoe' will work fine on other machines?).

I found 3 different ways being used to determine machine dependancies
for 'make', use of explicit settings, use of the command 'machine' and
use of symbolic links. It would be nice if it was all dynamic.

--jim
===================================================================
Subject: Re: a few little things 

	Index: sys tahoe
	Reference: tahoe/sys/1
	Here are a few small problems with the Tahoe beta distribution
	after comparing it with the previous Vax distribution. I haven't
	had the opportunity yet to actually try booting the Tahoe system.

	1) The following sources seemed to be older versions than had 
	   previously been distributed:

		ucb/lock.c

What appears different with lock.c; it appears to be identical
to the version distributed on 4.3?

		ucb/window/tth19.c
		(ucb/window/tth29.c has the same sccsid but different code)

Delta 3.17 was removed from tth19.c after the release; Delta 3.4 was
removed from tth29.c after the release, a new delta has subsequently
been added to tth29.c.
	
		sys/vaxif/if_ix.c

Although labelled as version 6.1, in reality if_ix.c is version 7.2,
a later version than the one on the 4.3 distribution, but still not
our most recent version.

		sys/vaxstand/upmaptype.c

Mike apparently chmod'ed version 6.3 and hacked away. What you have is
version 7.1 with `struct st' added. I assume that this was an intentional
temporary hack. Mike: in case it was not I have left it checked out by
you as delta 7.2; you should check it in or `unedit' it as appropriate.

		sys/vaxstand/up.c

Mike apparently chmod'ed version 6.5 and hacked away. What you have is
version 7.1 with `struct st' added. I assume that this was an intentional
temporary hack; Mike already has it checked out without `struct st', I
assume that he intends for it to go away.

	2) sys/vax/conf.c seems to have a typo, ucclose should be udclose

Fixed.

	3) ucb/gprof/gcrt0.c doesn't get made properly depending on machine type.
	   I changed the Makefile as follows:

	------- Makefile -------
	36c36,41
	<       cp /usr/src/libc/csu/gcrt0.h gcrt0.h
	---
	>       -if [ -r gcrt0.h ] && \
		    cmp -s gcrt0.h /usr/src/lib/libc/${MACHINE}/csu/gmon.h; \
	>       then \
	>               :; \
	>       else \
			rm -f gcrt0.h; \
	>               cp /usr/src/lib/libc/${MACHINE}/csu/gmon.h gcrt0.h; \
	>       fi

Fixed (with minor changes noted above).

	4) ucb/pascal/Makefile shouldn't use /tmp to force actions.
	   I changed the Makefile as follows:

		------- Makefile -------
		16,19c16,19
		< all:  ${SUBDIR}
		< 
		< ${SUBDIR}: /tmp
		<       cd $@; make ${MFLAGS}
		---
		> all:
		>       for i in ${SUBDIR}; do \
		>               (cd $$i; make ${MFLAGS}); \
		>       done

Fixed.

	5) ucb/pascal/px/Makefile depends on a symbolic link in order to
	   use the correct sed script for machine type.
	   I changed the Makefile as follows:

		------- Makefile -------
		20a21
		> MACHINE = unknown
		30c31
		< PXUTL =       interp.sed clean.sed version.c
		---
		> PXUTL =       ${MACHINE}.sed clean.sed version.c
		41c42
		< interp.o interp.s: interp.c interp.sed
		---
		> interp.o interp.s: interp.c ${MACHINE}.sed
		43c44
		<       sed -f interp.sed <interp.s >tmp
		---
		>       sed -f ${MACHINE}.sed <interp.s >tmp

	   and added the short 'makefile':

		#
		#       %M%     %I%     %E%
		#
		DESTDIR= 
		MACHINE=`machine`
		
		all:    FRC
			make -f Makefile ${MFLAGS} MACHINE=${MACHINE}
		
		FRC:
		
		install:
			make -f Makefile ${MFLAGS} MACHINE=${MACHINE} install
		
		clean:
			make -f Makefile ${MFLAGS} MACHINE=${MACHINE} clean

Fixed.

	6) ucb/pascal/pdx/process/ptrace.c needs initialisation reference to
	   INTFP ifdef'ed for tahoe.

Do you mean only that the line:
	INTFP = (ADDRESS)0;
needs to be ifdef'ed tahoe?

	7) ucb/pascal/utilities/pc2/Makefile still has dependancies on the Vax
	   inline code.

I changed the depend script to use ${MACHINE} instead of a hardwired
value. This of course only works if all machines include the same set of
header files, but at least it is a step in the right direction (users
can `make depend' to rebuild for their specific machine if necessary).

	8) ucb/lisp/lisp.tahoe/Readme.tahoe mentions a problem with the C
	   optimiser c2 which hasn't been fixed. (Has anyone verified that
	   the source in 'lisp.tahoe' will work fine on other machines?).

We dropped in the version we got from Purdue untested. I just tried compiling
it and it does not seem to compile. I have not tracked down why. See also other
mail on this subject.

	I found 3 different ways being used to determine machine dependancies
	for 'make', use of explicit settings, use of the command 'machine' and
	use of symbolic links. It would be nice if it was all dynamic.

	--jim

I would like to eliminate the use of hardwiring and symbolic links. If
you know of any of these that are left, let me know. I am not that happy
with our current makefile/Makefile approach (which fails if you try e.g.
`make mumble.o' for anything other than all, clean, or install). I have
been reticent to change `make' (or make your change to preprocess the
make command), as we will end up with non-portable Makefile's. Having
experimented with the alternative however, I am coming to the conclusion
that having `make' predefine MACHINE may be the most reasonable approach.

	~Kirk

