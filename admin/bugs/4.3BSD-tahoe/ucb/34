From forys@cs.utah.edu  Thu Jan 26 01:13:28 1989
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.61/1.29)
	id AA16279; Thu, 26 Jan 89 01:13:28 -0800
Received: from cs.utah.edu by ucbvax.Berkeley.EDU (5.61/1.33)
	id AA06667; Thu, 26 Jan 89 01:10:16-0800
Received: by cs.utah.edu (5.59/utah-2.1-cs)
	id AA01884; Thu, 26 Jan 89 02:12:17 MST
Date: Thu, 26 Jan 89 02:12:17 MST
From: forys@cs.utah.edu (Jeff Forys)
Message-Id: <8901260912.AA01884@cs.utah.edu>
Subject: code to prevent ctrl chars from being displayed is wrong
Index: 	ucb/finger.c 4.3BSD-tahoe
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Description:
	I assume that the code (duplicated in three places):

		if (isprint(c) || isspace(c))
			putchar(c);
		else
			putchar(c ^ 100);

	is supposed to prevent META & control chars from "surprising"
	a user.  However, XOR'ing a non-printable with *decimal* `100'
	(i.e. 0144 octal) does little good.  Some META chars will be
	displayed as control chars, and control chars are displayed as
	random printables.  This is obviously a bug, I assume the person
	who did this meant 0100, but this isnt the best fix since control
	chars (including ESC) still make it thru.

Repeat-By:
	Load up some Control & META chars in a ".plan" and run the
	finger program.

Fix:

Display the occasional control character as `cat -v' would...

*** /b/ro/tahoe/usr/src/ucb/finger.c	Sun Apr 26 14:13:02 1987
--- finger.c	Thu Jan 26 01:43:26 1989
***************
*** 406,412 ****
  						if (isprint(c) || isspace(c))
  							putchar(c);
  						else
! 							putchar(c ^ 100);
  					}
  					fclose(fp);
  					putchar('\n');
--- 406,412 ----
  						if (isprint(c) || isspace(c))
  							putchar(c);
  						else
! 							putctrl(c);
  					}
  					fclose(fp);
  					putchar('\n');
***************
*** 426,432 ****
  						if (isprint(c) || isspace(c))
  							putchar(c);
  						else
! 							putchar(c ^ 100);
  					fclose(fp);
  				}
  				free(s);
--- 426,432 ----
  						if (isprint(c) || isspace(c))
  							putchar(c);
  						else
! 							putctrl(c);
  					fclose(fp);
  				}
  				free(s);
***************
*** 1069,1078 ****
  		if (isprint(c) || isspace(c))
  			putchar(c);
  		else
! 			putchar(c ^ 100);
  	}
  	if (lastc != '\n')
  		putchar('\n');
  	(void)fclose(f);
  	return (1);
  }
--- 1069,1093 ----
  		if (isprint(c) || isspace(c))
  			putchar(c);
  		else
! 			putctrl(c);
  	}
  	if (lastc != '\n')
  		putchar('\n');
  	(void)fclose(f);
  	return (1);
+ }
+ 
+ putctrl(c)	/* display a control character */
+ char c;
+ {
+ 	if (c & 0200) {
+ 		putchar('M');
+ 		putchar('-');
+ 		c &= 0177;
+ 	}
+ 	if (c < ' ' || c == 0177) {
+ 		putchar('^');
+ 		c = (c == 0177)? '?': c + '@';
+ 	}
+ 	putchar(c);
  }
