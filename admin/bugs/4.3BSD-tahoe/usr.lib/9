From gnu@toad.com Mon May  8 00:26:03 1989
To: bostic@okeeffe.Berkeley.EDU
Subject: lpr.c "mktemp" routine gets confused with libc "mktemp" routine
Date: Sun, 07 May 89 22:48:09 -0700
Index: usr.lib/lpr 4.3BSD-tahoe

Verified to be in 4.3BSD-tahoe.

There's a second message about an "lpr -s" interaction with NFS ("negative"
device number) too; if dev_t is unsigned in BSD, perhaps you don't have
this problem.

By the way, is the networking release ftp-able these days?  It looks
like some new stuff has been folded into uunet:bsd-sources/ but there seems
to be no way to get it all without asking for every file -- each command
is in a separate tar.Z file.

	John

------- Forwarded Message

SUN-SPOTS DIGEST           Tuesday, 2 May 1989        Volume 7 : Issue 272

Date:    Tue, 25 Apr 89 9:14:02 BST
From:    "Graham D. Parrington" <Graham.Parrington%newcastle.ac.uk@nsfnet-relay.ac.uk>
Subject: Re: /usr/ucb/lpr Out of Memory

Aha! Someone else has come across this problem - we found it a couple of
weeks ago - however, you need source to fix it (maybe you can be clever
with the binary but we did not try it). The problem is lpr itself - it
includes a routine called mktemp (that is the same name as a library
routine) but which takes a different number of parameters to the library
routine. Unfortunately lpr calls 'getwd' which tries to call the library
version of 'mktemp' - guess which version it really gets....  The net
result of this is that the lpr version of 'mktemp' only gets supplied with
one parameter when it wants three -it picks up trash of the stack for the
rest and depending upon what these are lpr fails with an out of memory
error.  The solution is to rename the internal version so that it's name
doesn't class with a library name (we used lprmktemp). Another solution
that could work if you've the disk space for it is to up the swap space -
we found that in general the presumably arbitrary values on the stack
caused a malloc request for about 24Mb.  We've reported our findings to
Sun UK so expect a genuine fix at some point in the future.

Graham Parrington, Computing Laboratory, University of Newcastle upon Tyne, UK

JANET = Graham.Parrington@uk.ac.newcastle
ARPA  = Graham.Parrington@newcastle.ac.uk
UUCP  = ...!ukc!newcastle.ac.uk!Graham.Parrington
PHONE = +44 91 222 8067

------

Date:    Tue, 25 Apr 89 07:48:12 MDT
From:    sutton%olin@lanl.gov (John Sutton)
Subject: Re: usr/ucb/lpr Out of memory problems with Interleaf

We had the same problem running Interleaf 3.0.18 under SunOS 4.0. However,
I thought that the two problems that described were one in the same.  We
discovered it had to to with the fact that Interleaf used lpr -s to print
and there is a bug in the SunOS 4.0 version of lpr.  Ruth Aydt wrote about
the cause of this problem in SunSpots v6n195, copy included.

aydt%guitar.cs.uiuc.edu@a.cs.uiuc.edu (Ruth Aydt):
 > Subject: lpr -s /tmp/file fails on 4.0 clients (with fix)
 > 
 > There is a problem with lpr/lpd on 4.0 clients when you try to print a
 > file with the -s option (use symlink to file rather than copying it into
 > the spool area).
 > 
 > lpr writes the device number as returned from stat to the control file
 > with the S tag using printf %d format.  However, this is a short and with
 > the nfs-mounted filesystems it gets written as -32256 or some such number.
 > When lpd then checks the S line in the cf file to make sure the device and
 > inode numbers match those of the "current" file before printing the match
 > fails and the job is rejected. 
 
 > The solution is to change lpr to use only relevant bits when building the
 > cf file:
 >       (void) sprintf(buf, "%d %d", statb.st_dev&0xffff, statb.st_ino);
 > 
 > For us this first turned up when some text-processing scripts submitted
 > jobs that were rejected by lpd.  The lpr -s was "hidden" within the
 > scripts.
 > 
 >       Ruth Aydt
 >       Department of Computer Science
 >       University of Illinois at Urbana-Champaign

Since I don't have the sources I got fixes from SUN for Sun 2s, 3s, and
4s.  The bug report id is 1011856. They seemed to have fixed the printing
problem and I have not seen the out of memory problem since.

	John Sutton
	Los Alamos Nat'l Lab
	(sutton@olin.lanl.gov)

------- End of Forwarded Message


