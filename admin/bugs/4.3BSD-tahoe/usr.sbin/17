From leres@ee.lbl.gov  Fri Feb 21 13:16:56 1992
To: bugs@okeeffe.CS.Berkeley.EDU (Bugs BSD Bunny)
Subject: named dumps core on certain requests
Index: usr.sbin/named/ns_resp.c 4.3BSD-tahoe +FIX
Date: Wed, 02 Oct 91 19:34:26 PDT
From: Craig Leres <leres@ee.lbl.gov>
Resent-To: bugs@okeeffe.CS.Berkeley.EDU (Bugs BSD Bunny)
Resent-Date: Fri, 21 Feb 92 13:17:40 PST
Resent-From: Craig Leres <leres@ee.lbl.gov>


Description:
	One of my primary nameservers started chewing it on a regular
	basis.

Repeat-By:
	I don't know how to reproduce this bug and don't understand the
	code all that well but, it's obvious to me that ns_resp()
	sometimes sets "cname" when qp->q_cmsg is null (and
	qp->q_cmsglen is zero). I suspect things go wrong when cname
	gets set and then some "server failure" occurs. The last core
	dump I examined appeared to be a mx lookup.

Fix:
	Don't reference qp->q_cmsg unless it points to something, eh?

RCS file: RCS/ns_resp.c,v
retrieving revision 1.13
diff -c -r1.13 ns_resp.c
*** /tmp/,RCSt1a07804	Wed Oct  2 19:29:30 1991
--- ns_resp.c	Wed Oct  2 13:18:17 1991
***************
*** 728,740 ****
  #ifdef STATS
  	stats[S_RESPFAIL].cnt++;
  #endif
! 	hp = (HEADER *)(cname ? qp->q_cmsg : qp->q_msg);
  	hp->rcode = SERVFAIL;
  	hp->id = qp->q_id;
  	hp->rd = 1;
  	hp->ra = 1;
  	hp->qr = 1;
! 	(void) send_msg((char *)hp, (cname ? qp->q_cmsglen : qp->q_msglen), qp);
  	qremove(qp);
  	return;
  }
--- 728,741 ----
  #ifdef STATS
  	stats[S_RESPFAIL].cnt++;
  #endif
! 	hp = (HEADER *)(cname && qp->q_cmsg ? qp->q_cmsg : qp->q_msg);
  	hp->rcode = SERVFAIL;
  	hp->id = qp->q_id;
  	hp->rd = 1;
  	hp->ra = 1;
  	hp->qr = 1;
! 	(void) send_msg((char *)hp,
! 	    (cname && qp->q_cmsg ? qp->q_cmsglen : qp->q_msglen), qp);
  	qremove(qp);
  	return;
  }
