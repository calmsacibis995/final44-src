From chris@gyre.umd.edu  Sat Apr  9 17:52:10 1988
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.59/1.27)
	id AA10737; Sat, 9 Apr 88 17:52:10 PDT
Received: from gyre.umd.edu by ucbvax.Berkeley.EDU (5.59/1.28)
	id AA24161; Sat, 9 Apr 88 15:41:57 PDT
Received: by gyre.umd.edu (5.58/4.7)
	id AA03465; Sat, 9 Apr 88 18:42:42 EDT
Date: Sat, 9 Apr 88 18:42:42 EDT
From: Chris Torek <chris@gyre.umd.edu>
Message-Id: <8804092242.AA03465@gyre.umd.edu>
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Subject: ls is not type-correct

Index: bin/ls.c 4.3BSD Fix

Description:
	ls assumes that qsort() uses `pointers', as though there
	were only one kind of pointer.  This works on *most* machines...

Repeat-by:
	examination, or port to a Data General, or compile with
	a prototype-handling compiler

Fix:
	Below.  (untested, but trivial, so `of course it will work')

Chris

*** ls.c	Thu Oct 15 10:07:08 1987
--- /tmp/ls.c	Sat Apr  9 18:42:13 1988
***************
*** 162,166 ****
  	}
  	fplast = fp;
! 	qsort(fp0, fplast - fp0, sizeof (struct afile), fcmp);
  	if (dflg) {
  		formatf(fp0, fplast);
--- 162,166 ----
  	}
  	fplast = fp;
! 	qsort((char *)fp0, fplast - fp0, sizeof (*fp0), fcmp);
  	if (dflg) {
  		formatf(fp0, fplast);
***************
*** 209,213 ****
  		return;
  	if (fflg == 0)
! 		qsort(dfp0, dfplast - dfp0, sizeof (struct afile), fcmp);
  	if (title)
  		printf("%s:\n", name);
--- 209,213 ----
  		return;
  	if (fflg == 0)
! 		qsort((char *)dfp0, dfplast - dfp0, sizeof (*dfp0), fcmp);
  	if (title)
  		printf("%s:\n", name);
***************
*** 405,411 ****
  }
  
! fcmp(f1, f2)
! 	register struct afile *f1, *f2;
  {
  
  	if (dflg == 0 && fflg == 0) {
--- 405,414 ----
  }
  
! int
! fcmp(a1, a2)
! 	char *a1, *a2;
  {
+ 	register struct afile *f1 = (struct afile *)a1;
+ 	register struct afile *f2 = (struct afile *)a2;
  
  	if (dflg == 0 && fflg == 0) {
