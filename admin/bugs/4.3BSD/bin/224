From mbr@callebaut.LCS.MIT.EDU  Wed Jan 11 06:00:07 1989
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.61/1.29)
	id AA06882; Wed, 11 Jan 89 06:00:07-0800
Received: from CALLEBAUT.LCS.MIT.EDU by ucbvax.Berkeley.EDU (5.61/1.33)
	id AA13113; Wed, 11 Jan 89 05:58:02-0800
Received: from CALLEBAUT.LCS.MIT.EDU by callebaut.LCS.MIT.EDU via TCP with SMTP
	id AA00927; Wed, 11 Jan 89 08:59:06 EST
Message-Id: <8901111359.AA00927@callebaut.LCS.MIT.EDU>
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Cc: allspice-mtg@ALLSPICE.LCS.MIT.EDU
Subject: /bin/mt doesn't know about tmscp tape drives
Index: bin/mt.c 4.3BSD
Date: Wed, 11 Jan 89 08:59:03 -0500
From: Mark Reinhold <mbr@callebaut.LCS.MIT.EDU>

Description:
	The "status" command of /bin/mt prints "unknown tape drive type (8)"
	when asked about a tmscp tape drive.

Repeat-By:
	Find a vax with a tmscp tape drive.  Type "mt status".

Fix:
	The procedure that handles the status command uses a table that
	describes the various drive types and how to interpret their status
	bits; no such line is present for tmscp drives.  The following patch
	fixes the problem.  It also fixes a small bug in the printreg procedure
	that causes garbage to be printed out when the bits argument is 0.

*** mt.c.DIST	Mon Sep 15 16:26:36 1986
--- mt.c	Wed Jan 11 08:47:29 1989
***************
*** 109,114 ****
--- 109,119 ----
  #include <vaxuba/tmreg.h>
  #undef b_repcnt		/* argh */
  #include <vaxuba/tsreg.h>
+ #define NRSP 1		/* argh argh */
+ #define NCMD 1
+ #include <vaxuba/tmscpreg.h>
+ #undef NRSP
+ #undef NCMD
  #endif
  
  #ifdef sun
***************
*** 128,133 ****
--- 133,139 ----
  	{ MT_ISTM,	"tm11",		0,		TMER_BITS },
  	{ MT_ISMT,	"tu78",		MTDS_BITS,	0 },
  	{ MT_ISUT,	"tu45",		UTDS_BITS,	UTER_BITS },
+ 	{ MT_ISTMSCP,	"tmscp",	0,		0 },
  #endif
  #ifdef sun
  	{ MT_ISCPC,	"TapeMaster",	TMS_BITS,	0 },
***************
*** 172,179 ****
  		printf("%s=%o", s, v);
  	else
  		printf("%s=%x", s, v);
! 	bits++;
! 	if (v && bits) {
  		putchar('<');
  		while (i = *bits++) {
  			if (v & (1 << (i-1))) {
--- 178,184 ----
  		printf("%s=%o", s, v);
  	else
  		printf("%s=%x", s, v);
! 	if (v && bits++) {
  		putchar('<');
  		while (i = *bits++) {
  			if (v & (1 << (i-1))) {
