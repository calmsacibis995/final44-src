From dvk@SEI.CMU.EDU Tue Jun 27 13:23:19 1989
To: bostic@ucbvax.Berkeley.EDU
Subject: CSH Bug
Date: Tue, 27 Jun 89 16:07:08 EDT
From: Daniel Klein - 412/268-7791 <dvk@SEI.CMU.EDU>
Index: bin/csh 4.3BSD

	Also, we talked about a csh bug, wherein the >> redirection does
not redirect to append to the end of the file, but only seeks to the end
of the file when it is opened.  I feel that the following commands:

		something >> file & somethingelse >> file

should append each output line to the file.  What happens now is that
whichever program writes last overwrites the first programs output.  I
encountered this problem when I tried to run 5 parallel "find"s and have them
all stick their output into a single file.  I think the fix is in sh.sem.c, in
the routine doio (a piece is below):

	    if ((flags & FCAT) && open(cp, 1) >= 0)
		    lseek(1, 0l, 2);
	    else {
		    if (!(flags & FANY) && adrof("noclobber")) {
			    if (flags & FCAT)
				    Perror(cp);
			    chkclob(cp);
		    }
		    if (creat(cp, 0666) < 0)
			    Perror(cp);
	    }

I believe that the lseek should be replaced with fcntl(1, F_SETFL, FAPPEND).
However, I also think that the fcntl needs to be put after the last line
shown here (if FCAT is set), in case the >> redirection creates the file.

	Okay, I did my part - I found it, now you fix it :-)

						-Dan

