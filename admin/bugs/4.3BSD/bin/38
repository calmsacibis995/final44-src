From clyde@ngp.utexas.edu  Tue Dec  2 12:05:51 1986
Date: Tue, 2 Dec 86 14:04:57 CST
From: clyde@ngp.utexas.edu (Head UNIX Hacquer)
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Subject: Bug in adb, 4.3BSD

I guess this is as much a preference as a 'bug', but I consider it a
bug because it makes adb less useful than it should be.

Subject: Output of hex print mode is signed
Index:	bin/adb/output.c 4.3BSD

Description:
	When printing using the 'X' format, words with the high bit set are
	printed in the form of '-nnn'.  This is pretty useless for seeing
	which bits are really on, and signed hex output doesn't make much
	sense.
Repeat-By:
	adb your favorite a.out file and step through it with '/X'.
Fix:

*** output.r1.1.c	Tue Dec  2 13:52:15 1986
--- output.c	Tue Dec  2 13:47:29 1986
***************
*** 317,328 ****
  printdbl(lxy,fmat,base)
  L_INT lxy; char fmat; int base;
  #endif
  {	int digs[20]; int *dptr; char k;
  #ifndef MULD2
! 	register char *cp1;
! 	cp1=digs; if ((lxy&0xFFFF0000L)==0xFFFF0000L) {*cp1++='-'; lxy= -lxy;}
  	sprintf(cp1,base==16 ? "%x" : "%D",lxy);
  	cp1=digs; while (*digitptr++= *cp1++); --digitptr;
  #else
  	L_REAL f ,g; long q;
  #ifdef vax
--- 318,335 ----
  printdbl(lxy,fmat,base)
  L_INT lxy; char fmat; int base;
  #endif
  {	int digs[20]; int *dptr; char k;
  #ifndef MULD2
! 	register char *cp1 = digs;
! 
! 	IF base == 10
! 	THEN
! 		IF (lxy&0xFFFF0000L)==0xFFFF0000L
! 		THEN *cp1++='-'; lxy= -lxy;
! 		FI
! 	FI
  	sprintf(cp1,base==16 ? "%x" : "%D",lxy);
  	cp1=digs; while (*digitptr++= *cp1++); --digitptr;
  #else
  	L_REAL f ,g; long q;
  #ifdef vax

Comment:
	This code (adb in general) is REALLY UGLY!!!
