From chris@gyre.umd.edu  Thu Feb 25 16:45:58 1988
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.58/1.26)
	id AA09075; Thu, 25 Feb 88 16:45:58 PST
Received: from gyre.umd.edu by ucbvax.Berkeley.EDU (5.58/1.26)
	id AA08100; Thu, 25 Feb 88 16:29:44 PST
Received: by gyre.umd.edu (5.58/4.7)
	id AA17157; Thu, 25 Feb 88 19:28:51 EST
Date: Thu, 25 Feb 88 19:28:51 EST
From: Chris Torek <chris@gyre.umd.edu>
Message-Id: <8802260028.AA17157@gyre.umd.edu>
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Subject: inetd can ungetc(EOF)

Index: etc/inetd.c 4.3BSD Fix

Description:
	When looking for continuation lines, inetd does an
	ungetc(EOF, fconfig).  This is technically illegal (see
	dpANS), although the 4BSD implementation ignores it.

Repeat-by:
	examination

Fix:
	As a free bonus, this prints the name of a service if
	an accept fails.

Chris

RCS file: RCS/inetd.c,v
retrieving revision 1.3
retrieving revision 1.4
diff -c2 -r1.3 -r1.4
*** /tmp/,RCSt1017073	Thu Feb 25 19:22:46 1988
--- /tmp/,RCSt2017073	Thu Feb 25 19:22:48 1988
***************
*** 234,238 ****
  				if (errno == EINTR)
  					continue;
! 				syslog(LOG_WARNING, "accept: %m");
  				continue;
  			}
--- 234,239 ----
  				if (errno == EINTR)
  					continue;
! 				syslog(LOG_WARNING, "accept (for %s): %m",
! 					sep->se_service);
  				continue;
  			}
***************
*** 623,630 ****
  		cp++;
  	if (*cp == '\0') {
! 		char c;
  
  		c = getc(fconfig);
! 		ungetc(c, fconfig);
  		if (c == ' ' || c == '\t')
  			if (cp = nextline(fconfig))
--- 624,632 ----
  		cp++;
  	if (*cp == '\0') {
! 		int c;
  
  		c = getc(fconfig);
! 		if (c != EOF)
! 			ungetc(c, fconfig);
  		if (c == ' ' || c == '\t')
  			if (cp = nextline(fconfig))
