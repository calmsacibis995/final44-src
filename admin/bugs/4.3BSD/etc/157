From sms@WLV.IMSD.CONTEL.COM  Thu Jun 15 16:19:14 1989
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.61/1.29)
	id AA02685; Thu, 15 Jun 89 16:19:14 -0700
Received: from WLV.IMSD.CONTEL.COM by ucbvax.Berkeley.EDU (5.61/1.36)
	id AA08875; Thu, 15 Jun 89 16:18:05 -0700
Received: by WLV.IMSD.CONTEL.COM (5.61/1.25)
	id AA07079; Thu, 15 Jun 89 16:17:57 -0700
Date: Thu, 15 Jun 89 16:17:57 -0700
From: sms@WLV.IMSD.CONTEL.COM (Steven M. Schultz(Y))
Message-Id: <8906152317.AA07079@WLV.IMSD.CONTEL.COM>
Subject: sa gets floating point exception
Index: 	etc/sa.c 4.3BSD
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Description:
	If the 'sa' program is recompiled after installing the
	shadow password package it will experience a floating
	point exception and drop core.

Repeat-By:
	Install the shadow password package.  Recompile 'sa'.  Run it.

Fix:
	Apply the following patch.  The problem is that the routine
	'bcmp' duplicates the libc.a version which getpwent() calls.

*** sa.c.old	Wed Jun 14 23:34:46 1989
--- sa.c	Wed Jun 14 23:35:30 1989
***************
*** 280,286 ****
  int	pgdiv;
  #define	pgtok(x)	((x) / pgdiv)
  
! extern	tcmp(), ncmp(), bcmp(), dcmp(), Dcmp(), kcmp(), Kcmp();
  extern	double sum();
  
  main(argc, argv)
--- 280,286 ----
  int	pgdiv;
  #define	pgtok(x)	((x) / pgdiv)
  
! extern	tcmp(), ncmp(), Bcmp(), dcmp(), Dcmp(), kcmp(), Kcmp();
  extern	double sum();
  
  main(argc, argv)
***************
*** 317,323 ****
  
  		case 'b':
  			bflg++;
! 			cmp = bcmp;
  			break;
  
  		case 'l':
--- 317,323 ----
  
  		case 'b':
  			bflg++;
! 			cmp = Bcmp;
  			break;
  
  		case 'l':
***************
*** 741,747 ****
  	return(p2->p.count - p1->p.count);
  }
  
! bcmp(p1, p2)
  	cell *p1, *p2;
  {
  	double f1, f2;
--- 741,747 ----
  	return(p2->p.count - p1->p.count);
  }
  
! Bcmp(p1, p2)
  	cell *p1, *p2;
  {
  	double f1, f2;
