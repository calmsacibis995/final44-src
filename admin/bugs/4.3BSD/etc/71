From elsie!ado@seismo.CSS.GOV Thu Jun 18 22:30:09 1987
Date: Thu, 18 Jun 87 17:49:30 EDT
From: elsie!ado@seismo.CSS.GOV (Arthur David Olson)
Subject: bug in zic.c
Index: etc/tzone/zic.c 4.3BSD

> Someone found a bug in zic.c, the first argument to rulesub() is a
> structure and it's not getting zero'ed out between calls. . .
> take the rule in northamerica describing 1946.
> It quits in rulesub() because:
> 
> 	if (rp->r_hiyear < min_year)
> 		return;
> 
> Then, since rp->r_wday has never been set, we go to rpytime() and the
> loop:
> 		while (wday != eitol(rp->r_wday))
> 			if (rp->r_dycode == DC_DOWGEQ) {
> 				dayoff = oadd(dayoff, (long) 1);
> 				if (++wday >= LDAYS_PER_WEEK)
> 
> becomes undefined.

Oops. . .indeed a bug.  Here's a minimal change that should avoid the problem;
there should probably be a cleaner fix made in the future.  I'm sending a copy
of this note to guy@sun and kre@munnari; I trust they'll ferret out any flaws
in the fix before it's posted.  (N.B.:  there's also a usage message fix shown
below; it doesn't apply to the mod.sources version of the time zone compiler,
but should be made by folks who've incorporated the "-s" option.)

				--ado

*** 3.2/zic.c	Thu Jun 18 17:42:19 1987
--- 3.3/zic.c	Thu Jun 18 17:42:33 1987
***************
*** 355,361 ****
  usage()
  {
  	(void) fprintf(stderr,
! "%s: usage is %s [ -v ] [ -l localtime ] [ -d directory ] [ filename ... ]\n",
  		progname, progname);
  	exit(1);
  }
--- 355,361 ----
  usage()
  {
  	(void) fprintf(stderr,
! "%s: usage is %s [ -s ] [ -v ] [ -l localtime ] [ -d directory ] [ filename ... ]\n",
  		progname, progname);
  	exit(1);
  }
***************
*** 695,701 ****
  inrule(fields, nfields)
  register char **	fields;
  {
! 	struct rule	r;
  
  	if (nfields != RULE_FIELDS) {
  		error("wrong number of fields on Rule line");
--- 695,701 ----
  inrule(fields, nfields)
  register char **	fields;
  {
! 	static struct rule	r;
  
  	if (nfields != RULE_FIELDS) {
  		error("wrong number of fields on Rule line");
***************
*** 765,771 ****
  register char **	fields;
  {
  	register char *	cp;
! 	struct zone	z;
  	register int	i_gmtoff, i_rule, i_format;
  	register int	i_untilyear, i_untilmonth;
  	register int	i_untilday, i_untiltime;
--- 765,771 ----
  register char **	fields;
  {
  	register char *	cp;
! 	static struct zone	z;
  	register int	i_gmtoff, i_rule, i_format;
  	register int	i_untilyear, i_untilmonth;
  	register int	i_untilday, i_untiltime;

