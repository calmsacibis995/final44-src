From chris@mimsy.umd.edu  Thu Sep 10 21:34:56 1987
Date: Thu, 10 Sep 87 23:32:13 EST
From: Chris Torek <chris@mimsy.umd.edu>
Subject: (idea) fingerd could log remote fingers
Index:  etc/fingerd.c 4.3BSD Fix

Description:
	(Not a bug.)

	It would be nice if fingerd could log remote fingers.  It
	once turned up someone trying to break into one of our
	machines.

Repeat-By:
	Ha!

Fix:
	Also fixes an fprintf() lint error I missed last time.  (I
	had forgotten to install the revised C library lint library.)

RCS file: RCS/fingerd.c,v
retrieving revision 1.3
retrieving revision 1.4
diff -c2 -r1.3 -r1.4
*** /tmp/,RCSt1016849	Fri Sep 11 00:19:25 1987
--- /tmp/,RCSt2016849	Fri Sep 11 00:19:26 1987
***************
*** 19,22 ****
--- 19,23 ----
   */
  #include <sys/types.h>
+ #include <sys/file.h>
  #include <sys/socket.h>
  #include <sys/wait.h>
***************
*** 25,28 ****
--- 26,30 ----
  #include <stdio.h>
  #include <ctype.h>
+ #include <netdb.h>
  
  /*ARGSUSED*/
***************
*** 46,49 ****
--- 48,52 ----
  	if ((sp = index(line, '\r')) != NULL)
  		*sp = 0;
+ 	log(&sin, line);
  	av[0] = "finger";
  	i = 1;
***************
*** 110,113 ****
--- 113,143 ----
  }
  
+ /* log a finger request, if the log file exists */
+ log(s, args)
+ 	struct sockaddr_in *s;
+ 	char *args;
+ {
+ 	struct hostent *hp;
+ 	char *name;
+ 	int fd;
+ 	FILE *fp;
+ 	time_t t, time();
+ 	char *inet_ntoa(), *ctime();
+ 
+ 	if ((fd = open("/usr/adm/fingerd.log", O_WRONLY|O_APPEND)) < 0)
+ 		return;
+ 	if ((fp = fdopen(fd, "w")) == NULL) {
+ 		(void) close(fd);
+ 		return;
+ 	}
+ 	/* get host name, if available */
+ 	hp = gethostbyaddr((char *)&s->sin_addr, sizeof(s->sin_addr),
+ 		s->sin_family);
+ 	name = hp == NULL ? inet_ntoa(s->sin_addr) : hp->h_name;
+ 	(void) time(&t);
+ 	(void) fprintf(fp, "%s fingers \"%s\" @ %s", name, args, ctime(&t));
+ 	(void) fclose(fp);
+ }
+ 
  fatal(prog, s)
  	char *prog, *s;
***************
*** 114,118 ****
  {
  
! 	fprintf(stderr, "%s: ", prog);
  	perror(s);
  	exit(1);
--- 144,148 ----
  {
  
! 	(void) fprintf(stderr, "%s: ", prog);
  	perror(s);
  	exit(1);
