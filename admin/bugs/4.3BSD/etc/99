From guy@sun.com Mon Nov  9 12:46:01 1987
Date: Mon, 9 Nov 87 12:40:49 PST
From: guy@sun.com (Guy Harris)
Subject: Re: ARP(8C) question
Index: etc/arp.c 4.3BSD

Here are some fixes to "/usr/etc/arp.c":

	1) Check for errors in some operations, and exit with an exit status
	   of 1 if errors occur;

	2) Support the full syntax described in the manual page for entries in
	   the file used by "arp -f" (a "%s" was missing from the "scanf" so
	   one fewer argument that was documented could be given);

	3) Describe the "trail" option in the usage message.

This is based on the version shipped with 4.3, which is "5.2 (Berkeley)
2/21/86".

*** /arch/4.3/usr/src/etc/arp.c	Fri Feb 21 12:30:36 1986
--- arp.c	Mon Nov  9 12:36:51 1987
***************
*** 37,43 ****
  		exit(0);
  	}
  	if (argc >= 4 && strcmp(argv[1], "-s") == 0) {
! 		set(argc-2, &argv[2]);
  		exit(0);
  	}
  	if (argc == 3 && strcmp(argv[1], "-d") == 0) {
--- 37,44 ----
  		exit(0);
  	}
  	if (argc >= 4 && strcmp(argv[1], "-s") == 0) {
! 		if (set(argc-2, &argv[2]))
! 			exit(1);
  		exit(0);
  	}
  	if (argc == 3 && strcmp(argv[1], "-d") == 0) {
***************
*** 45,51 ****
  		exit(0);
  	}
  	if (argc == 3 && strcmp(argv[1], "-f") == 0) {
! 		file(argv[2]);
  		exit(0);
  	}
  	usage();
--- 46,53 ----
  		exit(0);
  	}
  	if (argc == 3 && strcmp(argv[1], "-f") == 0) {
! 		if (file(argv[2]))
! 			exit(1);
  		exit(0);
  	}
  	usage();
***************
*** 61,66 ****
--- 63,69 ----
  	FILE *fp;
  	int i;
  	char line[100], arg[5][50], *args[5];
+ 	register int retval;
  
  	if ((fp = fopen(name, "r")) == NULL) {
  		fprintf(stderr, "arp: cannot open %s\n", name);
***************
*** 71,86 ****
  	args[2] = &arg[2][0];
  	args[3] = &arg[3][0];
  	args[4] = &arg[4][0];
  	while(fgets(line, 100, fp) != NULL) {
! 		i = sscanf(line, "%s %s %s %s", arg[0], arg[1], arg[2], arg[3],
! 			arg[4]);
  		if (i < 2) {
  			fprintf(stderr, "arp: bad line: %s\n", line);
  			continue;
  		}
! 		set(i, args);
  	}
  	fclose(fp);
  }
  
  /*
--- 74,93 ----
  	args[2] = &arg[2][0];
  	args[3] = &arg[3][0];
  	args[4] = &arg[4][0];
+ 	retval = 0;
  	while(fgets(line, 100, fp) != NULL) {
! 		i = sscanf(line, "%s %s %s %s %s", arg[0], arg[1], arg[2],
! 		    arg[3], arg[4]);
  		if (i < 2) {
  			fprintf(stderr, "arp: bad line: %s\n", line);
+ 			retval = 1;
  			continue;
  		}
! 		if (set(i, args))
! 			retval = 1;
  	}
  	fclose(fp);
+ 	return (retval);
  }
  
  /*
***************
*** 106,112 ****
  		hp = gethostbyname(host);
  		if (hp == NULL) {
  			fprintf(stderr, "arp: %s: unknown host\n", host);
! 			return;
  		}
  		bcopy((char *)hp->h_addr, (char *)&sin->sin_addr,
  		    sizeof sin->sin_addr);
--- 113,119 ----
  		hp = gethostbyname(host);
  		if (hp == NULL) {
  			fprintf(stderr, "arp: %s: unknown host\n", host);
! 			return (1);
  		}
  		bcopy((char *)hp->h_addr, (char *)&sin->sin_addr,
  		    sizeof sin->sin_addr);
***************
*** 113,119 ****
  	}
  	ea = (u_char *)ar.arp_ha.sa_data;
  	if (ether_aton(eaddr, ea))
! 		return;
  	ar.arp_flags = ATF_PERM;
  	while (argc-- > 0) {
  		if (strncmp(argv[0], "temp", 4) == 0)
--- 120,126 ----
  	}
  	ea = (u_char *)ar.arp_ha.sa_data;
  	if (ether_aton(eaddr, ea))
! 		return (1);
  	ar.arp_flags = ATF_PERM;
  	while (argc-- > 0) {
  		if (strncmp(argv[0], "temp", 4) == 0)
***************
*** 135,140 ****
--- 142,148 ----
  		exit(1);
  	}
  	close(s);
+ 	return (0);
  }
  
  
***************
*** 335,340 ****
  	printf("Usage: arp hostname\n");
  	printf("       arp -a [/vmunix] [/dev/kmem]\n");
  	printf("       arp -d hostname\n");
! 	printf("       arp -s hostname ether_addr [temp] [pub]\n");
  	printf("       arp -f filename\n");
  }
--- 343,348 ----
  	printf("Usage: arp hostname\n");
  	printf("       arp -a [/vmunix] [/dev/kmem]\n");
  	printf("       arp -d hostname\n");
! 	printf("       arp -s hostname ether_addr [temp] [pub] [trail]\n");
  	printf("       arp -f filename\n");
  }

