Replied: <<22-Feb-84 11:26>>
Return-Path: <gbergman@ucbcartan>
Date: Sat, 11 Feb 84 15:23:54 pst
From: gbergman@ucbcartan (George Mark Bergman)
Subject: 10 suggestions

[I was told not to expect any reply, but I'd appreciate it if
I got a one-line note saying this had at least been received.
Thanks.]

Index: ideas 4.3BSD

1)  Annotated directories.  I think it would be very useful if
if were possible for the user to attach to an item in a directory a
brief piece of text, to serve as a reminder of what the
file is.  I suppose that the number of characters currently
allowed in a filename is sufficiently great that, actually, the
filename could be made to serve this purpose (like an Ent's name in
Tolkien), and if one gave a file such a name one could call for it using
a distinctive initial segment followed by ``*''.  But I think it would
be more user-friendly to have this description distinct from the
filename.  One would have some option to ls, say -A, which would show
the annotations to all files.  Of course, there would have to be
procedures for creating, editing, and modifying these annotations.

2)  I also suggest a new option, say ``-p'' to the ``ls'' command,
to show pathnames of files (relative to ~, ., or /).  So, for instance,
if I forget where I put a file, but remember the approximate name I
gave it, I could do
	ls -Rp|grep 'pattern'
and find it.

3)   The troff .so command does not understand the csh usage
	~[name]/...
for describing a file.  Of course, one can give absolute pathnames
for files that one wishes to source.  However, if one works on more
than one machine, and rcp's files from one to another, then even if
one maintains parallel directory structures, the absolute pathname
will change from machine to machine.  Here are two suggested solutions:

(a)  Suggested by Keith Sklower when I raised the problem with him:
``Teach troff to understand ~[name]/...''.  He said I should quote him.

(b)  Here is the solution I am using.  On every machine where I have
an account I keep a certain one-line file, and in each of my .login
files is a command to copy this file to /tmp/hostname.  Here on cartan
the contents of the file is:

	.ds HN ucbcartan

and correspondingly on each machine.  Now in files I want to be portable
among my accounts, I keep the four lines:

	.so /tmp/hostname
	.if $\*(HN$ucbcartan$ .ds HD /ca/fac/gbergman
	.if $\*(HN$ucbtopaz$  .ds HD /topaz_a/gbergman
	.if $\*(HN$ucbunixd$  .ds HD /da/gbergman

(HD for home-directory). I then simulate the effect of
``.so ~/PS/cyclic/macros'', for instance, with

	.so \*(HD/PS/cyclic/macros

There are certain risks -- if I do a troff job remotely, and /tmp has
been cleaned on the remote machine since I last logged in, I'll be out
of luck.  Or if between one login and the next, /tmp gets cleaned  a n d
someone else decides to name a file /tmp/hostname -- then the
execution of my .login file will presumably be aborted.  Anyway, my
suggestion, which would eliminate these problems, is that with the next
distribution, every machine be made to have a file of this sort
belonging to root, called, e.g.,
	/usr/pub/hostname
with contents as indicated:
	.ds HN [name of machine]
     (Actually, I am using a more complicated system than I need to,
to simulate the effect of this suggestion; for my own purposes it
would have been simpler to use, instead of /tmp/hostname,
``/tmp/gbergmanpath'' with the obvious modification of contents.)
     Though solution (b) is more cumbersome than (a), it has the
advantage that users may have other reasons to want their troff
files to ``know'' which machine they are on.  E.g., they may want
to source a file that has nontrivially different names on different
machines.  Solutions (a) and (b) are not mutually exclusive, of course.
     If (a) were followed, you would want to also teach
soelim (used in ``spell'') to understand ~[name]/.
     By the way, I have a long file of troff bugs, and suggestions
as to how troff could be improved, in the form of a letter I UUCP'd
Brian Kernighan a year or so ago, after I read his note describing the
forthcoming ditroff.  He replied that he was appreciative, but didn't
have time to do any more work with (di)troff at present.  I never
thought of 4bsd as dealing with troff, but if Sklower thought 4bsd
should upgrade the troff .so command, you might also want to look at
these.  Let me know, and I'll send it.

4)  I suggest that there be a user-settable option with the effect
that all messages unexpectedly received while one is logged in
a l s o   be recorded in a file of some kind where one can examine them
at leisure.  Examples of situations where I would like to have this
are (a) when a message from root about an impending downage comes to
me right while I am giving a command that redraws the screen, and I
realize that there has been some message, but I'm not sure what.
(b)  When I've troffed or vroffed something on a CFO machine, and
the message comes that the job is completed.  Usually I get such
messages in the mail, and I send them to a file (to which I regularly
apply an editor script that reduces each such message to one line of
key data) in which I keep track of my troffing or vroffing.  But
when it comes while I'm logged in, I have to laboriously copy it
from the screen (if I don't lose it entirely) to transfer it to that
file.

5)  The command ``more'' could use a lot of improvement in the way it
handles emphasized text (i.e., strings _x).  First, it doesn't seem
to turn off emphasis at the ends of lines, so that if one line ends with
an emphasized character, and is followed by a line beginning with some
whitespace (or worse, a blank line,) one gets underlining running all
through the whitespace.  Worse, it doesn't turn off emphasis at the end
of files, so if a file ends with an emphasized character, after the
process ``more'' is over one's terminal is left in a reverse-video or
underlining state.
     On the other hand, when two emphasized characters are separated
by an unemphasized space, it does turn the emphasis off and on -- which
is fine unless one has a terminal with the ``magic cookie'' bug, in
which case this changes the one blank space to three blank spaces,
often leading to lines that don't fit on the screen, confusion of
location of superscripts and subscripts (with nroff|col|more), etc..
Here it would be nice to have an option (more -m, for ``magic cookie)
that would cause a sequence _x _y to be treated as _x__y.

6)  If I understand correctly, the ``man'' command cat's a file
.../catman*/... to ``more''.  I think it would be much more useful
to the user if it behaved as ``more .../catman*/...'', so that the
input of ``more'' was a file, rather than a pipeline, since ``more''
has many options which can only be used in that case, e.g. returning
to previous locations, invoking an editor, etc..  I have generally
found that when I invoke ``man'', I have to repeat it two or three times
before I catch the information I really want.  Hence I have put in my
.cshrc file a line
	alias	Man	'vi /usr{,/local}/man/man?/\!:1.*'
The nroff code makes this awkward to read, but it's the best solution
I've found.
     A problem that exists already with the ``catman'' system, and
would perhaps be slightly intensified by eliminating the pipeline as
I suggest, is that the catman files are publicly writeable, and so
can be intentionally or unintentionally modified by a user.  It has
been explained to me that they have to be publicly writeable in order
that a process initiated by any user can, if necessary, update them.
I don't know anything about how processes get permissions, but it
seems to me that if you made them non-publicly writeable, but created
a ``daemon'' to update them (when they were called but were out of
date) this should solve the problem.

7)  Along with ruptime and rwho, there ought to be an rfinger command!
There are a great many degrees of power it might have.  At very least,
one should have a command one could use to answer a question such as
``What is Fateman's login name on kim?'' if one doesn't have an account
on kim.  A slightly wider question: ``Where, if anywhere, does
D.H.Lehmer have an account, and with what login name?''  An example of a
use of such a command that might be undesirable would be if a student
who does not have an account on ucbcartan could use it to find the home
phone of a faculty member who does.  (I once used ordinary ``finger''
on cartan to find the unlisted phone number of a colleague, to help a
student who needed desperately to get into a class.  He wasn't at home
when I called, and the student didn't pursue the matter,
but when I later mentioned that I had gotten his phone number from the
computer, he was taken aback that this information was available.)

8)  When one is having trouble reaching one's machine by phone, it would
be nice to be able to dial a number that gave ruptime information,
rather than sitting and wondering whether it's the machine or one's
modem.  It would also be desirable if, when a machine went down, some
device could be connected to its phone line that sent to any terminal
that dialed in, a message about what was the matter and when it would
come up.  A related courtesy would be to have such information provided
with each ``down'' entry in ``ruptime''; e.g. ``Disk work. Up ca. 11AM''

9)  The next is something that I personally would like very much, but
I don't know whether it would make a difference to many other users.
It would be a new ``terminal device'' command setting for nroff,
say -Tcua designed for use in the commands
	nroff -Tcua file | col | more
	nroff -Tcua file | col | lpr
which would have the following characteristics: (a) It would understand
that it was writing to a device that could do reverse vertical movements
(namely, the col command).  (b)  It would not assume it was writing to
a device that could do half-line vertical movements (so that it didn't
give control characters that mess up lpr output).  (c) When in italic
font, it would underline those and only those characters that have
distinct italic forms in troff.  It is presently very
frustrating to be unable to spot in nroff output mistakes that will
cause parentheses to be italicized when I don't want them to in troff,
etc..  If ``those and only those characters that have distinct italic
forms in troff'' is too complicated an order, I would be happy if it
simply underlined everything when in italic font.  (``cua'' is an off-
the-cuff abbreviation for [compatible with] C[ol,] U[nderlines] A[ll].)
Still other features which would be useful in nroff -Txxx options are
(d) being able to make use of alternate characters in devices such as
a z29, for Greek letters etc., and (e) being able to accept
-->  user-specified <-- tables of overstrikes etc. for approximating
special characters on lprs etc..  (The nroff-troff .tr command only
allows one to substitute one character for another -- useful, but not
enough.)

10)  I put on the allmsgs in early January a message about a mapping
I have in my EXINIT
	map  "ayy:@a
which has the effect that I can write a ``bottom-line mode'' command
into a file, position the cursor on that line, hit  -- and the
command will be executed.  This has really revolutionized the use of
the editor for me -- I can, as I work, compose complicated commands,
modify them if they don't work, keep them and reuse them if they do... .
(Not only things like substitutions, mappings, and pattern-searches, but
also shell-escapes.  For instance, I have at the beginning of this file
the lines
	+,$w !mail bsd-ideas@arpa
	~s 10 suggestions
and I will mail it by putting the cursor on the first line and
hitting .)  This seems good enough to make into a built-in editor
command, but that is an unimportant question -- let me just suggest
that you put it in your EXINIT and try it yourself for a while.

