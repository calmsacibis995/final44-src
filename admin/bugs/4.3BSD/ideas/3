Return-Path: <donn@utah-cs>
Date: Sat, 22 Sep 84 01:00:39 mdt
From: donn@utah-cs (Donn Seeley)
Subject: Re: Berkely unix (4.2) tty ioctl question

Index: ideas 4.3BSD

	I have an application where I want to change the "local
	characters" associated with a tty synchronously with output.
	(i.e., wait until the output queue is empty, and then make the
	change)...  There seems to be no direct way (i.e. no ioctl that
	does just this), and no indirect way (no ioctl that just waits
	until output becomes quiescent and nothing else).  This is such
	an obvious thing to want to do, I can't believe that it is
	really impossible.  For people familiar with the AT&T unix tty
	system, what I want is the equivalent of the TCSETAW ioctl.

Given the large numbers of tty ioctls which have already been included
in Berkeley Unix, it does seem to be an oversight that an ioctl to wait
for a queue to drain was never put in.  It would be a trivial ioctl to
add, too, if you're inclined to kernel hacking -- something like:

	case TIOCDRAIN:
		ttywait( tp );
		break;

This would be added to the huge switch statement in ttioctl(), with the
appropriate changes to <sys/ioctl.h>.  The obvious thing to do, namely
to use select(), doesn't work because it (correctly) only waits for the
outq to drop below the low water mark.  You could use the TIOCSETP
ioctl to cause the necessary wait, with the disadvantage that input
gets thrown away.  (Why does TIOCSETP do a wait, but none of the other
mode-setting tty ioctls?  Sigh.)  Finally, you can use the TIOCOUTQ
ioctl to find out whether the outq is empty; a loop that runs select()
and a TIOCOUTQ ioctl until the outq is drained might be a reasonable
way of getting the behavior you want.  TIOCOUTQ is not documented; I
have no idea which distribution it was introduced in, and it may go
away...

Hope this helps,

Donn Seeley    University of Utah CS Dept    donn@utah-cs.arpa
40 46' 6"N 111 50' 34"W    (801) 581-5668    decvax!utah-cs!donn

