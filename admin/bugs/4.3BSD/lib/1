Date: Sat, 7 Sep 85 17:56:15 PDT
From: serge@MONET.BERKELEY (Serge Granik)
Subject: C compiler bug with assignment operators
Index: 	lib/pcc 4.3BSD

Description:
	The C compiler generates incorrect code for the cases

		intvar *= floatexp;
		intvar /= floatexp;
		intvar -= floatexp;
		intvar += floatexp;

	The problem seems to be that floatexp is converted to
	int before the operation is performed.  The correct way
	to do this is to convert intvar to float, perform the
	operation, convert the result back into an int and store
	it in intvar.

Repeat-By:
	Compile and run the following program.  Also look at the
	assembler output.

int	asop, asgn;

main()
{
	asop = 30;
	asop *= 1.5;
	printf("30 *= 1.5	-> %d\n", asop);

	asgn = 30;
	asgn = asgn * 1.5;
	printf("30 = 30 * 1.5	-> %d\n", asgn);

	asop = 30;
	asop /= 1.5;
	printf("30 /= 1.5	-> %d\n", asop);

	asgn = 30;
	asgn = 30 / 1.5;
	printf("30 = 30 / 1.5	-> %d\n", asgn);

	asop = 30;
	asop -= 1.5;
	printf("30 -= 1.5	-> %d\n", asop);

	asgn = 30;
	asgn = 30 - 1.5;
	printf("30 = 30 - 1.5	-> %d\n", asgn);

	asop = 30;
	asop += 1.5;
	printf("30 += 1.5	-> %d\n", asop);

	asgn = 30;
	asgn = 30 + 1.5;
	printf("30 = 30 + 1.5	-> %d\n", asgn);

	exit(0);
}

