From decwrl!turtlevax!ralph@ucbvax.Berkeley.EDU  Fri Jan  8 12:57:05 1988
Date: Fri, 8 Jan 88 12:55:05 PST
From: decwrl!turtlevax!ralph@ucbvax.Berkeley.EDU (Ralph Campbell)
Subject: Inefficiency in qsort
Index: lib/libc/gen/qsort.c 4.3BSD

Description:
	Qsort checks to see if the list is size >= THRESH and calls qst()
	to sort the array. Then it does an insertion sort on the last THRESH
	elements. No need to call qst if n == THRESH since 'hi' will be the
	same value in either case and the last THRESH values get sorted.
	Also, further down in the code, we find the smallest element and
	put it in slot 0, then in the insertion sort part we compare slot 0
	and 1 again. Start with slot 1 to insert and avoid the dup compare.

Repeat-By:
	Look at the code closely.

Fix:
*** qsort.c.old	Thu Jun 26 15:01:40 1986
--- qsort.c	Fri Jan  8 11:47:40 1988
***************
*** 48,59 ****
  	thresh = qsz * THRESH;
  	mthresh = qsz * MTHRESH;
  	max = base + n * qsz;
! 	if (n >= THRESH) {
  		qst(base, max);
  		hi = base + thresh;
! 	} else {
  		hi = max;
- 	}
  	/*
  	 * First put smallest element, which must be in the first THRESH, in
  	 * the first position as a sentinel.  This is done just by searching
--- 48,58 ----
  	thresh = qsz * THRESH;
  	mthresh = qsz * MTHRESH;
  	max = base + n * qsz;
! 	if (n > THRESH) {
  		qst(base, max);
  		hi = base + thresh;
! 	} else
  		hi = max;
  	/*
  	 * First put smallest element, which must be in the first THRESH, in
  	 * the first position as a sentinel.  This is done just by searching
***************
*** 78,84 ****
  	 * Then, do the standard insertion sort shift on a character at a time
  	 * basis for each element in the frob.
  	 */
! 	for (min = base; (hi = min += qsz) < max; ) {
  		while (qcmp(hi -= qsz, min) > 0)
  			/* void */;
  		if ((hi += qsz) != min) {
--- 77,83 ----
  	 * Then, do the standard insertion sort shift on a character at a time
  	 * basis for each element in the frob.
  	 */
! 	for (min = base + qsz; (hi = min += qsz) < max; ) {
  		while (qcmp(hi -= qsz, min) > 0)
  			/* void */;
  		if ((hi += qsz) != min) {
