From edjames@monet.berkeley.edu  Tue Apr  5 05:06:07 1988
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.59/1.26)
	id AA02794; Tue, 5 Apr 88 05:06:07 PDT
Received: from monet.Berkeley.EDU by ucbvax.Berkeley.EDU (5.59/1.26)
	id AA11998; Tue, 5 Apr 88 00:24:19 PDT
Received: by monet.Berkeley.EDU (5.59/1.23)
	id AA11837; Tue, 5 Apr 88 00:05:24 PDT
Date: Tue, 5 Apr 88 00:05:24 PDT
From: edjames@monet.berkeley.edu (Ed James)
Message-Id: <8804050705.AA11837@monet.Berkeley.EDU>
Subject: rexec fails if portno > 16767
Index: lib 4.3BSD
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Description:
	Rexec in libc sprintf's a port number to reply to onto the
	stream to an rexecd.  While portno's are unsigned shorts,
	the rexec function declares it's local port variable
	as a short.  If the port number returned by connect is greater
	than 16767 (ie, the high bit of the short is set), the
	sprintf'd port number becomes negative.
Repeat-By:
	Write a program that rexec's something and run it on a machine
	that's been up a while.  The ports retuned by connect must
	be > 16767.  The client will connect to the server rexecd,
	which will get a negative port sprintf'd to it (see libc/net/rexec.c)
	and exit.  The client will then hang forever in accept.
	The problem affects remote ingres calls.  (I doubt anuything else
	uses rexec).
Fix:
	Change the port variable declaration in libc/net/rexec.c from:
		short		port;
	to:
		unsigned short	port;
