Subject: Optimizer's memory mgmt archaic
Index: lib/ccom 4.3BSD

Note 206 (*)  Optimizer's memory mgmt archaic        1 response 
willcox@fang                                11:39 am  May 30, 1986

SHORT BUT DESCRIPTIVE ONE LINE TITLE:  (Type on next line)
	Optimizer's memory mgmt archaic

Operating System:  	UTX/32
Release:  		1.3
Product Name:           UTX/32
Hardware Environment:   9080 
Organization:		Gould-CSD/Urbana      (217) 384-8500 
                        1101 E. University, Urbana, Il 61801

MODULE NAME:
	c2

SPR TYPE:  (Software/Doc/ER)
	Software

PRIORITY:  (1 = High, 5 = Low)
	4

DESCRIPTION OF PROBLEM:
	The optimizer's memory management is very old and nasty.  It
	assumes that if it does several sbrk()s spread over time, it
	will get contiguous hunks of memory.

	This would generally be OK, except that stdio malloc()s memory
	for its buffers.  c2 tries to circumvent this.  It worked in
	1.2.  It doesn't in 1.3.  There are several problems:

	 1) If explicit input and output files are used (the normal
	    case), c2 opens the files and then does setbuf()s to use
	    _sibuf and _sobuf for the buffers.  Unfortunately, this
	    means that c2 always does it's I/O in 1K hunks instead of 8K.

	 2) If c2 is used as a filter, it doesn't do anything special
	    about stdio buffers.  This was OK in 1.2 because stdio
	    the static buffers used _sibuf and _sobuf for stdin and stdout.
	    However, in 1.3, stdio malloc()s even stdin and stdout
	    buffers.  Thus, if c2 is used as a filter on other than a
	    small file, it coredumps.

	    Another problem with the new stdio buffer strategy: with
	    the current version of malloc, if you ask for n bytes, the
	    space used will be 2**(ceil(log2(n+12))) bytes.  In other
	    words, it will add 12 (or is it 4?) and then round up to
	    the next power of 2.  Thus, stdin and stdout each use up
	    16Kb for buffers instead of 8K.  Ouch!

SAMPLE BROKEN OUTPUT:

HOW TO REPRODUCE THE PROBLEM:  (preferably a shell script)

SUGGESTED FIX:
	 1) Fix the optimizer's allocation to use malloc instead of sbrk.
	    It could allocate in hunks larger than 2000 bytes.

	 2) Change stdio to go back to its old buffer allocation
	    scheme, or do something so that it doesn't waste so much
	    memory.

OTHER COMMENTS:

CURRENT WORKING DIRECTORY:
	/np1/devl/tools/se/cpu

PATH:
	.:/mnt/willcox/.bin:/usr/new:/np1/bin:/usr/local:/usr/ucb:/bin:/usr/bin:/usr/games

