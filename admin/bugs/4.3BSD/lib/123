From wolfgang@MGM.MIT.EDU  Tue Apr 19 20:10:30 1988
Date: Tue, 19 Apr 88 22:42:36 EST
From: wolfgang@MGM.MIT.EDU (Wolfgang Rupprecht)
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Cc: tasman@cs.wisc.edu
Subject: cc bug, difference of two unsigned shorts == confusion
Index: lib/cc 4.3BSD

Description:
	The BSD 4.3 cc gets confused when you subtract two unsigned
	shorts. The operation of the following is incorrect for the
	case where the first unsigned short is less than the second
	unsigned short.

	(double) = (ushort) - (ushort) 

Repeat-By:
	
	Compile and run this short C program. Compile with either 
	"cc -O", "cc -g" or plain "cc" with no flags. The results is
	the same.

----start program----
#include <stdio.h>

main()
{
	unsigned short  ashort, bshort;
	double          adouble;

	ashort = 1;
	bshort = 2;

	adouble = ashort - bshort; /* <--- bug is here */

	printf("The short is %d, the double is %g\n",
	       ashort - bshort, adouble);

	if ((adouble < 0) || (adouble > 0xffff)) 
	     exit(1);   	  /* <--- this exit is taken */
	exit(0);
}
----end program----

Fix:

	The difference of two unsigned shorts must be a signed
	quantity. 

Credit-where-credit-is-due-department:

	Mitch Tasman (tasman@cs.wisc.edu) really isolated this bug
	in one of my programs.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
From: donn@cs.utah.edu (Donn Seeley)
Subject: Re:  cc bug, difference of two unsigned shorts == confusion [4.3BSD/lib/123]

I tried this on the latest compiler and got the correct result:

	The short is -1, the double is 4.29497e+09

It looks like these guys expected ANSI C behavior instead of Unix C
behavior from the compiler.  (The Rationale has words to the effect
that this is probably the biggest Silent Change to C.)  We'll probably
be seeing lots of these complaints in the future, now that the ANSI C
committee has guaranteed utter confusion about unsigned conversions.
Note that even under ANSI C, 6.5535e+04 would have been a perfectly
reasonable result for the sample expression on some machines, as I
understand the ANSI C conversion rules.  The revised C Reference Manual
that was provided with 4.3 BSD describes the Unix C unsigned conversion
rules quite clearly.

In any case, this is not a bug, and most C compilers should produce the
same result.

Donn

