From ouster@nutmeg.Berkeley.EDU  Mon Aug 22 10:26:32 1988
Date: Mon, 22 Aug 88 10:25:45 PDT
From: ouster@nutmeg.berkeley.edu (John Ousterhout)
To: 4bsd-bugs@ucbarpa.Berkeley.EDU
Index: lib/libc/gen 4.3BSD
Subject: Bug in crypt.c

The library procedure crypt.c contains code that is dependent on the
order in which the C compiler allocates static variables to memory.  First,
it has the following declarations:

	/*
	 * The current block, divided into 2 halves.
	 */
	static  char    L[32], R[32];

The, later, it has the following code:

        /*
         * First, permute the bits in the input
         */
        for (j=0; j<64; j++)
                L[j] = block[IP[j]-1];

This code only works if R is allocated immediately after L in
memory.  This is true for many C compilers, but, as I found out today,
not for Gcc.

I solved the problem by replacing the declaration with the following
code:

	/*
	 * The current block, divided into 2 halves.  "L" refers to the whole
	 * array and also to the left half.  "R" refers to the right half.
	 */
	static char L[64];
	#define R (&L[32])

