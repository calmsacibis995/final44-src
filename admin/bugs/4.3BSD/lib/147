From bruce@orville.cse.ogc.edu Sat Jul  1 08:27:10 1989
Date: Sat, 1 Jul 89 04:09:56 -0700
From: Bruce Jerrick <bruce@orville.cse.ogc.edu>
Subject: .lcomm size improvement in 4.3 BSD C compiler
Index: lib/mip/pftn.c,lib/pcc/code.c 4.3BSD FIX

Description:
	The size of .lcomm's produced for uninitialized declarations
	are rounded up to an "int" boundary.  But the code uses
	sizeof(int), so that boundary is determined by the integer size
	of the host (compiling) machine, not the target machine.
	That's sub-optimal if one is making cross compilers from PCC
	where the two sizes are not the same.

	A similar situation exists in pcc/code.c, for .lcomm's used to
	copy out struct returns.

Repeat-By:
	Build a cross compiler using lib/mip for a target machine on
	which sizeof(int) != sizeof(int) of the host machine.  E.g.,
	for PDP-11 targets (16 bit int's), .lcomm sizes produced by
	a compiler running on a VAX are rounded up to 4 byte boundaries.
	Or inspect the code, which is a lot easier.

Fix:
	Fortunately simple, and compatible.  Use (SZINT/SZCHAR) instead of
	sizeof(int).


*** /tmp/,RCSt1004583	Sat Jul  1 04:08:27 1989
--- pftn.c	Sat Jul  1 03:48:12 1989
***************
*** 1400,1407 ****
  		int sz = tsize(s->stype, s->dimoff, s->sizoff)/SZCHAR;
  		
  		stabLCSYM = 0;
! 		if (sz % sizeof (int))
! 			sz += sizeof (int) - (sz % sizeof (int));
  		if (s->slevel > 1)
  			printf("	.lcomm	L%d,%d\n", s->offset, sz);
  		else
--- 1400,1407 ----
  		int sz = tsize(s->stype, s->dimoff, s->sizoff)/SZCHAR;
  		
  		stabLCSYM = 0;
! 		if (sz % (SZINT/SZCHAR))
! 			sz += (SZINT/SZCHAR) - (sz % (SZINT/SZCHAR));
  		if (s->slevel > 1)
  			printf("	.lcomm	L%d,%d\n", s->offset, sz);
  		else


*** /tmp/,RCSt1004879	Sat Jul  1 04:34:38 1989
--- code.c	Sat Jul  1 04:33:50 1989
***************
*** 115,122 ****
  		putstr("	.text\n" );
  #else
  		{ int sz = tsize(t, p->dimoff, p->sizoff) / SZCHAR;
! 		if (sz % sizeof (int))
! 			sz += sizeof (int) - (sz % sizeof (int));
  		printf("	.lcomm	L%d,%d\n", i, sz);
  		}
  #endif
--- 118,125 ----
  		putstr("	.text\n" );
  #else
  		{ int sz = tsize(t, p->dimoff, p->sizoff) / SZCHAR;
! 		if (sz % (SZINT/SZCHAR))
! 			sz += (SZINT/SZCHAR) - (sz % (SZINT/SZCHAR));
  		printf("	.lcomm	L%d,%d\n", i, sz);
  		}
  #endif


