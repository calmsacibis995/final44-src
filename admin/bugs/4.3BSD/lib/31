From bostic@vangogh.berkeley.edu  Sun Jan 18 21:28:26 1987
Date: Sun, 18 Jan 87 21:28:27 PST
From: bostic@vangogh.berkeley.edu (Keith Bostic)
Subject: C versions of bcmp, bcopy, bzero and ffs
Index: lib/libc/gen/Makefile 4.3BSD

Description:
	The Makefile for lib/libc/gen says the following:

	# Several routines have been rewritten in assembly language for the
	# VAX.  If you are not running on a VAX, you should use the original
	# C sources which are included in this directory. Regretably we do
	# not have a C version of the bstring(3) routines.

	For your pleasure, here are C versions of the bstring routines.

Fix:
#! /bin/sh
# This is a shell archive, meaning:
# 1. Remove everything above the #! /bin/sh line.
# 2. Save the resulting text in a file.
# 3. Execute the file with /bin/sh (not csh) to create:
#	gen/bcmp.c
#	gen/bcopy.c
#	gen/bzero.c
#	gen/ffs.c
# This archive created: Sun Jan 18 21:27:48 1987
export PATH; PATH=/bin:/usr/bin:$PATH
if test -f 'gen/bcmp.c'
then
	echo shar: "will not over-write existing file 'gen/bcmp.c'"
else
cat << \SHAR_EOF > 'gen/bcmp.c'
/*
 * bcmp -- vax cmpc3 instruction
 */
bcmp(b1, b2, length)
register char	*b1,
		*b2;
register int	length;
{
	if (length)
		do
			if (*b1++ != *b2++)
				break;
		while (--length);
	return(length);
}
SHAR_EOF
fi
if test -f 'gen/bcopy.c'
then
	echo shar: "will not over-write existing file 'gen/bcopy.c'"
else
cat << \SHAR_EOF > 'gen/bcopy.c'
/*
 * bcopy -- vax movc3 instruction
 */
bcopy(src, dst, length)
register char	*src,
		*dst;
register int	length;
{
	if (length && src != dst)
		if ((u_int)dst < (u_int)src)
			if (((int)src | (int)dst | length) & 1)
				do	/* copy by bytes */
					*dst++ = *src++;
				while (--length);
			else {
				length >>= 1;
				do	/* copy by shorts */
					*((short *)dst)++ = *((short *)src)++;
				while (--length);
			}
		else {			/* copy backwards */
			src += length;
			dst += length;
			if (((int)src | (int)dst | length) & 1)
				do	/* copy by bytes */
					*--dst = *--src;
				while (--length);
			else {
				length >>= 1;
				do	/* copy by shorts */
					*--((short *)dst) = *--((short *)src);
				while (--length);
			}
		}
	return(0);
}
SHAR_EOF
fi
if test -f 'gen/bzero.c'
then
	echo shar: "will not over-write existing file 'gen/bzero.c'"
else
cat << \SHAR_EOF > 'gen/bzero.c'
/*
 * bzero -- vax movc5 instruction
 */
bzero(b, length)
register char	*b;
register int	length;
{
	if (length)
		do
			*b++ = '\0';
		while (--length);
	return(length);
}
SHAR_EOF
fi
if test -f 'gen/ffs.c'
then
	echo shar: "will not over-write existing file 'gen/ffs.c'"
else
cat << \SHAR_EOF > 'gen/ffs.c'
#ifdef pdp11
#include <sys/param.h>
#endif pdp11

/*
 * ffs -- vax ffs instruction
 */
ffs(mask)
long	mask;
{
	register int	cnt,
			imask;

#ifdef pdp11
	if (!(imask = loint(mask))) {
		if (!(imask = hiint(mask)))
			return(0);
		cnt = 17;
	}
	else
		cnt = 1;
#else !pdp11
	if (!(imask = mask))
		return(0);
	cnt = 1;
#endif pdp11
	for (;!(imask & 1);++cnt)
		imask >>= 1;
	return(cnt);
}
SHAR_EOF
fi
exit 0
#	End of shell archive
