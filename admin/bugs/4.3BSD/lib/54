From elsie!ado@seismo.CSS.GOV Thu Apr 16 09:44:18 1987
Date: Thu, 16 Apr 87 12:34:59 EDT
From: elsie!ado@seismo.CSS.GOV (Arthur David Olson)
Subject: lint boost--catching superfluous backslashes in strings/char constants
Index: 	lib/mip/scan.c 4.3BSD

Description:
	This lint boost got prompted by X3J11's plans to change how
	extra backslashes in strings and character constants are handled.
	K&R says they get ignored; X3J11 says they cause undefined behavior.
	So. . .to ensure that code written now will survive in the X3J11 era,
	we have lint catch superfluous, potentially-program-busting
	backslashes.

	The change is a simple addition to "lib/mip/scan.c":

		*** OLD/scan.c	Thu Apr 16 12:28:02 1987
		--- NEW/scan.c	Thu Apr 16 12:27:53 1987
		***************
		*** 337,342 ****
		--- 337,350 ----
						continue;
		  
					default:
		+ #ifndef ASWAS
		+ 				if (hflag)
		+ uerror("superfluous backslash in string/character constant");
		+ 				/* fall through to. . . */
		+ 			case '\\':
		+ 			case '\"':
		+ 			case '\'':
		+ #endif /* !ASWAS */
						val = c;
						goto mkcc;

	I've attached the lines that get flagged when lint (with the above
	change) is run over /usr/src code.

					--ado

ingres/ctlmod/prvect.c(79): superfluous backslash in string/character constant
		p = pv->pv_val.pv_tuple;
		for (i = pv->pv_len; i > 0; i--)
			printf("\%o", *p++);
		printf("\n");
		break;
ingres/dbu/pr_tree.c(300): superfluous backslash in string/character constant
			if (e->right->sym.type != QLEND)
			{
				printf("\where ");
				pr_qual(e->right);
			}
ingres/support/prvect.c(74): superfluous backslash in string/character constant
		p = pv->pv_val.pv_tuple;
		for (i = pv->pv_len; i > 0; i--)
			printf("\%o", *p++);
		printf("\n");
		break;
old/vpr/rvcat.c(346): superfluous backslash in string/character constant
	'}',	/*}*/
	'\'',	/*' acute accent*/
	'\`',	/*` grave accent*/
	'^',	/*^*/
	'#',	/*sharp*/
old/vpr/vcat.c(331): superfluous backslash in string/character constant
	'}',	/*}*/
	'\'',	/*' acute accent*/
	'\`',	/*` grave accent*/
	'^',	/*^*/
	'#',	/*sharp*/
ucb/error/errortouch.c(601): superfluous backslash in string/character constant
	}
	if (oktorm == 0){
		fprintf(stderr, "%s: Catastrophe: A copy of \"%s\: was saved in \"%s\"\n",
			processname, o_name, n_name);
		exit(1);
usr.bin/nroff/term/./code.aj833(123): superfluous backslash in string/character constant
"\001 ",		/*unpaddable space*/
"\001\241c\202(\241",			/*alpha*/
"\001\200B\242\301\|\202\341",		/*beta*/
"\001\200)\201/\241",			/*gamma*/
"\001\200o\342<\302",			/*delta*/
usr.bin/nroff/term/./code.itoh(106): superfluous backslash in string/character constant
"\001\033X \033Y",        /*rule--should properly be up one unit*/
"\001\033\046N\033\044",    /*1/4*/
"\001\033\046\M\033\044",    /*1/2*/
"\0033/4",	 /*3/4*/
"\001-",	 /*minus*/
usr.bin/nroff/term/tab37.c(158): superfluous backslash in string/character constant
"\001-",	 /*hyphen*/
"\001o\b+",	 /*bullet*/
"\002\[]",	 /*square*/
"\001-",	 /*3/4 em*/
"\001_",	 /*rule*/
usr.bin/nroff/term/tabepson.c(180): superfluous backslash in string/character constant
"\001-",	/*hyphen*/
"\001\033j\003.\033J\003",	/*bullet*/
"\002\[]",	/*square*/
"\001-",	/*3/4 em*/
"\001_",	/*rule*/
usr.bin/nroff/term/tabnec25-t.c(160): superfluous backslash in string/character constant
"\001-",	/*hyphen*/
"\001O\b+",	/*bullet*/
"\002\[]",	/*square*/
"\001-",	/*3/4 em*/
"\001_",	/*rule*/
usr.bin/nroff/term/tabqume.c(152): superfluous backslash in string/character constant
"\201z",	/*z*/
"\001[",	/*{*/
"\001\033\ ",	/*|*/
"\001]",	/*}*/
"\000\0",	/*~*/
usr.bin/nroff/term/tabqume.c(251): superfluous backslash in string/character constant
"\001\134",	/*registered*/
"\001^",	/*copyright*/
"\001\033\ ",	/*box rule */
"\001c\b/",	/*cent sign*/
"\000\0",	/*dbl dagger*/
usr.bin/nroff/term/tabqume.c(258): superfluous backslash in string/character constant
"\001*",	/*math * */
"\000\0",	/*bell system sign*/
"\001\033\ ",	/*or (was star)*/
"\000\0",	/*circle*/
"\000\0",	/*left top (of big curly)*/
usr.bin/nroff/term/tabqume12.c(252): superfluous backslash in string/character constant
"\000\0",	/*copyright*/
"\001|",	/*box rule */
"\001\033\ ",	/*cent sign*/
"\000\0",	/*dbl dagger*/
"\000\0",	/*right hand*/
usr.bin/refer/refer5.c(108): superfluous backslash in string/character constant
	if (bare == 0) {
		if (!another) {
			sprintf(t1, "%s%s\%s\n", stline, sig, endline);
			if (strlen(t1) > MXSIG)
				err("t1 overflow (%d)", MXSIG);
usr.lib/lpr/filters/rvcat.c(335): superfluous backslash in string/character constant
	'}',	/*}*/
	'\'',	/*' acute accent*/
	'\`',	/*` grave accent*/
	'^',	/*^*/
	'#',	/*sharp*/
usr.lib/lpr/filters/vcat.c(321): superfluous backslash in string/character constant
	'}',	/*}*/
	'\'',	/*' acute accent*/
	'\`',	/*` grave accent*/
	'^',	/*^*/
	'#',	/*sharp*/
usr.lib/lpr/filters/vwidth.c(93): superfluous backslash in string/character constant
	'^',	"^",
	'_',	"_",
	'\`',	"\`",
	'a',	"a",
	'b',	"b",

