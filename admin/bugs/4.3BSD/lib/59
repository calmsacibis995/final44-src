From elsie!ado@seismo.CSS.GOV Fri Apr 24 10:20:06 1987
Date: Fri, 24 Apr 87 11:06:39 EDT
From: elsie!ado@seismo.CSS.GOV (Arthur David Olson)
Subject: lint boost--switch statements
Index: 	lib/mip/cgram.y 4.3BSD

Description:
	Here are a couple of additions to lib/mip/cgram.y related to
	switch statements.  One is fairly noncontroversial; it catches
	code such as
			switch (5) {
				...
			}
	and gripes about a "constant in switch"--it's an analog to the
	traditional "constant in conditional context" gripe.  The other
	addition makes lint grumble a bit more loudly if you've used its
	"-p" option and it encounters code such as

			double	d;

			switch (d) {
				...
			}

	The 4.3bsd compiler does the "right" thing with code like this--
	converts the double to an int and switches on the converted value.
	But 4.[012] compilers just treated the bit pattern of the double value
	as if it were an int, and switched on that--no fun at all.
	So if you're worried about portability (if you've used lint's -p flag)
	a switch(double) is not just suspect, it's a known problem.

Change:

*** OLD/cgram.y	Fri Apr 24 10:50:03 1987
--- NEW/cgram.y	Fri Apr 24 10:50:10 1987
***************
*** 605,614 ****
--- 618,637 ----
			    case INT:	case UNSIGNED:
			    case MOE:	case ENUMTY:
				    break;
+ #ifndef ASWAS
+ 			    case FLOAT:	case DOUBLE:
+ 				    if (pflag)
+ werror("switch (double) muffed by 4.[12]bsd");
+ 				    /* fall through to. . . */
+ #endif /* !ASWAS */
			    default:
				werror("switch expression not type int");
				q = makety( q, INT, q->fn.cdim, q->fn.csiz );
				}
+ #ifndef ASWAS
+ 			    if (hflag && q->in.op == ICON)
+ 				werror( "constant in switch" );
+ #endif /* !ASWAS */
			    ecomp( buildtree( FORCE, q, NIL ) );
			    branch( $$ = getlab() );
			    swstart();

				--ado

