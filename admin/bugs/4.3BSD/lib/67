From @relay.cs.net,@tektronix.tek.com:richl@tektronix.tek.com  Fri Jun 12 02:45:25 1987
Date: Fri, 12 Jun 87 01:14:37 PDT
From: richl <@relay.cs.net,@tektronix.tek.com:richl@tektronix.tek.com (Rick Lindsley)>
Subject: syslog(3) will dump core if the message is > 1024 characters
Index: lib/libc/gen/syslog.c 4.3BSD

Description:
	Syslog uses a static buffer of 1024 characters. It goes to
	pains to try not to exceed this buffer, but unfortunately it
	calls _doprnt to handle the printf-type string, and _doprnt
	cares not and knows not of buffer boundaries.

	A person which hands syslog more than 1K of message will have
	his or her program dump core in the library routine, making it
	particularly frustrating to debug without source.

Repeat-By:
	The following program will demonstrate the problem.

	#include <syslog.h>

	#define OVERSIZE	1025

	char buf[OVERSIZE];

	main()

	{
	    int i;

	    /* initialize array */
	    for (i=0;i<OVERSIZE-1;i++)
		buf[i] = 'a';
	    
	    buf[OVERSIZE-1] = '\0';

	    openlog("test prog",0,LOG_USER);
	    syslog(LOG_WARNING,"here's my test string: %s\n", buf);
	    /* not reached -- core dumped */
	    exit(0);
	}

Fix:
	Several different levels of fixes are possible. The best, but
	most complicated, is to either have syslog be much more careful
	about exceeding its buffers, or not have any restrictions. The
	simplest is to document this behavior so at least users know of
	its existence. The latter is was what was done here, to avoid
	having to recompile such a commonly used library for an
	infrequently encountered problem. A local program which tickled
	this bug then was altered to walk around it.
