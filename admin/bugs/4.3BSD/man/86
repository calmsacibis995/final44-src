From abe@mace.cc.purdue.edu  Tue Oct  4 15:49:31 1988
Date: Tue, 4 Oct 88 17:12:30 EST
From: abe@mace.cc.purdue.edu (Vic Abell)
Subject: procedure for disassociating from controlling tty can block
Index: man/man4/tty.4 4.3BSD

Description:
	The manual page tty(4) recommends that a process can remove its
	association with its controlling terminal by opening /dev/tty
	and issuing the TIOCNOTTY ioctl.  Many standard Berkeley daemons
	do just that - inetd, sendmail, etc.

	The problem is that it is easy for a user to create a process
	whose controlling tty is closed.  When a daemon tries to open
	/dev/tty, the open may block indefinitely.

Repeat-By:
	I discovered this bug with a local line printer system, whose
	lpr uses exec to load a network forwarder, which, in turn, uses
	fork, close and the TIOCNOTTY trick to isolate itself from the
	initiating process.

	Unfortunately, a user chose to start a very long script that
	printed hundreds of jobs.  Then the user logged off and no one
	else logged on to the same tty device.  The network forwarder
	hung, blocked on the open of /dev/tty.

Fix:
	Since the O_NDELAY option doesn't work on the open function, the
	only workaround that has occurred to me is to time out the blocked
	open call with an alarm and simply avoid the TIOCNOTTY call if the
	time out occurs.  That's what I have done in our network forwarder.
