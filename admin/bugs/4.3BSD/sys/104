From parmelee@wayback.cs.cornell.edu Thu Apr  2 10:48:05 1987
Date: Thu, 2 Apr 87 13:45:23 EST
From: parmelee@wayback.cs.cornell.edu (Larry Parmelee)
To: ucb-fixes@okeeffe.Berkeley.EDU
Subject: uda.c uddump routine fails on Microvaxes
Index: sys/vaxuba/uda.c 4.3BSD

Description:
        The uddump routine doesn't work, at least when called "by hand",
	and maybe not at all, on a microvax II.
Repeat-By:
        On a Microvax, interupt UNIX by pushing <BREAK> to get into
	the console debugger.  Try various combinations of "init", 
	"unjam", and eventually "start 80000c00" (the address of the
	"doadump" routine in locore.s).  Note that the dump fails or
	hangs (exact behaviour seems to depend on the type of the disk
	drive).
Fix:
	Compare 4.3 uda.c with Ultrix 1.1 uda.c.  Note the differences.
	Try the fix, notice it works.  The newer ULTRIX sources
	are much different in the same area - I didn't try to figure
	it out.  In fact, I'd very much like to know what the following
	changes do, but Oh Well.  Sigh.  This was flagged as a temporary
	fix in the Ultrix sources - If anyone has something better, I'd
	appreciate getting it.
	
	Apply the following context diff:  Your lines will almost
	certainly vary.
	
*** uda.c.old	Thu Apr  2 13:24:17 1987
--- uda.c	Thu Apr  2 13:24:21 1987
***************
*** 1397,1402
  	io = &uba->uba_map[NUBMREG-num];
  	for(i = 0; i<num; i++)
  		*(int *)io++ = UBAMR_MRV|(btop(udp)+i);
  	ud_ubaddr = (struct uda *)(((int)udp & PGOFSET)|((NUBMREG-num)<<9));
  
  	udaddr->udaip = 0;

--- 1397,1413 -----
  	io = &uba->uba_map[NUBMREG-num];
  	for(i = 0; i<num; i++)
  		*(int *)io++ = UBAMR_MRV|(btop(udp)+i);
+ #ifdef VAX630
+ 	/*
+ 	 * This is a temp fix  -- Stolen from old Ultrix sources - LCP
+ 	 */
+ #define IPCREG 0x20001f40
+ #define LMEA	0x20
+ 	if( cpu == VAX_630 ) {
+ 		*( short *)IPCREG |= LMEA;
+ 	}
+ #endif VAX630
+ 
  	ud_ubaddr = (struct uda *)(((int)udp & PGOFSET)|((NUBMREG-num)<<9));
  
  	udaddr->udaip = 0;

