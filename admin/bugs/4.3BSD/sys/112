From blia.UUCP!susie@cgl.ucsf.edu  Thu Apr 16 01:27:46 1987
Date: Wed, 15 Apr 87 10:03:45 PDT
From: blia.UUCP!susie@cgl.ucsf.edu (Susie Snitzer)
Subject: Bug in xns driver. Can't handle type 3 error protocol packets.
Index: sys/netns/spp_usrreg.c   4.3BSD

Description:
	When an xns error protocol packet number 3 is received the routine
	spp_ctlinput does not initialize the ns_address variable called na.
	spp_ctlinput then calls ns_pcbnotify and passes in the uninitialized
	variable. This causes the kernel to crash.

	Error number 3 is called PRC_QUENCH in 4.3 and has the following
	descriptions in the xns spec: "The destination cannot accept
	the packet due to resource limitations."

	It looks like 4.3 will have the same problem with PRC_ROUTDEAD
	messages.

Repeat-By:
	Sending an error protocol packet number 3 to the 4.3 driver.
	Either one of the database machines made by Britton Lee, inc can
	be forced to send an error protocol packet.

==========================================================================
From sklower@vangogh.Berkeley.EDU Mon May 11 12:39:12 1987
Date: Mon, 11 May 87 12:39:02 PDT
From: sklower@vangogh.berkeley.edu (Keith Sklower)
Subject: Re:  Bug in xns driver. Can't handle type 3 error protocol packets.

Here is a fix:
% diff -c $s{,.fix}
*** spp_usrreq.c        Mon May 11 12:33:45 1987
--- spp_usrreq.c.fix    Mon May 11 12:34:39 1987
***************
*** 396,402 ****
  
        case PRC_ROUTEDEAD:
        case PRC_QUENCH:
!               break;
  
        case PRC_IFDOWN:
        case PRC_HOSTDEAD:
--- 396,402 ----
  
        case PRC_ROUTEDEAD:
        case PRC_QUENCH:
!               return;
  
        case PRC_IFDOWN:
        case PRC_HOSTDEAD:

This fix suggested by Eric Allman, of your organization.
