From trinkle@purdue.edu  Thu Jul  9 08:04:41 1987
Date: Thu, 9 Jul 87 10:02:40 EST
From: "Daniel G Trinkle" <trinkle@purdue.edu>
Subject: Incorrect typing for uid and gid in chown(2) syscall
>Index: sys/sys/vfs_syscalls.c, sys/ufs/ufs_vnodeops.c (4.3 BSD + NFS)
Index: sys/sys/vfs_syscalls.c 4.3BSD

Description:
	In the chown() syscall interface, the uid and gid arguments are type
	int.  When they are passed to vchown1(), they are not properly cast to
	type uid_t and gid_t respectively.  Vchown1() assumes it's args arg
	uid_t and gid_t.  However, vchown1() compares these u_shorts with -1.
	When vchown1() calls the ufs chown1() (via VOP_SETATTR), chown1()
	expects ints instead of uid_t and gid_t.

Repeat-By:
	Look at the code.
Fix:
	Do the proper casts.


RCS file: /sys/sys/RCS/vfs_syscalls.c,v
retrieving revision 3.1
diff -c -r3.1 /sys/sys/vfs_syscalls.c
*** /tmp/,RCSt1025267	Thu Jul  9 09:56:20 1987
--- /sys/sys/vfs_syscalls.c	Thu Jul  9 09:54:42 1987
***************
*** 646,652 ****
  		u.u_error = error;
  		return;
  	}
! 	u.u_error = vchown1(vp, uap->uid, uap->gid);
  	VN_RELE(vp);
  }
  
--- 646,652 ----
  		u.u_error = error;
  		return;
  	}
! 	u.u_error = vchown1(vp, (uid_t)uap->uid, (gid_t)uap->gid);
  	VN_RELE(vp);
  }
  
***************
*** 671,677 ****
  		return;
  	}
  	vp = (struct vnode *)fp->f_data;
! 	u.u_error = vchown1(vp, uap->uid, uap->gid);
  }
  
  vchown1(vp, uid, gid)
--- 671,677 ----
  		return;
  	}
  	vp = (struct vnode *)fp->f_data;
! 	u.u_error = vchown1(vp, (uid_t)uap->uid, (gid_t)uap->gid);
  }
  
  vchown1(vp, uid, gid)
***************
*** 688,696 ****
  		return(error);
  	if(u.u_uid != vattr.va_uid && !suser())
  		return(u.u_error);
! 	if(uid == -1)
  		uid = vattr.va_uid;
! 	if(gid == -1)
  		gid = vattr.va_gid;
  	if(uid != vattr.va_uid && !suser())
  		return(u.u_error);
--- 688,696 ----
  		return(error);
  	if(u.u_uid != vattr.va_uid && !suser())
  		return(u.u_error);
! 	if(uid == (uid_t)-1)
  		uid = vattr.va_uid;
! 	if(gid == (gid_t)-1)
  		gid = vattr.va_gid;
  	if(uid != vattr.va_uid && !suser())
  		return(u.u_error);


RCS file: /sys/ufs/RCS/ufs_vnodeops.c,v
retrieving revision 3.1
diff -c -r3.1 /sys/ufs/ufs_vnodeops.c
*** /tmp/,RCSt1025117	Thu Jul  9 09:51:00 1987
--- /sys/ufs/ufs_vnodeops.c	Tue Jun 30 09:33:24 1987
***************
*** 422,429 ****
   */
  chown1(ip, uid, gid)
  	register struct inode *ip;
! 	int uid;
! 	int gid;
  {
  #ifdef QUOTA
  	register long change;
--- 422,429 ----
   */
  chown1(ip, uid, gid)
  	register struct inode *ip;
! 	uid_t uid;
! 	gid_t gid;
  {
  #ifdef QUOTA
  	register long change;
***************
*** 431,439 ****
  
  	if(u.u_uid != ip->i_uid && !suser())
  		return(u.u_error);
! 	if (uid == -1)
  		uid = ip->i_uid;
! 	if (gid == -1)
  		gid = ip->i_gid;
  	if(uid != ip->i_uid && !suser())
  		return(u.u_error);
--- 431,439 ----
  
  	if(u.u_uid != ip->i_uid && !suser())
  		return(u.u_error);
! 	if (uid == (uid_t)-1)
  		uid = ip->i_uid;
! 	if (gid == (uid_t)-1)
  		gid = ip->i_gid;
  	if(uid != ip->i_uid && !suser())
  		return(u.u_error);
