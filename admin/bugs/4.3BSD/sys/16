Return-Path: <jis@bitsy.mit.edu>
Date: Wed, 12 Feb 86 11:00:47 EST
From: jis@bitsy.mit.edu (Jeffrey I. Schiller)
Subject: ARP does not behave according to RFC826.

Index:  sys/netinet/if_ether.c 4.3BSD

Description:
	in_arpinput() does not properly conform to the specifications
of RFC826. Specifically when an ARP packet is received (either request
or response) a host is suppose to check to see if the IP address of the
source of the packet is in the ARP cache. If it is and the Ethernet
address in the cache is not in agreement with the received source Ethernet
address, the cache should be updated.

Repeat-By:
	Replace an Ethernet board in some well known machine and it will
not be able to communicate with anyone else on the network that still has
an ARP cache entry for it.

	We encountered this problem when we replaced a DEQNA in a Vaxstation
(an operation which took about 3 minutes) and then found that it could
not communicate with its Remote Virtual Disk server machine. Inspection of
the servers ARP cache (via the "arp" utility) revealed that it still had
the address of the old Ethernet board in it.

Fix:
	I have included a "diff -c" of the relevant module. The idea here
is to always update the ARP cache if the IP source address of an incoming
ARP packet is found in the cache (the replacement out of hand takes just
as long as the time required to compare the two Ethernet addresses). 
THIS EXACT CODE HAS NOT BEEN TESTED HERE. We are running and older version
of if_ether.c. The diff I am supplying here however was made against a
version of if_ether.c as taken from Monet within the last two days.

*** if_ether.monet.c	Wed Feb 12 10:35:40 1986
--- if_ether.new.c	Wed Feb 12 10:38:29 1986
***************
*** 291,297 ****
  		goto out;
  	}
  	ARPTAB_LOOK(at, isaddr.s_addr);
! 	if (at && (at->at_flags & ATF_COM) == 0) {
  		bcopy((caddr_t)ea->arp_sha, (caddr_t)at->at_enaddr,
  		    sizeof(ea->arp_sha));
  		at->at_flags |= ATF_COM;
--- 291,297 ----
  		goto out;
  	}
  	ARPTAB_LOOK(at, isaddr.s_addr);
! 	if (at) {
  		bcopy((caddr_t)ea->arp_sha, (caddr_t)at->at_enaddr,
  		    sizeof(ea->arp_sha));
  		at->at_flags |= ATF_COM;


=====================================================================


			-Jeff
