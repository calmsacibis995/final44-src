From decwrl!nsc!nsc!taux01!arielf@ucbvax.Berkeley.EDU  Mon Dec 21 06:08:09 1987
From: Ariel Faigon  <decwrl!nsc!taux01!nsc.uucp!taux01!arielf@ucbvax.Berkeley.EDU>
Date: Mon, 21 Dec 87 16:02:09 +0200
Subject:  'lseek()' on ttys
Index: sys 4.3BSD

Description:
   lseek() does not return -1 when invoked on a tty (as it does
   for a pipe. thus all calls to lseek should be protected by
   a call to 'isatty()' which seems to me unconvenient.

Repeat-By:

/*
 |  The following program terminates the shell session from which
 |  it is invoked if attempted on a tty (no input redirection from
 |  a disk-file)
 |
 |  Are you familiar with this problem ?  Why do all functions from
 |  the system-call down to the device-driver ignore the possibility
 |  of a character device (noting that they check for a pipe or block
 |  device)
 |  why can't 'lseek()' return -1 (as it does when tried on a pipe),
 |  why it is undocumented ?
 */
main()
{
    long lseek();

    if (lseek(0, -1L, 2) == -1) { /* seek to last char of stdin */
	perror("lseek");
	exit (1);
    }
    exit (0);
}

Fix:
	My commonsense tells me that 'lseek()' should test for the
	possibility of a tty as it does for a pipe and return -1
	since a tty is 'unseekable'.
	If I'm mistaken or ignorant about something please let me know.


	Ariel Faigon
National Semiconductor (Israel)
6 Maskit st.  P.O.B. 3007, Herzlia 46104, Israel   Tel. (972)52-522260
arielf%taux01@nsc.com   @{hplabs,pyramid,sun,decwrl} 34 48 E / 32 10 N

