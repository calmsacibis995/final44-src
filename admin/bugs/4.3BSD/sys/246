From louie@trantor.umd.edu  Sat Jul 21 15:41:42 1990
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.63/1.41)
	id AA00958; Sat, 21 Jul 90 15:41:42 -0700
Received: from trantor.umd.edu by ucbvax.Berkeley.EDU (5.63/1.41)
	id AA13159; Sat, 21 Jul 90 15:41:54 -0700
Received: by trantor.umd.edu (5.63/1.34)
	id AA10902; Sat, 21 Jul 90 21:52:21 GMT
Date: Sat, 21 Jul 90 21:52:21 GMT
From: louie@trantor.umd.edu (Louis A. Mamakos)
Message-Id: <9007212152.AA10902@trantor.umd.edu>
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Cc: petry@trantor.umd.edu
Subject: Broken code to set IP TTL in ip_ctloutput()
Index: sys 4.3BSD

Description:
	Attempts to set or get the IP TTL for an IP socket will actually
	set or get the type of service instead.

Repeat-By:
	Inspection.  Look at netinet/ip_output.c, in the ip_ctloutput()
	function.  It looks like the cut/paste of the IP_TOS case didn't
	get completely edited.

Fix:
	Here's an untested diff.

*** /sys/netinet/ip_output.c	Fri Jun 29 00:38:53 1990
--- /tmp/ip_output.c	Sat Jul 21 17:35:45 1990
***************
*** 387,393 ****
  					break;
  
  				case IP_TTL:
! 					inp->inp_ip.ip_tos = optval;
  					break;
  #define	OPTSET(bit) \
  	if (optval) \
--- 387,393 ----
  					break;
  
  				case IP_TTL:
! 					inp->inp_ip.ip_ttl = optval;
  					break;
  #define	OPTSET(bit) \
  	if (optval) \
***************
*** 445,451 ****
  				break;
  
  			case IP_TTL:
! 				optval = inp->inp_ip.ip_tos;
  				break;
  
  #define	OPTBIT(bit)	(inp->inp_flags & bit ? 1 : 0)
--- 445,451 ----
  				break;
  
  			case IP_TTL:
! 				optval = inp->inp_ip.ip_ttl;
  				break;
  
  #define	OPTBIT(bit)	(inp->inp_flags & bit ? 1 : 0)
