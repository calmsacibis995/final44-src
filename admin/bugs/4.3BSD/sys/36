Date:     3 Oct 83 (Monday) 02:42 EDT
From: Mike Braca <mjb%Brown@UDel-Relay>
Return-Path: <mjb%Brown@UDel-Relay>
Subject:  Exceeding file size limit gives wrong error no.

Index:	sys/sys/sys_generic.c 4.3BSD
Description:
	When a process exceeds its file size limit, the write
	fails with error EMFILE (too many open files).
	It should actually fail with error EFBIG (file too big).
Repeat-By:
	Read the manual page for write(2), then compile and run
	the following program:

	#include <time.h>
	#include <resource.h>
	#include <stdio.h>
	#include <signal.h>
	main() {
		struct rlimit lims; int fd, rc;
		signal(SIGXFSZ, SIG_IGN);
		lims.rlim_cur = 0;
		lims.rlim_max = RLIM_INFINITY;
		setrlimit(RLIMIT_FSIZE, &lims);
		fd = creat("/tmp/fsizetest", 0666);
		rc = write(fd, "This will not work\n", 19);
		if (rc < 0) perror("write");
	}
Fix:
	*** sys_generic.c.ucb	Thu Sep 29 00:24:12 1983
	--- sys_generic.c	Thu Sep 29 00:25:20 1983
	***************
	*** 237,243
		    uio->uio_offset + uio->uio_resid >
		      u.u_rlimit[RLIMIT_FSIZE].rlim_cur) {
			psignal(u.u_procp, SIGXFSZ);
	! 		return (EMFILE);
		}
		if (type != IFBLK) {
			dev = ip->i_dev;

	--- 237,243 -----
		    uio->uio_offset + uio->uio_resid >
		      u.u_rlimit[RLIMIT_FSIZE].rlim_cur) {
			psignal(u.u_procp, SIGXFSZ);
	! 		return (EFBIG);
		}
		if (type != IFBLK) {
			dev = ip->i_dev;
	====END OF FIX====

