Return-Path: <csustan!casey@lll-crg.ARPA>
Date: Mon, 15 Sep 86 17:50:17 pdt
From: csustan!casey@lll-crg.ARPA
To: lll-crg!4bsd-bugs@ucbarpa.Berkeley.EDU
Subject: psignal absurdity

Index:	 sys/sys/kern_sig.c 4.3BSD

Description:
  This is really not a bug, but rather an observation and question that might
point out some obsolete logic in the 4.3 kernel.  In psignal() in
sys/kern_sig.c, lines 328 to 353 look [something] like:

	if (sig) {
		p->p_sig |= mask;
		switch (sig) {
			...
		}
	}

As far as I can see, the test for sig not equaling zero is ridiculous at this
point, as mask (which equals sigmask(sig)) has already been used in
statements previous to the above segment of the sort:

	if (p->p_sigignore & mask)
		...

and if sig were zero, sigmask(sig) is not defined (sigmask(0) == 1 << -1).
Is this test simply a holdover from a previous age?

