Return-Path: <csustan!casey@lll-crg.ARPA>
Received: by ucbarpa.Berkeley.EDU (5.53/1.16)
	id AA03739; Sun, 21 Sep 86 02:19:19 PDT
Received: Sun, 21 Sep 86 02:17:04 pdt by lll-crg.ARPA (4.12/)
	id AA23228; Sun, 21 Sep 86 02:17:04 pdt
Received: by csustan.UUCP (5.31/4.7)
	id AA00854; Sun, 21 Sep 86 01:58:28 PDT
Date: Sun, 21 Sep 86 01:58:28 PDT
From: csustan!casey@lll-crg.ARPA (Casey Leedom)
Message-Id: <8609210858.AA00854@csustan.UUCP>
To: lll-crg!4bsd-bugs@ucbarpa.Berkeley.EDU
Subject: NSIG usage inconsistency in the kernel
Cc: seismo!keith@lll-crg.ARPA

Subject: The treatment of the NSIG limit in the 4.3 kernel is inconsistent
Index:	sys/sys/kern_{exit,sig,xxx}.c 4.3BSD

Description:
	There are several places in the above files where NSIG-1 is treated
	as the maximum possible signal number and several others where NSIG
	is treated as the maximum.  In all cases the NSIG-1 takes precidence
	(that is all checks for max sig == NSIG occur *after* checks for
	NSIG-1 have occured, so there is no danger that u.u_action[NSIG]
	would be referenced for instance).
Fix:
	Either associate signal `i' with u.u_action[i-1] and u.u_sigmask[i-1]
	(as sigmask bits already are associated with 2^(i-1)) and let NSIG be
	the upper limit, or make NSIG-1 be the limit (this would allow
	redefining the macro sigmask to:

		#define	sigmask(m)	(1L << (m))

	which would provide some (very minor) speed up.
