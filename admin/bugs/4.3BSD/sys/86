From decwrl!pyramid!lewey!lewey.AIT.COM!pkl@ucbvax.Berkeley.EDU  Fri Jan 30 01:47:26 1987
Date: Tue, 27 Jan 87 11:42:35 PST
From: decwrl!pkl@lewey.ait.com (Peter K. Lee)
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Subject: incorrect errno set in rename()

Subject: rename() returns incorrect errno
Index: sys/sys/ufs_syscalls.c 4.3BSD

Description:
	Rename() returns incorrect (at least disagrees with what
	section 2 of Unix Programmers' Manual says) error code when
	one of the argument is a directory is a file and the other
	is a directory.  Seems like ENOTDIR is returned in place of
	EISDIR, and vice versa.
	This may be an error in documentation of RENAME(2).

Repeat-By:
	Compile and run the following program.
	The first rename will return "Not a directory".
	According to RENAME(2), it should return EISDIR instead.
	The second rename will return "Is a directory".
	According to RENAME(2), it should return ENOTDIR instead.

---- renameerr.c ---
main()
{
	printf("rename(\"Xfile\", \"Xdir\")\n");
	close(creat("Xfile", 0666));		/* create a file */
	mkdir("Xdir", 0777);			/* create a directory */
	if (rename("Xfile", "Xdir") < 0)
		perror("rename");
	else
		printf("rename() should not succeed\n");
	unlink("Xfile");
	rmdir("Xdir");

	printf("rename(\"Xdir\", \"Xfile\")\n");
	close(creat("Xfile", 0666));		/* create a file */
	mkdir("Xdir", 0777);			/* create a directory */
	if (rename("Xdir", "Xfile") < 0)
		perror("rename");
	else
		printf("rename() should not succeed\n");
	unlink("Xfile");
	rmdir("Xdir");
}
---- end renameerr.c ---

PROPOSED SOLUTION:

Return correct error from rename() in sys/ufs_syscalls.c.  
NOTE: The following suggested fix has not been tested.

*** /sys/sys/ufs_syscalls.c	Tue Jan 27 11:34:26 1987
--- ufs_syscalls.c	Tue Jan 27 11:34:39 1987
***************
*** 963,973 ****
  				goto bad;
  			}
  			if (!doingdirectory) {
! 				error = ENOTDIR;
  				goto bad;
  			}
  			cacheinval(dp);
  		} else if (doingdirectory) {
! 			error = EISDIR;
  			goto bad;
  		}
--- 963,973 ----
  				goto bad;
  			}
  			if (!doingdirectory) {
! 				error = EISDIR;
  				goto bad;
  			}
  			cacheinval(dp);
  		} else if (doingdirectory) {
! 			error = ENOTDIR;
  			goto bad;
  		}
