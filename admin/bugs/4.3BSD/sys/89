From bostic@okeeffe.berkeley.edu  Fri Feb  6 12:29:27 1987
Received: by ucbarpa.Berkeley.EDU (5.57/1.20)
	id AA16457; Fri, 6 Feb 87 12:29:27 PST
Received: by ucbvax.Berkeley.EDU (5.53/1.20)
	id AA07489; Fri, 6 Feb 87 12:28:21 PST
Received: by okeeffe.Berkeley.EDU (5.57/1.14)
	id AA24732; Fri, 6 Feb 87 12:27:57 PST
Date: Fri, 6 Feb 87 12:27:57 PST
Message-Id: <8702062027.AA24732@okeeffe.Berkeley.EDU>
Path: seismo!ut-sally!husc6!mit-eddie!mit-hermes!sundar
From: sundar@HERMES.AI.MIT.EDU (Sundar Narasimhan)
Newsgroups: comp.unix.wizards,comp.unix.questions,comp.bugs.4bsd
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Subject: bug in hp.c (bad blocks in the bad block/replacement sector area?)
Index: sys/hp.c 4.3BSD

	Pardon me if this has been brought up before. The 4.2 BSD version of
	hp.c doesn't handle bad blocks correctly if they happen to be in the
	bad block area or the replacement sector area.

	(The kernel infinite loops, and worse, fsck hangs without printing
	anything so you have to use something like 'getsect' to find out 
	which sector may be giving you the problem. )
	
	The fix seems to be to replace the line in hp.c (in routine
	hptdint()) that says:
	 	if (bp->b_flags&B_BAD && hpecc(mi, CONT))
			return (MBD_RESTARTED);
	with
	
		/* if there's an error and we are already in the midst of a
		   revectoring operation make sure we get an error! */
		if(bp->b_flags &B_BAD && (hpaddr->hpds&HPDS_ERR ||
		    mbsr&MBSR_EBITS)) {
			goto skip;
		}
	
	 	if (bp->b_flags&B_BAD && hpecc(mi, CONT))
			return (MBD_RESTARTED);
	
		if (hpaddr->hpds&HPDS_ERR || mbsr&MBSR_EBITS) {
		  skip:
			er1 = hpaddr->hper1;
	
	I haven't tried this out as yet, and I was wondering if someone out
	there who's spent more time looking over hp.c may have an idea if it
	would work.
	
	If you have any reasons to think that it will or wont, send me a
	note at "sundar@hermes.ai.mit.edu", or "mit-eddie!mit-hermes!sundar".
	
	Thanks, Sundar.
