From muller%sdcc7@sdcsvax.ucsd.edu  Mon Oct 19 18:08:11 1987
Date: Mon, 19 Oct 87 17:29:03 PDT
From: muller%sdcc7@sdcsvax.ucsd.edu (Keith Muller)
Subject: Speedup of uptime and w-u
Index: ucb/w.c 4.3BSD

Description:
	w -u and uptime can be made a lot faster by saving uneeded nlist lookups
Repeat-By:
	Profile w -u and nlist is usually the top on the list
	The following is the orig w.c (from a vax 750)

 %time  cumsecs  #call  ms/call  name
  21.7     0.10      1   100.01  _nlist
  17.4     0.18      8    10.00  _read
  15.2     0.25    283     0.25  _lseek
   6.5     0.28                  _asctime
   6.5     0.31    324     0.09  _fread
   6.5     0.34      1    30.00  _main
   6.5     0.37                  _monstartup
   4.3     0.39    279     0.07  _fseek
   2.2     0.40     14     0.71  __doprnt
   2.2     0.41    323     0.03  _bcopy
   2.2     0.42      3     3.33  _close
   2.2     0.43      4     2.50  _fstat
   2.2     0.44      4     2.50  _malloc
   2.2     0.45      4     2.50  _sbrk
   2.2     0.46                  mcount
   0.0     0.46      5     0.00  __filbuf
   0.0     0.46      1     0.00  __findenv
   0.0     0.46      3     0.00  __findiop
   0.0     0.46      2     0.00  __flsbuf
   0.0     0.46      2     0.00  _fclose
   0.0     0.46      3     0.00  _fflush
   0.0     0.46      3     0.00  _fopen
   0.0     0.46      2     0.00  _free
   0.0     0.46      1     0.00  _getenv
   0.0     0.46      1     0.00  _getpagesize
   0.0     0.46      1     0.00  _gettimeofday
   0.0     0.46      2     0.00  _ioctl
   0.0     0.46      1     0.00  _isatty
   0.0     0.46      1     0.00  _localtime
   0.0     0.46      2     0.00  _morecore
   0.0     0.46      1     0.00  _offtime
   0.0     0.46      5     0.00  _open
   0.0     0.46     14     0.00  _printf
   0.0     0.46      1     0.00  _profil
   0.0     0.46      1     0.00  _prtat
   0.0     0.46      1     0.00  _prttime
   0.0     0.46      1     0.00  _rewind
   0.0     0.46      1     0.00  _rindex
   0.0     0.46      2     0.00  _strcat
   0.0     0.46      1     0.00  _strcpy
   0.0     0.46     12     0.00  _strlen
   0.0     0.46     11     0.00  _strncmp
   0.0     0.46      1     0.00  _time
   0.0     0.46      1     0.00  _tzset
   0.0     0.46      1     0.00  _write
   0.0     0.46      1     0.00  udiv

   By removing unused (for uptime) entries in the nlist structure you get:

 %time  cumsecs  #call  ms/call  name
  40.0     0.10      8    12.50  _read
  16.0     0.14      1    40.01  _main
   8.0     0.16      3     6.67  _close
   8.0     0.18      1    20.00  _nlist
   8.0     0.20                  mcount
   4.0     0.21                  _asctime
   4.0     0.22     47     0.21  _bcopy
   4.0     0.23      4     2.50  _malloc
   4.0     0.24      5     2.00  _open
   4.0     0.25      1    10.00  _write
   0.0     0.25     14     0.00  __doprnt
   0.0     0.25      5     0.00  __filbuf
   0.0     0.25      1     0.00  __findenv
   0.0     0.25      3     0.00  __findiop
   0.0     0.25      2     0.00  __flsbuf
   0.0     0.25      2     0.00  _fclose
   0.0     0.25      3     0.00  _fflush
   0.0     0.25      3     0.00  _fopen
   0.0     0.25     48     0.00  _fread
   0.0     0.25      2     0.00  _free
   0.0     0.25      6     0.00  _fseek
   0.0     0.25      4     0.00  _fstat
   0.0     0.25      1     0.00  _getenv
   0.0     0.25      1     0.00  _getpagesize
   0.0     0.25      1     0.00  _gettimeofday
   0.0     0.25      2     0.00  _ioctl
   0.0     0.25      1     0.00  _isatty
   0.0     0.25      1     0.00  _localtime
   0.0     0.25     10     0.00  _lseek
   0.0     0.25      2     0.00  _morecore
   0.0     0.25      1     0.00  _offtime
   0.0     0.25     14     0.00  _printf
   0.0     0.25      1     0.00  _profil
   0.0     0.25      1     0.00  _prtat
   0.0     0.25      1     0.00  _prttime
   0.0     0.25      1     0.00  _rewind
   0.0     0.25      1     0.00  _rindex
   0.0     0.25      4     0.00  _sbrk
   0.0     0.25      2     0.00  _strcat
   0.0     0.25      1     0.00  _strcpy
   0.0     0.25      4     0.00  _strlen
   0.0     0.25     11     0.00  _strncmp
   0.0     0.25      1     0.00  _time
   0.0     0.25      1     0.00  _tzset
   0.0     0.25      1     0.00  udiv
   
   Almost a 2 time speedup. The problem is that the nlist is done on variables
   that are needed in w but NOT w-u (or uptime).
Fix:
	Change the code so that only avenrun and bootime are gotten for uptime
	(w -u) and avoid the extra nlist cost

	Keith Muller
	University of California, San Diego

RCS file: RCS/w.c,v
retrieving revision 1.1
diff -c -r1.1 w.c
*** /tmp/,RCSt1024807	Mon Oct 19 17:21:06 1987
--- w.c	Mon Oct 19 15:43:23 1987
***************
*** 56,75 ****
  int	nproc;
  
  struct	nlist nl[] = {
  	{ "_proc" },
! #define	X_PROC		0
  	{ "_swapdev" },
! #define	X_SWAPDEV	1
  	{ "_Usrptmap" },
! #define	X_USRPTMA	2
  	{ "_usrpt" },
! #define	X_USRPT		3
  	{ "_nswap" },
! #define	X_NSWAP		4
! 	{ "_avenrun" },
! #define	X_AVENRUN	5
! 	{ "_boottime" },
! #define	X_BOOTTIME	6
  	{ "_nproc" },
  #define	X_NPROC		7
  	{ "_dmmin" },
--- 56,75 ----
  int	nproc;
  
  struct	nlist nl[] = {
+ 	{ "_avenrun" },
+ #define	X_AVENRUN	0
+ 	{ "_boottime" },
+ #define	X_BOOTTIME	1
  	{ "_proc" },
! #define	X_PROC		2
  	{ "_swapdev" },
! #define	X_SWAPDEV	3
  	{ "_Usrptmap" },
! #define	X_USRPTMA	4
  	{ "_usrpt" },
! #define	X_USRPT		5
  	{ "_nswap" },
! #define	X_NSWAP		6
  	{ "_nproc" },
  #define	X_NPROC		7
  	{ "_dmmin" },
***************
*** 194,199 ****
--- 194,201 ----
  		fprintf(stderr, "No kmem\n");
  		exit(1);
  	}
+ 	if (firstchar == 'u')
+ 		nl[X_BOOTTIME+1].n_name = "";
  	nlist("/vmunix", nl);
  	if (nl[0].n_type==0) {
  		fprintf(stderr, "No namelist\n");
