From hp-sdd!ken@sdcsvax.ucsd.edu  Wed Nov 25 11:30:41 1987
Date: Wed, 25 Nov 87 11:28:59 PST
From: Ken Stone <hp-sdd!ken@sdcsvax.ucsd.edu>
Return-Path: <hp-sdd!ken>
Subject: non-verbose ftp can hang in an infinite loop
Index: ucb/ftp/ftp.c 4.3BSD

Description:
	When ftp is run with verbose turned off and gets an error 421 from
	the remote server, it never returns from the function getreply().
	The problem is in the while loop that reads chars looking for a 
	reply.  If EOF is detected when it should be, the logic is correct.
	But if the connection closes too soon and EOF pops up unexpectedly,
	you end up stuck in the char read loop wth no hope of exit.  The 
	solution is to move the error code setup and return call out of the
	check for verbose mode.  The only thing extra verbose mode should 
	do is print the error message to stdout. Non-verbose mode prints
	only a terse error message to indicate a lost connection.

Repeat-By:
	Run ftp from a script to a host that refuses ftp connections with
	error 421 ...

Fix:
	Apply this context diff using patch (or whatever).  Basically, it 
	makes getreply() do the same thing whether verbose is set or not
	and restricts the verbose to just output messages.

RCS file: RCS/ftp.c,v
retrieving revision 1.1
retrieving revision 1.3
diff -c -r1.1 -r1.3
*** /tmp/,RCSt1026611	Wed Nov 25 11:26:08 1987
--- /tmp/,RCSt2026611	Wed Nov 25 11:26:11 1987
***************
*** 287,298 ****
  					return (0);
  				}
  				lostpeer();
! 				if (verbose) {
  					printf("421 Service not available, remote server has closed connection\n");
! 					(void) fflush(stdout);
! 					code = 421;
! 					return(4);
! 				}
  			}
  			if (c != '\r' && (verbose > 0 ||
  			    (verbose > -1 && n == '5' && dig > 4))) {
--- 287,299 ----
  					return (0);
  				}
  				lostpeer();
! 				if (verbose) 
  					printf("421 Service not available, remote server has closed connection\n");
! 				else
! 					printf("Lost connection.\n");
! 				(void) fflush(stdout);
! 				code = 421;
! 				return(4);
  			}
  			if (c != '\r' && (verbose > 0 ||
  			    (verbose > -1 && n == '5' && dig > 4))) {
