From guy@Sun.COM Wed Dec  2 12:09:22 1987
Date: Wed, 2 Dec 87 12:06:15 PST
From: guy@Sun.COM (Guy Harris)
To: bostic@okeeffe.Berkeley.EDU
Subject: Sun fixes to "leave"
Index: ucb/leave.c 4.3BSD

Don't dereference null pointers.

Properly check the syntax of the "hhmm" argument (the standard "leave" will
not reject "leave 12:30", but it won't treat it properly, either).

Send error messages to the standard error.

*** leave.c	Fri May 31 09:19:03 1985
--- /tmp/leave.c	Wed Dec  2 12:04:28 1987
***************
*** 15,20 ****
--- 15,21 ----
  #endif not lint
  
  #include <stdio.h>
+ #include <ctype.h>
  #include <signal.h>
  /*
   * leave [[+]hhmm]
***************
*** 32,44 ****
  main(argc, argv)
  char **argv;
  {
! 	long when, tod, now, diff, hours, minutes;
  	char *cp;
  	int *nv;
! 	int atoi();
  	int *localtime();
  
! 	strcpy(origlogin, getlogin());
  	if (argc < 2) {
  		printf("When do you have to leave? ");
  		fflush(stdout);
--- 33,49 ----
  main(argc, argv)
  char **argv;
  {
! 	long when, now, diff, hours, minutes;
  	char *cp;
  	int *nv;
! 	int gethm();
  	int *localtime();
  
! 	if ((cp = getlogin()) == NULL) {
! 		fprintf(stderr, "leave: You are not logged in\n");
! 		exit(1);
! 	}
! 	strcpy(origlogin, cp);
  	if (argc < 2) {
  		printf("When do you have to leave? ");
  		fflush(stdout);
***************
*** 50,60 ****
  		exit(0);
  	if (*cp == '+') {
  		cp++;
! 		if (*cp < '0' || *cp > '9')
  			usage();
- 		tod = atoi(cp);
- 		hours = tod / 100;
- 		minutes = tod % 100;
  		if (minutes < 0 || minutes > 59)
  			usage();
  		diff = 60*hours+minutes;
--- 55,62 ----
  		exit(0);
  	if (*cp == '+') {
  		cp++;
! 		if (!gethm(cp, &hours, &minutes))
  			usage();
  		if (minutes < 0 || minutes > 59)
  			usage();
  		diff = 60*hours+minutes;
***************
*** 61,75 ****
  		doalarm(diff);
  		exit(0);
  	}
! 	if (*cp < '0' || *cp > '9')
  		usage();
- 	tod = atoi(cp);
- 	hours = tod / 100;
  	if (hours > 12)
  		hours -= 12;
  	if (hours == 12)
  		hours = 0;
- 	minutes = tod % 100;
  
  	if (hours < 0 || hours > 12 || minutes < 0 || minutes > 59)
  		usage();
--- 63,74 ----
  		doalarm(diff);
  		exit(0);
  	}
! 	if (!gethm(cp, &hours, &minutes))
  		usage();
  	if (hours > 12)
  		hours -= 12;
  	if (hours == 12)
  		hours = 0;
  
  	if (hours < 0 || hours > 12 || minutes < 0 || minutes > 59)
  		usage();
***************
*** 84,90 ****
  	while (diff < 0)
  		diff += 12*60;
  	if (diff > 11*60) {
! 		printf("That time has already passed!\n");
  		exit(1);
  	}
  	doalarm(diff);
--- 83,89 ----
  	while (diff < 0)
  		diff += 12*60;
  	if (diff > 11*60) {
! 		fprintf(stderr, "That time has already passed!\n");
  		exit(1);
  	}
  	doalarm(diff);
***************
*** 93,102 ****
  
  usage()
  {
! 	printf("usage: leave [[+]hhmm]\n");
  	exit(1);
  }
  
  doalarm(nmins)
  long nmins;
  {
--- 92,120 ----
  
  usage()
  {
! 	fprintf(stderr, "usage: leave [[+]hhmm]\n");
  	exit(1);
  }
  
+ int
+ gethm(cp, hp, mp)
+ register char *cp;
+ int *hp, *mp;
+ {
+ 	register char c;
+ 	register int tod;
+ 
+ 	tod = 0;
+ 	while ((c = *cp++) != '\0') {
+ 		if (!isdigit(c))
+ 			return(0);
+ 		tod = tod * 10 + (c - '0');
+ 	}
+ 	*hp = tod / 100;
+ 	*mp = tod % 100;
+ 	return(1);
+ }
+ 
  doalarm(nmins)
  long nmins;
  {
***************
*** 172,177 ****
--- 190,196 ----
  int secs;
  {
  	int n;
+ 	register char *l;
  
  	while (secs > 0) {
  		n = 100;
***************
*** 180,186 ****
  		secs -= n;
  		if (n > 0)
  			sleep(n);
! 		if (strcmp(origlogin, getlogin()))
  			exit(0);
  	}
  }
--- 199,208 ----
  		secs -= n;
  		if (n > 0)
  			sleep(n);
! 		l = getlogin();
! 		if (l == NULL)
! 			exit(0);
! 		if (strcmp(origlogin, l) != 0)
  			exit(0);
  	}
  }

