From chris@gyre.umd.edu  Tue Mar 15 11:25:06 1988
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.59/1.26)
	id AA19681; Tue, 15 Mar 88 11:25:06 PST
Received: from [128.8.128.77] by ucbvax.Berkeley.EDU (5.58/1.26)
	id AA22510; Tue, 15 Mar 88 09:38:06 PST
Received: by gyre.umd.edu (5.58/4.7)
	id AA03972; Tue, 15 Mar 88 11:27:10 EST
Date: Tue, 15 Mar 88 11:27:10 EST
From: Chris Torek <chris@gyre.umd.edu>
Message-Id: <8803151627.AA03972@gyre.umd.edu>
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Subject: rlogin loses tty settings

Index: ucb/rlogin.c 4.3BSD Fix

Description:
	When connecting to a peer that accepts the connexion but
	immediately closes it (for whatever reason), rlogin can
	bollix the tty modes.

Repeat-by:
	Difficult, but the problem is obvious upon examination.

Fix:
	Simply get the terminal modes before attempting the connexion:

RCS file: RCS/rlogin.c,v
retrieving revision 1.3
diff -c2 -r1.3 rlogin.c
*** /tmp/,RCSt1003944	Tue Mar 15 11:20:24 1988
--- rlogin.c	Tue Mar 15 11:16:45 1988
***************
*** 72,75 ****
--- 72,86 ----
  
  /*
+  * tty mode information.
+  */
+ int	defflags, tabflag;
+ int	deflflags;
+ char	deferase, defkill;
+ struct	tchars deftc;
+ struct	ltchars defltc;
+ struct	tchars notc =	{ -1, -1, -1, -1, -1, -1 };
+ struct	ltchars noltc =	{ -1, -1, -1, -1, -1, -1 };
+ 
+ /*
   * The following routine provides compatibility (such as it is)
   * between 4.2BSD Suns and others.  Suns have only a `ttysize',
***************
*** 165,168 ****
--- 176,192 ----
  		(void) strcat(term, speeds[ttyb.sg_ospeed]);
  	}
+ 
+ 	/* set up the state, in case we lose peer early */
+ 	defflags = ttyb.sg_flags;
+ 	tabflag = defflags & TBDELAY;
+ 	defflags &= ECHO | CRMOD;
+ 	deferase = ttyb.sg_erase;
+ 	defkill = ttyb.sg_kill;
+ 	(void) ioctl(0, TIOCLGET, (char *)&deflflags);
+ 	(void) ioctl(0, TIOCGETC, (char *)&deftc);
+ 	notc.t_startc = deftc.t_startc;
+ 	notc.t_stopc = deftc.t_stopc;
+ 	(void) ioctl(0, TIOCGLTC, (char *)&defltc);
+ 
  	(void) get_window_size(0, &winsize);
  	(void) signal(SIGPIPE, lostpeer);
***************
*** 195,222 ****
  int	copytochild(), writeroob();
  
- int	defflags, tabflag;
- int	deflflags;
- char	deferase, defkill;
- struct	tchars deftc;
- struct	ltchars defltc;
- struct	tchars notc =	{ -1, -1, -1, -1, -1, -1 };
- struct	ltchars noltc =	{ -1, -1, -1, -1, -1, -1 };
- 
  doit(oldmask)
  {
  	int exit();
- 	struct sgttyb sb;
  
- 	(void) ioctl(0, TIOCGETP, (char *)&sb);
- 	defflags = sb.sg_flags;
- 	tabflag = defflags & TBDELAY;
- 	defflags &= ECHO | CRMOD;
- 	deferase = sb.sg_erase;
- 	defkill = sb.sg_kill;
- 	(void) ioctl(0, TIOCLGET, (char *)&deflflags);
- 	(void) ioctl(0, TIOCGETC, (char *)&deftc);
- 	notc.t_startc = deftc.t_startc;
- 	notc.t_stopc = deftc.t_stopc;
- 	(void) ioctl(0, TIOCGLTC, (char *)&defltc);
  	(void) signal(SIGINT, SIG_IGN);
  	setsignal(SIGHUP, exit);
--- 219,226 ----
