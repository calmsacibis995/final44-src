From chris@gyre.umd.edu  Fri May  6 07:04:56 1988
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.59/1.28)
	id AA17383; Fri, 6 May 88 07:04:56 PDT
Received: from gyre.umd.edu by ucbvax.Berkeley.EDU (5.59/1.28)
	id AA12610; Fri, 6 May 88 00:18:55 PDT
Received: by gyre.umd.edu (5.58/4.7)
	id AA04326; Fri, 6 May 88 03:17:31 EDT
Date: Fri, 6 May 88 03:17:31 EDT
From: Chris Torek <chris@gyre.umd.edu>
Message-Id: <8805060717.AA04326@gyre.umd.edu>
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Subject: systat -iostat gets integer overflow

Index: ucb/systat/iostat.c 4.3BSD Fix

Description:
	If enough cpu time has elapsed, systat -iostat loops `forever'
	(actually just long enough to be painful) calculating cpu bars.

Repeat-by:
	luck

Fix:
	Beware integer overflow: do the work in double.  I also changed
	histogram() to be more paranoid about negative values.

	This includes the previous `obvious' rounding fix.

	(Say, why are all the would-be tabs in systat *.c spaces?)

RCS file: RCS/iostat.c,v
retrieving revision 1.2
diff -c2 -r1.2 iostat.c
*** /tmp/,RCSt1004153	Fri May  6 02:44:47 1988
--- iostat.c	Fri May  6 02:44:43 1988
***************
*** 299,303 ****
          wmove(wnd, row, INSET);
  #define CPUSCALE        0.5
!         histogram(100 * s.cp_time[o] / time, 50, CPUSCALE);
  }
  
--- 299,303 ----
          wmove(wnd, row, INSET);
  #define CPUSCALE        0.5
!         histogram(100.0 * s.cp_time[o] / time, 50, CPUSCALE);
  }
  
***************
*** 308,319 ****
  {
          char buf[10];
!         register int k;
!         register int v = (int)(val * scale) + 0.5;
  
!         k = MIN(v, colwidth);
!         if (v > colwidth) {
                  sprintf(buf, "%4.1f", val);
!                 k -= strlen(buf);
!                 while (k--)
                          waddch(wnd, 'X');
                  waddstr(wnd, buf);
--- 308,316 ----
  {
          char buf[10];
!         register int k = (int)(val * scale + 0.5);
  
!         if (k > colwidth) {
                  sprintf(buf, "%4.1f", val);
! 		for (k = colwidth - strlen(buf); --k >= 0;)
                          waddch(wnd, 'X');
                  waddstr(wnd, buf);
***************
*** 320,324 ****
                  return;
          }
!         while (k--)
                  waddch(wnd, 'X');
          wclrtoeol(wnd);
--- 317,321 ----
                  return;
          }
!         while (--k >= 0)
                  waddch(wnd, 'X');
          wclrtoeol(wnd);
