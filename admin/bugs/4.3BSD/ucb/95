From gouldbugs-request@brl-smoke.arpa Fri May 15 06:19:02 1987
Date:     Fri, 15 May 87 3:11:38 EDT
From: Doug Kingston <dpk@brl.arpa>
To: gouldbugs@brl.arpa
Subject: NULL pointers, unsigned uids
Index: ucb/lastcomm/lastcomm.c 4.3BSD

Fix problems dealing with negative UIDs and dereferencing NULL.
You may have fixed these already, but in case not...

*** /tmp/,RCSt1002264	Fri May 15 03:08:16 1987
--- lastcomm.c	Tue Jan 27 13:31:04 1987
***************
*** 1,5 ****
  #ifndef lint
! static char RCSid[] = "@(#)$Header: lastcomm.c,v 1.2 86/11/17 17:04:58 root BRL $";
  #endif
  
  /*
--- 1,5 ----
  #ifndef lint
! static char RCSid[] = "@(#)$Header: lastcomm.c,v 1.4 87/01/27 13:30:53 ron BRL $";
  #endif
  
  /*
***************
*** 20,26 ****
  #endif not lint
  
  #ifndef lint
! static char *rcsid = "@(#) (Gould) $Header: lastcomm.c,v 1.2 86/11/17 17:04:58 root BRL $";
  /* static	char *UTXwhat = "@(#) UTX/32 1.3  lastcomm.c ver 1.6"; */
  /* static char sccsid[] = "@(#)lastcomm.c	5.1 (Berkeley) 5/31/85"; */
  #endif not lint
--- 20,26 ----
  #endif not lint
  
  #ifndef lint
! static char *rcsid = "@(#) (Gould) $Header: lastcomm.c,v 1.4 87/01/27 13:30:53 ron BRL $";
  /* static	char *UTXwhat = "@(#) UTX/32 1.3  lastcomm.c ver 1.6"; */
  /* static char sccsid[] = "@(#)lastcomm.c	5.1 (Berkeley) 5/31/85"; */
  #endif not lint
***************
*** 180,189 ****
  	register struct acct *acp;
  {
  	register int j;
  
  	for (j = 1; j < argc; j++) 
! 		if (strcmp(getname(acp->ac_uid), argv[j]) &&
! 		    strcmp(getdev(acp->ac_tty), argv[j]) &&
  		    strncmp(acp->ac_comm, argv[j], fldsiz(acct, ac_comm)))
  			break;
  	return (j == argc);
--- 180,193 ----
  	register struct acct *acp;
  {
  	register int j;
+ 	register char *cp;
  
  	for (j = 1; j < argc; j++) 
! 		if (
! 		    (!(cp = getname(acp->ac_uid)) || strcmp(cp, argv[j]))
! 				&&
! 		    (!(cp = getdev(acp->ac_tty)) || strcmp(cp, argv[j]))
! 				&&
  		    strncmp(acp->ac_comm, argv[j], fldsiz(acct, ac_comm)))
  			break;
  	return (j == argc);
***************
*** 206,211 ****
--- 210,216 ----
  	register struct passwd *pw;
  	static init;
  	struct passwd *getpwent();
+ 	static char tmpstr[10];
  
  	if (uid >= 0 && uid < NUID && names[uid][0])
  		return (&names[uid][0]);
***************
*** 213,219 ****
  		return (outrangename);
  	if (init == 2) {
  		if (uid < NUID)
! 			return (0);
  		setpwent();
  		while (pw = getpwent()) {
  			if (pw->pw_uid != uid)
--- 218,224 ----
  		return (outrangename);
  	if (init == 2) {
  		if (uid < NUID)
! 			goto strangeuid;
  		setpwent();
  		while (pw = getpwent()) {
  			if (pw->pw_uid != uid)
***************
*** 224,237 ****
  			return (outrangename);
  		}
  		endpwent();
! #ifdef gould
! 		/*
! 		 * P-bit hates nulls
! 		 */
! 		return("");
! #else
! 		return (0);
! #endif
  	}
  	if (init == 0)
  		setpwent(), init = 1;
--- 229,235 ----
  			return (outrangename);
  		}
  		endpwent();
! 		goto strangeuid;
  	}
  	if (init == 0)
  		setpwent(), init = 1;
***************
*** 252,262 ****
  	}
  	init = 2;
  	endpwent();
! #ifdef gould
! 	return("");
! #else
! 	return (0);
! #endif
  }
  
  #include <sys/dir.h>
--- 250,258 ----
  	}
  	init = 2;
  	endpwent();
! strangeuid:
! 	sprintf(tmpstr, "(%d)", uid);
! 	return tmpstr;
  }
  
  #include <sys/dir.h>

