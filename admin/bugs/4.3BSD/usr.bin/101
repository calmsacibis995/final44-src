Subject: tbl dumps core with legal table spec
Index: usr.bin/tbl 4.3BSD

Note 30       tbl dumps core with legal table spec   2 responses
thomas@alberto                               6:48 pm  Apr 18, 1986

SHORT BUT DESCRIPTIVE ONE LINE TITLE:  (Type on next line)
tbl dumps core with legal table spec

Operating System:       4.2 BSD	
Patch Level:  		
Hardware Environment:   DEC VAX-11/780 
Organization:		Gould-CSD/Urbana      (217) 384-8500 
                        1101 E. University, Urbana, Il 61801

MODULE NAME:
tbl(1)

BUG PORTED TO UTX?

yes

DESCRIPTION OF PROBLEM:
tbl(1) dumps core on the following (short!) table specification:

--------- cut here --------
.TS
tab(;);
c c
_ ^.
test;test
;
.TE
--------- cut here --------

SAMPLE BROKEN OUTPUT:

On al:

	Illegal instruction (core dumped)

is printed.  On the vax:

	Bus error (core dumped)

is printed.

HOW TO REPRODUCE THE PROBLEM:  (preferably a shell script)

Put the above table in a file and type:

	tbl <filename>

tbl will generate some output and then dump core.

SUGGESTED FIX:

OTHER COMMENTS:
The above is a perfectly legal table specification -- there isn't anything
strange at all about it -- no funny operators or anything.

if the line "_ ^." is changed to "_ _." or "^ ^." the program does not
dump core, so it seems that this is the line tbl is choking on.

CURRENT WORKING DIRECTORY:
	/tmp/thomas

PATH:
	.:/mnt/thomas/Bin:/secunix/bin:/usr/local:/usr/ucb:/bin:/usr/bin:/etc:/usr/new

==== ==== ====
Response 1    to Note 30  
	hapke@alberto                           8:01 am  Apr 21, 1986  

In case you're wondering, the ^ indicates that the previous line of data
should span vertically (downward) into the current input line.

Since the input line is too short to span, I wonder if that causes the problem.

==== ==== ====
Response 2    to Note 30  
	thomas@alberto                         11:43 am  Apr 21, 1986  

No, the input is not too short to span.  The input text being spanned in
the example is "test."  In the REAL table I was constructing, the input
text was even longer.

Now, to get around the problem, change the table text as follows:

Old table		New table
---------		---------
.TS			.TS
tab(;);			tab(;);
c c			c c
_ ^.			c ^.			<--- change  "_ ^."  to  "c ^."
test;test		test;test
;			_;			<--- change  ";"  to  "_;"
.TE			.TE

Note that the change uses a standard feature of tbl which allows one to
put a horizontal line in place of an entry by just putting a "_" in place
of the entry data.  This is supposed to be equivilent to putting a "_" in
the table format section.  Obviously it is not.  In other words, there is
a bug in tbl.

It occurs to me that there are probably some who don't know tbl very well,
so this is a perfect oportunity to explain in greater detail the meaning
behind the various entries in the example table.  So, here goes nothing...

.TS		<-- table start macro.  Tells tbl to process the following text.

tab(;);		<-- tells tbl to use ";" as the field delimiter.  The ";"
		    at the end of the line is not to be confused with the first
		    ";".  The last ";" tells tbl that this is the end of the
		    table options section.  Other options that could have
		    been selected are "center" (center the table on the page),
		    "box" (draw a box around the table), and others I won't
		    bother mentioning here.  Various options are separated
		    by a comma, so the options line could have read:

			"center, tab(;), box;"

c c		<-- This is the first line of the table format section.  It
		    says that there are to be two columns, with the data
		    centered in the column.

_ ^.		<-- This is the another line in the table format section.
		    It says that there are two columns.  The first column
		    contains a horizontal line spanning the full width of
		    the column.  The second column is a vertical continuation
		    of the previous second column (from the first line).
		    The "." at the end of this line indicates that this is
		    the end of the table format section.

test;test	<-- This is the first line of table data.  The line contains
		    data for the two columns specified in the first line of
		    the table format section.

;		<-- This is the second line of table data.  No data is really
		    specified because in the format section all the details
		    about this particular row are already specified.  Any data
		    that would be placed here would be superfluous.

.TE		<--  table end macro.  Tells tbl to stop processing text.

Thus a table contains three sections:

.TS
<options>;
<format>.
<data>
.TE

The tbl tutorial is really not too bad.  It explains reasonably well the
information needed to construct a table.  Also, it contains several examples
at the end.  The tbl tutorial is "Tbl - A Program to Format Tables."  The
particular one I've been using is dated January 16, 1979.  It should be
in the library.

