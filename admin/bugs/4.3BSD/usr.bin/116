From @emory.arpa:arnold@EMORYU1.ARPA  Thu Dec  3 11:26:02 1987
Date: Thu, 3 Dec 87 13:43:09 EST
From: "Arnold D. Robbins" <arnold@EMORYU1.ARPA>
To: 4bsd-bugs%berkeley.edu@relay.cs.net
Subject: UUCP can memory fault
Index: usr.bin/uucp/cntrl.c 4.3BSD

Description:
	If a file to be transferred is in a directory that is not
	listed as valid in /usr/lib/uucp/USERFILE, uucico can
	memory fault. It attempts to close a non-open FILE *.
Repeat-By:
	Try and ship a file from a disallowed directory.
Fix:
	There are two places where access is found to be bad, but the
	reporting is done in the second. The first does a 'goto' to get to
	the second. Where the goto goes to, though, is an fclose. Only if
	it got there via the goto, the file isn't open. Got that?

	The fix is to check if the file is open. Apply the following
	patch; your line numbers may vary, actual line numbers will
	probably be different.

*** /tmp/,RCSt1007158	Thu Dec  3 13:20:40 1987
--- cntrl.c	Thu Dec  3 13:20:07 1987
***************
*** 245,252 ****
  			&&  (stbuf.st_mode & ANYREAD) == 0) {
  		e_access:;
  				/*  access denied  */
! 				fclose(fp);
! 				fp = NULL;
  				TransferSucceeded = 1; /* else will keep sending */
  				logent("DENIED", "ACCESS");
  				USRF(USR_LOCACC);
--- 245,254 ----
  			&&  (stbuf.st_mode & ANYREAD) == 0) {
  		e_access:;
  				/*  access denied  */
! 				if (fp != NULL) {   /* could come from goto */
! 					fclose(fp);
! 					fp = NULL;
! 				}
  				TransferSucceeded = 1; /* else will keep sending */
  				logent("DENIED", "ACCESS");
  				USRF(USR_LOCACC);

