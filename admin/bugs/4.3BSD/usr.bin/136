From elsie!ado@ncifcrf.gov  Mon Apr 18 11:05:27 1988
Date: Mon, 18 Apr 88 13:24:44 EDT
From: elsie!ado@ncifcrf.gov (Arthur David Olson)
Subject: MORE/bsd 4.3 (4/13/87) /usr/{,5}bin/egrep mishandles "^." (with fix)
#Index: usr.bin/egrep.y MORE/bsd 4.3 (4/13/87)
Index: usr.bin/egrep.y 4.3BSD

Description:
	Henry Spencer's description and Repeat-By follow:
> The following bug appears to be present in egrep (the Bell/AT&T one, not
> the comp.sources.unix one) on all extant versions of Unix.  Certainly it
> is present in V7, 4.2BSD, Sunnix 3.2, and 386 System V Release 3.
> 
> 	% echo 0 >foo
> 	% egrep '0.' foo
> 	% egrep '^0.' foo
> 	0
> 	%
> 
> Adding the "^" seems to convince egrep that "." can legitimately match
> newline.  Changing "." to "[^x]" does not change the behavior.  Some quick
> tests suggest that "$" does not produce a similar anomaly.

Fix:
*** 3.2/egrep.y	Sun Apr 17 16:52:25 1988
--- 3.4/egrep.y	Sun Apr 17 16:52:27 1988
***************
*** 1,4 ****
! /*	@(#)egrep.y	3.2	86/12/23	mt Xinu
   *
   * egrep -- print lines containing (or not containing) a regular expression
   *
--- 1,4 ----
! /*	@(#)egrep.y	3.4	87/11/08	mt Xinu
   *
   * egrep -- print lines containing (or not containing) a regular expression
   *
***************
*** 17,23 ****
  /*
  static char *sccsid = "@(#)egrep.y	4.4 (Berkeley) 5/29/85";
   */
! static char *SccsId = "@(#)egrep.y	3.2	86/12/23	mt Xinu";
  #include <stdio.h>
  #include <sys/types.h>
  #include <sys/stat.h>
--- 17,23 ----
  /*
  static char *sccsid = "@(#)egrep.y	4.4 (Berkeley) 5/29/85";
   */
! static char *SccsId = "@(#)egrep.y	3.4	87/11/08	mt Xinu";
  #include <stdio.h>
  #include <sys/types.h>
  #include <sys/stat.h>
***************
*** 301,311 ****
  				for (i=0; i<num; i++) {
  					curpos = positions[pos];
  					if ((k = name[curpos]) >= 0)
! 						if (
! 							(k == c)
! 							| (k == DOT)
! 							| (k == CCL && member(c, right[curpos], 1))
! 							| (k == NCCL && member(c, right[curpos], 0))
  						) {
  							number = positions[foll[curpos]];
  							newpos = foll[curpos] + 1;
--- 301,314 ----
  				for (i=0; i<num; i++) {
  					curpos = positions[pos];
  					if ((k = name[curpos]) >= 0)
! 					    if (
! 						k == c ||
! 						(c != '\n' &&
! 						(k == DOT ||
! 					        (k == CCL &&
! 						member(c, right[curpos], 1)) ||
! 						(k == NCCL &&
! 						member(c, right[curpos], 0))))
  						) {
  							number = positions[foll[curpos]];
  							newpos = foll[curpos] + 1;

