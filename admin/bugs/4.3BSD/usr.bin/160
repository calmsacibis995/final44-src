Subject: /*NOTREACHED*/ broken in cc and lint
Index: usr.bin/lint 4.3BSD

Note 179      /*NOTREACHED*/ broken in cc and lint   3 responses
aglew@alberto                                6:53 pm  Apr 25, 1986

SHORT BUT DESCRIPTIVE ONE LINE TITLE:  (Type on next line)
    /*NOTREACHED*/ broken in cc and lint

Operating System:  	UTX/32
Release:  		1.1, 1.2
Patch Level:  		C
Product Name:           UTX/32
Hardware Environment:   9080 
Organization:		Gould-CSD/Urbana      (217) 384-8500 
                        1101 E. University, Urbana, Il 61801

MODULE NAME:

SPR TYPE:  (Software/Doc/ER)
    Software

PRIORITY:  (1 = High, 5 = Low)
    3

DESCRIPTION OF PROBLEM:
    As I was instrumenting the C compiler putting statistics gathering
    routines in, I noticed a brokenness in scan.c that explained why
    I was not able to clean up persist `not reached' errors in kernel 
    makes.

    The /*NOTREACHED*/ comment directive has no effect whatsoever, neither
    in cc nor in lint (which borrows most code from cc).

SAMPLE BROKEN OUTPUT:
    Script started on Fri Apr 25 18:15:06 1986
    csh aglew mycroft /mnt/aglew/hack 23 : cat notreached.c
    main()
    {
	return;
	
	foo();
	bar();
    
	return;
    
	/*NOTREACHED*/
	foofoo();
	barbar();
    }
    csh aglew mycroft /mnt/aglew/hack 24 : lint notreached.c
    notreached.c:
    notreached.c(3): warning: statement not reached
		^^^ first warning ok
    notreached.c(8): warning: statement not reached

	        ^^^ second warning should not be given
    csh aglew mycroft /mnt/aglew/hack 25 : cc notreached.c
    "notreached.c", line 3: warning: statement not reached
    "notreached.c", line 8: warning: statement not reached
    Undefined:
    _foo
    _bar
    _foofoo
    _barbar
    csh aglew mycroft /mnt/aglew/hack 26 : off
    csh aglew mycroft /mnt/aglew/hack 27 : 
    script done on Fri Apr 25 18:15:40 1986

HOW TO REPRODUCE THE PROBLEM:  (preferably a shell script)

SUGGESTED FIX:
    In /usr/src/lib/ccom/scan.c, function lxcom(), about 37% of the way
    through the file, there are two separate "case 'N':" blocks, under
    incompatible #ifdefs. Combine them into case requiring no #ifdefs,
    as below (since both cc and cpp are supposed to understand
    /*NOTREACHED*/). 

	    case 'N': 
		lxget(c, LEXLET);
#	       ifndef LINT
		if ( !strcmp(yytext, "NOBASE") ) {
		    faraway = 1;
		}
		else
#	       endif
		if ( !strcmp(yytext, "NOTREACHED") ) {
		    reached = 1;
		}
		continue;

OTHER COMMENTS:
    Since our lint and cc come from the same place, why not have a switch to
    turn on full lint checking when compiling as cc?

    ANSI C #pragmas should be supported.

CURRENT WORKING DIRECTORY:
	/mnt/aglew

PATH:
	.:/mnt/aglew/hack:/mnt/aglew/bin:/usr/local:/usr/new:/usr/ucb:/bin:/usr/bin:/usr/games

==== ==== ====
Response 2    to Note 179 
	willcox@ccvaxa                          8:06 am  Jul 10, 1986  

Just to clear up a possible misconception - /* NOTREACHED */,
/* VARARGS */, and such are not supposed to have any effect on cc.
Lint is the only one that pays any attention to them.  In fact, when
compiling a program, cpp normally strips out all comments.

==== ==== ====
Response 3    to Note 179 
	aglew@ccvaxa                            8:54 am  Jul 10, 1986  

The compiler, not lint, generates warning messages "loop not entered at top",
and "code not reached". Either these should not be generated by the compiler,
in which case they should be within ifdef LINTs, or they should turn-offable,
in which case the code in scan.c which recognizes NOTREACHED should be outside
the ifdef LINT.

In any case, no matter who did the recognition, recognition of `NOBASE' was
interfering with recognition of `NOTREACHED'.

