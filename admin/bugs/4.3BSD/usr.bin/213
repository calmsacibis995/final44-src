From serge@okeeffe.Berkeley.EDU  Thu Aug 31 23:22:57 1989
Date: Thu, 31 Aug 89 23:22:52 -0700
From: serge@okeeffe.Berkeley.EDU (serge)
Subject: finger prints control characters
Index: usr.bin/finger/lprint.c 4.3BSD

Description:
	Finger prints ~/.plan and ~/.project without filtering out
	control characters, thus allowing trojan horses.
Fix:
*** /usr/src/usr.bin/finger/lprint.c	Mon Aug 14 17:48:17 1989
--- lprint.c	Thu Aug 31 23:09:39 1989
***************
*** 25,30 ****
--- 25,31 ----
  #include <sys/time.h>
  #include <tzfile.h>
  #include <stdio.h>
+ #include <ctype.h>
  #include "finger.h"
  #include "pathnames.h"
  
***************
*** 214,229 ****
  show_text(directory, file_name, header)
  	char *directory, *file_name, *header;
  {
! 	register int fd, n;
  
  	(void)sprintf(tbuf, "%s/%s", directory, file_name);
! 	if ((fd = open(tbuf, O_RDONLY, 0)) < 0)
  		return(0);
  	(void)printf("%s\n", header);
! 	(void)fflush(stdout);
! 	while ((n = read(fd, tbuf, sizeof(tbuf))) > 0)
! 		if (write(1, tbuf, n) != n)
! 			break;
! 	(void)close(fd);
  	return(1);
  }
--- 215,262 ----
  show_text(directory, file_name, header)
  	char *directory, *file_name, *header;
  {
! 	register FILE *fp;
! 	register int c;
! 	register int lastc;
  
  	(void)sprintf(tbuf, "%s/%s", directory, file_name);
! 	if ((fp = fopen(tbuf, "r")) == NULL)
  		return(0);
  	(void)printf("%s\n", header);
! 	while ((c = getc(fp)) != EOF) {
! 		lastc = c;
! 		vputc(c, stdout);
! 	}
! 	if (lastc != '\n')
! 		(void) putchar('\n');
! 	(void)fclose(fp);
  	return(1);
+ }
+ 
+ vputc(c, iop)
+ 	register int	c;
+ 	register FILE	*iop;
+ {
+ 	int		meta = 0;
+ 
+ 	if (!isascii(c)) {
+ 		(void) putc('M', iop);
+ 		(void) putc('-', iop);
+ 		c = toascii(c);
+ 		meta = 1;
+ 	}
+ 
+ 	/*
+ 	 * NOTE: Can't use isspace(), because it includes '\v', '\f', and '\r',
+ 	 *	 in addition to ' ', '\t', and '\n'.
+ 	 */
+ 	if (isprint(c) || c == ' ' || !meta && (c == '\t' || c == '\n')) {
+ 		(void) putc(c, iop);
+ 	} else if (c == 0177) {		/* delete */
+ 		(void) putc('^', iop);
+ 		(void) putc('?', iop);
+ 	} else {
+ 		(void) putc('^', iop);
+ 		(void) putc(c + '@', iop);
+ 	}
  }
