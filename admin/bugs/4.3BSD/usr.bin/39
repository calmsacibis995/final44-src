From klimbal@ef.ecn.purdue.edu  Mon Dec 22 07:00:10 1986
Date: Mon, 22 Dec 86 09:59:41 EST
From: klimbal@ef.ecn.purdue.edu (Philip J Klimbal)
Subject: comment processing error in cb
Index: usr.bin/cb.c 4.3BSD

Description:
	In the comment() routine of /usr/bin/cb an error in the code 
	prevents comments of this type:

		/*
 		 * comment
		 */

	from being processed correctly.  Upon entering the routine a varaiable
	(i) is set to the current position of the index into the string array.
	The comment() routine failes to reset (i) after puts() is called so the
	test for end of comment fails unless the "*/" occurs at a location
	which is farther into the page than the initial value to which (i) was
	set.  The fix is to simply add code to set i = j after the puts call
	is made.

	On an unrelated matter you may also wish to change the size of the
	string buffer to something a little more reasonable.  We have found
	that our engineers have a hard time overflowing the buffer if it
	is set to 1000 characters (perhaps a little overkill).

	--Phil Klimbal
	Engineering Computer Network
	Purdue University

Repeat-By:
	Try processing any program with comments of the above type.

Fix:

Original routine:
>comment(){
>        int i = j;
>
>        while ((c = getch()) != EOF) {
>                string[j++] = c;
>                switch(c) {
>                case '/':
>                        if (j > i + 1 && string[j-2] == '*')
>                                return;
>                        break;
>                case '\n':
>                        puts();
>                        sflg = 1;
>                        break;
>                }
>        }
>}


Modified version:
>>comment(){
>>        int i = j;
>>
>>        while ((c = getch()) != EOF) {
>>                string[j++] = c;
>>                switch(c) {
>>                case '/':
**                        if ((j > (i + 1)) && (string[j-2] == '*'))
>>                                return;
>>                        break;
>>                case '\n':
>>                        puts();
**                        i = j; 
>>                        sflg = 1;
>>                        break;
>>                }
>>        }
>>}
