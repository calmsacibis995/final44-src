From steve@eleazar.Dartmouth.EDU  Fri Feb 17 12:34:02 1989
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.61/1.29)
	id AA22629; Fri, 17 Feb 89 12:34:02 -0800
Received: from dartvax.dartmouth.edu by ucbvax.Berkeley.EDU (5.61/1.33)
	id AA09369; Fri, 17 Feb 89 12:32:51 -0800
Received: from eleazar.dartmouth.edu by dartvax.dartmouth.edu with SMTP (5.61D/3.10R)
	id AA20804; Fri, 17 Feb 89 15:34:13 -0500
Received: by eleazar.dartmouth.edu (5.61D/3.3MXLEAF)
	id AA19564; Fri, 17 Feb 89 15:33:17 -0500
Date: Fri, 17 Feb 89 15:33:17 -0500
From: steve@eleazar.Dartmouth.EDU (Steve Campbell)
Message-Id: <8902172033.AA19564@eleazar.dartmouth.edu>
Subject: Long headers cause sendmail loop (5.59, 5.61) +FIX
Index: 	usr.lib/sendmail/src 4.3BSD
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Description:
	Sendmail will loop in sfgets if you feed it a message with a
	header (often the To:) that exceeds sendmail's 2500 byte
	MAXFIELD limit.  The reason is that collect() calls sfgets()
	(at line 124 in collect.c) with a length argument that varies,
	and when the header exceeds 2500 bytes, that argument goes
	negative, causing a loop in sfgets.
Repeat-By:
	Feed sendmail a message with enough recipients to exceed 2500
	bytes.  This can happen when the original recipients' addresses
	are "user" but get rewritten to "user@domain".
Fix:
	The complete fix is to make collect() more intelligent about
	handling long headers.  Would someone like to step forward?
	A damage-control fix is to make sfgets check its length arg.
	Here are patches for 5.61.  

*** /tmp/,RCSt1013479	Wed Feb 15 14:44:23 1989
--- util.c	Wed Feb 15 13:05:00 1989
***************
*** 582,587 ****
--- 582,594 ----
  	register char *p;
  	extern readtimeout();
  
+ 	/* check for reasonable siz arg */
+ 	if (siz < 1)
+ 	{
+ 		buf[0] = '\0';
+ 		return (NULL);
+ 	}
+ 
  	/* set the timeout */
  	if (ReadTimeout != 0)
  	{
