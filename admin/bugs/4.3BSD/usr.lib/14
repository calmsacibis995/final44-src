Return-Path: <entropy!hilbert!hubert@uw-beaver.arpa>
Date: Thu, 19 Jun 86 11:44:54 PDT
From: Steve Hubert <entropy!hilbert!hubert@uw-beaver.arpa>
Subject: atan2 function in libm.
Index: 	usr.lib/libm/VAX/atan2.s 4.3BSD (Beta)

Description:
	Atan2 in the new libm seems to be giving the wrong answer for
	arguments in a certain range.  The libom library seems to give
	more reasonable answers.  We are a beta test site and have not
	received the 4.3 distribution so are still running 4.3beta.
	Here is output from the test program below.  The two columns of
	output are values of x and values of 1 - 2/PI * atan(1/x).  The
	truncation to zero (or 1.38e-17) seems to occur too soon in the
	libm case.  Compare the values produced by libm and libom for
	x = 1.1e-10 and 1.2e-10.  It appears to us that libom has it
	right and libm has it wrong.

	When compiled with -lm.          When compiled with -lom.

	atan2: 5e-11     1.38778e-17     atan2: 5e-11     3.1831e-11
	atan2: 6e-11     1.38778e-17     atan2: 6e-11     3.81972e-11
	atan2: 7e-11     1.38778e-17     atan2: 7e-11     4.45634e-11
	atan2: 8e-11     1.38778e-17     atan2: 8e-11     5.09296e-11
	atan2: 9e-11     1.38778e-17     atan2: 9e-11     5.72958e-11
	atan2: 1e-10     1.38778e-17     atan2: 1e-10     6.3662e-11
	atan2: 1.1e-10   1.38778e-17     atan2: 1.1e-10   7.00282e-11
	atan2: 1.2e-10   7.63944e-11     atan2: 1.2e-10   7.63944e-11
	atan2: 1.3e-10   8.27606e-11     atan2: 1.3e-10   8.27606e-11
	atan2: 1.4e-10   8.91268e-11     atan2: 1.4e-10   8.91268e-11
	atan2: 1.5e-10   9.5493e-11      atan2: 1.5e-10   9.5493e-11
	atan2: 1.6e-10   1.01859e-10     atan2: 1.6e-10   1.01859e-10
	atan2: 1.7e-10   1.08225e-10     atan2: 1.7e-10   1.08225e-10
	atan2: 1.8e-10   1.14592e-10     atan2: 1.8e-10   1.14592e-10
	atan2: 1.9e-10   1.20958e-10     atan2: 1.9e-10   1.20958e-10
	atan2: 2e-10     1.27324e-10     atan2: 2e-10     1.27324e-10

Repeat-By:
	Compile the following program with cc file.c -lm and
	cc file.c -lom and compare the output from the two runs.

	#define PI	3.14159265358979323
	#define INC	0.00000000001

	main()
	{
		double x;
		double atan2();
		int i;

		for (i = 5; i <= 20; ++i) {
			x = (double)i * INC;
			printf("atan2: %g   %g\n", x, 1.0 - 2.0 / PI * atan2(1.0 , x));
		}
	}


Steve Hubert
 Dept. of Stat., U. of Wash, Seattle
 {decvax,ihnp4}!uw-beaver!hilbert!hubert
 hilbert!hubert@uw-beaver.arpa
 entropy!hubert@uw-beaver.arpa
 hubert@uw-june.arpa
