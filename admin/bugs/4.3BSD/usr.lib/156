From steve@cs.UMD.EDU Wed May 30 06:43:34 1990
Date: Wed, 30 May 90 09:44:17 -0400
From: steve@cs.UMD.EDU (Steve D. Miller)
To: bostic@okeeffe.Berkeley.EDU
Subject: Sendmail buffer overrun problem
Index:	usr.lib/sendmail/src/deliver.c 4.3BSD [FIX]

Description:
	If sendmail delivers to a mailing list that has in it many addresses
	on the same machine, it will overrun a buffer and core dump on
	machines where sizeof returns an unsigned int.  Since ANSI C
	specifies that sizeof should return an u_int, this means that ANSI-
	compliant C compilers and their not-quite-compliant kin (gcc, the
	MIPS C compiler, and no doubt others) will build a broken sendmail.

Repeat-By:
	Build sendmail with an ANSI-compliant compiler.  Then ask sendmail
	to deliver to enough people on the same machine to make the
	comma-separated list of people consume more than MAXLINE-50 bytes
	of space, where MAXLINE is whatever you define it to be in sendmail.h
	It will lose its lunch.

Fix:
	Apply this change to deliver.c.  This avoids checking an unsigned int
	to see if it's less than zero...

	I think this is the only test of this sort in sendmail, but I have
	not made an exhaustive search.  It does look (from a quick peek
	at trantor.umd.edu) like this problem still exists in sendmail
	5.63.

	-Steve

*** /tmp/,RCSt1007193	Wed May 30 09:30:04 1990
--- deliver.c	Wed May 30 09:30:06 1990
***************
*** 221,227 ****
  			continue;
  
  		/* avoid overflowing tobuf */
! 		if (sizeof tobuf - (strlen(to->q_paddr) + strlen(tobuf) + 2) < 0)
  			break;
  
  		if (tTd(10, 1))
--- 221,227 ----
  			continue;
  
  		/* avoid overflowing tobuf */
! 		if (sizeof tobuf < (strlen(to->q_paddr) + strlen(tobuf) + 2))
  			break;
  
  		if (tTd(10, 1))

