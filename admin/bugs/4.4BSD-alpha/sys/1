From bsdi-users-request@bsdi.com Thu Feb 25 06:33:40 1993
Date: Thu, 25 Feb 93 16:29:04 +0200
From: Yuval Yarom <yval@CS.HUJI.AC.IL>
To: problem@bsdi.com
Subject: (Gamma 3) Sigsuspend(2) problem.
Cc: amnon@CS.HUJI.AC.IL, bsdi-users@bsdi.com, dny@CS.HUJI.AC.IL,
        ury@CS.HUJI.AC.IL
Errors-To: bsdi-users-request@bsdi.com
Sender: bsdi-users-request@bsdi.com
Precedence: bulk
X-Loop: bsdi-users@bsdi.com
Index: sys/kern/kern_sig.c 4.4BSD-alpha


Shalom,
  Sigsuspend(2) reurns prematurely if the process is stopped and continued.
To see this run the program 'main(){pause();}', hit ^Z, and fg.  The reason
for this problem is that sigsuspend ignores the return value of tsleep.
The following patch fixes the problem.

			Yuval
------------------------------------------------------------
*** kern_sig.c.orig	Thu Feb 25 20:24:31 1993
--- kern_sig.c	Thu Feb 25 20:25:48 1993
***************
*** 369,375 ****
  	ps->ps_oldmask = p->p_sigmask;
  	ps->ps_flags |= SA_OLDMASK;
  	p->p_sigmask = uap->mask &~ sigcantmask;
! 	(void) tsleep((caddr_t) ps, PPAUSE|PCATCH, "pause", 0);
  	/* always return EINTR rather than ERESTART... */
  	return (EINTR);
  }
--- 369,375 ----
  	ps->ps_oldmask = p->p_sigmask;
  	ps->ps_flags |= SA_OLDMASK;
  	p->p_sigmask = uap->mask &~ sigcantmask;
! 	while (tsleep((caddr_t) ps, PPAUSE|PCATCH, "pause", 0) == 0) ;
  	/* always return EINTR rather than ERESTART... */
  	return (EINTR);
  }


