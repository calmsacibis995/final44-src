From chris@cs.UMD.EDU  Mon Aug 20 06:16:36 1990
Received: from gyre.cs.umd.edu by okeeffe.Berkeley.EDU (5.63/1.41)
	id AA01805; Mon, 20 Aug 90 06:16:36 -0700
Received: by gyre.cs.UMD.EDU (5.61/UMIACS-0.9/04-05-88)
	id AA02574; Mon, 20 Aug 90 09:16:35 -0400
Date: Mon, 20 Aug 90 09:16:35 -0400
From: chris@cs.UMD.EDU (Chris Torek)
Message-Id: <9008201316.AA02574@gyre.cs.UMD.EDU>
To: reno43-bugs@okeeffe.Berkeley.EDU
Subject: quotacheck core dumps if / has quotas

Index: sbin/quotacheck/quotacheck.c 4.3BSD-Reno Fix

Description:
	Because checkfstab() (in ../fsck/preen.c) does not always
	fork before calling the checking routine, quotacheck winds
	up reading the superblock from location DEV_BSIZE*SBOFF
	if one has quotas on / (with pass number = 1).

Repeat-by:
	See above

Fix:

RCS file: RCS/quotacheck.c,v
retrieving revision 1.3
diff -c2 -r1.3 quotacheck.c
*** /tmp/,RCSt1002526	Mon Aug 20 09:10:08 1990
--- quotacheck.c	Mon Aug 20 09:09:55 1990
***************
*** 49,53 ****
  } un;
  #define	sblock	un.sblk
! long dev_bsize = 1;
  long maxino;
  
--- 49,53 ----
  } un;
  #define	sblock	un.sblk
! long dev_bsize;
  long maxino;
  
***************
*** 223,226 ****
--- 223,227 ----
  	}
  	sync();
+ 	dev_bsize = 1;
  	bread(SBOFF, (char *)&sblock, (long)SBSIZE);
  	dev_bsize = sblock.fs_fsize / fsbtodb(&sblock, 1);
