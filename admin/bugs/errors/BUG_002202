From elsie!ado@alw.nih.gov  Tue Jul 10 14:25:19 1990
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.63/1.41)
	id AA02198; Tue, 10 Jul 90 14:25:19 -0700
Received: from alw.nih.gov by ucbvax.Berkeley.EDU (5.63/1.41)
	id AA21891; Tue, 10 Jul 90 14:25:24 -0700
Received: from nih-csl.dcrt.nih.gov by alw.nih.gov (5.61/alw-2.1)
	id AA21286; Tue, 10 Jul 90 17:23:52 -0400
Received: from elsie.UUCP by nih-csl.dcrt.nih.gov. (4.0/SMI-4.0)
	id AA06957; Tue, 10 Jul 90 17:24:48 EDT
Received: by elsie (4.1/SMI-4.1)
	id AA00632; Tue, 10 Jul 90 17:10:14 EDT
Date: Tue, 10 Jul 90 17:10:14 EDT
From: elsie!ado@alw.nih.gov (Arthur David Olson)
Message-Id: <9007102110.AA00632@elsie>
To: sunbugs@sun.com
Subject: SunOS 4.1 vi muffs "/[X]" if you ":set ic" (with fix)
Cc: 4bsd-bugs@ucbvax.Berkeley.EDU, more-bugs@mtxinu.com


This item was addressed to sunbugs@sun.com.  No reply from Sun is needed.

Workstation-Model:
	3/60		3/110		3/280		386i/150

Serial-Number:
	838F0353	827E1216	835E1456	851G0260

Sun-Software-Release-Number:
	<--------------SunOS 4.1--------------->	SunOS 4.0.2

My-Name:
	Arthur David Olson

Phone-Number:
	+1 (301) 496-5688

Electronic-Mail-Address:
	ado@alw.nih.gov

Company-Or-Organization-Name-And-Address:
	National Institutes of Health
	Building 37, Room 3B03
	Bethesda, MD  20892

Description:
	The "vi" command fails to ignore character case in character classes
	when you've done a ":set ignorecase"

Repeat-By:
		Script started on Tue Jul 10 17:08:17 1990
		elsie$ uname -a
		SunOS elsie 4.1 1 sun3
		elsie$ echo Xx > try
		elsie$ TERM=dumb /usr/ucb/ex try
		"try" 1/3
		:set ignorecase
		:/x/
		Xx
		:/X/
		Xx
		:/[x]/
		Xx
		:/[X]/
		Fail
		:quit
		elsie$ exit

		script done on Tue Jul 10 17:08:51 1990

Fix:
	If SunOS 4.1's vi/ex code is sufficiently similar to 4.3BSD's. . .
SCCS/s.ex_re.c: 1.1 vs. 1.2
*** 1.1/ex_re.c	Tue Jul 10 17:09:47 1990
--- 1.2/ex_re.c	Tue Jul 10 17:09:47 1990
***************
*** 928,937 ****
  	int af;
  {
  	register int n;
  
  	if (c == 0)
  		return (0);
! 	if (value(IGNORECASE) && isupper(c))
  		c = tolower(c);
  	n = *set++;
  	while (--n)
--- 928,939 ----
  	int af;
  {
  	register int n;
+ 	register int ic;
  
  	if (c == 0)
  		return (0);
! 	ic = value(IGNORECASE);
! 	if (ic && isupper(c))
  		c = tolower(c);
  	n = *set++;
  	while (--n)
***************
*** 938,947 ****
  		if (n > 2 && set[1] == '-') {
  			if (c >= (set[0] & TRIM) && c <= (set[2] & TRIM))
  				return (af);
  			set += 3;
  			n -= 2;
! 		} else
  			if ((*set++ & TRIM) == c)
  				return (af);
  	return (!af);
  }
--- 940,959 ----
  		if (n > 2 && set[1] == '-') {
  			if (c >= (set[0] & TRIM) && c <= (set[2] & TRIM))
  				return (af);
+ 			if (ic &&
+ 				isupper(set[0] & TRIM) &&
+ 				c >= tolower(set[0] & TRIM) &&
+ 				isupper(set[2] & TRIM) &&
+ 				c <= tolower(set[2] & TRIM))
+ 					return af;
  			set += 3;
  			n -= 2;
! 		} else {
! 			if (ic && isupper(*set & TRIM) &&
! 				c == tolower(*set & TRIM))
! 					return af;
  			if ((*set++ & TRIM) == c)
  				return (af);
+ 		}
  	return (!af);
  }
-- 
	Arthur David Olson   ado@alw.nih.gov   ADO is a trademark of Ampex.
