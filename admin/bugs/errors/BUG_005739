From root@csvax.cs.caltech.edu  Tue Sep 18 17:12:52 1990
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.63/1.41)
	id AA05735; Tue, 18 Sep 90 17:12:52 -0700
Received: from csvax.cs.caltech.edu by ucbvax.Berkeley.EDU (5.63/1.42)
	id AA11055; Tue, 18 Sep 90 17:13:02 -0700
Received: by csvax.cs.caltech.edu (5.64/1.34.1)
	id AA09659; Tue, 18 Sep 90 17:13:02 -0700
Date: Tue, 18 Sep 90 17:13:02 -0700
From: root@csvax.cs.caltech.edu (Root of all evil)
Message-Id: <9009190013.AA09659@csvax.cs.caltech.edu>
Subject: aliasing within crypt()
Index: 	libc/gen/crypt.c 4.3BSD
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Description:
	crypt.c declares two character arrays on the same line:
	>static char L[32], R[32]
	Later on in the file, two loops refer to L[j], where 0<=j<64.
	The algorithm depends on L[32] === R[0] through L[63] === R[31].
Repeat-By:
	Compile with a compiler which does not stick two declared variables
	next to each other in the expected order, eg gcc.
Fix:
	1) Replace hard-wired constants with macro constants, letting the
		preprocessor worry about sizings and loop constants,
		and reworking to drop intentional aliases.  [Hmm, extra
		credit for students in coursework:  clean up source code? ;-]
	2) Additions to fix 'with least difference' on our local machine.
		['ZAPHOD' being its kernel identifier.]

250a251,256
> #ifdef ZAPHOD
> 	for (j=0; j<32; j++) {
> 		L[j] = block[IP[j   ]-1];
> 		R[j] = block[IP[j+32]-1];
> 	}
> #else
252a259
> #endif /* ZAPHOD */
325a333,338
> #ifdef ZAPHOD
> 	for (j=0; j<64; j++) {
> 		t = FP[j]-1;
> 		block[j] = ( (t<32) ? L[t] : R[t-32] );
> 	}
> #else
327a341
> #endif /* ZAPHOD */
