From drazen@csvax.cs.caltech.edu  Tue Sep 18 20:21:59 1990
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.63/1.41)
	id AA06659; Tue, 18 Sep 90 20:21:59 -0700
Received: from csvax.cs.caltech.edu by ucbvax.Berkeley.EDU (5.63/1.42)
	id AA14895; Tue, 18 Sep 90 20:22:08 -0700
Received: by csvax.cs.caltech.edu (5.64/1.34.1)
	id AA10139; Tue, 18 Sep 90 20:22:07 -0700
Date: Tue, 18 Sep 90 20:22:07 -0700
From: drazen@csvax.cs.caltech.edu (Drazen Borkovic)
Message-Id: <9009190322.AA10139@csvax.cs.caltech.edu>
Subject: Risky coding practice
Index: 	/usr/src/lib/libc/gen/crypt.c 4.3BSD
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Description:
	On line 229 there is declaration of a buffers L and R that reads:
	    char L[32], R[32];
	Later (lines 251 and 311) in the function "encrypt", there is a 
	loop that reads:
	    for (j=0; j<64; j++)
		L[j] = something;
	This loop assumes that the two buffers will be compiled 
	into consecutive area of memory. For example, gcc (GNU C compiler)
	compiles the static variables in a reverse order, so the
	above code fails.
Repeat-By:
	Obvious.
Fix:
	One way is to have the following:
	    char L[64];
	    #define R (L+32)
	Alternative way would be to change each loop into 2 loops that
	would `sweep' over L and then over R.

