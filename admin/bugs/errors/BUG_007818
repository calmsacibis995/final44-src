From composer@Beyond.Dreams.ORG  Fri Sep 11 15:10:17 1992
Received: from hofmann.CS.Berkeley.EDU by vangogh.CS.Berkeley.EDU (5.113/2.7) id AA07814; Fri, 11 Sep 92 15:10:17 -0700
Received: from toy.dreams.org by hofmann.CS.Berkeley.EDU (5.115/2.8) id AA04357; Fri, 11 Sep 1992 15:10:45 -0700
Received: by Beyond.Dreams.ORG (5.67/JLK-dreams)
	id AA17666; Fri, 11 Sep 92 18:07:03 -0400
From: composer@Beyond.Dreams.ORG (Jeff Kellem)
Message-Id: <9209112207.AA17666@Beyond.Dreams.ORG>
To: torek@horse.ee.lbl.gov
Cc: problems@bsdi.com, 4bsd-bugs@cs.berkeley.edu, bugs@Beyond.Dreams.ORG
Subject: stdio misnomer? -- __SRD, __SWR, *and* __SRW flags ?
Date: Fri, 11 Sep 92 18:07:02 EDT

This was found on BSD/386 version 0.9.1, but I expect it exists in 4.4BSD,
also.

In /usr/include/stdio.h, we have:

	#define	__SRD	0x0004		/* OK to read */
	#define	__SWR	0x0008		/* OK to write */
		/* RD and WR are never simultaneously asserted */
	#define	__SRW	0x0010		/* open for reading & writing */

Without delving through all the stdio implementation, it would seem that
you could just use the read and write flags to determine whether a file
was opened for reading and writing, instead of using a separate bit.  Is
there any reason why the stdio implementation shouldn't just do that
[instead of using separate bits]?

The way we [Geoff Collyer and I] happened upon this was the fflush()
routine failing on a file stream opened with mode "a+" -- this would also
fail on "r+".  1) it shouldn't fail on that, 2) I believe it shouldn't
fail even when attempting to flush a stream only opened for reading --
perhaps, it should just be a no-op for that case.  [I suppose the latter
is up for speculation.]

It fails on the "a+" case, because flags is set to __SRW (clobbering the
previous assignment of __SWR to flags) and fflush() checks for the __SWR
flag.  If, instead of using a separate bit, __SRW was the equivalent of
having both __SRD and __SWR set, then that check wouldn't fail [on the
above case], assuming that failing on read only streams is a correct thing
to do... which I don't think it is.

[ Yes, another fix would be to have fflush() (and whatever other routines
  needed to check for output streams) check for both __SWR and __SRW.  I'd
  think this more error-prone, though. ]

Again, not having looked at the entire stdio implementation, I'm unsure
whether anything depends on __SRD and __SWR being separate from __SRW.
But, a quick guess and extremely minor perusal would presume that it
wouldn't [shouldn't?].

Comments?

			-jeff

Jeff Kellem
Internet: composer@Beyond.Dreams.ORG
