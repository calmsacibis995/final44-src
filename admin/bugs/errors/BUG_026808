From fair@apple.com  Wed Aug  1 18:08:30 1990
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.63/1.41)
	id AA26804; Wed, 1 Aug 90 18:08:30 -0700
Received: from apple.com by ucbvax.Berkeley.EDU (5.63/1.41)
	id AA21107; Wed, 1 Aug 90 18:08:36 -0700
Received: by apple.com (5.61/25-eef)
	id AA06499; Wed, 1 Aug 90 18:08:36 -0700
	for 4bsd-bugs@BERKELEY.EDU
Date: Wed, 1 Aug 90 18:08:36 -0700
From: Erik E. Fair <fair@apple.com>
Message-Id: <9008020108.AA06499@apple.com>
Subject: sendmail's conf.h conflicts with /usr/include/ndbm.h
Index: 	usr.lib/sendmail/src/* for version 5.64
Apparently-To: 4bsd-bugs@BERKELEY.EDU

Description:
	/usr/include/ndbm.h has a struct DBM.
	sendmail/src/conf.h #defines "DBM".
	This does not compile on lots of systems.
	How it compiles at UCB is beyond me...

	In older versions of the BIND resolver file netdb.h,
	#define NO_DATA did not exist.

	NO_WILDCARD_MX should be default OFF.
Repeat-By:
	Attempt to compile sendmail 5.64 on a Sun.
Fix:
	Apply the following diffs:

*** alias.c.orig	Tue Jun  5 21:27:42 1990
--- alias.c	Wed Aug  1 15:22:58 1990
***************
*** 19,25 ****
   */
  
  #ifndef lint
! #ifdef DBM
  static char sccsid[] = "@(#)alias.c	5.21 (Berkeley) 6/1/90 (with DBM)";
  #else
  static char sccsid[] = "@(#)alias.c	5.21 (Berkeley) 6/1/90 (without DBM)";
--- 19,25 ----
   */
  
  #ifndef lint
! #ifdef DBMLIB
  static char sccsid[] = "@(#)alias.c	5.21 (Berkeley) 6/1/90 (with DBM)";
  #else
  static char sccsid[] = "@(#)alias.c	5.21 (Berkeley) 6/1/90 (without DBM)";
***************
*** 39,45 ****
  **
  **	Scans the alias file for an alias for the given address.
  **	If found, it arranges to deliver to the alias list instead.
! **	Uses libdbm database if -DDBM.
  **
  **	Parameters:
  **		a -- address to alias.
--- 39,45 ----
  **
  **	Scans the alias file for an alias for the given address.
  **	If found, it arranges to deliver to the alias list instead.
! **	Uses libdbm database if -DDBMLIB
  **
  **	Parameters:
  **		a -- address to alias.
***************
*** 62,68 ****
  */
  
  
! #ifdef DBM
  typedef struct
  {
  	char	*dptr;
--- 62,68 ----
  */
  
  
! #ifdef DBMLIB
  typedef struct
  {
  	char	*dptr;
***************
*** 69,75 ****
  	int	dsize;
  } DATUM;
  extern DATUM fetch();
! #endif DBM
  
  alias(a, sendq)
  	register ADDRESS *a;
--- 69,75 ----
  	int	dsize;
  } DATUM;
  extern DATUM fetch();
! #endif DBMLIB
  
  alias(a, sendq)
  	register ADDRESS *a;
***************
*** 132,138 ****
  aliaslookup(name)
  	char *name;
  {
! # ifdef DBM
  	DATUM rhs, lhs;
  
  	/* create a key for fetch */
--- 132,138 ----
  aliaslookup(name)
  	char *name;
  {
! # ifdef DBMLIB
  	DATUM rhs, lhs;
  
  	/* create a key for fetch */
***************
*** 140,146 ****
  	lhs.dsize = strlen(name) + 1;
  	rhs = fetch(lhs);
  	return (rhs.dptr);
! # else DBM
  	register STAB *s;
  
  	s = stab(name, ST_ALIAS, ST_FIND);
--- 140,146 ----
  	lhs.dsize = strlen(name) + 1;
  	rhs = fetch(lhs);
  	return (rhs.dptr);
! # else DBMLIB
  	register STAB *s;
  
  	s = stab(name, ST_ALIAS, ST_FIND);
***************
*** 147,162 ****
  	if (s == NULL)
  		return (NULL);
  	return (s->s_alias);
! # endif DBM
  }
  /*
  **  INITALIASES -- initialize for aliasing
  **
! **	Very different depending on whether we are running DBM or not.
  **
  **	Parameters:
  **		aliasfile -- location of aliases.
! **		init -- if set and if DBM, initialize the DBM files.
  **
  **	Returns:
  **		none.
--- 147,162 ----
  	if (s == NULL)
  		return (NULL);
  	return (s->s_alias);
! # endif DBMLIB
  }
  /*
  **  INITALIASES -- initialize for aliasing
  **
! **	Very different depending on whether we are running DBMLIB or not.
  **
  **	Parameters:
  **		aliasfile -- location of aliases.
! **		init -- if set and if DBMLIB, initialize the DBM files.
  **
  **	Returns:
  **		none.
***************
*** 163,170 ****
  **
  **	Side Effects:
  **		initializes aliases:
! **		if DBM:  opens the database.
! **		if ~DBM: reads the aliases into the symbol table.
  */
  
  # define DBMMODE	0644
--- 163,170 ----
  **
  **	Side Effects:
  **		initializes aliases:
! **		if DBMLIB:  opens the database.
! **		if ~DBMLIB: reads the aliases into the symbol table.
  */
  
  # define DBMMODE	0644
***************
*** 173,184 ****
  	char *aliasfile;
  	bool init;
  {
! #ifdef DBM
  	int atcnt;
  	time_t modtime;
  	bool automatic = FALSE;
  	char buf[MAXNAME];
! #endif DBM
  	struct stat stb;
  	static bool initialized = FALSE;
  
--- 173,184 ----
  	char *aliasfile;
  	bool init;
  {
! #ifdef DBMLIB
  	int atcnt;
  	time_t modtime;
  	bool automatic = FALSE;
  	char buf[MAXNAME];
! #endif DBMLIB
  	struct stat stb;
  	static bool initialized = FALSE;
  
***************
*** 195,201 ****
  		return;
  	}
  
! # ifdef DBM
  	/*
  	**  Check to see that the alias file is complete.
  	**	If not, we will assume that someone died, and it is up
--- 195,201 ----
  		return;
  	}
  
! # ifdef DBMLIB
  	/*
  	**  Check to see that the alias file is complete.
  	**	If not, we will assume that someone died, and it is up
***************
*** 265,271 ****
  
  	/*
  	**  If necessary, load the DBM file.
! 	**	If running without DBM, load the symbol table.
  	*/
  
  	if (init)
--- 265,271 ----
  
  	/*
  	**  If necessary, load the DBM file.
! 	**	If running without DBMLIB, load the symbol table.
  	*/
  
  	if (init)
***************
*** 281,289 ****
  #endif LOG
  		readaliases(aliasfile, TRUE);
  	}
! # else DBM
  	readaliases(aliasfile, init);
! # endif DBM
  }
  /*
  **  READALIASES -- read and process the alias file.
--- 281,289 ----
  #endif LOG
  		readaliases(aliasfile, TRUE);
  	}
! # else DBMLIB
  	readaliases(aliasfile, init);
! # endif DBMLIB
  }
  /*
  **  READALIASES -- read and process the alias file.
***************
*** 327,333 ****
  		return;
  	}
  
! # ifdef DBM
  	/* see if someone else is rebuilding the alias file already */
  	if (flock(fileno(af), LOCK_EX | LOCK_NB) < 0 && errno == EWOULDBLOCK)
  	{
--- 327,333 ----
  		return;
  	}
  
! # ifdef DBMLIB
  	/* see if someone else is rebuilding the alias file already */
  	if (flock(fileno(af), LOCK_EX | LOCK_NB) < 0 && errno == EWOULDBLOCK)
  	{
***************
*** 342,348 ****
  		errno = 0;
  		return;
  	}
! # endif DBM
  
  	/*
  	**  If initializing, create the new DBM files.
--- 342,348 ----
  		errno = 0;
  		return;
  	}
! # endif DBMLIB
  
  	/*
  	**  If initializing, create the new DBM files.
***************
*** 484,490 ****
  		lhssize = strlen(al.q_user) + 1;
  		rhssize = strlen(rhs) + 1;
  
! # ifdef DBM
  		if (init)
  		{
  			DATUM key, content;
--- 484,490 ----
  		lhssize = strlen(al.q_user) + 1;
  		rhssize = strlen(rhs) + 1;
  
! # ifdef DBMLIB
  		if (init)
  		{
  			DATUM key, content;
***************
*** 496,502 ****
  			store(key, content);
  		}
  		else
! # endif DBM
  		{
  			s = stab(al.q_user, ST_ALIAS, ST_ENTER);
  			s->s_alias = newstr(rhs);
--- 496,502 ----
  			store(key, content);
  		}
  		else
! # endif DBMLIB
  		{
  			s = stab(al.q_user, ST_ALIAS, ST_ENTER);
  			s->s_alias = newstr(rhs);
***************
*** 509,515 ****
  			longest = rhssize;
  	}
  
! # ifdef DBM
  	if (init)
  	{
  		/* add the distinquished alias "@" */
--- 509,515 ----
  			longest = rhssize;
  	}
  
! # ifdef DBMLIB
  	if (init)
  	{
  		/* add the distinquished alias "@" */
***************
*** 522,528 ****
  		/* restore the old signal */
  		(void) signal(SIGINT, oldsigint);
  	}
! # endif DBM
  
  	/* closing the alias file drops the lock */
  	(void) fclose(af);
--- 522,528 ----
  		/* restore the old signal */
  		(void) signal(SIGINT, oldsigint);
  	}
! # endif DBMLIB
  
  	/* closing the alias file drops the lock */
  	(void) fclose(af);
*** conf.h.orig	Tue Jun  5 21:27:43 1990
--- conf.h	Wed Aug  1 16:28:12 1990
***************
*** 49,56 ****
  **	#define these if they are available; comment them out otherwise.
  */
  
! # define DBM		1	/* use DBM library (requires -ldbm) */
! # define NDBM		1	/* new DBM library available (requires DBM) */
  # define LOG		1	/* enable logging */
  # define SMTP		1	/* enable user and server SMTP */
  # define QUEUE		1	/* enable queueing */
--- 49,56 ----
  **	#define these if they are available; comment them out otherwise.
  */
  
! # define DBMLIB		1	/* use DBM library (requires -ldbm) */
! # define NDBM		0	/* new DBM library available (requires DBM) */
  # define LOG		1	/* enable logging */
  # define SMTP		1	/* enable user and server SMTP */
  # define QUEUE		1	/* enable queueing */
***************
*** 67,70 ****
  	 * searched, we can't use ANY; it would cause fully-qualified names
  	 * to match as names in a local domain.
  	 */
! # define NO_WILDCARD_MX	1
--- 67,70 ----
  	 * searched, we can't use ANY; it would cause fully-qualified names
  	 * to match as names in a local domain.
  	 */
! # define NO_WILDCARD_MX	0
*** domain.c.orig	Tue Jun  5 21:27:44 1990
--- domain.c	Wed Aug  1 15:44:14 1990
***************
*** 65,70 ****
--- 65,73 ----
  			    errno, h_errno);
  		switch (h_errno)
  		{
+ #ifndef NO_DATA
+ #define	NO_DATA	NO_ADDRESS	/* because Sun is always behind */
+ #endif
  		  case NO_DATA:
  		  case NO_RECOVERY:
  			/* no MX data on this host */
*** main.c.orig	Tue Jun  5 21:27:45 1990
--- main.c	Wed Aug  1 15:24:49 1990
***************
*** 430,440 ****
  			setoption('f', &p[2], FALSE, TRUE);
  			break;
  
! # ifdef DBM
  		  case 'I':	/* initialize alias DBM file */
  			OpMode = MD_INITALIAS;
  			break;
! # endif DBM
  		}
  	}
  
--- 430,440 ----
  			setoption('f', &p[2], FALSE, TRUE);
  			break;
  
! # ifdef DBMLIB
  		  case 'I':	/* initialize alias DBM file */
  			OpMode = MD_INITALIAS;
  			break;
! # endif DBMLIB
  		}
  	}
  
