From jik@PIT-MANAGER.MIT.EDU  Wed Jun 20 07:42:17 1990
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.63/1.41)
	id AA26988; Wed, 20 Jun 90 07:42:17 -0700
Received: from PIT-MANAGER.MIT.EDU by ucbvax.Berkeley.EDU (5.63/1.41)
	id AA21130; Wed, 20 Jun 90 07:42:27 -0700
Received:  by PIT-MANAGER.MIT.EDU (5.61/2.0JIK) id <AA23831@PIT-MANAGER.MIT.EDU>; Wed, 20 Jun 90 10:41:38 -0400
Date: Wed, 20 Jun 90 10:41:38 -0400
Message-Id: <9006201441.AA23831@PIT-MANAGER.MIT.EDU>
From: "Jonathan I. Kamens" <jik@pit-manager.MIT.EDU>
Sender: jik@PIT-MANAGER.MIT.EDU
To: bugs@ucbvax.Berkeley.EDU
Subject: getwd() does closedir() too early
Index: lib 4.3BSD-tahoe



Description:
	The function getwd() in the C library closes a directory and
	then tries to access memory that was allocated by malloc() and
	that is no longer valid after the closedir() call.

Repeat-By:
	Examination.  Take a look at the sources.  Either that, or
	link against a debugging malloc() that clears memory when it
	is freed, and you'll see the problem.

Fix:
	The patch below fixes this problem.  Credit for it goes to Po
	Cheung NG (pcng@cad.jmrc.eecs.unsw.oz.au) (we got it from the
	net, but I'm reporting it to you since it still isn't fixed in
	tahoe).

Jonathan Kamens			              USnail:
MIT Project Athena				11 Ashford Terrace
jik@Athena.MIT.EDU				Allston, MA  02134
Office: 617-253-8495			      Home: 617-782-0710

*** /tmp/,RCSt1023825	Wed Jun 20 10:41:09 1990
--- getwd.c	Fri Aug 21 23:25:14 1987
***************
*** 85,92 ****
  				strcpy(dptr, dir->d_name);
  				lstat(curdir, &dd);
  			} while(dd.st_ino != cino || dd.st_dev != cdev);
- 		closedir(dirp);
  		pnptr = prepend("/", prepend(dir->d_name, pnptr));
  	}
  	if (*pnptr == '\0')		/* current dir == root dir */
  		strcpy(pathname, "/");
--- 85,92 ----
  				strcpy(dptr, dir->d_name);
  				lstat(curdir, &dd);
  			} while(dd.st_ino != cino || dd.st_dev != cdev);
  		pnptr = prepend("/", prepend(dir->d_name, pnptr));
+ 		closedir(dirp);
  	}
  	if (*pnptr == '\0')		/* current dir == root dir */
  		strcpy(pathname, "/");


