From jik@PIT-MANAGER.MIT.EDU  Wed Jun 20 08:04:10 1990
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.63/1.41)
	id AA27110; Wed, 20 Jun 90 08:04:10 -0700
Received: from PIT-MANAGER.MIT.EDU by ucbvax.Berkeley.EDU (5.63/1.41)
	id AA22507; Wed, 20 Jun 90 08:04:21 -0700
Received:  by PIT-MANAGER.MIT.EDU (5.61/2.0JIK) id <AA23880@PIT-MANAGER.MIT.EDU>; Wed, 20 Jun 90 11:04:03 -0400
Date: Wed, 20 Jun 90 11:04:03 -0400
Message-Id: <9006201504.AA23880@PIT-MANAGER.MIT.EDU>
From: "Jonathan I. Kamens" <jik@pit-manager.MIT.EDU>
Sender: jik@PIT-MANAGER.MIT.EDU
To: bugs@ucbvax.Berkeley.EDU
Subject: logger barfs on strings with '%' in them
Index: ucb 4.3BSD-tahoe


Description:
	Logger passes the string it's trying to log directly to syslog
	as the first string argument of the sylog call, which means
	that if the string has a '%' in it, syslog (or actually,
	sprintf) will treat it as a formatting character, and things
	will lose, possibly quite badly.

Repeat-By:
	Log some strings with '%' in them using logger.

Fix:
	The patch below.  Credit to Jonathan Kamens
	(jik@athena.mit.edu).

*** /mit/4.3tahoe/ucb/logger.c	Thu Jun 30 00:51:28 1988
--- logger.c	Wed Jun 20 11:01:45 1990
***************
*** 85,95 ****
  			len = strlen(*argv);
  			if (p + len < endp && p > buf) {
  				*--p = '\0';
! 				syslog(pri, buf);
  				p = buf;
  			}
  			if (len > sizeof(buf) - 1) {
! 				syslog(pri, *argv++);
  				if (!--argc)
  					break;
  			} else {
--- 85,95 ----
  			len = strlen(*argv);
  			if (p + len < endp && p > buf) {
  				*--p = '\0';
! 				syslog(pri, "%s", buf);
  				p = buf;
  			}
  			if (len > sizeof(buf) - 1) {
! 				syslog(pri, "%s", *argv++);
  				if (!--argc)
  					break;
  			} else {
***************
*** 103,109 ****
  		}
  		if (p != buf) {
  			*p = '\0';
! 			syslog(pri, buf);
  		}
  		exit(0);
  	}
--- 103,109 ----
  		}
  		if (p != buf) {
  			*p = '\0';
! 			syslog(pri, "%s", buf);
  		}
  		exit(0);
  	}
***************
*** 110,116 ****
  
  	/* main loop */
  	while (fgets(buf, sizeof(buf), stdin) != NULL)
! 		syslog(pri, buf);
  
  	exit(0);
  }
--- 110,116 ----
  
  	/* main loop */
  	while (fgets(buf, sizeof(buf), stdin) != NULL)
! 		syslog(pri, "%s", buf);
  
  	exit(0);
  }
