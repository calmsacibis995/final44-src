From jik@PIT-MANAGER.MIT.EDU  Wed Jun 20 08:22:53 1990
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.63/1.41)
	id AA27192; Wed, 20 Jun 90 08:22:53 -0700
Received: from PIT-MANAGER.MIT.EDU by ucbvax.Berkeley.EDU (5.63/1.41)
	id AA23820; Wed, 20 Jun 90 08:23:03 -0700
Received:  by PIT-MANAGER.MIT.EDU (5.61/2.0JIK) id <AA23945@PIT-MANAGER.MIT.EDU>; Wed, 20 Jun 90 11:22:52 -0400
Date: Wed, 20 Jun 90 11:22:52 -0400
Message-Id: <9006201522.AA23945@PIT-MANAGER.MIT.EDU>
From: "Jonathan I. Kamens" <jik@pit-manager.MIT.EDU>
Sender: jik@PIT-MANAGER.MIT.EDU
To: bugs@ucbvax.Berkeley.EDU
Subject: more can dereference a bad pointer
Index: ucb 4.3BSD-tahoe


Description:
	More can dereference a bad pointer.

Repeat-By:
	Not sure.  You can tell that it's possible by reading the
code.

Fix:
	Patch below.  Credit to Jonathan Kamens (jik@athena.mit.edu).

Jonathan Kamens			              USnail:
MIT Project Athena				11 Ashford Terrace
jik@Athena.MIT.EDU				Allston, MA  02134
Office: 617-253-8495			      Home: 617-782-0710

*** /mit/4.3tahoe/ucb/more/more.c	Wed Jun 29 22:18:00 1988
--- more.c	Wed Jun 20 11:20:48 1990
***************
*** 42,47 ****
--- 42,48 ----
  #include <sgtty.h>
  #include <setjmp.h>
  #include <sys/stat.h>
+ #include <strings.h>
  #include <sys/file.h>
  #include <a.out.h>
  #include <varargs.h>
***************
*** 184,191 ****
      if (nfiles > 1)
  	prnames++;
      if (!no_intty && nfiles == 0) {
- 	char *rindex();
- 
  	p = rindex(argv[0], '/');
  	fputs("usage: ",stderr);
  	fputs(p ? p + 1 : argv[0],stderr);
--- 185,190 ----
***************
*** 680,690 ****
  {
  	register char *tail;
  
! 	tail = path + strlen(path);
! 	while (tail >= path)
! 		if (*(--tail) == '/')
! 			break;
! 	++tail;
  	while (*tail++ == *string++)
  		if (*tail == '\0')
  			return(1);
--- 679,685 ----
  {
  	register char *tail;
  
! 	tail = (tail = rindex(path, '/')) ? tail + 1 : path;
  	while (*tail++ == *string++)
  		if (*tail == '\0')
  			return(1);
