From jik@PIT-MANAGER.MIT.EDU  Wed Jun 20 08:47:09 1990
Received: from ucbvax.Berkeley.EDU by okeeffe.Berkeley.EDU (5.63/1.41)
	id AA27296; Wed, 20 Jun 90 08:47:09 -0700
Received: from PIT-MANAGER.MIT.EDU by ucbvax.Berkeley.EDU (5.63/1.41)
	id AA25419; Wed, 20 Jun 90 08:47:19 -0700
Received:  by PIT-MANAGER.MIT.EDU (5.61/2.0JIK) id <AA23993@PIT-MANAGER.MIT.EDU>; Wed, 20 Jun 90 11:47:10 -0400
Date: Wed, 20 Jun 90 11:47:10 -0400
Message-Id: <9006201547.AA23993@PIT-MANAGER.MIT.EDU>
From: "Jonathan I. Kamens" <jik@pit-manager.MIT.EDU>
Sender: jik@PIT-MANAGER.MIT.EDU
To: bugs@ucbvax.Berkeley.EDU
Subject: ld error messages are not specific enough
Index: bin 4.3BSD-tahoe


Description:
	Ld's error messages are not informative enough -- they tell
	you that an output write error occurred, but don't tell you
	why.  Furthermore, ld, doesn't check to make sure that closing
	the output file succeeded.

Repeat-By:
	Run ld in a way that will cause it to get output write errors
	(e.g. output to a filesystem with no space left.

Fix:
	Below.  Credit to John Carr (jfc@athena.mit.edu) and John Kohl
	(jtkohl@athena.mit.edu).

*** /mit/4.3tahoe/bin/ld.c	Thu Apr 14 22:14:51 1988
--- ld.c	Wed Jun 20 11:44:30 1990
***************
*** 20,25 ****
--- 20,26 ----
  
  #include <sys/param.h>
  #include <signal.h>
+ #include <errno.h>
  #include <stdio.h>
  #include <ctype.h>
  #include <ar.h>
***************
*** 28,33 ****
--- 29,36 ----
  #include <sys/stat.h>
  #include <sys/file.h>
  
+ #define errstr(x) ((x) < sys_nerr ? sys_errlist[x] : "unknown error")
+ 
  /*
   * Basic strategy:
   *
***************
*** 562,570 ****
  	size = round(stbuf.st_size, pagesize);
  	if (!rflag && size > stbuf.st_size) {
  		lseek(biofd, size - 1, 0);
! 		if (write(biofd, &c, 1) != 1)
! 			delarg |= 4;
  	}
  	if (delarg==0 && Aflag==0)
  		(void) chmod(ofilename, ofilemode);
  	exit (delarg);
--- 565,579 ----
  	size = round(stbuf.st_size, pagesize);
  	if (!rflag && size > stbuf.st_size) {
  		lseek(biofd, size - 1, 0);
! 		if (write(biofd, &c, 1) != 1) {
! 		    fprintf(stderr, "ld: write: %s\n", errstr(errno));
! 		    delarg |= 4;
! 		}
  	}
+ 	if(close(biofd) < 0) {
+ 	    fprintf(stderr, "ld: close: %s\n", errstr(errno));
+ 	    delarg |= 4;
+ 	}
  	if (delarg==0 && Aflag==0)
  		(void) chmod(ofilename, ofilemode);
  	exit (delarg);
***************
*** 1048,1055 ****
  {
  	int bss;
  	struct stat stbuf;
- 	extern char *sys_errlist[];
- 	extern int errno;
  
  	ofilemode = 0777 & ~umask(0);
  	biofd = creat(ofilename, 0666 & ofilemode);
--- 1057,1062 ----
***************
*** 1056,1062 ****
  	if (biofd < 0) {
  		filname = ofilename;		/* kludge */
  		archdr.ar_name[0] = 0;		/* kludge */
! 		error(1, sys_errlist[errno]);	/* kludge */
  	}
  	fstat(biofd, &stbuf);		/* suppose file exists, wrong*/
  	if (stbuf.st_mode & 0111) {	/* mode, ld fails? */
--- 1063,1069 ----
  	if (biofd < 0) {
  		filname = ofilename;		/* kludge */
  		archdr.ar_name[0] = 0;		/* kludge */
! 		error(1, errstr(errno));	/* kludge */
  	}
  	fstat(biofd, &stbuf);		/* suppose file exists, wrong*/
  	if (stbuf.st_mode & 0111) {	/* mode, ld fails? */
***************
*** 1947,1960 ****
  {
  
  	if (errlev==0)
! 		printf("ld:");
  	if (filname) {
! 		printf("%s", filname);
  		if (n != -1 && archdr.ar_name[0])
! 			printf("(%s)", archdr.ar_name);
! 		printf(": ");
  	}
! 	printf("%s\n", s);
  	if (n == -1)
  		return;
  	if (n)
--- 1954,1967 ----
  {
  
  	if (errlev==0)
! 		fprintf(stderr, "ld:");
  	if (filname) {
! 		fprintf(stderr,"%s", filname);
  		if (n != -1 && archdr.ar_name[0])
! 			fprintf(stderr,"(%s)", archdr.ar_name);
! 		fprintf(stderr,": ");
  	}
! 	fprintf(stderr,"%s\n", s);
  	if (n == -1)
  		return;
  	if (n)
***************
*** 2068,2075 ****
  		if (boffset != bp->b_off)
  			lseek(biofd, bp->b_off, 0);
  		if (write(biofd, p, put) != put) {
  			bwrerror = 1;
! 			error(1, "output write error");
  		}
  		bp->b_off += put;
  		boffset = bp->b_off;
--- 2075,2084 ----
  		if (boffset != bp->b_off)
  			lseek(biofd, bp->b_off, 0);
  		if (write(biofd, p, put) != put) {
+ 			char tmp[128];
+ 			sprintf(tmp, "output write error: %s", errstr(errno));
  			bwrerror = 1;
!  			error(1, tmp);
  		}
  		bp->b_off += put;
  		boffset = bp->b_off;
***************
*** 2101,2108 ****
  	if (boffset != bp->b_off)
  		lseek(biofd, bp->b_off, 0);
  	if (write(biofd, bp->b_buf, cnt) != cnt) {
  		bwrerror = 1;
! 		error(1, "output write error");
  	}
  	bp->b_off += cnt;
  	boffset = bp->b_off;
--- 2110,2119 ----
  	if (boffset != bp->b_off)
  		lseek(biofd, bp->b_off, 0);
  	if (write(biofd, bp->b_buf, cnt) != cnt) {
+ 		char tmp[128];
+ 		sprintf(tmp, "output write error: %s", errstr(errno));
  		bwrerror = 1;
! 		error(1, tmp);
  	}
  	bp->b_off += cnt;
  	boffset = bp->b_off;
