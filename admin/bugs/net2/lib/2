From composer@Beyond.Dreams.ORG  Tue Jul 28 12:42:14 1992
Received: from ucbvax.Berkeley.EDU by vangogh.CS.Berkeley.EDU (5.113/2.7) id AA09487; Tue, 28 Jul 92 12:42:14 -0700
Received: from relay2.UU.NET by ucbvax.Berkeley.EDU (5.63/1.43)
	id AA16287; Tue, 28 Jul 92 12:42:20 -0700
Received: from Beyond.Dreams.ORG (via toy.dreams.org) by relay2.UU.NET with SMTP 
	(5.61/UUNET-internet-primary) id AA14885; Tue, 28 Jul 92 15:42:46 -0400
Received: by Beyond.Dreams.ORG (5.67/JLK-dreams)
	id AA04607; Tue, 28 Jul 92 15:36:42 -0400
Date: Tue, 28 Jul 92 15:36:42 -0400
From: composer@Beyond.Dreams.ORG (Jeff Kellem)
Message-Id: <9207281936.AA04607@Beyond.Dreams.ORG>
To: 4bsd-bugs@ucbvax.Berkeley.EDU
Subject: Problem Report -- chmod, = op, and setmode.c
Index:  lib/libc/gen/setmode.c net2
Reply-To: composer@Beyond.Dreams.ORG

WPHONE:	+1 617 739 0202
HPHONE:	N/A

Description:
	setmode() doesn't work with `=' as an operation.. therefore...
	`chmod a= file' doesn't clear the permissions.  Problem stems from
	setmode.c code in libc.  From a quick glance at setmode.c, it seems
	that addcmd() is not being called when op == '=', tho it could be
	more subtle than that.

	I haven't combed thru setmode.c, yet.. I suspect someone should.

	[ This note was also sent to the BSDI problems list, since I
	  noticed the problem under BSD/386 0.3.3.  It doesn't look like
	  they've changed setmode.c from the NET2 release, though.  This
	  message wasn't CC-ed, so that the version on the Index line would
	  make sense to your bugfiler. ]

Repeat-By:
	[ Note: `:; ' is the shell prompt. ]
	:; ls -l filename
	-r--r--r--    1 composer	1234 Jul 28 12:34 filename
	:; chmod a= filename	# should clear the permissions on filename
	:; ls -l filename
	-r--r--r--    1 composer	1234 Jul 28 12:34 filename
	
Fix:
	A possible temporary (only very slightly tested) fix/workaround is:

*** /usr/src/lib/libc/gen/setmode.c	Wed Jan  1 16:19:06 1992
--- setmode.c	Tue Jul 28 13:30:45 1992
***************
*** 337,346 ****
  				 * Add any permissions that we haven't already
  				 * done.
  				 */
! 				if (perm) {
! 					ADDCMD(op, who, perm, mask);
! 					perm = 0;
! 				}
  				if (permXbits) {
  					ADDCMD('X', who, permXbits, mask);
  					permXbits = 0;
--- 337,345 ----
  				 * Add any permissions that we haven't already
  				 * done.
  				 */
! 				ADDCMD(op, who, perm, mask);
! 				perm = 0;
! 
  				if (permXbits) {
  					ADDCMD('X', who, permXbits, mask);
  					permXbits = 0;

	If perm == 0, addcmd shouldn't affect anything (hopefully ..
	remember I've only glanced at the code ;-).  I'd rather the code
	be looked at more closely before applying a more concrete solution
	-- at least, to verify that the above may be all that's needed (and
	doesn't have any adverse effects), tho I suspect something
	different (or just more) is needed.

	The above fix is an extremely quick hack.  Proceed with caution. ;-}
	This note is more to notify you of the problem than to provide a
	well-tested fix -- other projects have a higher priority today.
