From Karl_Kleinpaste@cs.cmu.edu Sat May 09 18:53:41 1992
Path: pasteur!agate!stanford.edu!rutgers!rochester!cantaloupe.srv.cs.cmu.edu!crabapple.srv.cs.cmu.edu!cs.cmu.edu!Karl_Kleinpaste
From: Karl_Kleinpaste@cs.cmu.edu
Newsgroups: comp.bugs.4bsd
Subject: Misuse of mbuf ptr after m_free() in net2 sys/kern/uipc_syscalls.c
Message-ID: <1992May09.194435.106981@cs.cmu.edu>
Date: 9 May 92 20:44:31 GMT
Organization: Carnegie-Mellon Univ, Nectar Project
Lines: 48
Nntp-Posting-Host: n2.sp.cs.cmu.edu
Index: sys/kern/uipc_syscalls.c net2

I found this while integrating the net2 IP code into my Mach 2.5
kernel.  After a failed copyin() call to get the user's socket data,
the newly-freed mbuf pointer will be referenced to correct the family
and length fields, which of course aren't really there due to copyin()
failure.

>From the contents of ftp.uu.net:packages/bsd-sources/sys/kern...

*** uipc_syscalls.c~	Sat May  9 15:33:32 1992
--- uipc_syscalls.c	Sat May  9 15:35:54 1992
***************
*** 1193,1208 ****
  	error = copyin(buf, mtod(m, caddr_t), (u_int)buflen);
  	if (error)
  		(void) m_free(m);
! 	else
  		*mp = m;
! 	if (type == MT_SONAME) {
! 		register struct sockaddr *sa = mtod(m, struct sockaddr *);
  
  #if defined(COMPAT_43) && BYTE_ORDER != BIG_ENDIAN
! 		if (sa->sa_family == 0 && sa->sa_len < AF_MAX)
! 			sa->sa_family = sa->sa_len;
  #endif
! 		sa->sa_len = buflen;
  	}
  	return (error);
  }
--- 1193,1209 ----
  	error = copyin(buf, mtod(m, caddr_t), (u_int)buflen);
  	if (error)
  		(void) m_free(m);
! 	else {
  		*mp = m;
! 		if (type == MT_SONAME) {
! 		    register struct sockaddr *sa = mtod(m, struct sockaddr *);
  
  #if defined(COMPAT_43) && BYTE_ORDER != BIG_ENDIAN
! 		    if (sa->sa_family == 0 && sa->sa_len < AF_MAX)
! 			    sa->sa_family = sa->sa_len;
  #endif
! 		    sa->sa_len = buflen;
! 		}
  	}
  	return (error);
  }

--karl
