From yval@cs.huji.ac.il  Sun Feb  7 15:47:22 1993
Date: Sun, 7 Feb 93 13:47:22 +0200
From: Yuval Yarom <yval@CS.HUJI.AC.IL>
To: 4bsd-bugs@okeeffe.CS.Berkeley.EDU
Subject: Various bugs in Network Release 2
Index: sys/vm net2

Shalom,
  I am working on BSDI's BSD/386, and found several bugs in sections of
the code that are from the Network Release 2.  I heard you might be
interested in those bug reports, so I compiled them all, and put here.
I do not have the time needed for going through all of them, sorting
them and checking if they really appear in the Nework Release 2, so
I just concatenated all those that seem to belong here.  Sorry about that.

				Yuval


The page daemon calls vm_map_entry_create to create entries in pager_map.
This call might block waiting for memory. 

The following patch fixes this problem (as far as I can tell).

				Yuval
-----------------------------------------------------------------------

*** vm_map.c.orig	Wed Jan 27 16:59:15 1993
--- vm_map.c	Wed Jan 27 08:15:00 1993
***************
*** 272,280 ****
  	vm_map_t	map;
  {
  	vm_map_entry_t	entry;
! 	extern vm_map_t		kernel_map, kmem_map, mb_map;
  
! 	if (map == kernel_map || map == kmem_map || map == mb_map) {
  		if (entry = kentry_free)
  			kentry_free = kentry_free->next;
  	} else
--- 272,281 ----
  	vm_map_t	map;
  {
  	vm_map_entry_t	entry;
! 	extern vm_map_t		kernel_map, kmem_map, mb_map, pager_map;
  
! 	if (map == kernel_map || map == kmem_map || map == mb_map ||
! 							map == pager_map) {
  		if (entry = kentry_free)
  			kentry_free = kentry_free->next;
  	} else
***************
*** 295,303 ****
  	vm_map_t	map;
  	vm_map_entry_t	entry;
  {
! 	extern vm_map_t		kernel_map, kmem_map, mb_map;
  
! 	if (map == kernel_map || map == kmem_map || map == mb_map) {
  		entry->next = kentry_free;
  		kentry_free = entry;
  	} else
--- 296,305 ----
  	vm_map_t	map;
  	vm_map_entry_t	entry;
  {
! 	extern vm_map_t		kernel_map, kmem_map, mb_map, pager_map;
  
! 	if (map == kernel_map || map == kmem_map || map == mb_map ||
! 							map == pager_map) {
  		entry->next = kentry_free;
  		kentry_free = entry;
  	} else

NOTE: The patch is for beta.  The bugs appear in Gamma3 too, but in
	different locations.

