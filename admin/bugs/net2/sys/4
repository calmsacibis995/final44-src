From balsup@tfs.COM  Tue Feb 18 15:39:34 1992
Date: Tue, 18 Feb 92 15:24:30 PST
From: balsup@tfs.COM (Billie Alsup)
Subject: copyin/copyout page fault loops
Index: sys net2
Apparently-To: net2-bugs@BERKELEY.EDU

Description:
    on the i386 platform, when copyin/copyout gets a page fault
    which is not resolved by vm_fault, the instruction pointer
    is not reset to the pcb_onfault address.  this causes
    an endless cycle of page faults at the same address,
    since we just return to retry the instruction causing
    the page fault.

Repeat-By:
    my implementation has code segments starting at 0x10000,
    and i am not mapping in the lower 64k address range
    from 0x00000 to 0x0ffff.  this catches problems with
    dereferencing null pointers.  repeat by executing
    any system call expecting to copyin/out data, and
    pass an invalid pointer with the system call.

Fix:
    in usr/src/sys/i386/i386/trap.c, reset the instruction
    pointer to the pcb_onfault address when vm_fault is
    not successful in faulting in the page.

    diff trap.c trap.c.released
256,257c256
<                       if (curpcb->pcb_onfault) {
<                         frame.tf_eip = (int)curpcb->pcb_onfault;
---
>                       if (curpcb->pcb_onfault)
259d257
<                       }

