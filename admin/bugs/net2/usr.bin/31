From yval@cs.huji.ac.il  Sun Feb  7 15:47:22 1993
Date: Sun, 7 Feb 93 13:47:22 +0200
From: Yuval Yarom <yval@CS.HUJI.AC.IL>
To: 4bsd-bugs@okeeffe.CS.Berkeley.EDU
Subject: Various bugs in Network Release 2
Index: usr.bin/tr/str.c net2

Shalom,
  I am working on BSDI's BSD/386, and found several bugs in sections of
the code that are from the Network Release 2.  I heard you might be
interested in those bug reports, so I compiled them all, and put here.
I do not have the time needed for going through all of them, sorting
them and checking if they really appear in the Nework Release 2, so
I just concatenated all those that seem to belong here.  Sorry about that.

				Yuval

There are two bugs in tr's handling of character ranges.
1. When the character preceeding a range in tr is '[' the range
starts from that character.
2. The last character of a range is duplicated.  This causes
'tr a-cd A-D' to translate both 'c' and 'd' to 'D'.

fix:
----------------------------------------------------------------

*** str.c.orig	Wed Jan  1 23:40:46 1992
--- str.c	Tue Oct 13 11:16:11 1992
***************
*** 114,142 ****
  {
  	register char *p;
  
! 	switch (*++s->str) {
  	case ':':				/* "[:class:]" */
! 		if ((p = strpbrk(s->str + 1, ":]")) == NULL)
  			return (0);
  		if (p[0] != ':' || p[1] != ']')
  			return (0);
  		*p = '\0';
! 		++s->str;
  		genclass(s);
  		s->str = p + 2;
  		return (1);
  	case '=':				/* "[=equiv=]" */
! 		if ((p = strpbrk(s->str + 1, "=]")) == NULL)
  			return (0);
  		if (p[0] != '=' || p[1] != ']')
  			return (0);
  		genequiv(s);
  		return (1);
  	default:				/* "[\###*]" or "[#*]" */
! 		if ((p = strpbrk(s->str + 1, "*]")) == NULL)
  			return (0);
  		if (p[0] != '*' || index(p, ']') == NULL)
  			return (0);
  		genseq(s);
  		return (1);
  	}
--- 114,144 ----
  {
  	register char *p;
  
! 	switch (*(s->str + 1)) {
  	case ':':				/* "[:class:]" */
! 		if ((p = strpbrk(s->str + 2, ":]")) == NULL)
  			return (0);
  		if (p[0] != ':' || p[1] != ']')
  			return (0);
  		*p = '\0';
! 		s->str += 2;
  		genclass(s);
  		s->str = p + 2;
  		return (1);
  	case '=':				/* "[=equiv=]" */
! 		if ((p = strpbrk(s->str + 2, "=]")) == NULL)
  			return (0);
  		if (p[0] != '=' || p[1] != ']')
  			return (0);
+ 		++s->str;
  		genequiv(s);
  		return (1);
  	default:				/* "[\###*]" or "[#*]" */
! 		if ((p = strpbrk(s->str + 2, "*]")) == NULL)
  			return (0);
  		if (p[0] != '*' || index(p, ']') == NULL)
  			return (0);
+ 		++s->str;
  		genseq(s);
  		return (1);
  	}
***************
*** 246,251 ****
--- 248,254 ----
  		s->str = savestart;
  		return (0);
  	}
+ 	++s->str;
  	s->cnt = stopval - s->lastch + 1;
  	s->state = RANGE;
  	--s->lastch;

