We are happy to announce the availability of the release of
4.3BSD for the tahoe processors.  Attached is a brief summary
of the information mailed to all 4.2 and 4.3BSD licensees.
This mailing contains all necessary ordering information;
if you have not received it by July 5th, please contact our
distribution office at +1-415-642-7780.

Mike Karels
Kirk McKusick
Keith Bostic

========================
     We are happy to send you  information  about  our  June
1988  revision of the Fourth Berkeley Software Distribution,
hereafter referred to as the ``4.3BSD tahoe''  distribution.
The purpose of this release is to provide 4.3BSD support for
the ``tahoe'' processor and to  get  feedback  on  some  new
features  and facilities that we expect to include in future
Berkeley releases.  This  distribution  is  not  a  standard
Berkeley  release;  it  is  an  interim release intended for
testing and evaluation rather than production use  by  naive
users.  The distribution is available to users with licenses
for the April 1986 4.3BSD release for the VAX.

What is the 4.3BSD Tahoe Release?

     The distribution consists of one 6250 BPI or three 1600
BPI magnetic tapes, certain updated manual pages, and a copy
of ``Installing and Operating 4.3BSD  on  the  Tahoe.''  The
magnetic  tape(s) contain copies of source code and documen-
tation for both the VAX and the tahoe, and binaries for  the
tahoe.   On  the three-tape 1600 BPI set, parts of the user-
contributed software are shipped as compressed  archives  to
save space.

     The primary purpose of this release is to provide  sup-
port  for  the ``tahoe'' processor, the CPU used by Computer
Consoles, Inc. (CCI Power 6/32, 6/32SX), and high end  lines
of Harris (HCX-7 and HCX-9), Unisys (7000/40), and ICL (Clan
7).  Support for this processor is derived from  the  4.2BSD
system  done by CCI.  Support for new DEC equipment has also
been added, including support for the 8250 BI-based CPU  and
the KDB-50 BI disk controller from Chris Torek, and the QVSS
and QDSS display drivers for the MicroVAX II, contributed by
Digital Equipment Corporation.  We expect to provide support
for  both  the  VAX  and  the  tahoe  processors  in  future
releases.

The  major  new  software  systems  include  the   following
features:

+    The TCP and IP code is the same as that  recently  made
     available  via  the  ARPANET  and  Usenet.  Several new
     algorithms  are  used  in  TCP,   in   particular   Van
     Jacobson's slow start and dynamic window size selection
     algorithms and Phil Karn's modification to  the  round-
     trip   timing   algorithm.    These   changes  increase
     throughput and reduce  congestion  and  retransmission.
     Several  fixes  were made in the handling of IP options
     and other gateway support.

+    The file system has been generalized to remove the lim-
     its on the maximum number of inodes per cylinder group,
     cylinders  per  cylinder  group,  and  number  of  dis-
     tinguished  rotational  positions.  The kernel and file
     system utilities operate normally on both new  and  old
     format  file  systems;  old  kernels treat the new file
     systems as read-only.  This change allows better utili-
     zation  of  newer  disks with larger numbers of sectors
     per cylinder.

+    The system has full support for disk labels  that  con-
     tain  disk geometry information and partition layout on
     each disk.  Labels are used on disks using  the  hp  or
     uda  drivers  on  the VAX (hp or ra disks) and all sup-
     ported disks on the tahoe.  The  utility  to  read  and
     write  disk  labels can be used with the system running
     multiuser; the labels are used and updated as appropri-
     ate by newfs, bad144, the kernel and the bootstrap pro-
     grams.  Basic file system parameters are stored in  the
     label  so  that  fsck can locate alternate superblocks.
     The filesystem and  newfs  use  additional  information
     about  the disk geometry that is now available, such as
     track-to-track skew.

+    A new general-purpose dynamic memory allocator has been
     written  that can be used by all the kernel subsystems.
     The design of this allocator takes advantage  of  known
     memory  usage  patterns  in  the  UNIX  kernel, using a
     hybrid strategy that is time-efficient for small  allo-
     cations  and  space-efficient  for  large  allocations.
     This allocator replaces most  of  the  previous  memory
     allocation  interfaces  with  a  single easy-to-program
     interface, results in  more  efficient  use  of  global
     memory   by  eliminating  partitioned  and  specialized
     memory pools, and is quick enough that  no  performance
     loss  is  observed relative to the previous implementa-
     tions.  Most of the kernel  memory  allocation  is  now
     done using this allocator.

+    The source code has been reorganized to ease support of
     multiple machine types.

+    The Olson/Harris/Elz timezone implementation  has  been
     added to the system.

+    Numerous bug fixes  and  enhancements  have  been  made
     throughout  the  system,  including new versions of the
     nameserver  named  and  the  routing   daemon   routed.
     Several years' backlog of bug fixes have been applied.

+    We have started a process of identifying  the  code  in
     the  4.3BSD  distribution that is not derived from AT&T
     code.  The copyrights in this code have been changed to
     indicate that it may be freely distributed if the copy-
     right notice is retained and that due  credit  for  its
     origin  is  given  to  The Regents of the University of
     California.  Over 1000 files have  been  identified  in
     this distribution.

