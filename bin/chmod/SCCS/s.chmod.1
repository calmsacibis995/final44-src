h59647
s 00001/00001/00267
d D 8.4 94/03/31 16:54:54 bostic 26 25
c better wording
e
s 00033/00015/00235
d D 8.3 94/03/31 16:32:02 bostic 25 24
c POSIX 1003.2B/D9 symbolic links
e
s 00012/00005/00238
d D 8.2 94/03/25 13:50:32 bostic 24 23
c add 'permcopy' chars to the accepted perm list
c explain what they are
c correctly explain the operation of "-x", etc.
c From: "Chris G. Demetriou" <cgd@postgres.Berkeley.EDU>
e
s 00002/00002/00241
d D 8.1 93/06/29 18:33:56 bostic 23 22
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00007/00008/00236
d D 6.19 93/06/29 18:33:09 mckusick 22 20
c garmmer nits
e
s 00002/00002/00242
d R 8.1 93/05/31 14:16:43 bostic 21 20
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00001/00243
d D 6.18 92/07/27 13:46:51 bostic 20 19
c on second thought, make it symlink(7)
e
s 00001/00000/00243
d D 6.17 92/07/27 13:39:17 bostic 19 18
c add symlin(1)
e
s 00014/00003/00229
d D 6.16 92/06/01 12:22:42 elan 18 17
c Added -Hh documentation.
e
s 00006/00004/00226
d D 6.15 91/07/23 14:50:03 cael 17 16
c .Os change
e
s 00003/00000/00227
d D 6.14 91/06/27 17:15:04 bostic 16 15
c add POSIX/IEEE contribution notice
e
s 00063/00069/00164
d D 6.13 91/03/07 18:43:21 cael 15 14
c upgrade to new -mdoc macros & rip out -f flag
e
s 00001/00001/00232
d D 6.12 91/01/09 17:06:45 bostic 14 13
c fts is in section 3
e
s 00004/00002/00229
d D 6.11 91/01/09 17:05:23 bostic 13 12
c update to allow "u=g" style modes
e
s 00009/00006/00222
d D 6.10 90/07/24 22:42:15 cael 12 11
c .Xr botch fix
e
s 00000/00000/00228
d D 6.9 90/06/24 19:14:15 cael 11 10
c converted man page
e
s 00001/00001/00227
d D 6.8 90/06/24 18:13:21 cael 10 9
c fix cross reference fts(3)
e
s 00125/00174/00103
d D 6.7 90/06/11 05:54:13 cael 9 8
c converted man page
e
s 00001/00011/00276
d D 6.6 90/05/31 20:27:44 bostic 8 7
c new copyright notice
e
s 00099/00070/00188
d D 6.5 90/04/28 12:46:25 bostic 7 6
c cleanup, minor syntax changes
e
s 00223/00077/00035
d D 6.4 90/01/01 13:05:54 bostic 6 5
c from scratch, using fts(3) and setmode(3) and the POSIX man page
e
s 00002/00000/00110
d D 6.3 86/05/22 10:39:18 mckusick 5 4
c clarify that -R does not follow symbolic links
e
s 00008/00001/00102
d D 6.2 85/08/31 18:11:24 sam 4 3
c document -f
e
s 00021/00009/00082
d D 6.1 85/04/29 17:41:39 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00032/00116/00059
d D 5.1 85/04/29 17:41:26 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00175/00000/00000
d D 4.1 85/04/29 17:41:18 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 6
D 9
.\" Copyright (c) 1989 The Regents of the University of California.
E 9
I 9
D 23
.\" Copyright (c) 1989, 1990 The Regents of the University of California.
E 9
.\" All rights reserved.
E 23
I 23
D 24
.\" Copyright (c) 1989, 1990, 1993
E 24
I 24
.\" Copyright (c) 1989, 1990, 1993, 1994
E 24
.\"	The Regents of the University of California.  All rights reserved.
E 23
.\"
I 16
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
E 16
D 8
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 8
I 8
D 17
.\" %sccs.include.redist.man%
E 17
I 17
.\" %sccs.include.redist.roff%
E 17
E 8
.\"
E 6
I 1
D 9
.\"	%W% (Berkeley) %G%
E 9
I 9
D 17
.\"     %W% (Berkeley) %G%
E 17
I 17
.\"	%W% (Berkeley) %G%
E 17
E 9
.\"
D 2
.TH CHMOD 1 
E 2
I 2
D 3
.TH CHMOD 1 "18 January 1983"
E 3
I 3
D 9
.TH CHMOD 1 "%Q%"
E 3
E 2
D 6
.AT 3
E 6
I 6
.UC 7
E 6
.SH NAME
D 6
chmod \- change mode
E 6
I 6
chmod - change file modes
E 6
.SH SYNOPSIS
D 2
.B chmod
mode file ...
E 2
I 2
D 3
\fBchmod\fP mode file ...
E 3
I 3
D 6
\fBchmod\fP [
D 4
.B \-R
E 4
I 4
.B \-Rf
E 4
] mode file ...
E 6
I 6
.nf
chmod [-fR] mode file ...
.fi
E 6
E 3
E 2
.SH DESCRIPTION
E 9
I 9
.Dd %Q%
.Dt CHMOD 1
D 17
.Os BSD 4.4
E 17
I 17
.Os
E 17
.Sh NAME
.Nm chmod
D 15
change file modes
E 15
I 15
.Nd change file modes
E 15
.Sh SYNOPSIS
.Nm chmod
D 15
.Op Fl fR
E 15
I 15
D 18
.Op Fl R
E 18
I 18
D 25
.Op Fl HRh
E 25
I 25
.Oo
.Fl R
.Op Fl H | Fl L | Fl P
.Oc
E 25
E 18
E 15
.Ar mode
.Ar file ...
.Sh DESCRIPTION
E 9
D 2
The mode of
each named file
is changed
according to
.I mode,
which may be absolute or symbolic.
An absolute
.I mode
is an octal
number constructed
from the OR of the
following modes:
E 2
I 2
D 6
The mode of each named file is changed according to \fImode\fP,
which may be absolute or symbolic.  An absolute \fImode\fP
is an octal number constructed from the OR of the following modes:
E 2
.TP 10
E 6
I 6
The
D 9
.I chmod
E 9
I 9
.Nm chmod
E 9
utility modifies the file mode bits of the listed files
as specified by the
D 9
.I mode
E 9
I 9
.Ar mode
E 9
operand.
D 9
.PP
E 9
I 9
.Pp
E 9
The options are as follows:
I 12
D 15
.Tw Ds
E 12
D 9
.TP
-f
If the -f option is given,
.I chmod
E 9
I 9
.Tp Fl f
.Nm chmod
E 9
will still exit 0 and not complain if it fails to change the mode
on a file.
D 9
.TP
-R
E 9
I 9
.Tp Fl R
E 15
I 15
.Bl -tag -width Ds
I 18
.It Fl H
D 25
When encountering a symbolic link on the command line, follow it.  All other
symbolic links encountered in the traversal are not followed.
E 25
I 25
If the
.Fl R
option is specified, symbolic links on the command line are followed.
(Symbolic links encountered in the tree traversal are not followed.)
.It Fl L
If the
.Fl R
option is specified, all symbolic links are followed.
.It Fl P
If the
.Fl R
option is specified, no symbolic links are followed.
E 25
E 18
.It Fl R
E 15
E 9
D 25
Traverse a file hierarchy.
For each file that is of type directory,
D 9
.I chmod
E 9
I 9
.Nm chmod
E 9
changes the mode of all files in the file hierarchy below it followed
by the mode of the directory itself.
I 18
.It Fl h
When encountering a symbolic link anywhere in the traversal, follow it.
E 25
I 25
Change the modes of the file hierarchies rooted in the files
instead of just the files themselves.
E 25
E 18
D 9
.PP
E 9
I 9
D 15
.Tp
E 15
I 15
.El
E 15
.Pp
E 9
D 18
Symbolic links are not indirected through, nor are their modes altered.
E 18
I 18
D 22
The mode of a symbolic link is immutable, so that unless the
E 22
I 22
D 25
The mode of a symbolic link is immutable, so unless the
E 22
.Fl h
or
E 25
I 25
Symbolic links do not have modes, so unless the
E 25
.Fl H
D 22
flags are set,
E 22
I 22
D 25
flag is set,
E 25
I 25
or
.Fl L
option is set,
E 25
E 22
.Nm chmod
D 26
on a symbolic link is a no-op.
E 26
I 26
on a symbolic link always succeeds and has no effect.
E 26
I 25
The
.Fl H ,
.Fl L
and
.Fl P
options are ignored unless the
.Fl R
option is specified.
In addition, these options override each other and the
command's actions are determined by the last one specified.
E 25
E 18
D 9
.PP
E 9
I 9
.Pp
E 9
Only the owner of a file or the super-user is permitted to change
the mode of a file.
D 9
.PP
E 9
I 9
.Pp
E 9
The
D 9
.I chmod
E 9
I 9
.Nm chmod
E 9
utility exits 0 on success, and >0 if an error occurs.
D 9
.SH MODES
E 9
I 9
.Sh MODES
E 9
Modes may be absolute or symbolic.
An absolute mode is an octal number constructed by
D 9
.IR or 'ing
E 9
I 9
D 15
.Cx Ar or
.Cx 'ing
.Cx
E 15
I 15
D 18
.Ar or Ap ing
E 18
I 18
.Ar or-ing
E 18
E 15
E 9
the following values:
I 12
D 15
.Df I
.Dw Fl
E 12
D 9
.RS
D 7
.TP 8
E 7
I 7
.TP 10
E 7
E 6
4000
E 9
I 9
.Dp Li 4000
E 15
I 15
.Pp
.Bl -tag -width 6n -compact -offset indent
.It Li 4000
E 15
E 9
D 6
set user ID on execution
E 6
I 6
set-user-ID-on-execution
E 6
D 9
.br
D 2
.br
E 2
.ns
D 6
.TP 10
E 6
I 6
.TP
E 6
2000
E 9
I 9
D 15
.Dp Li 2000
E 15
I 15
.It Li 2000
E 15
E 9
D 6
set group ID on execution
E 6
I 6
set-group-ID-on-execution
E 6
D 9
.br
D 2
.br
E 2
.ns
D 6
.TP 10
E 6
I 6
.TP
E 6
1000
E 9
I 9
D 15
.Dp Li 1000
E 15
I 15
.It Li 1000
E 15
E 9
D 6
sticky bit, see
.IR  chmod (2)
E 6
I 6
sticky bit, see chmod(2)
E 6
D 9
.br
D 2
.br
E 2
.ns
D 6
.TP 10
E 6
I 6
.TP
E 6
0400
E 9
I 9
D 15
.Dp Li 0400
E 15
I 15
.It Li 0400
E 15
E 9
read by owner
D 9
.br
D 2
.br
E 2
.ns
D 6
.TP 10
E 6
I 6
.TP
E 6
0200
E 9
I 9
D 15
.Dp Li 0200
E 15
I 15
.It Li 0200
E 15
E 9
write by owner
D 9
.br
D 2
.br
E 2
.ns
D 6
.TP 10
E 6
I 6
.TP
E 6
0100
E 9
I 9
D 15
.Dp Li 0100
E 15
I 15
.It Li 0100
E 15
E 9
D 6
execute (search in directory) by owner
E 6
I 6
execute (or search for directories) by owner
E 6
D 9
.br
D 2
.br
E 2
.ns
D 6
.TP 10
E 6
I 6
.TP
E 6
0070
E 9
I 9
D 15
.Dp Li 0070
E 15
I 15
.It Li 0070
E 15
E 9
D 6
read, write, execute (search) by group
E 6
I 6
read, write, execute/search by group
E 6
D 9
.br
D 2
.br
E 2
.ns
D 6
.TP 10
E 6
I 6
.TP
E 6
0007
E 9
I 9
D 15
.Dp Li 0007
E 15
I 15
.It Li 0007
E 15
E 9
D 6
read, write, execute (search) by others
D 2
.PP
A symbolic
.I mode
has the form:
E 2
I 2
.LP
A symbolic \fImode\fP has the form:
E 2
.IP
.RI [ who ]
D 2
.I op permission
E 2
I 2
\fIop permission\fP
E 2
.RI [ "op permission" "] ..."
D 2
.PP
The
.I who
part is a combination
of the letters 
.B u
(for user's permissions),
.B g
(group)
and
.B o
(other).
The letter
.B a
stands for
.B ugo.
If
.I who
is omitted,
the default is
.I a
but the setting of
the file creation mask
(see umask(2))
is taken into account.
.PP
.I Op
can be
.B +
to add
.I permission
to the file's mode,
.B \-
to take away
.I permission
and
.B =
to assign
.I permission
absolutely
(all other bits will
be reset).
.PP
.I Permission
is any combination of the letters
.B r
(read),
.B w
(write),
.B x
(execute),
.B s
(set owner or group id)
and
.B t
(save text \- sticky).
Letters
E 2
I 2
.LP
The \fIwho\fP part is a combination of the letters \fBu\fP
(for user's permissions), \fBg\fP (group) and \fBo\fP (other).
The letter \fBa\fP stands for all, or \fBugo.\fP
If \fIwho\fP is omitted, the default is \fIa\fP
but the setting of the file creation mask (see umask(2)) is taken into account.
.LP
\fIOp\fP can be \fB+\fP to add \fIpermission\fP to the file's mode,
\fB\-\fP to take away \fIpermission\fP and \fB=\fP to assign
\fIpermission\fP absolutely (all other bits will be reset).
.LP
\fIPermission\fP is any combination of the letters \fBr\fP (read),
D 3
\fBw\fP (write), \fBx\fP (execute), \fBs\fP (set owner or group id)
and \fBt\fP (save text \- sticky).  Letters
E 2
.BR u,
D 2
.B g
or
.B o
indicate that
.I permission
is to be taken
from the current
mode.
Omitting
.I permission
is only useful
with
.B =
to take away
all permissions.
.PP
E 2
I 2
\fBg\fP or \fBo\fP indicate that \fIpermission\fP
is to be taken from the current mode.  Omitting \fIpermission\fP
E 3
I 3
\fBw\fP (write), \fBx\fP (execute),
\fBX\fP (set execute only if file is a directory
or some other execute bit is set),
\fBs\fP (set owner or group id)
and \fBt\fP (save text \- sticky).
Letters \fBu\fP, \fBg\fP, or \fBo\fP indicate that \fIpermission\fP
is to be taken from the current mode. 
Omitting \fIpermission\fP
E 3
is only useful with \fB=\fP to take away all permissions.
E 6
I 6
read, write, execute/search by others
I 7
D 9
.RE
E 7
E 6
I 3
.PP
E 9
I 9
D 15
.Dp
I 12
.De
E 15
I 15
.El
E 15
E 12
.Pp
E 9
D 6
When the
.B \-R
option is given, 
.I chmod
recursively descends its directory arguments
setting the mode for each file as described above.
I 5
When symbolic links are encountered, their mode is not changed
and they are not traversed.
E 6
I 6
The read, write, and execute/search values for group and others
are encoded as described for owner.
D 7
.RE
E 7
E 6
E 5
I 4
D 9
.PP
E 9
I 9
.Pp
E 9
D 6
If the
.B \-f
option is given,
.I chmod
will not complain if it fails to change the mode
on a file.
E 6
I 6
The symbolic mode is described by the following grammar:
D 7
.sp
.nf
E 7
D 9
.RS
D 7
newmode ::= clause [ , clause ]
 clause ::= [ who ] op [ perm ]
    who ::= [ u | g | o ] ... | a
     op ::= + | - | =
   perm ::= [ r | s | t | w | X | x ] ...
E 7
I 7
.TP 10
mode
::= clause [ , clause ] ...
.br
.ns
.TP
clause
::= [ who ... ] [ action ... ] last_action
.br
.ns
.TP
action
::= op perm ...
.br
.ns
.TP
E 9
I 9
D 15
.Dp Li mode
::= clause
.Op  \&, clause
...
.Dp Li clause
::=
.Op  who ...
.Op  action ...
E 9
last_action
D 9
::= op [ perm ... ]
.br
.ns
.TP
who
::= a | u | g | o
.br
.ns
.TP
op
::= + | - | =
.br
.ns
.TP
perm
::= r | s | t | w | X | x
E 7
.RE
D 7
.fi
.sp
E 7
.PP
E 9
I 9
.Dp Li action
::= op perm ...
.Dp Li last_action
::= op
.Op  perm ...
.Dp Li who
.Li ::= a | u | g | o
.Dp Li op
.Li ::= + |  - |  =
.Dp Li perm
D 13
.Li ::= r |  s |  t |  w |  X |  x
E 13
I 13
.Li ::= r |  s |  t |  w |  X |  x |  u |  g |  o
E 13
.Dp
E 15
I 15
.Bd -literal -offset indent
mode         ::= clause [, clause ...]
clause       ::= [who ...] [action ...] last_action
action       ::= op [perm ...]
last_action  ::= op [perm ...]
who          ::= a | u | g | o
op           ::= + | \- | =
D 22
perm         ::= r | s | t | w | X | x | u | g | o
E 22
I 22
D 24
perm         ::= r | s | t | w | x | X
E 24
I 24
perm         ::= r | s | t | w | x | X | u | g | o
E 24
E 22
.Ed
E 15
.Pp
E 9
D 7
Each
.I clause
specifies an operation to be performed on the current mode
bits.
Each operation is applied to the mode bits in the order specified.
.PP
E 7
The
D 9
.I who
E 9
I 9
.Ar who
E 9
symbols ``u'', ``g'', and ``o'' specify the user, group, and other parts
of the mode bits, respectively.
D 7
A
E 7
I 7
The
E 7
D 9
.I who
E 9
I 9
.Ar who
E 9
D 7
consisting of the symbol ``a'' is equivalent to ``ugo''.
E 7
I 7
symbol ``a'' is equivalent to ``ugo''.
E 7
D 9
.PP
E 9
I 9
.Pp
I 22
.ne 1i
E 22
E 9
The
D 9
.I perm
E 9
I 9
.Ar perm
E 9
symbols represent the portions of the mode bits as follows:
D 7
.TP
E 7
I 7
D 9
.RS
.TP 10
E 7
r
E 9
I 9
D 12
.Dw Fl
E 12
I 12
D 15
.Dw Ds
E 12
.Dp r
E 15
I 15
.Pp
.Bl -tag -width Ds -compact -offset indent
.It r
E 15
E 9
The read bits.
I 7
D 9
.br
.ns
E 7
.TP
s
E 9
I 9
D 15
.Dp s
E 15
I 15
.It s
E 15
E 9
The set-user-ID-on-execution and set-group-ID-on-execution bits.
I 7
D 9
.br
.ns
E 7
.TP
t
E 9
I 9
D 15
.Dp t
E 15
I 15
.It t
E 15
E 9
D 7
The sticky bits.
E 7
I 7
The sticky bit.
D 9
.br
.ns
E 7
.TP
w
E 9
I 9
D 15
.Dp w
E 15
I 15
.It w
E 15
E 9
The write bits.
I 7
D 9
.br
.ns
E 7
.TP
D 7
X
The execute/search bits if the file is a directory or any of the
execute/search bits are already set.
.TP
E 7
x
E 9
I 9
D 15
.Dp x
E 15
I 15
.It x
E 15
E 9
The execute/search bits.
I 7
D 9
.br
.ns
.TP
X
E 9
I 9
D 15
.Dp X
E 15
I 15
.It X
E 15
E 9
The execute/search bits if the file is a directory or any of the
execute/search bits are set in the original (unmodified) mode.
Operations with the
D 9
.I perm
E 9
I 9
.Ar perm
E 9
symbol ``X'' are only meaningful in conjunction with the
D 9
.I op
E 9
I 9
.Ar op
E 9
D 22
symbol ``+'', and it is ignored in all other cases.
E 22
I 22
symbol ``+'', and are ignored in all other cases.
I 24
.It u
The user permission bits in the mode of the original file.
.It g
The group permission bits in the mode of the original file.
.It o
The other permission bits in the mode of the original file.
E 24
E 22
D 9
.RE
E 7
.PP
E 9
I 9
D 15
.Dp
E 15
I 15
.El
E 15
.Pp
E 9
The
D 9
.I op
E 9
I 9
.Ar op
E 9
symbols represent the operation performed, as follows:
D 9
.TP
+
E 9
I 9
D 12
.Tw Fl
E 12
I 12
D 15
.Tw Ds
E 12
.Tp \&+
E 15
I 15
.Bl -tag -width 4n
.It +
E 15
E 9
If no value is supplied for
D 9
.IR perm ,
E 9
I 9
.Ar perm ,
E 9
the ``+'' operation has no effect.
If no value is supplied for
D 9
.IR who ,
E 9
I 9
.Ar who ,
E 9
each permission bit specified in
D 9
.IR perm ,
E 9
I 9
.Ar perm ,
E 9
D 7
for which the corresponding bit in the file mode creation mask of the
invoking process is clear, is set, and, if
.I perm
includes ``s'', the set-user-ID-on-execution and set-group-ID-on-execution
bits are set.
If values are provided for both
E 7
I 7
for which the corresponding bit in the file mode creation mask
is clear, is set.
Otherwise, the mode bits represented by the specified
E 7
D 9
.I who
E 9
I 9
.Ar who
E 9
and
D 7
.IR perm ,
each mode bit represented by the specified
.I who
and
E 7
D 9
.I perm
E 9
I 9
.Ar perm
E 9
D 7
values is set.
E 7
I 7
values are set.
E 7
D 9
.TP
-
E 9
I 9
D 15
.Tp \&-
E 15
I 15
.It \&\-
E 15
E 9
If no value is supplied for
I 7
D 9
.IR perm ,
E 9
I 9
.Ar perm ,
E 9
D 15
the ``-'' operation has no effect.
E 15
I 15
the ``\-'' operation has no effect.
E 15
If no value is supplied for
E 7
D 9
.IR who ,
E 9
I 9
.Ar who ,
E 9
D 7
clear the mode bits represented by
E 7
I 7
D 24
the mode bits represented by
E 7
D 9
.I perm
E 9
I 9
.Ar perm
E 9
D 7
for the owner, group, and other permissions.
Otherwise, clear the mode bits represented by the specified
E 7
I 7
are cleared for the owner, group and other permissions.
E 24
I 24
each permission bit specified in
.Ar perm ,
for which the corresponding bit in the file mode creation mask
is clear, is cleared.
E 24
Otherwise, the mode bits represented by the specified
E 7
D 9
.I who
E 9
I 9
.Ar who
E 9
and
D 9
.I perm
E 9
I 9
.Ar perm
E 9
D 7
values.
E 7
I 7
values are cleared.
E 7
D 9
.TP
=
E 9
I 9
D 15
.Tp \&=
E 15
I 15
.It =
E 15
E 9
D 7
If no value is supplied for
.IR who ,
set the permission bits specified in
.I perm
that correspond to bits that are not set in the value of the file mode
creation mask of the invoking process.
Otherwise, clear all the mode bits for user, group, and other as
specified by the
E 7
I 7
The mode bits specified by the
E 7
D 9
.I who
E 9
I 9
.Ar who
E 9
D 7
value.
Then, if a value is supplied for both
.I perm
and
E 7
I 7
value are cleared, or, if no who value is specified, the owner, group
and other mode bits are cleared.
Then, if no value is supplied for
E 7
D 9
.IR who ,
E 9
I 9
.Ar who ,
E 9
D 7
set each mode bit represented by all combinations
of the specified
E 7
I 7
each permission bit specified in
D 9
.IR perm ,
E 9
I 9
.Ar perm ,
E 9
for which the corresponding bit in the file mode creation mask
is clear, is set.
Otherwise, the mode bits represented by the specified
E 7
D 9
.I who
E 9
I 9
.Ar who
E 9
and
D 9
.I perm
E 9
I 9
.Ar perm
E 9
D 7
values.
E 7
I 7
values are set.
E 7
D 9
.PP
E 9
I 9
D 15
.Tp
E 15
I 15
.El
E 15
.Pp
E 9
D 7
Operations upon the other permissions (specified by the symbol ``o'' or
the symbol ``a'') in combination with the
E 7
I 7
Each
D 9
.I clause
E 9
I 9
.Ar clause
E 9
specifies one or more operations to be performed on the mode
bits, and each operation is applied to the mode bits in the
order specified.
D 9
.PP
E 9
I 9
.Pp
E 9
Operations upon the other permissions only (specified by the symbol
``o'' by itself), in combination with the
E 7
D 9
.I perm
E 9
I 9
.Ar perm
E 9
D 7
symbols ``s'' or ``t''
are ignored, and do not change any mode bits or cause an error.
E 7
I 7
symbols ``s'' or ``t'', are ignored.
E 7
E 6
E 4
E 3
D 9
.SH EXAMPLES
D 6
.LP
E 2
The first example denies write permission to others,
D 3
the second makes a file executable:
E 3
I 3
the second makes a file executable by all if it is executable by anyone:
E 3
.IP
chmod o\-w file
E 6
I 6
.TP
``644''
E 9
I 9
.Sh EXAMPLES
D 12
.Tw Fl
E 12
I 12
D 15
.Tw Ar
E 12
.Tp ``644''
E 15
I 15
.Bl -tag -width "u=rwx,go=u-w" -compact
.It Li 644
E 15
E 9
D 7
make a file readable by anyone but writeable only by the owner.
E 6
.br
D 3
chmod +x file
E 3
I 3
D 6
chmod +X file
E 3
D 2
.PP
E 2
I 2
.LP
E 2
Multiple symbolic modes separated by commas may be given.
D 2
Operations are performed
in the order specified.
The letter
.B s
is only useful
with
.B u
or
.B g.
.PP
E 2
I 2
Operations are performed in the order specified.  The letter
\fBs\fP is only useful with \fBu\fP or \fBg.\fP
.LP
E 2
Only the owner of a file (or the super-user) may change its mode.
E 6
I 6
.ns
E 7
I 7
make a file readable by anyone and writable by the owner only.
E 7
D 9
.TP
``go-w''
E 9
I 9
D 15
.Tp ``go-w''
E 15
I 15
.Pp
.It Li go-w
E 15
E 9
deny write permission to group and others.
D 7
.br
.ns
E 7
D 9
.TP
I 7
``=rw,+X''
E 9
I 9
D 15
.Tp ``=rw,+X''
E 15
I 15
.Pp
.It Li =rw,+X
E 15
E 9
set the read and write permissions to the usual defaults, but
retain any execute permissions that are currently set.
D 9
.TP
E 7
``+X''
E 9
I 9
D 15
.Tp ``+X''
E 15
I 15
.Pp
.It Li +X
E 15
E 9
D 7
make a file executable by everyone if it is already executable by
anyone.
.br
.ns
E 7
I 7
make a directory or file searchable/executable by everyone if it is
already searchable/executable by anyone.
E 7
D 9
.TP
D 7
``711'' or ``u=rwx,go=x''
make a file executable by everyone and read/writeable by the owner only.
E 7
I 7
``755'' or ``u=rwx,go=rx''
E 9
I 9
D 13
.Tp ``755'' or ``u=rwx,go=rx''
E 13
I 13
D 15
.Tp ``755'', ``u=rwx,go=rx'' or ``u=rwx,go=u-w''
E 15
I 15
.Pp
.It Li 755
.It Li u=rwx,go=rx
.It Li u=rwx,go=u-w
E 15
E 13
E 9
D 25
make a file readable/executable by everyone and writeable by the owner only.
E 25
I 25
make a file readable/executable by everyone and writable by the owner only.
E 25
E 7
D 9
.TP
``go=''
E 9
I 9
D 15
.Tp ``go=''
E 15
I 15
.Pp
.It Li go=
E 15
E 9
clear all mode bits for group and others.
I 13
D 15
.Tp ``g=u-w''
E 15
I 15
.Pp
.It Li g=u-w
E 15
set the group bits equal to the user bits, but clear the group write bit.
E 13
D 9
.SH BUGS
E 9
I 9
D 15
.Tp
E 15
I 15
.El
E 15
.Sh BUGS
E 9
There's no
D 9
.I perm
E 9
I 9
.Ar perm
E 9
option for the naughty bits.
D 9
.SH ENVIRONMENT
E 6
.SH "SEE ALSO"
D 2
ls(1),
chmod(2),
stat(2),
umask(2),
chown(8)
E 2
I 2
D 6
ls(1), chmod(2), stat(2), umask(2), chown(8)
E 6
I 6
install(1), chmod(2), fts(2), stat(2), umask(2), setmode(3), chown(8)
.SH STANDARDS
E 9
I 9
D 12
.Sh ENVIRONMENT
E 12
.Sh SEE ALSO
.Xr install 1 ,
I 19
D 20
.Xr symlink 1 ,
E 20
E 19
.Xr chmod 2 ,
D 10
.Xr fts 2 ,
E 10
I 10
D 12
.Xr fts 3 ,
E 12
I 12
D 14
.Xr fts 2 ,
E 14
E 12
E 10
.Xr stat 2 ,
.Xr umask 2 ,
I 14
.Xr fts 3 ,
E 14
.Xr setmode 3 ,
I 20
.Xr symlink 7 ,
E 20
.Xr chown 8
.Sh STANDARDS
E 9
The
D 9
.I chmod
E 9
I 9
.Nm chmod
E 9
D 12
function is expected to be POSIX 1003.2 compatible with the exception
E 12
I 12
D 17
utility is expected to be POSIX 1003.2 compatible with the exception
E 17
I 17
D 22
utility is expected to be
.St -p1003.2
compatible with the exception
E 17
E 12
of the
E 22
I 22
utility is expected to be POSIX 1003.2
compatible with the exception of the
E 22
D 9
.I perm
E 9
I 9
.Ar perm
E 9
D 15
symbols ``t'' and ``X'' which are not included in that standard.
E 15
I 15
symbols
.Dq t
and
.Dq X
which are not included in that standard.
E 15
E 6
E 2
E 1
