h44284
s 00002/00002/00108
d D 8.1 93/05/31 14:36:32 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00004/00001/00106
d D 6.3 93/05/31 14:36:27 bostic 5 4
c update the copyright notice
e
s 00002/00000/00105
d D 6.2 91/04/08 14:45:35 bostic 4 3
c new copyright; att/bsd/shared
e
s 00001/00001/00104
d D 6.1 85/04/29 17:46:22 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00001/00001/00104
d D 5.1 85/04/29 17:46:14 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00105/00000/00000
d D 4.1 85/04/29 17:46:05 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 4
D 5
.\" %sccs.include.proprietary.man%
E 5
I 5
D 6
.\" Copyright (c) 1993 The Regents of the University of California.
.\" All rights reserved.
E 6
I 6
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
E 6
.\"
.\" %sccs.include.proprietary.roff%
E 5
.\"
E 4
I 1
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH EXPR 1 
E 2
I 2
D 3
.TH EXPR 1  "18 January 1983"
E 3
I 3
.TH EXPR 1 "%Q%"
E 3
E 2
.AT 3
.SH NAME
expr \- evaluate arguments as an expression
.SH SYNOPSIS
.B expr
arg
.B .\|.\|.
.SH DESCRIPTION
The arguments are taken as an expression.
After evaluation, the result is written on the standard output.
Each token of the expression is a separate argument.
.PP
The operators and keywords are listed below.
The list is in order of increasing precedence,
with equal precedence operators grouped.
.TP
.I expr | expr
yields the first
.I expr
if it is neither null nor `0', otherwise
yields the second
.I expr.
.TP
.I expr & expr
yields the first
.I expr
if neither
.I expr
is null or `0', otherwise yields `0'.
.TP
.I expr relop expr
where
.I relop is one of
< <= = != >= >,
yields `1' if the indicated comparison is true, `0' if false.
The comparison is numeric if both
.I expr
are integers, otherwise lexicographic.
.TP
.IR expr " + " expr
.br
.ns
.TP
.IR expr " \- " expr
.br
addition or subtraction of the arguments.
.TP
.IR expr " * " expr
.br
.ns
.TP
.IR expr " / " expr
.br
.ns
.TP
.IR expr " % " expr
.br
multiplication, division, or remainder of the arguments.
.TP
.IR expr " : " expr
The matching operator compares the string first argument
with the regular expression second argument;
regular expression syntax is the same as that of
.IR ed (1).
The
\fB\\(\|.\|.\|.\|\\)\fP
pattern symbols can be used to select a portion of the
first argument.
Otherwise,
the matching operator yields the number of characters matched
(`0' on failure).
.TP
.RI ( " expr " )
parentheses for grouping.
.PP
Examples:
.PP
To add 1 to the Shell variable
.IR a :
.IP
a=\`expr $a + 1\`
.PP
To find the filename part (least significant part)
of the pathname stored in variable
.I a,
which may or may not contain `/':
.IP
expr $a : \'.*/\e(\^.*\e)\' \'\^|\' $a
.LP
Note the quoted Shell metacharacters.
.SH "SEE ALSO"
sh(1), test(1)
.SH DIAGNOSTICS
.I Expr
returns the following exit codes:
.PP
	0	if the expression is neither null nor `0',
.br
	1	if the expression
is null or `0',
.br
	2	for invalid expressions.
E 1
