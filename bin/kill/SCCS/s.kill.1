h25976
s 00045/00023/00071
d D 8.2 95/04/28 10:07:03 bostic 15 14
c POSIX.2 compliance
c From: Charles Hannum <mycroft@NetBSD.ORG>
e
s 00002/00002/00092
d D 8.1 93/05/31 14:38:17 bostic 14 13
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00003/00002/00091
d D 6.9 91/10/09 17:30:35 bostic 13 12
c -1 isn't super-user only
e
s 00029/00025/00064
d D 6.8 91/07/27 20:14:04 cael 12 11
c mdoc version three
e
s 00003/00000/00086
d D 6.7 91/06/27 17:19:03 bostic 11 10
c add POSIX/IEEE contribution notice
e
s 00021/00024/00065
d D 6.6 91/06/17 16:22:52 bostic 10 9
c minor wordsmithing; cleanup kill code for consistency and better error
c messages
e
s 00003/00001/00086
d D 6.5 91/03/13 23:57:36 cael 9 6
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00002/00001/00087
d R 6.6 91/03/13 23:50:45 cael 8 7
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00001/00000/00087
d R 6.5 91/03/13 20:29:17 cael 7 6
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00004/00001/00083
d D 6.4 90/07/24 22:46:37 cael 6 5
c .Xr botch fix
e
s 00073/00059/00011
d D 6.3 90/06/24 19:06:33 cael 5 4
c converted man page
e
s 00007/00004/00063
d D 6.2 86/04/20 02:43:10 lepreau 4 3
c bring up to date with negative pid kernel code; missing words.
e
s 00001/00001/00066
d D 6.1 85/04/29 14:27:24 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00003/00014/00064
d D 5.1 85/04/29 14:27:16 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00078/00000/00000
d D 4.1 85/04/29 14:27:08 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 14
.\" Copyright (c) 1980, 1990 The Regents of the University of California.
.\" All rights reserved.
E 14
I 14
.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 14
E 5
.\"
I 11
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
E 11
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
D 12
.\" %sccs.include.redist.man%
E 12
I 12
.\" %sccs.include.redist.roff%
E 12
E 5
.\"
D 2
.TH KILL 1 
E 2
I 2
D 3
.TH KILL 1 "18 January 1983"
E 3
I 3
D 5
.TH KILL 1 "%Q%"
E 3
E 2
.UC 4
.SH NAME
kill \- terminate a process with extreme prejudice
.SH SYNOPSIS
.B kill
[
.BR \- sig
]
processid ...
.br
.B kill
.B \-l
.SH DESCRIPTION
.I Kill
sends the TERM (terminate, 15) signal to the specified processes.
If a signal name or number preceded by `\-' is given
as first argument, that signal is sent instead of
terminate
(see
D 2
.IR  signal (2)).
E 2
I 2
.IR  sigvec (2)).
E 2
The signal names are listed by
`kill \-l', and are as given in
.I /usr/include/signal.h,
E 5
I 5
D 12
.\"     %W% (Berkeley) %G%
E 12
I 12
.\"	%W% (Berkeley) %G%
E 12
.\"
I 9
D 12
.Vx
E 12
D 10
.Vx
E 10
E 9
.Dd %Q%
.Dt KILL 1
D 9
.Os BSD 4.4
E 9
I 9
.Os
E 9
.Sh NAME
.Nm kill
.Nd terminate or signal a process
.Sh SYNOPSIS
.Nm kill
D 15
.Op Fl signal_name
E 15
I 15
.Op Fl s Ar signal_name
E 15
.Ar pid
\&...
.Nm kill
I 10
D 15
.Op Fl signal_number
E 15
I 15
.Fl l
.Op Ar exit_status
.Nm kill
.Fl signal_name
E 15
.Ar pid
\&...
.Nm kill
E 10
D 15
.Op Fl l
E 15
I 15
.Fl signal_number
.Ar pid
\&...
E 15
.Sh DESCRIPTION
D 10
The kill utility sends a signal to the process(es) specified
by each pid operand. It is used to kill runaway or misbegotten
processes, such as those
.Em backgrounded
with
.Sq Li \&& .
.Nm Kill
is intelligent about who owns a process.
E 10
I 10
D 12
The kill utility sends the TERM signal to the processes specified
E 12
I 12
D 15
The kill utility sends the
.Dv TERM
signal to the processes specified
E 15
I 15
The kill utility sends a signal to the processes specified
E 15
E 12
by the pid operand(s).
E 10
I 6
.Pp
D 10
Options available:
E 10
I 10
Only the super-user may send signals to other users' processes.
E 10
.Pp
I 10
The options are as follows:
.Pp
E 10
E 6
D 12
.Tw Ds
D 10
.Tp Fl signal_name
A symbolic signal name. To find out all the possible signal names
do a
.Li kill -l .
E 10
.Tp Fl l
E 12
I 12
.Bl -tag -width Ds
D 15
.It Fl l
E 12
D 10
Available signal names are listed and are as found in
.Pa /usr/include/signal.h ,
E 5
stripped of the common SIG prefix.
E 10
I 10
List the signal names.
E 15
I 15
.It Fl s Ar signal_name
A symbolic signal name specifying the signal to be sent instead of the
default
.Dv TERM .
.It Fl l Op Ar exit_status
If no operand is given, list the signal names; otherwise, write
the signal name corresponding to
.Ar exit_status .
E 15
D 12
.Tp Fl signal_name
E 12
I 12
.It Fl signal_name
E 12
A symbolic signal name specifying the signal to be sent instead of the
D 12
default TERM.
E 12
I 12
default
.Dv TERM .
E 12
D 15
The
.Fl l
option displays the signal names.
E 15
E 10
D 5
.PP
The terminate signal will kill processes that do not catch the signal;
`kill \-9 ...' is a sure kill, as the KILL (9) signal cannot be caught.
By convention, if process number 0 is specified, all members
in the process group (i.e. processes resulting from 
the current login) are signaled (but beware: this works only
if you use
.IR sh (1);
not if you use
.IR csh (1).)
I 4
Negative process numbers also have special meanings; see
.IR kill (2)
for details.
.PP
E 4
The killed processes must belong
to the current user unless
he is the super-user.
.PP
D 2
To shut the system down and bring it up single user
the super-user may send the initialization process a TERM (terminate)
signal by `kill 1'; see
.IR init (8).
To force
.I init
to close and open terminals
according to what is currently in
/etc/ttys
use `kill \-HUP 1' (sending a hangup, signal 1).
.PP
E 2
The process number of an asynchronous process
started with `&' is reported by the shell.
Process numbers can also be found by using
I 4
.IR ps (1).
E 4
.I Kill
E 5
I 5
D 12
.Tp Fl signal_number
E 12
I 12
.It Fl signal_number
E 12
D 10
A (nonnegative) decimal integer, representing the signal
to be used instead of TERM as the sig argument in
the effective call to
D 6
.Nm kill 1 .
E 6
I 6
.Xr kill 2 .
E 10
I 10
A non-negative decimal integer, specifying the signal to be sent instead
D 12
of the default TERM.
E 10
E 6
.Tp
E 12
I 12
of the default
.Dv TERM .
.El
E 12
.Pp
I 15
The following pids have special meanings:
.Bl -tag -width Ds -compact
.It -1
If superuser, broadcast the signal to all processes; otherwise broadcast
to all processes belonging to the user.
.El
.Pp
E 15
D 10
Some of the more commonly used signals with kill:
E 10
I 10
Some of the more commonly used signals:
E 10
D 12
.Ds I
.Cw XXX TERM
D 10
.Cl -1	-1	(broadcast to all processes, super user only)
E 10
I 10
.Cl -1	-1	(broadcast to all processes, super-user only)
E 10
.Cl 0	0	(sh(1) only, signals all members of process group)
.Cl 2	INT	(interupt)
.Cl 3	QUIT	(quit)
.Cl 6	ABRT	(abort)
D 10
.Cl 9	KILL	(non-catchable non-ignorable kill)
E 10
I 10
.Cl 9	KILL	(non-catchable, non-ignorable kill)
E 10
.Cl 14	ALRM	(alarm clock)
.Cl 15	TERM	(software termination signal)
.Cw
.De
E 12
I 12
D 15
.Bd -ragged -offset indent -compact
.Bl -column XXX TERM
D 13
.It -1	-1	(broadcast to all processes, super-user only)
E 13
I 13
.It -1	-1	(super-user broadcast to all processes, or user broadcast
to user's processes)
E 13
.It 0	0	(sh(1) only, signals all members of process group)
D 13
.It 2	INT	(interupt)
E 13
I 13
.It 2	INT	(interrupt)
E 13
.It 3	QUIT	(quit)
.It 6	ABRT	(abort)
.It 9	KILL	(non-catchable, non-ignorable kill)
.It 14	ALRM	(alarm clock)
.It 15	TERM	(software termination signal)
E 15
I 15
.Bl -tag -width Ds -compact
.It 1
HUP (hang up)
.It 2
INT (interrupt)
.It 3
QUIT (quit)
.It 6
ABRT (abort)
.It 9
KILL (non-catchable, non-ignorable kill)
.It 14
ALRM (alarm clock)
.It 15
TERM (software termination signal)
E 15
.El
D 15
.Ed
E 15
E 12
.Pp
.Nm Kill
E 5
is a built-in to
D 5
.IR csh (1);
E 5
I 5
.Xr csh  1  ;
E 5
D 4
it allows job specifiers ``%...''
E 4
I 4
it allows job specifiers of the form ``%...'' as arguments
E 4
so process id's are not as often used as
D 5
.I kill
E 5
I 5
.Nm kill
E 5
arguments.
See
D 5
.IR csh (1)
E 5
I 5
.Xr csh  1
E 5
for details.
D 5
.SH "SEE ALSO"
D 2
csh(1), ps(1), kill(2), signal(2)
E 2
I 2
csh(1), ps(1), kill(2), sigvec(2)
E 2
.SH BUGS
D 4
An option to kill process groups ala
.IR killpg (2)
should be provided; a replacement for ``kill 0''
E 4
I 4
A replacement for ``kill 0''
E 5
I 5
.Sh SEE ALSO
.Xr csh 1 ,
.Xr ps 1 ,
.Xr kill 2 ,
.Xr sigvec 2
I 15
.Sh STANDARDS
The
.Nm kill
function is expected to be
.St -p1003.2
compatible.
E 15
.Sh HISTORY
A
.Nm kill
D 12
command appeared in Version 6 AT&T Unix.
E 12
I 12
command appeared in
.At v6 .
E 12
.Sh BUGS
D 12
A replacement for
E 12
I 12
A replacement for the command
E 12
.Dq Li kill 0
E 5
E 4
for
D 5
.IR csh (1)
E 5
I 5
.Xr csh  1
E 5
users should be provided.
E 1
