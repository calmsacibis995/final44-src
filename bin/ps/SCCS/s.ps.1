h35517
s 00002/00002/00474
d D 8.3 94/04/18 07:33:36 bostic 25 24
c typo
e
s 00003/00003/00473
d D 8.2 93/12/30 15:39:06 mckusick 24 23
c copyediting for Usenix manuals
e
s 00002/00002/00474
d D 8.1 93/05/31 15:05:49 bostic 23 22
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00003/00003/00473
d D 6.20 93/04/28 14:18:01 bostic 22 21
c delete trss from -v format, it's not available in the new VM
e
s 00003/00001/00473
d D 6.19 92/12/19 14:44:15 bostic 21 20
c add -e (print out the environment)
e
s 00000/00003/00474
d D 6.18 92/07/06 12:53:34 bostic 20 19
c page wait state no longer exists
e
s 00002/00003/00475
d D 6.17 91/06/20 12:05:52 bostic 19 18
c clean up option formatting
e
s 00316/00281/00162
d D 6.16 91/05/06 15:14:58 cael 18 17
c once more with feeling - converted to mdoc (version three)
c rechecked for proprietary wording (only three sentences, not bad)
c this man page still needs some work (list structure inconsistencies -
c phrases versus full sentences)
e
s 00015/00012/00428
d D 6.15 91/04/23 19:08:37 bostic 17 16
c add -M, -N, -W for consistency with other stat programs
e
s 00028/00028/00412
d D 6.14 91/04/21 15:46:01 bostic 16 15
c hex flags should have a leading "0x"
e
s 00003/00010/00437
d D 6.13 91/02/12 16:05:56 bostic 15 14
c delete "rusage" alias; delete -s option; change "trs" to "trss"
c two bugs: sortby needed to be initalized, typo in an error message
e
s 00001/00001/00446
d D 6.12 91/02/08 18:02:08 bostic 14 13
c drop "tt" keyword from -v output so fits on 80 column screen
e
s 00007/00007/00440
d D 6.11 91/02/08 17:50:55 bostic 13 12
c don't use aliases in descriptions, make -O same order as default
e
s 00060/00062/00387
d D 6.10 91/02/08 13:20:30 bostic 12 11
c one more pass to get keywords/aliases right
e
s 00355/00402/00094
d D 6.9 91/02/08 11:17:04 bostic 11 10
c Put print/keyword routines into separate modules; delete attime.c, use
c strftime(3) instead; put combination keywords into main keyword list,
c sort, delete aliases, and use bsearch(3); don't fail if nlist fails or
c devices aren't found.  Whack the manual page for consistency, correctness.
e
s 00470/00272/00026
d D 6.8 90/08/30 11:55:05 marc 10 9
c fixes from chris
e
s 00002/00007/00296
d D 6.7 90/06/26 01:00:32 cael 9 8
c converted man page
e
s 00178/00157/00125
d D 6.6 90/06/11 05:59:17 cael 8 7
c converted man page
e
s 00014/00011/00268
d D 6.5 88/03/10 17:14:32 karels 7 6
c updates
e
s 00001/00001/00278
d D 6.4 86/10/15 14:43:02 eric 6 5
c typo fix in description of U option
e
s 00003/00003/00276
d D 6.3 86/05/12 08:52:50 anne 5 4
c grammar, diction
e
s 00015/00005/00264
d D 6.2 85/08/28 18:17:48 mckusick 4 3
c symbolic wchan (from crl@newton.purdue.edu)
e
s 00009/00003/00260
d D 6.1 85/04/29 14:56:20 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00018/00014/00245
d D 5.1 85/04/29 14:55:59 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00259/00000/00000
d D 4.1 85/04/29 14:55:49 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 8
D 9
.\" Copyright (c) 1990 The Regents of the University of California.
E 9
I 9
D 18
.\" Copyright (c) 1980, 1990 The Regents of the University of California.
E 18
I 18
D 23
.\" Copyright (c) 1980, 1990, 1991 The Regents of the University of California.
E 18
E 9
.\" All rights reserved.
E 23
I 23
D 25
.\" Copyright (c) 1980, 1990, 1991, 1993
E 25
I 25
.\" Copyright (c) 1980, 1990, 1991, 1993, 1994
E 25
.\"	The Regents of the University of California.  All rights reserved.
E 23
.\"
D 18
.\" %sccs.include.redist.man%
E 18
I 18
.\" %sccs.include.redist.roff%
E 18
.\"
.\"     %W% (Berkeley) %G%
.\"
D 10
.Dd %Q%
E 8
I 1
D 9
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
D 8
.\"	%W% (Berkeley) %G%
E 8
I 8
.\"	@(#)ps.1	6.5 (Berkeley) 3/10/88
E 8
.\"
E 9
I 9
.Dd %Q%
E 9
D 2
.TH PS 1
E 2
I 2
D 3
.TH PS 1 "13 April 1983"
E 3
I 3
D 8
.TH PS 1 "%Q%"
E 3
E 2
.UC 4
.SH NAME
ps \- process status
.SH SYNOPSIS
.B ps
[
D 3
.B acegklstuvwx#
E 3
I 3
D 4
.B acegklstuvwxU#
E 4
I 4
.B acegklnstuvwxU#
E 4
E 3
]
.SH DESCRIPTION
.I Ps
prints information about processes.
E 8
I 8
.Dt PS 1
.Os BSD 4
.Sh NAME
.Nm ps
.Nd display current process status
.Sh SYNOPSIS
.Nm ps
.Op Fl acegklnstuvwxU\&\#\&
.Sh DESCRIPTION
.Nm Ps
displays the current process status.
E 10
I 10
D 18
.TH PS 1 "March 10, 1988"
.UC 4
.SH NAME
ps \- process status
.SH SYNOPSIS
D 11
.B ps
[
.B \-ax
.B \-t
.I tty
.B \-p
.I pid
] [
.B \-mr
] [
.B \-hw
] [
.B \-lvujs
] [
.B \-o
.I format
] [
.B \-O
.I format
] [
.B \-mr
] [
.B \-SC
]
.sp
.B ps \-L
E 11
I 11
.nf
.ft B
D 12
ps [ \-aChjlmrSsTuvwx ] [ \-O|o fmt ] [ \-p pid ] [ \-t tty \]
.br
	[ system ] [ core ] [ swap ]
.br
E 12
I 12
D 15
ps [ \-aChjlmrSsTuvwx ] [ \-O|o fmt ] [ \-p pid ] [ \-t tty \] [ system ] [ core ] [ swap ]
E 15
I 15
D 17
ps [ \-aChjlmrSTuvwx ] [ \-O|o fmt ] [ \-p pid ] [ \-t tty \] [ system ] [ core ] [ swap ]
E 17
I 17
ps [ \-aChjlmrSTuvwx ] [ \-M core ] [ \-N system ]
.ti +5
[ \-O|o fmt ] [ \-p pid ] [ \-t tty \] [ \-W swap ]
E 17
E 15
E 12
ps [ \-L ]
.ft R
.fi
E 11
.SH DESCRIPTION
D 11
.B Ps
prints information about processes.
E 10
E 8
Normally, only your processes are candidates to be printed by
D 8
.I ps;
E 8
I 8
D 10
.Nm ps ;
E 10
I 10
.I ps;
E 10
E 8
specifying
D 8
.B a
E 8
I 8
D 10
.Fl a
E 10
I 10
.B \-a
E 10
E 8
D 5
causes other users processes to be candidates to be printed;
E 5
I 5
causes other users' processes to be candidates to be printed;
E 5
specifying
D 8
.B x
E 8
I 8
D 10
.Fl x
E 8
includes processes without control terminals in the candidate pool.
D 8
.PP
E 8
I 8
While
.Nm ps
is a fairly accurate snapshot of the system,
.Nm Ps
cannot begin and finish a snapshot of the system as fast as some processes
themselves change state.  At times there may be minor discrepancies.
.Pp
E 8
All output formats include, for each process, the process id PID,
control terminal of the process TT, cpu time used by the process TIME
(this includes both user and system time), the state STAT of the process,
and an indication of the COMMAND which is running.
D 7
The state is given by a sequence of four letters, e.g. ``RWNA''.
E 7
I 7
The state is given by a sequence of letters, e.g. ``RWNA''.
E 7
The first letter indicates the runnability of the process:
R for runnable processes,
T for stopped processes,
P for processes in page wait,
D for those in disk (or other short term) waits,
S for those sleeping for less than about 20 seconds,
and I for idle (sleeping longer than about 20 seconds)
processes.
D 7
The second letter indicates whether a process is swapped out,
showing W if it is, or a blank if it is loaded (in-core);
a process which has specified a soft limit on memory requirements
E 7
I 7
Additional characters after these, if any,
indicate additional state information.
The letter W indicates that a process is swapped out,
showing W if it is, or a blank if it is loaded (in-core).
A process which has specified a soft limit on memory requirements
E 7
and which is exceeding that limit shows >; such a process is (necessarily)
not swapped.
D 7
The third letter indicates whether a process is running with altered
E 7
I 7
An additional letter may indicate whether a process is running with altered
E 7
D 2
CPU scheduling priority (nice); if the processes priority is reduced,
a N is shown, if the process priority has been artificially raised then
a `<' is shown; process running without special treatment have just a
E 2
I 2
CPU scheduling priority (nice); if the process priority is reduced,
an N is shown, if the process priority has been artificially raised then
D 7
a `<' is shown; processes running without special treatment have just a
E 2
blank.
The final letter indicates any special treatment of the process for virtual
E 7
I 7
a `<' is shown.
The final optional letter
indicates any special treatment of the process for virtual
E 7
memory replacement; the letters correspond to options to the
D 8
.IR vadvise (2)
D 7
call; currently the possibilities are A standing for VA_ANOM, 
S for VA_SEQL and blank for VA_NORM; an A typically represents a
E 7
I 7
call; currently the possibilities are A standing for VA_ANOM and 
E 8
I 8
.Xr vadvise  2
call; currently the possibilities are A standing for VA_ANOM and
E 8
S for VA_SEQL.
An A typically represents a
E 7
D 8
.IR lisp (1)
E 8
I 8
.Xr lisp  1
E 8
D 7
in garbage collection, S is typical of large image processing programs
E 7
I 7
in garbage collection, and S is typical of large image processing programs
E 7
which are using virtual memory to sequentially address voluminous data.
D 8
.PP
E 8
I 8
.Pp
E 8
Here are the options:
D 8
.TP 5
.B a
asks for information about all processes with terminals (ordinarily
E 8
I 8
.Tp Fl a
asks for information regarding processes associated with terminals (ordinarily
E 8
only one's own processes are displayed).
D 8
.TP 5
.B c
E 8
I 8
.Tp Fl c
E 8
prints the command name, as stored internally in the system for purposes
of accounting, rather than the command arguments, which are kept
in the process' address space.  This is more reliable, if less informative,
since the process is free to destroy the latter information.
D 8
.TP 5
.B e
E 8
I 8
.Tp Fl e
E 8
Asks for the environment to be printed as well as the arguments to the command.
D 8
.TP 5
.B g
E 8
I 8
.Tp Fl g
E 8
Asks for all processes.
Without this option,
D 8
.I ps
E 8
I 8
.Nm ps
E 8
only prints ``interesting'' processes.
Processes are deemed to be uninteresting if they are process group leaders.
This normally eliminates top-level command interpreters and processes
waiting for users to login on free terminals.
D 8
.TP 5
.B k
E 8
I 8
.Tp Fl k
E 8
causes the file
D 8
.I /vmcore
is used in place of
.IR /dev/kmem " and " /dev/mem.
This is used for
postmortem system debugging.
.TP 5
.B l
asks for a long listing, with fields PPID, CP, PRI, NI, ADDR, SIZE, RSS and
E 8
I 8
.Pa /vmcore
to be used instead of
.Pa /dev/kmem
E 10
I 10
.B \-x
includes processes without control terminals in the candidate pool;
.B \-t
includes only processes attached to the named terminal device; and
.B \-p
includes only the given process ID.
The only sensible combination of these is
.B \-ax
(print everything, including those without control terminals).
E 11
I 11
.I Ps
E 18
I 18
.Dd %Q%
.Dt PS 1
.Os BSD 4
.Sh NAME
.Nm \&ps
.Nd process status
.Sh SYNOPSIS
.Nm \&ps
D 21
.Op Fl aChjlmrSTuvwx
E 21
I 21
.Op Fl aCehjlmrSTuvwx
E 21
.Op Fl M Ar core
.Op Fl N Ar system
D 19
.Oo
.Fl O Ar fmt | Fl o Ar fmt
.Oc
E 19
I 19
.Op Fl O Ar fmt
.Op Fl o Ar fmt
E 19
.Op Fl p Ar pid
.Op Fl t Ar tty
.Op Fl W Ar swap
.Nm ps
.Op Fl L
.Sh DESCRIPTION
.Nm \&Ps
E 18
displays a header line followed by lines containing information about your
processes that have controlling terminals.
D 18
This information is sorted by process ID.
E 11
.PP
E 18
I 18
This information is sorted by process
.Tn ID .
.Pp
E 18
D 11
The default output format includes, for each process, the process's id,
control terminal, cpu time (this includes both user and system time), state,
and command.
Alternative standard formats are available via the
.BR l ,
.BR v ,
.BR j ,
.BR u ,
E 10
and
D 10
.Ar /dev/mem
for non-interactive (after the fact)
debugging.
.Tp Fl l
asks for a detailed list, with fields PPID, CP, PRI, NI, ADDR, SIZE, RSS and
E 8
WCHAN as described below.
D 8
.TP 5
I 4
.B n
E 8
I 8
.Tp Fl n
E 8
Asks for numerical output.
In a long listing, the WCHAN field is printed numerically rather than
symbolically, or, in a user listing, the USER field is replaced by a
UID field.
D 8
.TP 5
E 4
.B s
E 8
I 8
.Tp Fl s
E 8
Adds the size SSIZ of the kernel stack of each process (for use by system
maintainers) to the basic output format.
D 8
.TP 5
\fBt\fIx\fR
restricts output to processes whose controlling tty is \fIx\fR
E 8
I 8
.Ct Fl t
.Ar x
.Cx
Only output information on processes whose controlling tty is
.Ar x
E 8
(which should be specified as printed by
D 8
.I ps,
E 8
I 8
.Nm ps ,
E 8
e.g.
D 8
.I t3
E 8
I 8
.Ar t3
E 8
for tty3,
D 8
.I tco
E 8
I 8
.Ar tco
E 8
for console,
D 8
.I td0
E 8
I 8
.Ar td0
E 8
for ttyd0,
D 8
.I t?
E 8
I 8
.Ar t ?
E 8
for processes with no tty,
I 2
D 8
.I t
E 8
I 8
.Ar t
E 8
for processes at the current tty,
E 2
etc).
This option must be the last one given.
D 8
.TP 5
.B u
E 8
I 8
.Tp Fl u
E 8
A user oriented output is produced.
This includes fields USER, %CPU, NICE, SIZE, and RSS as described below.
D 8
.TP 5
.B v
E 8
I 8
.Tp Fl v
E 8
A version of the output containing virtual memory statistics is output.
This includes fields RE, SL, PAGEIN, SIZE, RSS, LIM, TSIZ, TRS, %CPU
and %MEM, described below.
D 8
.TP 5
.B w
E 8
I 8
.Tp Fl w
E 8
Use a wide output format (132 columns rather than 80); if repeated,
e.g. ww, use arbitrarily wide output.
This information is used to decide how much of long commands to print.
D 8
.TP 5
.B x
E 8
I 8
.Tp Fl x
E 8
asks even about processes with no terminal.
I 3
D 8
.TP
.B U
E 8
I 8
.Tp Fl U
E 8
D 6
causes ps to update a private database where is keeps system
E 6
I 6
causes ps to update a private database where it keeps system
E 6
D 8
information.  Thus ``ps U'' should be included in the /etc/rc file.
E 3
.TP 5
.B #
E 8
I 8
information.  Thus ``ps U'' should be included in the
.Pa /etc/rc
file.
.Tp Fl #
E 8
A process number may be given,
(indicated here by #),
in which case the output
is restricted to that process.
This option must also be last.
D 8
.PP
D 2
A second argument tells
E 2
I 2
A second argument is taken 
E 8
I 8
.Tp
.Pp
A second argument is taken
E 8
to be the file containing the system's
namelist.  Otherwise, /vmunix is used.
A third argument tells
E 2
D 8
.I ps
E 8
I 8
.Nm ps
E 8
where to look for
D 8
.I core
E 8
I 8
.Pa core
E 8
if the
D 8
.B k
option is given, instead of /vmcore.
E 8
I 8
.Fl k
option is given, instead of
.Pa /vmcore .
E 10
I 10
.B s
flags as described below.
E 11
I 11
The information displayed is selected based on a set of keywords (see the
D 18
\-L, \-O and \-o options).
The default output format includes, for each process, the process' ID,
E 18
I 18
.Fl L
.Fl O
and
.Fl o
options).
The default output format includes, for each process, the process'
.Tn ID ,
E 18
controlling terminal, cpu time (including both user and system time),
state, and associated command.
E 11
D 18
.PP
E 18
I 18
.Pp
E 18
D 11
By default
.B ps
attempts to limit its output per line to the width of your terminal;
with the
.B \-w
option,
.B ps
will use up to 132 columns, or (with
.BR \-ww )
as many as necessary.
With the
.B -h
option,
.B ps
will repeat the header as often as necessary
to guarantee one header per ``page''.
(These values are taken from the terminal's window size; see
.IR stty (1)).
.PP
Normally
.B ps
sorts its output by process ID.
The
.B \-m
option tells
.B ps
to sort by memory usage, while the
.B \-r
option tells
.B ps
to sort by current cpu usage.
The
.B \-v
and
.B \-u
formats imply
.B \-m
and
.B \-r
respectively.
If more than one sort option is used,
the last one given overrides the others
(thus
.B ps \-um
sorts by memory usage rather than %cpu).
The
.B \-S
and
.B \-C
flags alter the calculation of process times and cpu percentage:
.B \-S
(``sum'') charges all exited children to their parent processes, and
.B \-C
(``cpu'') uses a ``raw'' cpu calculation that ignores ``resident'' time
(usually this has no effect anyway).
.PP
Since there are so many things that can be printed (66, at last count),
.B ps
selects which process objects to print via a ``format string''.
This is simply a list of names to print,
separated by white space or commas.
Each name can be listed at most once.
The
.B \-o
and
.B \-O
options use the given format,
and the ``standard'' output formats are simply canned strings
as shown in the following table.
The first entry is the default format,
used only if no other format is given:
E 11
I 11
The options are as follows:
E 11
D 18
.TP
D 11
(default)
pid tname state cputime comm
E 11
I 11
\-a
E 18
I 18
.Bl -tag -width indent
.It Fl a
E 18
Display information about other users' processes as well as your own.
E 11
D 18
.TP
D 11
.B \-l
uid pid ppid cp pri nice vsize rss wchan state tname cputime comm
E 11
I 11
\-C
E 18
I 18
.It Fl C
E 18
Change the way the cpu percentage is calculated by using a ``raw''
cpu calculation that ignores ``resident'' time (this normally has
no effect).
I 21
.It Fl e
Display the environment as well.
E 21
E 11
D 18
.TP
D 11
.B \-v
pid tt state time sl re pagein vsize rss lim tsiz trs pcpu pmem comm
E 11
I 11
\-h
E 18
I 18
.It Fl h
E 18
Repeat the information header as often as necessary to guarantee one
header per page of information.
E 11
D 18
.TP
D 11
.B \-u
uname pid pcpu pmem vsize rss tt state start time comm
E 11
I 11
\-j
E 18
I 18
.It Fl j
E 18
Print information associated with the following keywords:
D 13
user, pid, ppid, pgid, sess, jobc, state, tname, cputime, comm.
E 13
I 13
user, pid, ppid, pgid, sess, jobc, state, tt, time and command.
E 13
E 11
D 18
.TP
D 11
.B \-j
user pid ppid pgid sess jobc state tname cputime comm
E 11
I 11
\-L
E 18
I 18
.It Fl L
E 18
List the set of available keywords.
D 17
If the \-L option is specified more than once,
.I ps
will display a long listing of the keywords and their meanings.
E 17
E 11
D 18
.TP
D 11
.B \-s
uid pid sig sigmask sigignore sigcatch stat tname comm
.PP
The
.B \-o
flag adds the given string to the current format;
.B \-O
adds ``pid'', then the given format, then ``state tt time command''.
Effectively,
.B \-O
inserts its argument into the default format
after the process ID.
.PP
A complete list of names can be obtained via
.BR "ps -L" .
.PP
For backwards compatibility,
the first argument need not be prefixed by a ``-''.
A second argument, if any, is taken 
to be the file containing the system's namelist.
Otherwise, /vmunix is used.
A third argument, if any, tells
E 11
I 11
\-l
E 18
I 18
.It Fl l
E 18
Display information associated with the following keywords:
D 13
uid, pid, ppid, cp, pri, nice, vsize, rss, wchan, state, tname,
D 12
 cputime and comm.
E 12
I 12
cputime and comm.
E 13
I 13
uid, pid, ppid, cpu, pri, nice, vsz, rss, wchan, state, tt, time
and command.
E 13
E 12
D 18
.TP
I 17
\-M
E 18
I 18
.It Fl M
E 18
Extract values associated with the name list from the specified core
D 18
instead of the default ``/dev/kmem''.
.TP
E 17
\-m
Sort by memory usage, instead of by process ID.
.TP
I 17
\-N
E 18
I 18
instead of the default
.Dq Pa /dev/kmem .
.It Fl m
Sort by memory usage, instead of by process
.Tn ID .
.It Fl N
E 18
Extract the name list from the specified system instead of the default
D 18
``/vmunix''.
.TP
E 17
\-O
E 18
I 18
.Dq Pa /vmunix .
.It Fl O
E 18
Add the information associated with the space or comma separated list
D 18
of keywords specifed, after the process ID, in the default information
E 18
I 18
D 24
of keywords specifed, after the process
E 24
I 24
of keywords specified, after the process
E 24
.Tn ID ,
in the default information
E 18
display.
Keywords may be appended with an equals (``='') sign and a string.
This causes the printed header to use the specified string instead of
the standard header.
D 18
.TP
\-o
E 18
I 18
.It Fl o
E 18
Display information associated with the space or comma separated list
D 24
of keywords specifed.
E 24
I 24
of keywords specified.
E 24
Keywords may be appended with an equals (``='') sign and a string.
This causes the printed header to use the specified string instead of
the standard header.
D 18
.TP
\-p
Display information associated with the specified process ID.
.TP
\-r
Sort by current cpu usage, instead of by process ID.
.TP
\-S
E 18
I 18
.It Fl p
Display information associated with the specified process
.Tn ID .
.It Fl r
Sort by current cpu usage, instead of by process
.Tn ID .
.It Fl S
E 18
Change the way the process time is calculated by summing all exited
children to their parent process.
D 18
.TP
D 15
\-s
Display information associated with the following keywords:
D 13
uid, pid, sig, sigmask, sigignore, sigcatch, stat, tname and comm.
E 13
I 13
uid, pid, sig, sigmask, sigignore, sigcatch, state, tt and command.
E 13
.TP
E 15
\-T
E 18
I 18
.It Fl T
E 18
Display information about processes attached to the device associated
with the standard input.
D 18
.TP
\-t
E 18
I 18
.It Fl t
E 18
Display information about processes attached to the specified terminal
device.
D 18
.TP
\-u
E 18
I 18
.It Fl u
E 18
Display information associated with the following keywords:
D 13
uname, pid, pcpu, pmem, vsize, rss, tt, state, start, time and comm.
E 13
I 13
user, pid, %cpu, %mem, vsz, rss, tt, state, start, time and command.
E 13
D 18
The \-u option implies the \-r option.
.TP
\-v
E 18
I 18
The
.Fl u
option implies the
.Fl r
option.
.It Fl v
E 18
Display information associated with the following keywords:
D 13
pid, tt, state, time, sl, re, pagein, vsize, rss, lim, tsiz, trs, pcpu,
pmem and comm.
E 13
I 13
D 14
pid, tt, state, time, sl, re, pagein, vsz, rss, lim, tsiz, trs,
E 14
I 14
D 15
pid, state, time, sl, re, pagein, vsz, rss, lim, tsiz, trs,
E 15
I 15
D 22
pid, state, time, sl, re, pagein, vsz, rss, lim, tsiz, trss,
E 22
I 22
pid, state, time, sl, re, pagein, vsz, rss, lim, tsiz,
E 22
E 15
E 14
%cpu, %mem and command.
E 13
D 18
The \-v option implies the \-m option.
.TP
I 17
\-W
E 18
I 18
The
.Fl v
option implies the
.Fl m
option.
.It Fl W
E 18
Extract swap information from the specified file instead of the
D 18
default ``/dev/swap''.
.TP
E 17
\-w
E 18
I 18
default
.Dq Pa /dev/swap .
.It Fl w
E 18
Use 132 columns to display information, instead of the default which
is your window size.
D 18
If the \-w option is specified more than once,
E 11
.I ps
E 18
I 18
If the
.Fl w
option is specified more than once,
.Nm \&ps
E 18
D 11
where to look for a
.I vmcore
file from a crash dump.
E 10
E 8
D 2
A third argument is the name of a swap file to use instead of
E 2
I 2
If a fourth argument is given, it
is taken to be the name of a swap file to use instead of
E 2
D 8
the default /dev/drum.
D 2
If a fourth argument is given,
it is taken to be the file containing the system's namelist.
Otherwise, /vmunix is used.
E 2
.PP
E 8
I 8
D 10
the default
.Pa /dev/drum .
.Pp
E 8
Fields which are not common to all output formats:
D 8
.PD 0
.IP USER 10
E 8
I 8
.Pp
.Dw PAGEIN
.Dp Li USER
E 8
name of the owner of the process
D 8
.IP %CPU 10
E 8
I 8
.Dp Li %CPU
E 8
cpu utilization of the process; this is a decaying average over up to
E 10
I 10
the default /dev/drum.
E 11
I 11
will use as many columns as necessary without regard for your window size.
D 18
.TP
\-x
E 18
I 18
.It Fl x
E 18
Display information about processes without controlling terminals.
E 11
D 17
.PP
D 11
Some of the terms in the complete list below are defined here:
E 11
I 11
Three additional arguments may be specified.
The first additional argument is the file to read for the system namelist
(instead of the default ``/vmunix'').
The second additional argument is a core file to use for kernel memory
(instead of the default ``/dev/mem'').
The third addition argument is a file to be used for swap
(instead of the default ``/dev/swap'').
E 17
D 18
.PP
E 18
I 18
.El
.Pp
E 18
A complete list of the available keywords are listed below.
D 24
Some of these keywords are further specifed as follows:
E 24
I 24
Some of these keywords are further specified as follows:
E 24
E 11
D 18
.TP
I 12
%cpu
E 18
I 18
.Bl -tag -width indent
.It %cpu
E 18
The cpu utilization of the process; this is a decaying average over up to
a minute of previous (real) time.
Since the time base over which this is computed varies (since processes may
D 18
be very young) it is possible for the sum of all %CPU fields to exceed 100%.
.TP
%mem
E 18
I 18
be very young) it is possible for the sum of all
.Tn \&%CPU
fields to exceed 100%.
.It %mem
E 18
The percentage of real memory used by this process.
D 18
.TP
E 12
D 11
tname
An abbreviation for the pathname of the controlling terminal, if any.
The abbreviation consists of the two letters following ``/dev/tty'',
or (for the console) ``co''.
This is followed by a ``-''
if the process can no longer reach that control terminal
(i.e., it has been revoked).
E 11
I 11
flags
E 18
I 18
.It flags
E 18
The flags (in hexadecimal) associated with the process as in
D 18
the include file ``sys/proc.h'':
.sp
.nf
.RS
D 16
.ta \w'SNOCLDSTOP  'u +\w'0040000  'u
SLOAD	0000001	in core
SSYS	0000002	swapper or pager process
SLOCK	0000004	process being swapped out
SSWAP	0000008	save area flag
STRC	0000010	process is being traced
SWTED	0000020	another tracing flag
SSINTR	0000040	sleep is interruptible
SPAGE	0000080	process in page wait state
SKEEP	0000100	another flag to prevent swap out
SOMASK	0000200	restore old mask after taking signal
SWEXIT	0000400	working on exiting
SPHYSIO	0000800	doing physical i/o
SVFORK	0001000	process resulted from vfork()
SVFDONE	0002000	another vfork flag
SNOVM	0004000	no vm, parent in a vfork()
SPAGV	0008000	init data space on demand, from vnode
SSEQL	0010000	user warned of sequential vm behavior
SUANOM	0020000	user warned of random vm behavior
STIMO	0040000	timing out during sleep
SNOCLDSTOP	0080000	no SIGCHLD when children stop
SCTTY	0100000	has a controlling terminal
SOWEUPC	0200000	owe process an addupc() call at next ast
SSEL	0400000	selecting; wakeup/waiting danger
SEXEC	0800000	process called exec
SHPUX	1000000	HP-UX process (HPUXCOMPAT)
SULOCK	2000000	locked in core after swap error
SPTECHG	4000000	pte's for process have changed
E 16
I 16
.ta \w'SNOCLDSTOP  'u +\w'0x0040000  'u
SLOAD	0x0000001	in core
SSYS	0x0000002	swapper or pager process
SLOCK	0x0000004	process being swapped out
SSWAP	0x0000008	save area flag
STRC	0x0000010	process is being traced
SWTED	0x0000020	another tracing flag
SSINTR	0x0000040	sleep is interruptible
SPAGE	0x0000080	process in page wait state
SKEEP	0x0000100	another flag to prevent swap out
SOMASK	0x0000200	restore old mask after taking signal
SWEXIT	0x0000400	working on exiting
SPHYSIO	0x0000800	doing physical i/o
SVFORK	0x0001000	process resulted from vfork()
SVFDONE	0x0002000	another vfork flag
SNOVM	0x0004000	no vm, parent in a vfork()
SPAGV	0x0008000	init data space on demand, from vnode
SSEQL	0x0010000	user warned of sequential vm behavior
SUANOM	0x0020000	user warned of random vm behavior
STIMO	0x0040000	timing out during sleep
SNOCLDSTOP	0x0080000	no SIGCHLD when children stop
SCTTY	0x0100000	has a controlling terminal
SOWEUPC	0x0200000	owe process an addupc() call at next ast
SSEL	0x0400000	selecting; wakeup/waiting danger
SEXEC	0x0800000	process called exec
SHPUX	0x1000000	HP-UX process (HPUXCOMPAT)
SULOCK	0x2000000	locked in core after swap error
SPTECHG	0x4000000	pte's for process have changed
E 16
.fi
.RE
E 11
.TP
I 11
lim
E 18
I 18
the include file
.Aq Pa sys/proc.h :
.Bl -column SNOCLDSTOP SNOCLDSTOP
.It Dv "SLOAD" Ta No "0x0000001	in core"
.It Dv "SSYS" Ta No "0x0000002	swapper or pager process"
.It Dv "SLOCK" Ta No "0x0000004	process being swapped out"
.It Dv "SSWAP" Ta No "0x0000008	save area flag"
.It Dv "STRC" Ta No "0x0000010	process is being traced"
.It Dv "SWTED" Ta No "0x0000020	another tracing flag"
.It Dv "SSINTR" Ta No "0x0000040	sleep is interruptible"
D 20
.It Dv "SPAGE" Ta No "0x0000080	process in page wait state"
E 20
.It Dv "SKEEP" Ta No "0x0000100	another flag to prevent swap out"
.It Dv "SOMASK" Ta No "0x0000200	restore old mask after taking signal"
.It Dv "SWEXIT" Ta No "0x0000400	working on exiting"
.It Dv "SPHYSIO" Ta No "0x0000800	doing physical"
.Tn I/O
.It Dv "SVFORK" Ta No "0x0001000	process resulted from"
.Xr vfork 2
.It Dv "SVFDONE" Ta No "0x0002000	another"
.Xr vfork
flag
.It Dv "SNOVM" Ta No "0x0004000	no vm, parent in a"
.Xr vfork
.It Dv "SPAGV" Ta No "0x0008000	init data space on demand, from vnode"
.It Dv "SSEQL" Ta No "0x0010000	user warned of sequential vm behavior"
.It Dv "SUANOM" Ta No "0x0020000	user warned of random vm behavior"
.It Dv "STIMO" Ta No "0x0040000	timing out during sleep"
.It Dv "SNOCLDSTOP" Ta No "0x0080000	no"
.Dv SIGCHLD
when children stop
.It Dv "SCTTY" Ta No "0x0100000	has a controlling terminal"
.It Dv "SOWEUPC" Ta No "0x0200000	owe process an addupc() call at next ast"
.\" the routine addupc is not documented in the man pages
.It Dv "SSEL" Ta No "0x0400000	selecting; wakeup/waiting danger"
.It Dv "SEXEC" Ta No "0x0800000	process called"
.Xr exec 2
.It Dv "SHPUX" Ta No "0x1000000	\\*(tNHP-UX\\*(sP process
.Pq Dv HPUXCOMPAT
.It Dv "SULOCK" Ta No "0x2000000	locked in core after swap error"
.It Dv "SPTECHG" Ta No "0x4000000	pte's for process have changed"
.El
.It lim
E 18
The soft limit on memory used, specified via a call to
D 18
.IR setrlimit (2).
.TP
lstart
E 18
I 18
.Xr setrlimit 2 .
.It lstart
E 18
D 12
The time the command started, using the ``%C'' format described in
E 12
I 12
The exact time the command started, using the ``%C'' format described in
E 12
D 18
.IR strftime (3).
.TP
nice
E 18
I 18
.Xr strftime 3 .
.It nice
E 18
The process scheduling increment (see
D 18
.IR setpriority (2)).
.TP
D 12
pcpu
The cpu utilization of the process; this is a decaying average over up to
a minute of previous (real) time.
Since the time base over which this is computed varies (since processes may
be very young) it is possible for the sum of all %CPU fields to exceed 100%.
.TP
pmem
The percentage of real memory used by this process.
.TP
E 12
rss
E 18
I 18
.Xr setpriority 2 ) .
.It rss
E 18
the real memory (resident set) size of the process (in 1024 byte units).
D 18
.TP
start
E 18
I 18
.It start
E 18
The time the command started.
If the command started less than 24 hours ago, the start time is
D 18
displayed using the ``%l:%M%p'' format described in 
.IR strftime (3).
E 18
I 18
displayed using the ``%l:ps.1p'' format described in
.Xr strftime 3 .
E 18
If the command started less than 7 days ago, the start time is
D 18
displayed using the ``%a%I%p'' format.
E 18
I 18
displayed using the ``%a6.15p'' format.
E 18
Otherwise, the start time is displayed using the ``%e%b%y'' format.
D 18
.TP
E 11
state
The state is given by a sequence of letters, e.g., ``RWNA''.
E 18
I 18
.It state
The state is given by a sequence of letters, for example,
.Dq Tn RWNA .
E 18
The first letter indicates the run state of the process:
I 11
D 18
.sp
E 11
.PD 0
.RS
D 11
.RS
.IP R
marks a runnable process;
.IP T
marks a stopped process;
.IP P
marks a process in page wait;
E 11
.IP D
E 18
I 18
.Pp
.Bl -tag -width indent -compact
.It D
E 18
D 11
marks a process in disk (or other short term, uninterruptable) wait;
.IP S
marks a process that is sleeping for less than about 20 seconds;
E 11
I 11
D 25
Marks a process in disk (or other short term, uninterruptable) wait.
E 25
I 25
Marks a process in disk (or other short term, uninterruptible) wait.
E 25
E 11
D 18
.IP I
E 18
I 18
.It I
E 18
D 11
marks a process that is idle (sleeping for longer than about 20 seconds);
E 11
I 11
Marks a process that is idle (sleeping for longer than about 20 seconds).
D 18
.IP P
E 18
I 18
D 20
.It P
E 18
Marks a process in page wait.
E 20
D 18
.IP R
E 18
I 18
.It R
E 18
Marks a runnable process.
D 18
.IP S
E 18
I 18
.It S
E 18
Marks a process that is sleeping for less than about 20 seconds.
D 18
.IP T
E 18
I 18
.It T
E 18
Marks a stopped process.
E 11
D 18
.IP Z
E 18
I 18
.It Z
E 18
D 11
marks a dead process (a ``zombie'').
.RE
Additional characters after these, if any,
indicate additional state information:
.RS
.IP W
process is swapped out;
.IP >
process has specified a soft limit on memory requirements
and is currently exceeding that limit; such a process is (necessarily)
not swapped;
.IP N
process has reduced CPU scheduling priority (nice);
E 11
I 11
Marks a dead process (a ``zombie'').
D 18
.sp
.PP
E 18
I 18
.El
.Pp
E 18
Additional characters after these, if any, indicate additional state
information:
D 18
.sp
.IP +
E 18
I 18
.Pp
.Bl -tag -width indent -compact
.It +
E 18
The process is in the foreground process group of its control terminal.
E 11
D 18
.IP <
D 11
process has raised CPU scheduling priority;
E 11
I 11
The process has raised CPU scheduling priority.
.IP >
E 18
I 18
.It <
The process has raised
.Tn CPU
scheduling priority.
.It >
E 18
The process has specified a soft limit on memory requirements and is
currently exceeding that limit; such a process is (necessarily) not
swapped.
E 11
D 18
.IP A
D 11
process has asked for random page replacement
(VA_ANOM, from
E 11
I 11
the process has asked for random page replacement (VA_ANOM, from
E 11
.IR vadvise (2),
e.g.,
.IR lisp (1)
E 18
I 18
.It A
the process has asked for random page replacement
.Pf ( Dv VA_ANOM ,
from
.Xr vadvise 2 ,
for example,
.Xr lisp 1
E 18
D 11
in a garbage collect);
.IP S
process has asked for FIFO page replacement
(VA_SEQL, from
.IR vadvise (2),
e.g., a large image processing program
using virtual memory to sequentially address voluminous data);
.IP X
process is being traced or debugged;
E 11
I 11
in a garbage collect).
E 11
D 18
.IP E
E 18
I 18
.It E
E 18
D 11
process is working on exiting;
.IP V
process is suspended during a vfork;
E 11
I 11
The process is trying to exit.
E 11
D 18
.IP L
D 11
process has pages locked in core (e.g., for raw I/O);
E 11
I 11
The process has pages locked in core (e.g., for raw I/O).
.IP N
The process has reduced CPU scheduling priority (see
.IR setpriority (2)).
.IP S
The process has asked for FIFO page replacement (VA_SEQL, from
.IR vadvise (2),
e.g., a large image processing program using virtual memory to
E 18
I 18
.It L
The process has pages locked in core (for example, for raw
.Tn I/O ) .
.It N
The process has reduced
.Tn CPU
scheduling priority (see
.Xr setpriority 2 ) .
.It S
The process has asked for
.Tn FIFO
page replacement
.Pf ( Dv VA_SEQL ,
from
.Xr vadvise 2 ,
for example, a large image processing program using virtual memory to
E 18
sequentially address voluminous data).
E 11
D 18
.IP s
E 18
I 18
.It s
E 18
D 11
process is a session leader;
.IP +
process is in the foreground process group
of its control terminal.
E 11
I 11
The process is a session leader.
D 18
.IP V
The process is suspended during a vfork.
.IP W
E 18
I 18
.It V
The process is suspended during a
.Xr vfork .
.It W
E 18
The process is swapped out.
D 18
.IP X
E 18
I 18
.It X
E 18
The process is being traced or debugged.
E 11
D 18
.RE
D 11
.RE
E 11
.PD
.TP
D 11
%cpu
Cpu utilization of the process; this is a decaying average over up to
E 10
a minute of previous (real) time.  Since the time base over which this
is computed varies (since processes may be very young) it is possible
for the sum of all %CPU fields to exceed 100%.
E 11
I 11
D 12
tname
E 12
I 12
tt
E 18
I 18
.El
.It tt
E 18
E 12
An abbreviation for the pathname of the controlling terminal, if any.
D 18
The abbreviation consists of the two letters following ``/dev/tty'',
E 18
I 18
The abbreviation consists of the two letters following
.Dq Pa /dev/tty ,
E 18
or, for the console, ``co''.
This is followed by a ``-'' if the process can no longer reach that
controlling terminal (i.e., it has been revoked).
E 11
D 8
.IP NICE 10
E 8
I 8
D 10
.Dp Li NICE
E 8
(or NI) process scheduling increment (see
D 2
.IR nice (2))
E 2
I 2
D 8
.IR setpriority (2))
E 2
.IP SIZE 10
E 8
I 8
.Xr setpriority  2  )
.Dp Li SIZE
E 8
virtual size of the process (in 1024 byte units)
D 8
.IP RSS 10
E 8
I 8
.Dp Li RSS
E 10
I 10
D 18
.TP
D 11
nice
process scheduling increment (see
.IR setpriority (2))
.TP
rss
E 10
E 8
real memory (resident set) size of the process (in 1024 byte units)
D 8
.IP LIM 10
E 8
I 8
D 10
.Dp Li LIM
E 10
I 10
.TP
lim
E 10
E 8
soft limit on memory used, specified via a call to
D 2
.IR vlimit (2);
E 2
I 2
D 8
.IR setrlimit (2);
E 2
if no limit has been specified then shown as \fIxx\fR
.IP TSIZ 10
E 8
I 8
D 10
.Xr setrlimit  2  ;
if no limit has been specified then shown as
.Ar xx
.Dp Li TSIZ
E 8
size of text (shared program) image
D 8
.IP TRS 10
E 8
I 8
.Dp Li TRS
E 8
size of resident (real memory) set of text
D 8
.IP %MEM 10
E 8
I 8
.Dp Li %MEM
E 10
I 10
.IR setrlimit (2)
.TP
%mem
E 10
E 8
percentage of real memory used by this process.
D 8
.IP RE 10
E 8
I 8
D 10
.Dp Li RE
E 8
residency time of the process (seconds in core)
D 8
.IP SL 10
E 8
I 8
.Dp Li SL
E 8
sleep time of the process (seconds blocked)
D 8
.IP PAGEIN 10
E 8
I 8
.Dp Li PAGEIN
E 8
number of disk i/o's resulting from references by the process
to pages not loaded in core.
D 8
.IP UID 10
numerical user-id of process owner
.IP PPID 10
numerical id of parent of process
.IP CP 10
E 8
I 8
.Dp Li UID
process owner's user-id (numerical)
.Dp Li PPID
parent process id (numerical)
.Dp Li CP
E 8
short-term cpu utilization factor (used in scheduling)
D 8
.IP PRI 10
E 8
I 8
.Dp Li PRI
E 8
process priority (non-positive when in non-interruptible wait)
D 8
.IP ADDR 10
E 8
I 8
.Dp Li ADDR
E 8
swap address of the process
D 8
.IP WCHAN 10
D 4
event on which process is waiting (an address in the system), with
the initial part of the address trimmed off e.g. 80004000 prints
as 4000.
E 4
I 4
event on which process is waiting (an address in the system).
E 8
I 8
.Dp Li WCHAN
address of event on which a process is waiting (an address in the system).
E 8
A symbol is chosen that classifies the address, unless numerical
D 8
output is requested (see the 
.B n
E 8
I 8
output is requested (see the
.Fl n
E 8
flag).
In this case, the initial part of the address is
trimmed off and is printed hexadecimally, e.g., 0x80004000 prints as 4000.
E 4
D 8
.sp
.IP F 10
E 8
I 8
.Pp
.Dp Li F
E 8
D 2
flags associated with process as in /usr/include/sys/proc.h:
E 2
I 2
flags associated with process as in
D 8
.RI < sys/proc.h >:
E 2
.br
.PP
.sp
.nf
.ta 6n 18n 26n
	SLOAD	000001	in core
	SSYS	000002	swapper or pager process
	SLOCK	000004	process being swapped out
	SSWAP	000008	save area flag
	STRC	000010	process is being traced
	SWTED	000020	another tracing flag
	SULOCK	000040	user settable lock in core
	SPAGE	000080	process in page wait state
	SKEEP	000100	another flag to prevent swap out
	SDLYU	000200	delayed unlock of pages
	SWEXIT	000400	working on exiting
	SPHYSIO	000800	doing physical i/o (bio.c)
	SVFORK	001000	process resulted from vfork()
	SVFDONE	002000	another vfork flag
	SNOVM	004000	no vm, parent in a vfork()
D 2
	SPAGI	008000	init data space on demand, from inode
E 2
I 2
	SPAGI	008000	init data space on demand from inode
E 2
	SANOM	010000	system detected anomalous vm behavior
	SUANOM	020000	user warned of anomalous vm behavior
	STIMO	040000	timing out during sleep
	SDETACH	080000	detached inherited by init
D 2
	SNUSIG	100000	using new signal mechanism
E 2
I 2
	SOUSIG	100000	using old signal mechanism
E 2
.fi
.PD
.PP
E 8
I 8
.Aq Pa sys/proc.h :
.Pp
.Cw SDETACH 080000
.Cl SLOAD	000001	in core
.Cl SSYS	000002	swapper or pager process
.Cl SLOCK	000004	swapping out process
.Cl SSWAP	000008	save area flag
.Cl STRC	000010	tracing the process
.Cl SWTED	000020	trace flag
.Cl SULOCK	000040	user settable lock in core
.Cl SPAGE	000080	process in page wait state
.Cl SKEEP	000100	another flag to prevent swap out
.Cl SDLYU	000200	delayed unlock of pages
.Cl SWEXIT	000400	working on exiting
.Cl SPHYSIO	000800	doing physical i/o (bio.c)
.Cl SVFORK	001000	process resulted from vfork()
.Cl SVFDONE	002000	another vfork flag
.Cl SNOVM	004000	no vm, parent in a vfork()
.Cl SPAGI	008000	init data space on demand from inode
.Cl SANOM	010000	system detected anomalous vm behavior
.Cl SUANOM	020000	user warned of anomalous vm behavior
.Cl STIMO	040000	timing out during sleep
.Cl SDETACH	080000	detached inherited by init
.Cl SOUSIG	100000	using old signal mechanism
.Cw
.Dp
.Pp
.Tp Aq Li defunct
A
.Aq defunct
process is one that has exited, but whose parent process has
not waited for it.
E 8
D 5
A process that has exited and has a parent, but has not
yet been waited for by the parent is marked <defunct>; a process
E 5
I 5
A process that has exited and has a parent that has not
D 8
yet waited for the process is marked <defunct>; a process
E 5
which is blocked trying to exit is marked <exiting>;
.I Ps
E 8
I 8
yet waited for the process is marked
.Aq Li defunct .
.Tp Aq Li exiting
A process
which is blocked trying to exit is marked
.Aq Li exiting
.Tp
.Pp
.Nm Ps
E 10
I 10
.TP
E 11
wchan
D 11
event on which process is waiting (an address in the system).
E 11
I 11
The event on which the process is waiting (an address in the system).
E 18
I 18
.It wchan
The event (an address in the system) on which a process waits.
E 18
E 11
When printed numerically, the initial part of the address is
D 11
trimmed off and the result is printed in hex,
e.g., 0x80324000 prints as 324000.
.TP
flags
flags (in hex) associated with process as in
.RI < sys/proc.h >:
.br
E 11
I 11
D 18
trimmed off and the result is printed in hex, e.g., 0x80324000 prints
E 18
I 18
trimmed off and the result is printed in hex, for example, 0x80324000 prints
E 18
as 324000.
E 11
D 18
.PP
E 18
I 18
.El
.Pp
E 18
D 11
.sp
.nf
.ta 6n 18n 28n
	SLOAD	0000001	in core
	SSYS	0000002	swapper or pager process
	SLOCK	0000004	process being swapped out
	SSWAP	0000008	save area flag
	STRC	0000010	process is being traced
	SWTED	0000020	another tracing flag
	SSINTR	0000040	sleep is interruptible
	SPAGE	0000080	process in page wait state
	SKEEP	0000100	another flag to prevent swap out
	SOMASK	0000200	restore old mask after taking signal
	SWEXIT	0000400	working on exiting
	SPHYSIO	0000800	doing physical i/o
	SVFORK	0001000	process resulted from vfork()
	SVFDONE	0002000	another vfork flag
	SNOVM	0004000	no vm, parent in a vfork()
	SPAGV	0008000	init data space on demand, from vnode
	SSEQL	0010000	user warned of sequential vm behavior
	SUANOM	0020000	user warned of random vm behavior
	STIMO	0040000	timing out during sleep
	SNOCLDSTOP	0080000	no SIGCHLD when children stop
	SCTTY	0100000	has a controlling terminal
	SOWEUPC	0200000	owe process an addupc() call at next ast
	SSEL	0400000	selecting; wakeup/waiting danger
	SEXEC	0800000	process called exec
	SHPUX	1000000	HP-UX process (HPUXCOMPAT)
	SULOCK	2000000	locked in core after swap error
	SPTECHG	4000000	pte's for process have changed
.fi
.PD
.PP
E 11
D 12
When printing a
.I command
format, a process that has exited and has a parent that has not
yet waited for the process (i.e., a zombie) is marked <defunct>,
and a process which is blocked trying to exit is marked <exiting>.
E 12
I 12
When printing using the command keyword, a process that has exited and
D 18
has a parent that has not yet waited for the process (i.e., a zombie)
E 18
I 18
has a parent that has not yet waited for the process (in other words, a zombie)
E 18
is listed as ``<defunct>'', and a process which is blocked while trying
to exit is listed as ``<exiting>''.
E 12
D 18
.B Ps
E 18
I 18
.Nm \&Ps
E 18
E 10
E 8
D 11
makes an educated guess as to the file name
and arguments given when the process was created
by examining memory or the swap area.
The method is inherently somewhat unreliable and in any event
a process is entitled to destroy this information,
so the names cannot be counted on too much.
E 11
I 11
makes an educated guess as to the file name and arguments given when the
process was created by examining memory or the swap area.
The method is inherently somewhat unreliable and in any event a process
is entitled to destroy this information, so the names cannot be depended
on too much.
E 11
D 8
.SH FILES
D 3
.ta \w'/usr/sys/core 'u
E 3
I 3
.ta \w'/etc/psdatabase 'u
E 3
/vmunix	system namelist
.br
/dev/kmem	kernel memory
.br
/dev/drum	swap device
.br
/vmcore	core file
.br
/dev	searched to find swap device and tty names
I 3
.br
D 4
/etc/psdatabase	system namelist and device information
E 4
I 4
/etc/psdatabase	system namelist, device, and wait channel information
E 4
E 3
.SH "SEE ALSO"
kill(1), w(1)
.SH BUGS
Things can change while
.I ps
is running; the picture it gives is only a close
approximation to reality.
E 8
I 8
D 10
.Sh FILES
.Dw /etc/pasdatabase
.Di L
.Dp Pa /vmunix
system namelist
.Dp Pa /dev/kmem
kernel memory
.Dp Pa /dev/drum
swap device
.Dp Pa /vmcore
core file
.Dp Pa /dev
searched to find swap device and tty names
.\" .Dp Pa /etc/psdatabase
.\" system namelist, device, and wait channel information
.Dp
.Sh SEE ALSO
.Xr kill 1 ,
.Xr w 1
.Sh HISTORY
A
.Nm Ps
command appeared in VERSION 6 AT&T UNIX.
E 10
I 10
D 12
The
.I ucomm
D 11
(accounting) name can, however, be counted on.
.PP
The following variables are available:
E 11
I 11
(accounting) name can, however, be depended on.
E 12
I 12
The ucomm (accounting) keyword can, however, be depended on.
E 12
D 18
.SH "KEYWORDS"
E 18
I 18
.Sh KEYWORDS
E 18
I 12
The following is a complete list of the available keywords and their
meanings.
D 18
Several of them have aliases, i.e. keywords that are synonyms.
.sp
E 12
E 11
.PD 0
I 11
D 12
.IP acflag 10 10
accounting flag
E 12
I 12
.IP %cpu 10
E 18
I 18
Several of them have aliases (keywords which are synonyms).
.Pp
.Bl -tag -width sigignore -compact
.It %cpu
E 18
percentage cpu usage (alias pcpu)
D 18
.IP %mem 10
E 18
I 18
.It %mem
E 18
percentage memory usage (alias pmem)
D 18
.IP acflag 10
E 18
I 18
.It acflag
E 18
accounting flag (alias acflg)
E 12
E 11
D 18
.IP command 10
E 18
I 18
.It command
E 18
command and arguments
D 11
.IP ucomm 10
name to be used for accounting
.IP logname 10
login name of user who started the process
E 11
I 11
D 18
.IP cpu 10
E 18
I 18
.It cpu
E 18
short-term cpu usage factor (for scheduling)
D 12
.IP cputime 10
accumulated cpu time (user+system)
E 11
.IP flag 10
flags (hexadecimal)
D 11
.IP uid 10
effective user ID
.IP ruid 10
real user ID
.IP svuid 10
saved uid from a setuid executable
.IP rgid 10
real group ID
.IP svgid 10
saved gid from a setgid executable
E 11
I 11
.IP inblock 10
total blocks read
E 12
I 12
D 18
.IP flags 10
E 18
I 18
.It flags
E 18
the process flags, in hexadecimal (alias f)
D 18
.IP inblk 10
E 18
I 18
.It inblk
E 18
total blocks read (alias inblock)
E 12
D 18
.IP jobc 10
E 18
I 18
.It jobc
E 18
job control count
D 18
.IP ktrace 10
E 18
I 18
.It ktrace
E 18
tracing flags
D 18
.IP ktracep 10
E 18
I 18
.It ktracep
E 18
tracing vnode
D 18
.IP lim 10
E 18
I 18
.It lim
E 18
memoryuse limit
D 18
.IP logname 10
E 18
I 18
.It logname
E 18
login name of user who started the process
D 12
.IP longtname 10
full name of control terminal
E 12
D 18
.IP lstart 10
E 18
I 18
.It lstart
E 18
time started
D 18
.IP majflt 10
E 18
I 18
.It majflt
E 18
total page faults
D 18
.IP minflt 10
E 18
I 18
.It minflt
E 18
total page reclaims
D 18
.IP msgrcv 10
E 18
I 18
.It msgrcv
E 18
total messages received (reads from pipes/sockets)
D 18
.IP msgsnd 10
E 18
I 18
.It msgsnd
E 18
total messages sent (writes on pipes/sockets)
D 18
.IP nice 10
E 18
I 18
.It nice
E 18
D 12
nice
E 12
I 12
nice value (alias ni)
E 12
D 18
.IP nivcsw 10
E 18
I 18
.It nivcsw
E 18
total involuntary context switches
D 12
.IP nsignals 10
total signals taken
E 12
I 12
D 18
.IP nsigs 10
E 18
I 18
.It nsigs
E 18
total signals taken (alias nsignals)
E 12
D 18
.IP nswap 10
E 18
I 18
.It nswap
E 18
total swaps in/out
D 18
.IP nvcsw 10
E 18
I 18
.It nvcsw
E 18
total voluntary context switches
D 18
.IP nwchan 10
E 18
I 18
.It nwchan
E 18
D 12
wait channel (as a number)
.IP oublock 10
total blocks written
E 12
I 12
wait channel (as an address)
D 18
.IP oublk 10
E 18
I 18
.It oublk
E 18
total blocks written (alias oublock)
E 12
D 18
.IP p_ru 10
E 18
I 18
.It p_ru
E 18
resource usage (valid only for zombie)
D 18
.IP paddr 10
E 18
I 18
.It paddr
E 18
swap address
D 18
.IP pagein 10
E 18
I 18
.It pagein
E 18
pageins (same as majflt)
D 12
.IP pcpu 10
cpu usage (percentage)
E 12
D 18
.IP pgid 10
E 18
I 18
.It pgid
E 18
process group number
E 11
D 18
.IP pid 10
process ID
D 11
.IP ppid 10
parent process ID
.IP cp 10
short-term cpu usage factor (for scheduling)
.IP xstat 10
exit or stop status (valid only for stopped or zombie process)
E 11
I 11
D 12
.IP pmem 10
memory usage (percentage)
E 12
E 11
.IP poip 10
E 18
I 18
.It pid
process
.Tn ID
.It poip
E 18
pageouts in progress
D 11
.IP nwchan 10
wait channel (as a number)
.IP wchan 10
wait channel (symbolic)
E 11
I 11
D 18
.IP ppid 10
parent process ID
.IP pri 10
E 18
I 18
.It ppid
parent process
.Tn ID
.It pri
E 18
scheduling priority
D 18
.IP re 10
E 18
I 18
.It re
E 18
core residency time (in seconds; 127 = infinity)
D 18
.IP rgid 10
real group ID
E 11
.IP rlink 10
E 18
I 18
.It rgid
real group
.Tn ID
.It rlink
E 18
reverse link on run queue, or 0
D 11
.IP ktrace 10
tracing flags
.IP ktracep 10
tracing vnode
.IP sig 10
pending signals
.IP sigmask 10
blocked signals
.IP sigignore 10
ignored signals
.IP sigcatch 10
caught signals
.IP user 10
user name (from uid)
E 11
I 11
D 18
.IP rss 10
E 18
I 18
.It rss
E 18
resident set size
D 12
.IP rssize 10
resident set size + (text size / text use count)
E 12
I 12
D 18
.IP rsz 10
E 18
I 18
.It rsz
E 18
resident set size + (text size / text use count) (alias rssize)
E 12
D 18
.IP ruid 10
real user ID
D 15
.IP rusage 10
D 12
short for the set of keywords minflt, majflt, nswap, inblock, oublock,
msgsnd, msgrcv, nsigs, nvcsw and nivcsw.
E 12
I 12
an alias for the following keywords: minflt, majflt, nswap, inblock,
oublock, msgsnd, msgrcv, nsigs, nvcsw and nivcsw.
E 15
E 12
E 11
.IP ruser 10
E 18
I 18
.It ruid
real user
.Tn ID
.It ruser
E 18
user name (from ruid)
D 11
.IP pgid 10
process group number
.IP jobc 10
job control count
E 11
D 18
.IP sess 10
E 18
I 18
.It sess
E 18
session pointer
I 11
D 18
.IP sig 10
E 18
I 18
.It sig
E 18
D 12
pending signals
E 12
I 12
pending signals (alias pending)
E 12
D 18
.IP sigcatch 10
E 18
I 18
.It sigcatch
E 18
D 12
caught signals
E 12
I 12
caught signals (alias caught)
E 12
D 18
.IP sigignore 10
E 18
I 18
.It sigignore
E 18
D 12
ignored signals
E 12
I 12
ignored signals (alias ignored)
E 12
D 18
.IP sigmask 10
E 18
I 18
.It sigmask
E 18
D 12
blocked signals
E 12
I 12
blocked signals (alias blocked)
E 12
D 18
.IP sl 10
E 18
I 18
.It sl
E 18
sleep time (in seconds; 127 = infinity)
D 18
.IP start 10
E 18
I 18
.It start
E 18
time started
D 18
.IP state 10
E 18
I 18
.It state
E 18
D 12
process state (symbolic)
E 12
I 12
symbolic process state (alias stat)
E 12
D 18
.IP svgid 10
E 18
I 18
.It svgid
E 18
saved gid from a setgid executable
D 18
.IP svuid 10
E 18
I 18
.It svuid
E 18
saved uid from a setuid executable
E 11
D 18
.IP tdev 10
E 18
I 18
.It tdev
E 18
control terminal device number
D 12
.IP tname 10
control terminal name (two letter abbreviation)
E 12
I 12
D 18
.IP time 10
E 18
I 18
.It time
E 18
accumulated cpu time, user + system (alias cputime)
E 12
D 11
.IP longtname 10
full name of control terminal
E 11
D 18
.IP tpgid 10
control terminal process group ID
I 11
D 15
.IP trs 10
E 15
I 15
.IP trss 10
E 18
I 18
.It tpgid
control terminal process group
.Tn ID
D 22
.It trss
E 18
E 15
text resident set size (in Kbytes)
E 22
I 22
.\".It trss
.\"text resident set size (in Kbytes)
E 22
E 11
D 12
.IP tsession 10
E 12
I 12
D 18
.IP tsess 10
E 18
I 18
.It tsess
E 18
E 12
control terminal session pointer
D 11
.IP paddr 10
swap address
.IP state 10
process state (symbolic)
.IP pri 10
scheduling priority
E 11
I 11
D 18
.IP tsiz 10
E 18
I 18
.It tsiz
E 18
text size (in Kbytes)
D 12
.IP u_procp 10
E 12
I 12
D 18
.IP tt 10
E 18
I 18
.It tt
E 18
control terminal name (two letter abbreviation)
D 18
.IP tty 10
E 18
I 18
.It tty
E 18
full name of control terminal
D 18
.IP uprocp 10
E 18
I 18
.It uprocp
E 18
E 12
process pointer
D 18
.IP ucomm 10
E 18
I 18
.It ucomm
E 18
name to be used for accounting
D 18
.IP uid 10
effective user ID
I 12
.IP upr 10
E 18
I 18
.It uid
effective user
.Tn ID
.It upr
E 18
scheduling priority on return from system call (alias usrpri)
E 12
D 18
.IP user 10
E 18
I 18
.It user
E 18
user name (from uid)
E 11
D 12
.IP usrpri 10
scheduling priority on return from system call
D 11
.IP nice 10
nice
E 11
.IP vsize 10
virtual size (Kbytes)
E 12
I 12
D 18
.IP vsz 10
E 18
I 18
.It vsz
E 18
virtual size in Kbytes (alias vsize)
E 12
D 11
.IP rssize 10
resident set size + (text size / text use count)
.IP rss 10
resident set size
.IP u_procp 10
process pointer
.IP umask 10
file creation mask
.IP acflag 10
accounting flag
.IP start 10
time started (abbreviated)
.IP lstart 10
time started (full)
.IP cputime 10
accumulated cpu time (user+system)
.IP p_ru 10
resource usage (valid only for zombie)
.IP pcpu 10
cpu usage (percentage)
.IP pmem 10
memory usage (percentage)
.IP sl 10
sleep time (in seconds; 127 = infinity)
.IP re 10
core residency time (in seconds; 127 = infinity)
.IP pagein 10
pageins (same as majflt)
.IP lim 10
memoryuse limit
.IP tsiz 10
text size (in Kbytes)
.IP trs 10
text resident set size (in Kbytes)
.IP minflt 10
total page reclaims
.IP majflt 10
total page faults
.IP nswap 10
total swaps in/out
.IP inblock 10
total blocks read
.IP oublock 10
total blocks written
.IP msgsnd 10
total messages sent (writes on pipes/sockets)
.IP msgrcv 10
total messages received (reads from pipes/sockets)
.IP nsignals 10
total signals taken
.IP nvcsw 10
total voluntary context switches
.IP nivcsw 10
total involuntary context switches
.IP RUSAGE 10
short for all of the above ``totals''
E 11
I 11
D 18
.IP wchan 10
E 18
I 18
.It wchan
E 18
D 12
wait channel (symbolic)
E 12
I 12
wait channel (as a symbolic name)
E 12
D 18
.IP xstat 10
E 18
I 18
.It xstat
E 18
exit or stop status (valid only for stopped or zombie process)
E 11
D 18
.PD
.SH FILES
D 11
.ta \w'/var/run/devdatabase  'u
/vmunix	system namelist
E 11
I 11
.ta \w'/var/run/kvm_vmunix.db  'u
/dev	special files and device names
E 11
.br
D 11
/dev/kmem	kernel memory
E 11
I 11
/dev/drum	default swap device
E 11
.br
D 11
/dev/drum	swap device
E 11
I 11
/dev/kmem	default kernel memory
E 11
.br
D 11
/dev	searched to find swap device and tty names
E 11
I 11
/var/run/dev.db	/dev name database
E 11
.br
D 11
/var/run/kvm_vmunix*	system namelist database
/var/run/devdatabase	/dev name database
E 11
I 11
/var/run/kvm_vmunix.db	system namelist database
.br
/vmunix	default system namelist
E 11
.SH "SEE ALSO"
D 11
kill(1), w(1)
E 11
I 11
kill(1), w(1), kvm(3), strftime(3), pstat(8)
E 11
.SH BUGS
Things can change while
.I ps
D 11
is running; the picture it gives is only a close
E 11
I 11
is running; the picture it gives is only a fairly close
E 11
approximation to reality.
E 18
I 18
.El
.Sh FILES
.Bl -tag -width /var/run/kvm_vmunix.db -compact
.It Pa /dev
special files and device names
.It Pa /dev/drum
default swap device
.It Pa /dev/kmem
default kernel memory
.It Pa /var/run/dev.db
/dev name database
.It Pa /var/run/kvm_vmunix.db
system namelist database
.It Pa /vmunix
default system namelist
.El
.Sh SEE ALSO
.Xr kill 1 ,
.Xr w 1 ,
.Xr kvm 3 ,
.Xr strftime 3 ,
.Xr pstat 8
.Sh BUGS
Since
.Nm \&ps
cannot run faster than the system and is run as any other scheduled
process, the information it displays can never be exact.
E 18
E 10
E 8
E 1
