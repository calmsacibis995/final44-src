h39798
s 00002/00002/00088
d D 8.3 94/04/18 07:10:53 bostic 12 11
c typo
e
s 00001/00001/00089
d D 8.2 93/12/30 15:39:18 mckusick 11 10
c copyediting for Usenix manuals
e
s 00002/00002/00088
d D 8.1 93/05/31 15:46:56 bostic 10 9
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00018/00012/00072
d D 6.6 91/07/27 22:09:13 cael 9 8
c mdoc version three
e
s 00003/00001/00081
d D 6.5 91/06/27 17:24:01 bostic 8 7
c add POSIX/IEEE contribution notice
e
s 00003/00001/00079
d D 6.4 91/03/14 00:10:39 cael 7 5
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00001/00000/00080
d R 6.4 91/03/13 20:29:52 cael 6 5
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00077/00035/00003
d D 6.3 90/07/24 22:51:54 cael 5 4
c .Xr botch fix
e
s 00006/00002/00032
d D 6.2 90/06/24 19:16:16 cael 4 3
c converted man page
e
s 00001/00001/00033
d D 6.1 85/04/29 17:56:27 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00004/00005/00030
d D 5.1 85/04/29 17:56:19 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00035/00000/00000
d D 4.1 85/04/29 17:56:12 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 4
.\"	%W% (Berkeley) %G%
E 4
I 4
D 5
.\" Copyright (c) 1990 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 10
.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
E 10
I 10
D 12
.\" Copyright (c) 1990, 1993
E 12
I 12
.\" Copyright (c) 1990, 1993, 1994
E 12
.\"	The Regents of the University of California.  All rights reserved.
E 10
E 5
E 4
.\"
I 8
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
E 8
I 5
D 9
.\" %sccs.include.redist.man%
E 9
I 9
.\" %sccs.include.redist.roff%
E 9
.\"
E 5
D 2
.TH SLEEP 1 
E 2
I 2
D 3
.TH SLEEP 1  "10 February 1983"
E 3
I 3
D 4
.TH SLEEP 1 "%Q%"
E 4
I 4
D 9
.\"     %W% (Berkeley) %G%
E 9
I 9
.\"	%W% (Berkeley) %G%
E 9
.\"
I 7
D 8
.Vx
E 8
D 9
.Vx
E 9
E 7
D 5
.TH SLEEP 1 "%Q"
E 4
E 3
E 2
.AT 3
.SH NAME
sleep \- suspend execution for an interval
.SH SYNOPSIS
.B sleep
time
.SH DESCRIPTION
.I Sleep
suspends execution for
.I time
seconds.
D 2
It is used to execute a command
after a certain amount of time as in:
E 2
I 2
It is used to execute a command after a certain amount of time as in:
E 2
.PP
	(sleep 105; command)&
.PP
or to execute a command every so often, as in:
.PP
	while true
.br
	do
.br
		command
.br
		sleep 37
.br
	done
.SH "SEE ALSO"
D 2
alarm(2), sleep(3)
E 2
I 2
setitimer(2), alarm(3C), sleep(3)
E 2
.SH BUGS
.I Time
D 2
must be less than 2147483647 seconds.
E 2
I 2
must be less than 2,147,483,647 seconds.
E 5
I 5
.Dd %Q%
.Dt SLEEP 1
D 7
.Os BSD 4.4
E 7
I 7
.Os
E 7
.Sh NAME
.Nm sleep
.Nd suspend execution for an interval of time
.Sh SYNOPSIS
.Nm sleep
.Ar seconds
.Sh DESCRIPTION
The
.Nm sleep
command
suspends execution for a minimum of
.Ar seconds .
.Nm Sleep
is used to schedule the execution of other commands (see
D 9
EXAMPLES below).
E 9
I 9
.Sx EXAMPLES
below).
E 9
.Pp
The
.Nm Sleep
utility exits with one of the following values:
D 9
.Tw Ds
.Tp Li \&0
On successful completetion, or if the signal SIGALRM was received.
.Tp Li \&>\&0
E 9
I 9
.Bl -tag -width flag
.It Li \&0
D 12
On successful completetion, or if the signal
E 12
I 12
On successful completion, or if the signal
E 12
.Dv SIGALRM
was received.
.It Li \&>\&0
E 9
An error occurred.
D 9
.Tp
E 9
I 9
.El
E 9
.Sh EXAMPLES
To schedule the execution of a command for
.Va x
number seconds later:
.Pp
.Dl (sleep 1800; sh command_file >& errors)&
.Pp
This incantation would wait a half hour before
running the script command_file. (See the
.Xr at 1
utility.)
.Pp
To reiteratively run a command (with the
.Xr csh 1 ) :
.Pp
D 9
.Ds I
E 9
I 9
.Bd -literal -offset indent -compact
E 9
while (1)
	if (! -r zzz.rawdata) then
		sleep 300
	else
		foreach i (`ls *.rawdata`)
			sleep 70
			awk -f collapse_data $i >> results
		end
		break
	endif
end
D 9
.De
E 9
I 9
.Ed
E 9
.Pp
The scenario for a script such as this might be: a program currently
running is taking longer than expected to process a series of
files, and it would be nice to have
another program start processing the files created by the first
program as soon as it is finished (when zzz.rawdata is created).
The script checks every five minutes for the file zzz.rawdata,
when the file is found, then another portion processing
D 11
is done curteously by sleeping for 70 seconds in between each
E 11
I 11
is done courteously by sleeping for 70 seconds in between each
E 11
awk job.
.Sh SEE ALSO
.Xr setitimer 2 ,
.Xr alarm 3 ,
.Xr sleep 3 ,
.Xr at 1
.Sh STANDARDS
D 9
The sleep function is expected to be POSIX 1003.2 compatible.
E 9
I 9
The
.Nm sleep
command is expected to be
.St -p1003.2
compatible.
E 9
E 5
E 2
E 1
