h08966
s 00003/00003/00161
d D 8.2 94/01/25 09:49:24 bostic 24 23
c cores are now named program.core
e
s 00000/00000/00164
d D 8.1 93/06/10 17:25:45 bostic 23 22
c 4.4BSD snapshot (revision 8.1)
e
s 00001/00000/00163
d D 5.20 93/06/10 17:25:37 bostic 22 20
c avoid lost+found on the removal script
e
s 00000/00000/00163
d R 8.1 93/06/09 12:45:04 bostic 21 20
c 4.4BSD snapshot (revision 8.1)
e
s 00001/00001/00162
d D 5.19 92/09/01 09:21:10 bostic 20 19
c df no longer has a -k option
e
s 00002/00002/00161
d D 5.18 92/07/23 10:09:34 bostic 19 18
c core.[ch05] aren't core dumps, and this is wrong a lot
e
s 00000/00023/00163
d D 5.17 92/04/17 16:18:15 bostic 18 17
c move file backup into security script
e
s 00001/00001/00185
d D 5.16 92/01/09 07:58:52 bostic 17 16
c display complete host name
e
s 00001/00001/00185
d D 5.15 91/12/12 15:23:39 karels 16 15
c include host name in insecurity mail subject
e
s 00007/00008/00179
d D 5.14 91/11/25 10:34:34 karels 15 14
c import CLEANVARTMP, ROOTBACKUP from env; minor fixes
e
s 00044/00005/00143
d D 5.13 91/09/14 10:16:08 bostic 14 13
c cleanup, put root backups and cleaning on variables
e
s 00014/00011/00134
d D 5.12 91/05/24 15:51:50 bostic 13 11
c remove files named -f
e
s 00013/00013/00132
d R 5.12 91/04/01 09:04:39 bostic 12 11
c make find run faster, using the -rf flags; handle files named "-f";
c convert to new find syntax
e
s 00002/00002/00143
d D 5.11 90/09/17 13:05:09 bostic 11 10
c minor whacks to find of /tmp
e
s 00002/00001/00143
d D 5.10 90/07/01 17:33:28 karels 10 9
c confine our search for garbage to the local filesystems
e
s 00002/00000/00142
d D 5.9 90/06/30 20:14:49 bostic 9 8
c run security script from daily
e
s 00004/00004/00138
d D 5.8 90/05/15 16:16:37 karels 8 7
c cmp -s is faster than redirecting
e
s 00001/00001/00141
d D 5.7 90/05/09 13:09:35 karels 7 6
c df gets -k option
e
s 00000/00023/00142
d D 5.6 90/04/09 16:40:37 bostic 6 5
c move security checks to security script
e
s 00027/00020/00138
d D 5.5 90/02/28 16:51:58 karels 5 4
c more reorg; paranoia; accumulated changes
e
s 00020/00021/00138
d D 5.4 89/08/03 13:16:13 bostic 4 3
c update for reorg
e
s 00001/00001/00158
d D 5.3 89/07/22 16:15:09 bostic 3 2
c syslog /var/spool -> /var/log
e
s 00001/00001/00152
d D 5.2 89/04/17 22:15:10 bostic 2 1
c syslog.pid from /etc to /var/run
e
s 00153/00000/00000
d D 5.1 89/04/11 18:12:36 bostic 1 0
c date and time created 89/04/11 18:12:36 by bostic
e
u
U
t
T
I 1
#!/bin/sh -
#
#	%W% (Berkeley) %G%
#
D 4

PATH=/usr/local:/usr/ucb:/bin:/usr/bin:/etc:/sbin:/usr/sbin
export PATH

E 4
I 4
D 15
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local
E 15
I 15
PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin
E 15
E 4
D 17
host=`hostname -s`
E 17
I 17
host=`hostname`
E 17
echo "Subject: $host daily run output"
bak=/var/backups

echo ""
echo "Removing scratch and junk files:"
if [ -d /tmp ]; then
D 5
	cd /tmp
E 5
I 5
	cd /tmp && {
E 5
D 11
	find .	! -name . -atime +3 -exec rm -f {} \;
D 5
	find .	! -name . -type d -mtime +1 -exec rmdir {} \; >/dev/null 2>&1
E 5
I 5
	find .	! -name . -type d -mtime +1 -exec rmdir {} \; >/dev/null 2>&1; }
E 11
I 11
D 13
	find . -type f -atime +3 -exec rm -f {} \;
	find . ! -name . -type d -mtime +1 -exec rmdir {} \; >/dev/null 2>&1; }
E 13
I 13
	find . -type f -atime +3 -exec rm -f -- {} \;
	find . ! -name . -type d -mtime +1 -exec rmdir -- {} \; \
	    >/dev/null 2>&1; }
E 13
E 11
E 5
fi

D 5
#if [ -d /var/tmp ]; then
#	cd /var/tmp
#	find .	! -name . -atime +7 -exec rm -f {} \;
#	find .	! -name . -type d -mtime +1 -exec rmdir {} \; >/dev/null 2>&1
#fi
E 5
I 5
D 14
if [ -d /var/tmp ]; then
E 14
I 14
D 15
CLEANVARTMP=0
if [ -d /var/tmp -a $CLEANVARTMP = 1 ]; then
E 15
I 15
if [ -d /var/tmp -a "X$CLEANVARTMP" = X1 ]; then
E 15
E 14
	cd /var/tmp && {
D 13
	find .	! -name . -atime +7 -exec rm -f {} \;
	find .	! -name . -type d -mtime +1 -exec rmdir {} \; >/dev/null 2>&1; }
E 13
I 13
	find . ! -name . -atime +7 -exec rm -f -- {} \;
	find . ! -name . -type d -mtime +1 -exec rmdir -- {} \; \
	    >/dev/null 2>&1; }
E 13
fi
E 5

if [ -d /scratch ]; then
D 5
	cd /scratch
E 5
I 5
	cd /scratch && {
E 5
D 13
	find .	! -name . -atime +1 -exec rm -f {} \;
D 5
	find .	! -name . -type d -mtime +1 -exec rmdir {} \; >/dev/null 2>&1
E 5
I 5
	find .	! -name . -type d -mtime +1 -exec rmdir {} \; >/dev/null 2>&1; }
E 13
I 13
	find . ! -name . -atime +1 -exec rm -f -- {} \;
	find . ! -name . -type d -mtime +1 -exec rmdir -- {} \; \
	    >/dev/null 2>&1; }
E 13
E 5
fi

if [ -d /var/preserve ]; then
D 5
	cd /var/preserve
	find .	! -name . -mtime +7 -exec rm -f {} \;
E 5
I 5
	cd /var/preserve && {
D 13
	find .	! -name . -mtime +7 -exec rm -f {} \; ; }
E 13
I 13
	find . ! -name . -mtime +7 -exec rm -f -- {} \; ; }
E 13
E 5
fi

D 4
if [ -d /var/spool/rwho ] ; then
	cd /var/spool/rwho
	find .	-mtime +7 -exec rm -f {} \;
E 4
I 4
if [ -d /var/rwho ] ; then
D 5
	cd /var/rwho
	find .	! -name . -mtime +7 -exec rm -f {} \;
E 5
I 5
	cd /var/rwho && {
D 13
	find .	! -name . -mtime +7 -exec rm -f {} \; ; }
E 13
I 13
	find . ! -name . -mtime +7 -exec rm -f -- {} \; ; }
E 13
E 5
E 4
fi

I 5
cd /tmp
E 5
D 10
find /	\( -name '[#,]*' -o -name '.#*' -o -name a.out -o -name core \
E 10
I 10
D 13
find /  ! -fstype local -a -prune -o \
E 13
I 13
D 14
find / ! -fstype local -a -prune -o \
E 13
	\( -name '[#,]*' -o -name '.#*' -o -name a.out -o -name core \
E 14
I 14
TMP=daily.$$
find / \( ! -fstype local -o -fstype rdonly \) -a -prune -o \
I 22
	-name 'lost+found' -a -prune -o \
E 22
D 24
	-name 'core.*' -a -print -o \
E 24
I 24
	-name '*.core' -a -print -o \
E 24
	\( -name '[#,]*' -o -name '.#*' -o -name a.out \
E 14
E 10
	   -o -name '*.CKP' -o -name '.emacs_[0-9]*' \) \
D 13
		-a -atime +3 -exec rm -f {} \;
E 13
I 13
D 14
		-a -atime +3 -exec rm -f -- {} \;
E 14
I 14
		-a -atime +3 -a -exec rm -f -- {} \; -a -print > $TMP
echo ""
D 19
echo "Core dumps:"
egrep 'core\.' $TMP
E 19
I 19
echo "Possible core dumps:"
D 24
egrep 'core\.' $TMP | sed '/core.[05cho]$/d'
E 24
I 24
egrep '\.core' $TMP
E 24
E 19

echo ""
echo "Deleted files:"
D 24
egrep -v 'core\.' $TMP
E 24
I 24
egrep -v '\.core' $TMP
E 24

rm -f $TMP
	
E 14
E 13
msgs -c
D 5
if [ -f /usr/new/lib/news/expire ]; then
	/usr/new/lib/news/expire
E 5
I 5
if [ -f /etc/news.expire ]; then
	/etc/news.expire
E 5
fi

echo ""
echo "Purging accounting records:"
D 5
cp /var/account/acct /var/account/acct.yesterday
E 5
I 5
mv /var/account/acct.2 /var/account/acct.3
mv /var/account/acct.1 /var/account/acct.2
mv /var/account/acct.0 /var/account/acct.1
cp /var/account/acct /var/account/acct.0
E 5
sa -s > /dev/null

D 18
echo ""
echo "Backup passwd and group files:"
D 8
if cmp $bak/master.passwd.bak /etc/master.passwd >/dev/null; then :; else
E 8
I 8
if cmp -s $bak/master.passwd.bak /etc/master.passwd; then :; else
E 8
	echo "$host passwd diffs:"
	diff $bak/master.passwd.bak /etc/master.passwd
	mv $bak/master.passwd.bak $bak/master.passwd.bak2
	cp -p /etc/master.passwd $bak/master.passwd.bak
D 5
	chmod 600 $bak/master.passwd.bak $bak/master.passwd.bak2
E 5
fi
D 8
if cmp $bak/group.bak /etc/group >/dev/null; then :; else
E 8
I 8
if cmp -s $bak/group.bak /etc/group; then :; else
E 8
	mv $bak/group.bak $bak/group.bak2
	cp -p /etc/group $bak/group.bak
fi
I 5
D 8
if cmp $bak/aliases.bak /etc/aliases >/dev/null; then :; else
E 8
I 8
if cmp -s $bak/aliases.bak /etc/aliases; then :; else
E 8
	mv $bak/aliases.bak $bak/aliases.bak2
	cp -p /etc/aliases $bak/aliases.bak
fi
E 5
if [ -f /etc/Distfile ]; then
D 8
	if cmp $bak/Distfile.bak /etc/Distfile >/dev/null; then :; else
E 8
I 8
	if cmp -s $bak/Distfile.bak /etc/Distfile; then :; else
E 8
		mv $bak/Distfile.bak $bak/Distfile.bak2
		cp /etc/Distfile $bak/Distfile.bak
	fi
fi

E 18
I 14
D 15
ROOTBACKUP=0
# If filesystem named /altroot is type ufs, on /dev/.* and mounted "xx",
E 15
I 15
# If ROOTBACKUP is set to 1 in the environment, and
# if filesystem named /altroot is type ufs, on /dev/* and mounted "xx",
E 15
# use it as a backup root filesystem to be updated daily.
D 15
[ ROOTBACKUP = 1 ] && {
	echo ""
	echo "Backing up root filesystem:"
E 15
I 15
[ "X$ROOTBACKUP" = X1 ] && {
E 15
	rootdev=`awk '$2 == "/" && $1 ~ /^\/dev\// && $3 == "ufs" && \
	    $4 == "rw" \
		 { print substr($1, 6) }' < /etc/fstab`
	rootbak=`awk '$2 == "/altroot" && $1 ~ /^\/dev\// && $3 == "ufs" && \
	    $4 == "xx" \
		{ print substr($1, 6) }' < /etc/fstab`
	[ X$rootdev != X -a X$rootbak != X ] && {
		sync
I 15
		echo ""
		echo "Backing up root filesystem:"
E 15
		echo "copying /dev/r$rootdev to /dev/r$rootbak"
		dd if=/dev/r$rootdev of=/dev/r$rootbak bs=16b seek=1 skip=1 \
			conv=noerror,sync
		fsck -y /dev/r$rootbak
	}
}

E 14
echo ""
echo "Running calendar:"
D 5
calendar -
E 5
I 5
calendar -a
E 5

echo ""
D 4
echo "Rotating mail syslog:"
E 4
I 4
echo "Rotating mail log:"
E 4
D 3
cd /var/spool/mqueue
E 3
I 3
cd /var/log
E 3
D 4
rm -f syslog.7
if [ -f syslog.6 ]; then mv -f syslog.6  syslog.7; fi
if [ -f syslog.5 ]; then mv -f syslog.5  syslog.6; fi
if [ -f syslog.4 ]; then mv -f syslog.4  syslog.5; fi
if [ -f syslog.3 ]; then mv -f syslog.3  syslog.4; fi
if [ -f syslog.2 ]; then mv -f syslog.2  syslog.3; fi
if [ -f syslog.1 ]; then mv -f syslog.1  syslog.2; fi
if [ -f syslog.0 ]; then mv -f syslog.0  syslog.1; fi
mv -f syslog syslog.0
cp /dev/null syslog
chmod 644    syslog
E 4
I 4
rm -f maillog.7
if [ -f maillog.6 ]; then mv -f maillog.6  maillog.7; fi
if [ -f maillog.5 ]; then mv -f maillog.5  maillog.6; fi
if [ -f maillog.4 ]; then mv -f maillog.4  maillog.5; fi
if [ -f maillog.3 ]; then mv -f maillog.3  maillog.4; fi
if [ -f maillog.2 ]; then mv -f maillog.2  maillog.3; fi
if [ -f maillog.1 ]; then mv -f maillog.1  maillog.2; fi
if [ -f maillog.0 ]; then mv -f maillog.0  maillog.1; fi
mv -f maillog maillog.0
cp /dev/null maillog
chmod 644    maillog
E 4
D 2
kill -1 `cat /etc/syslog.pid`
E 2
I 2
kill -1 `cat /var/run/syslog.pid`
E 2
cd /

D 5
if [ -d /var/spool/uucp -a -f /usr/lib/uucp/clean.daily ]; then
E 5
I 5
if [ -d /var/spool/uucp -a -f /etc/uuclean.daily ]; then
E 5
	echo ""
	echo "Cleaning up UUCP:"
D 5
	echo /usr/lib/uucp/clean.daily | su daemon
E 5
I 5
	echo /etc/uuclean.daily | su daemon
E 5
fi

echo ""
echo ""
echo "Checking subsystem status:"
echo ""
echo "disks:"
D 7
df
E 7
I 7
D 20
df -k
E 20
I 20
env BLOCKSIZE=1k df
E 20
E 7
echo ""
dump W
echo ""
D 4
sync
fsck -n | grep -v '^\*\* Phase'
E 4


echo ""
echo "mail:"
mailq

if [ -d /var/spool/uucp ]; then
	echo ""
	echo "uucp:"
	uusnap
fi

echo ""
echo "network:"
netstat -i
echo ""
ruptime

echo ""
D 6
echo "SECURITY CHECKS:"
echo ""
echo "checking setuid files in root filesystem:"
ncheck -s `awk -F: '$2=="/" {print $1}' /etc/fstab` | grep -v '	/dev/' \
	> $bak/check.today
chmod 400 $bak/check.today
if [ -f $bak/check.yesterday ]
then
	if diff $bak/check.today $bak/check.yesterday > /tmp/dif; then :; else
		echo "*** New setuid files in root filesystem:"
		cat /tmp/dif
		mv $bak/check.today $bak/check.yesterday
	fi
	rm /tmp/dif
else
	cat $bak/check.today
	mv $bak/check.today $bak/check.yesterday
fi
echo ""
echo "checking for uids of 0:"
awk 'BEGIN {FS=":"} $3=="0" {print $1,$3}' /etc/master.passwd
I 4

echo ""
E 6
echo "Checking filesystems:"
fsck -n | grep -v '^\*\* Phase'
E 4

echo ""
if [ -f /etc/Distfile ]; then
	echo "Running rdist:"
D 13
	rdist -f /etc/Distfile 
E 13
I 13
D 14
	rdist -f /etc/Distfile
E 14
I 14
	if [ -d /var/log/rdist ]; then
		logf=`date | awk '{printf "%s.%s.%s", $6, $2, $3}'`
		rdist -f /etc/Distfile 2>&1 | tee /var/log/rdist/$logf
	else
		rdist -f /etc/Distfile 
	fi
E 14
E 13
fi
I 9

D 16
sh /etc/security | mail -s "daily insecurity output" root
E 16
I 16
sh /etc/security 2>&1 | mail -s "$host daily insecurity output" root
E 16
E 9
E 1
