h23940
s 00000/00000/00226
d D 8.1 93/06/09 12:48:46 bostic 6 5
c 4.4BSD snapshot (revision 8.1)
e
s 00000/00005/00226
d D 5.5 93/06/09 12:48:41 bostic 5 4
c no copyright needed
e
s 00055/00001/00176
d D 5.4 93/04/05 21:54:57 ralph 4 3
c add new display devices.
e
s 00002/00002/00175
d D 5.3 93/03/27 16:41:24 ralph 3 2
c fix major number for 'dc' device.
e
s 00010/00005/00167
d D 5.2 92/04/19 08:33:19 ralph 2 1
c update tz minor numbers
e
s 00172/00000/00000
d D 5.1 92/03/09 14:04:05 bostic 1 0
c date and time created 92/03/09 14:04:05 by bostic
e
u
U
t
T
I 1
#!/bin/sh -
#
D 5
# Copyright (c) 1991 The Regents of the University of California.
# All rights reserved.
#
# %sccs.include.redist.sh%
#
E 5
#	%W% (Berkeley) %G%
#

# Device "make" file.  Valid arguments:
#	std	standard devices
#	local	configuration specific devices
# Tapes:
D 2
#	tz*	DEC TK50 cartridge tape
E 2
I 2
#	tz*	SCSI tapes, DEC TK50 cartridge tape
E 2
# Disks:
#	rz*	SCSI disks
#	vnd*	"file" pseudo-disks
# Terminal multiplexors:
#	dc*	4 channel serial interface (keyboard, mouse, modem, printer)
I 4
#	scc*	82530 serial interface
E 4
# Pseudo terminals:
#	pty*	set of 16 master and slave pseudo terminals
# Printers:
# Call units:
# Special purpose devices:
I 4
#	NOTE: /dev/mouse should be a link to one of these for X windows.
E 4
#	pm*	raw interface to PMAX graphics devices
I 4
#	cfb*	raw interface to turbochannel PMAG-BA color frame buffer
#	xcfb*	raw interface to maxine graphics devices
#	mfb*	raw interface to mono graphics devices
E 4

PATH=/sbin:/bin/:/usr/bin:/usr/sbin
umask 77
for i
do
case $i in

std)
	mknod console		c 0 0
	mknod drum		c 3 0	; chmod 640 drum ; chgrp kmem drum
	mknod kmem		c 2 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod mem		c 2 0	; chmod 640 mem ; chgrp kmem mem
	mknod null		c 2 2	; chmod 666 null
	mknod zero              c 2 12  ; chmod 666 zero
	mknod tty		c 1 0	; chmod 666 tty
	mknod klog		c 6 0	; chmod 600 klog
	mknod stdin		c 7 0	; chmod 666 stdin
	mknod stdout		c 7 1	; chmod 666 stdout
	mknod stderr		c 7 2	; chmod 666 stderr
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
			printf("mknod %d c 7 %d;", i, i)}'`)
	chown -R bin.bin fd
	chmod 555 fd
	chmod 666 fd/*
	;;

tz*)
	umask 0 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	tz*) chr=10;;
	esac
	case $unit in
	0|1|2|3|4|5|6)
D 2
		unit2=`expr $unit \* 2`
		unit3=`expr $unit \* 2 + 1`
		mknod rmt$unit c $chr $unit2
		mknod nrmt$unit c $chr $unit3
E 2
I 2
		unit0=`expr $unit \* 16`
		unit1=`expr $unit \* 16 + 1`
		unit2=`expr $unit \* 16 + 2`
		unit3=`expr $unit \* 16 + 3`
		mknod rmt$unit c $chr $unit0
		mknod nrmt$unit c $chr $unit1
		mknod rmth$unit c $chr $unit2
		mknod nrmth$unit c $chr $unit3
		chmod 666 rmt$unit nrmt$unit rmth$unit nrmth$unit
E 2
		;;
	*)
		echo bad unit for tape in: $1
		;;
	esac
	umask 77
	;;

rz*|vnd*)
	umask 2 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	rz*) name=rz; blk=0; chr=9;;
	vnd*) name=vnd; blk=2; chr=11;;
	esac
	case $unit in
	0|1|2|3|4|5|6)
		mknod ${name}${unit}c	b $blk `expr $unit '*' 8 + 2`
		mknod r${name}${unit}c	c $chr `expr $unit '*' 8 + 2`
		if [ $name != vnd ]
		then
		mknod ${name}${unit}a	b $blk `expr $unit '*' 8 + 0`
		mknod ${name}${unit}b	b $blk `expr $unit '*' 8 + 1`
		mknod ${name}${unit}d	b $blk `expr $unit '*' 8 + 3`
		mknod ${name}${unit}e	b $blk `expr $unit '*' 8 + 4`
		mknod ${name}${unit}f	b $blk `expr $unit '*' 8 + 5`
		mknod ${name}${unit}g	b $blk `expr $unit '*' 8 + 6`
		mknod ${name}${unit}h	b $blk `expr $unit '*' 8 + 7`
		mknod r${name}${unit}a	c $chr `expr $unit '*' 8 + 0`
		mknod r${name}${unit}b	c $chr `expr $unit '*' 8 + 1`
		mknod r${name}${unit}d	c $chr `expr $unit '*' 8 + 3`
		mknod r${name}${unit}e	c $chr `expr $unit '*' 8 + 4`
		mknod r${name}${unit}f	c $chr `expr $unit '*' 8 + 5`
		mknod r${name}${unit}g	c $chr `expr $unit '*' 8 + 6`
		mknod r${name}${unit}h	c $chr `expr $unit '*' 8 + 7`
		fi
		chgrp operator ${name}${unit}[a-h] r${name}${unit}[a-h]
		chmod 640 ${name}${unit}[a-h] r${name}${unit}[a-h]
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	umask 77
	;;

dc*)
	unit=`expr $i : 'dc\(.*\)'`
	case $unit in
	0)
D 3
		mknod tty0 c 0 2
		mknod tty1 c 0 3
E 3
I 3
		mknod tty0 c 16 2
		mknod tty1 c 16 3
E 3
		;;
	*)
		echo bad unit for dc in: $i
		;;
	esac
	;;

I 4
scc*)
	unit=`expr $i : 'scc\(.*\)'`
	case $unit in
	0)
		mknod tty0 c 17 2
		mknod tty1 c 17 3
		;;
	*)
		echo bad unit for scc in: $i
		;;
	esac
	;;

E 4
pm*)
	unit=`expr $i : 'pm\(.*\)'`
	case $unit in
	0)
D 4
		mknod mouse c 8 0
E 4
I 4
		mknod pm0 c 8 0
E 4
		;;
	*)
		echo bad unit for pm in: $i
I 4
		;;
	esac
	;;

cfb*)
	unit=`expr $i : 'cfb\(.*\)'`
	case $unit in
	0)
		mknod cfb0 c 13 0
		;;
	*)
		echo bad unit for cfb in: $i
		;;
	esac
	;;

xcfb*)
	unit=`expr $i : 'xcfb\(.*\)'`
	case $unit in
	0)
		mknod xcfb0 c 14 0
		;;
	*)
		echo bad unit for xcfb in: $i
		;;
	esac
	;;

mfb*)
	unit=`expr $i : 'mfb\(.*\)'`
	case $unit in
	0)
		mknod mfb0 c 18 0
		;;
	*)
		echo bad unit for mfb in: $i
E 4
		;;
	esac
	;;

pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
	3) offset=48 name=s;;
# Note that telnetd, rlogind, and xterm (at least) only look at p-s.
	4) offset=64 name=t;;
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
	0|1|2|3|4)
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
				printf("mknod tty%s%x c 4 %d; \
					mknod pty%s%x c 5 %d; ", \
					n, i, b+i, n, i, b+i); }'`
		umask 77
		if [ $class = 1 ]; then
			mv ttyqf ttyv0; mv ptyqf ptyv0
		fi
		;;
	esac
	;;

local)
	umask 0
	sh MAKEDEV.local
	;;

*)
	echo $i: unknown device
	;;
esac
done
E 1
