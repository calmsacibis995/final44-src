h35657
s 00000/00000/00246
d D 8.1 93/06/09 12:49:53 bostic 18 17
c 4.4BSD snapshot (revision 8.1)
e
s 00000/00005/00246
d D 5.14 93/06/09 12:49:30 bostic 17 16
c no copyright needed
e
s 00001/00000/00250
d D 5.13 91/10/07 13:43:32 marc 16 15
c add /dev/zero
e
s 00003/00012/00247
d D 5.12 91/04/08 16:58:45 bostic 15 14
c new copyright; att/bsd/shared
e
s 00010/00000/00249
d D 5.11 90/03/16 14:29:43 bostic 14 13
c add stdin, stdout, stderr and fd/*
e
s 00004/00000/00245
d D 5.10 89/10/30 22:15:26 mckusick 13 12
c set searchpath
e
s 00044/00044/00201
d D 5.9 89/05/24 16:18:35 bostic 12 11
c mknod moved to /sbin
e
s 00004/00002/00241
d D 5.8 89/05/10 22:16:45 bostic 11 10
c add hd
e
s 00029/00007/00214
d D 5.7 88/07/07 13:05:19 bostic 10 8
c add g & h partitions to dk disks; Berkeley specific header
e
s 00028/00006/00215
d R 5.7 88/07/07 09:46:54 bostic 9 8
c add g & h partitions to dk disks; Berkeley specific header
e
s 00033/00020/00188
d D 5.6 88/06/14 18:41:50 bostic 8 7
c add mpcc support; From: muller%sdcc7@ucsd.edu (Keith Muller)
e
s 00004/00010/00204
d D 5.5 87/10/16 10:55:16 bostic 7 6
c fix pty3; add pty[45]; remove tty?? upper-case conversion stuff
e
s 00004/00002/00210
d D 5.4 87/08/28 11:10:01 mckusick 6 5
c must chgrp disks to operator and set mode correctly
e
s 00000/00001/00212
d D 5.3 86/12/22 19:07:25 karels 5 4
c oops
e
s 00007/00006/00206
d D 5.2 86/12/21 14:55:54 karels 4 3
c update modes for std
e
s 00004/00002/00208
d D 5.1 86/12/19 10:46:37 karels 3 2
c missed one
e
s 00015/00021/00195
d D 1.2 86/12/19 10:36:50 karels 2 1
c sanity on cypher
e
s 00216/00000/00000
d D 1.1 86/12/19 10:35:48 karels 1 0
c date and time created 86/12/19 10:35:48 by karels
e
u
U
t
T
I 1
D 10
#! /bin/sh
#	%W%	%G%
E 10
I 10
#!/bin/sh -
E 10
#
I 10
D 15
# Copyright (c) 1988 Regents of the University of California.
E 15
I 15
D 17
# Copyright (c) 1991 The Regents of the University of California.
E 15
# All rights reserved.
#
D 15
# Redistribution and use in source and binary forms are permitted
# provided that the above copyright notice and this paragraph are
# duplicated in all such forms and that any documentation,
# advertising materials, and other materials related to such
# distribution and use acknowledge that the software was developed
# by the University of California, Berkeley.  The name of the
# University may not be used to endorse or promote products derived
# from this software without specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
# WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 15
I 15
# %sccs.include.redist.sh%
E 15
#
E 17
#	%W% (Berkeley) %G%
#
I 15

E 15
E 10
# Device "make" file.  Valid arguments:
#	std	standard devices
#	local	configuration specific devices
# Tapes:
#	cy*	Cipher
# Disks:
D 11
#	dk*	VDDC or SMDE disk
E 11
I 11
#	dk*	VDDC or SMDE disk on Versabus
#	hd*	VDDC or SMDE disk on VME
E 11
# Terminal multiplexors:
#	vx*	VIOC
I 8
#	mp*	MPCC
E 8
# Pseudo terminals:
#	pty*	set of 32 master and slave pseudo terminals
# Printers:
# Call units:
# Special purpose devices:
#	enp*	CMC Ethernet interface for loading RAM
#	dr*	IKON DR-11W
#	ik*	IKON DR-11W w/ E&S PS300
#
I 13
HOME=/; export HOME
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH

E 13
umask 77
for i
do
case $i in

std)
D 12
	/etc/mknod CP		c 0 0
	/etc/mknod console	c 0 1
	/etc/mknod remote	c 0 2
D 4
	/etc/mknod drum 	c 8 0	; chmod 644 drum
	/etc/mknod vmem 	c 3 3	; chmod 644 vmem
	/etc/mknod kmem 	c 3 1	; chmod 644 kmem
	/etc/mknod mem		c 3 0	; chmod 644 mem
	/etc/mknod null 	c 3 2	; chmod 666 null
E 4
I 4
	/etc/mknod drum 	c 8 0	; chmod 640 drum ; chgrp kmem drum
	/etc/mknod mem		c 3 0	; chmod 640 mem ; chgrp kmem mem
	/etc/mknod kmem		c 3 1	; chmod 640 kmem ; chgrp kmem kmem
	/etc/mknod null		c 3 2	; chmod 666 null
	/etc/mknod vmem 	c 3 3	; chmod 640 vmem ; chgrp kmem vmem
E 4
	/etc/mknod tty		c 2 0	; chmod 666 tty
D 4
	/etc/mknod klog		c 15 0	; chmod 644 klog
E 4
I 4
	/etc/mknod klog		c 15 0	; chmod 400 klog
E 12
I 12
	mknod CP	c 0 0
	mknod console	c 0 1
	mknod remote	c 0 2
	mknod drum 	c 8 0	; chmod 640 drum ; chgrp kmem drum
	mknod mem	c 3 0	; chmod 640 mem ; chgrp kmem mem
	mknod kmem	c 3 1	; chmod 640 kmem ; chgrp kmem kmem
	mknod null	c 3 2	; chmod 666 null
	mknod vmem 	c 3 3	; chmod 640 vmem ; chgrp kmem vmem
I 16
	mknod zero      c 3 12  ; chmod 666 zero
E 16
	mknod tty	c 2 0	; chmod 666 tty
	mknod klog	c 15 0	; chmod 400 klog
I 14
	mknod stdin	c 21 0	; chmod 666 stdin
	mknod stdout	c 21 1	; chmod 666 stdout
	mknod stderr	c 21 2	; chmod 666 stderr
	mkdir fd > /dev/null 2>&1
	(cd fd && eval `echo "" | awk ' BEGIN { \
		for (i = 0; i < 64; i++) \
			printf("mknod %d c 21 %d;", i, i)}'`)
	chown -R bin.bin fd
	chmod 555 fd
	chmod 666 fd/*
E 14
E 12
	;;
E 4
D 5
	;;
E 5

cy*)
	umask 0 ; unit=`expr $i : '..\(.*\)'`
	case $i in
	cy*) blk=3; chr=7 ;;
	esac
	case $unit in
	0|1|2|3|4|5|6|7)
D 2
#		four=`expr $unit + 4` ; eight=`expr $unit + 8`
E 2
I 2
D 3
		four=`expr $unit + 4` ; eight=`expr $unit + 8`
E 2
#		twelve=`expr $unit + 12`; twenty=`expr $unit + 20`
E 3
I 3
		four=`expr $unit + 4`
		eight=`expr $unit + 8`
		twelve=`expr $unit + 12`
#		twenty=`expr $unit + 20`
E 3
D 2
#		/etc/mknod mt$unit	b $blk $unit
#		/etc/mknod mt$four	b $blk $four
#		/etc/mknod mt$eight	b $blk $eight
#		/etc/mknod mt$twelve	b $blk $twelve
#		/etc/mknod nmt$unit	b $blk $four ;: sanity w/pdp11 v7
#		/etc/mknod nmt$eight	b $blk $twelve ;: ditto
#		/etc/mknod nrmt$unit	c $chr $four ;: sanity w/pdp11 v7
#		/etc/mknod nrmt$eight	c $chr $twelve ;: ditto
#		/etc/mknod rmt$unit	c $chr $unit
#		/etc/mknod rmt$four	c $chr $four
#		/etc/mknod rmt$eight	c $chr $eight
#		/etc/mknod rmt$twelve	c $chr $twelve
E 2
I 2
D 12
		/etc/mknod mt$unit	b $blk $unit
		/etc/mknod mt$four	b $blk $four
		/etc/mknod mt$eight	b $blk $eight
		/etc/mknod mt$twelve	b $blk $twelve
E 12
I 12
		mknod mt$unit		b $blk $unit
		mknod mt$four		b $blk $four
		mknod mt$eight		b $blk $eight
		mknod mt$twelve		b $blk $twelve
E 12
		ln mt$four nmt$unit		;: sanity
		ln mt$twelve nmt$eight		;: ditto
D 12
		/etc/mknod rmt$unit	c $chr $unit
		/etc/mknod rmt$four	c $chr $four
		/etc/mknod rmt$eight	c $chr $eight
		/etc/mknod rmt$twelve	c $chr $twelve
E 12
I 12
		mknod rmt$unit		c $chr $unit
		mknod rmt$four		c $chr $four
		mknod rmt$eight		c $chr $eight
		mknod rmt$twelve	c $chr $twelve
E 12
		ln rmt$four nrmt$unit		;: sanity
		ln rmt$twelve nrmt$eight	;: ditto
E 2
#		if [ $i = ut ] 
#		then
D 12
#			/etc/mknod mt$twenty	b $blk $twenty
#			/etc/mknod rmt$twenty	c $chr $twenty
E 12
I 12
#			mknod mt$twenty	b $blk $twenty
#			mknod rmt$twenty	c $chr $twenty
E 12
#		fi
D 2
		u8=`expr $unit + 128`
		/etc/mknod cy"$unit"s	b $blk $unit; ln cy"$unit"s mt$unit
		/etc/mknod ncy"$unit"s	b $blk $u8; ln ncy"$unit"s nmt$unit
			ln ncy"$unit"s mt12
		/etc/mknod rcy"$unit"s	c $chr $unit; ln rcy"$unit"s rmt$unit
		/etc/mknod rncy"$unit"s c $chr $u8; ln rncy"$unit"s nrmt$unit
			ln rncy"$unit"s rmt12
E 2
		umask 77
		;;
	*)
		echo bad unit for tape in: $1
		;;
	esac
	;;

D 11
dk*)
E 11
I 11
hd*|dk*)
E 11
	unit=`expr $i : '..\(.*\)'`
	case $i in
	dk*) name=dk; blk=1; chr=5;;
I 11
	hd*) name=hd; blk=2; chr=6;;
E 11
	esac
	case $unit in
D 10
	0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f)
E 10
I 10
	0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f|g|h)
E 10
		case $unit in
		a) u=10 ;;
		b) u=11 ;;
		c) u=12 ;;
		d) u=13 ;;
		e) u=14 ;;
		f) u=15 ;;
I 10
		g) u=16 ;;
		h) u=17 ;;
E 10
		*) u=$unit ;;
		esac

D 12
		/etc/mknod ${name}${unit}a	b $blk `expr $u '*' 8 + 0`
		/etc/mknod ${name}${unit}b	b $blk `expr $u '*' 8 + 1`
		/etc/mknod ${name}${unit}c	b $blk `expr $u '*' 8 + 2`
		/etc/mknod ${name}${unit}d	b $blk `expr $u '*' 8 + 3`
		/etc/mknod ${name}${unit}e	b $blk `expr $u '*' 8 + 4`
		/etc/mknod ${name}${unit}f	b $blk `expr $u '*' 8 + 5`
I 10
		/etc/mknod ${name}${unit}g	b $blk `expr $u '*' 8 + 6`
		/etc/mknod ${name}${unit}h	b $blk `expr $u '*' 8 + 7`
E 10
		/etc/mknod r${name}${unit}a	c $chr `expr $u '*' 8 + 0`
		/etc/mknod r${name}${unit}b	c $chr `expr $u '*' 8 + 1`
		/etc/mknod r${name}${unit}c	c $chr `expr $u '*' 8 + 2`
		/etc/mknod r${name}${unit}d	c $chr `expr $u '*' 8 + 3`
		/etc/mknod r${name}${unit}e	c $chr `expr $u '*' 8 + 4`
		/etc/mknod r${name}${unit}f	c $chr `expr $u '*' 8 + 5`
I 10
		/etc/mknod r${name}${unit}g	c $chr `expr $u '*' 8 + 6`
		/etc/mknod r${name}${unit}h	c $chr `expr $u '*' 8 + 7`
E 12
I 12
		mknod ${name}${unit}a	b $blk `expr $u '*' 8 + 0`
		mknod ${name}${unit}b	b $blk `expr $u '*' 8 + 1`
		mknod ${name}${unit}c	b $blk `expr $u '*' 8 + 2`
		mknod ${name}${unit}d	b $blk `expr $u '*' 8 + 3`
		mknod ${name}${unit}e	b $blk `expr $u '*' 8 + 4`
		mknod ${name}${unit}f	b $blk `expr $u '*' 8 + 5`
		mknod ${name}${unit}g	b $blk `expr $u '*' 8 + 6`
		mknod ${name}${unit}h	b $blk `expr $u '*' 8 + 7`
		mknod r${name}${unit}a	c $chr `expr $u '*' 8 + 0`
		mknod r${name}${unit}b	c $chr `expr $u '*' 8 + 1`
		mknod r${name}${unit}c	c $chr `expr $u '*' 8 + 2`
		mknod r${name}${unit}d	c $chr `expr $u '*' 8 + 3`
		mknod r${name}${unit}e	c $chr `expr $u '*' 8 + 4`
		mknod r${name}${unit}f	c $chr `expr $u '*' 8 + 5`
		mknod r${name}${unit}g	c $chr `expr $u '*' 8 + 6`
		mknod r${name}${unit}h	c $chr `expr $u '*' 8 + 7`
E 12
E 10

D 6
		chmod 644 ${name}${unit}[a-f]
		chmod 644 r${name}${unit}[a-f]
E 6
I 6
D 10
		chmod 640 ${name}${unit}[a-f]
		chgrp operator ${name}${unit}[a-f]
		chmod 640 r${name}${unit}[a-f]
		chgrp operator r${name}${unit}[a-f]
E 10
I 10
		chmod 640 ${name}${unit}[a-h]
		chgrp operator ${name}${unit}[a-h]
		chmod 640 r${name}${unit}[a-h]
		chgrp operator r${name}${unit}[a-h]
E 10
E 6
		;;
	*)
		echo bad unit for disk in: $i
		;;
	esac
	;;

D 8
vx*)
	unit=`expr $i : 'vx\(.*\)'`
	case $unit in
	0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f)
E 8
I 8
vx*|mp*)
	case $i in
	vx*)	name=vx; major=1; count=16;
		unit=`expr $i : "$name\(.*\)"`
E 8
		case $unit in
D 8
		a) un=10 ;;
		b) un=11 ;;
		c) un=12 ;;
		d) un=13 ;;
		e) un=14 ;;
		f) un=15 ;;
		*) un=$unit ;;
E 8
I 8
		0|1|2|3|4|5|6|7|8|9|a|b|c|d|e|f) ch=$unit ;;
		*) echo bad unit for $name in: $i ;;
E 8
		esac
D 8
		eval `echo $un | awk ' { u = $1 } END {
		    for (i = 0; i < 16; i++)
			printf("/etc/mknod tty%02x c 1 %d; ",u*16+i,u*16+i); }'`
		ls -1 tty?? | grep [A-F] | while read x; do
			y=`echo $x | tr [A-F] [a-f]`
			mv $x $y
		done
E 8
		;;
D 8
	*)
		echo bad unit for vx in: $i
E 8
I 8
	mp*)	name=mp; major=12; count=16;
		unit=`expr $i : "$name\(.*\)"`
		case $unit in
		0) ch=A ;; 1) ch=B ;; 2) ch=C ;; 3) ch=D ;;
		4) ch=E ;; 5) ch=F ;; 6) ch=G ;; 7) ch=H ;;
		8) ch=I ;; 9) ch=J ;; a) ch=K ;; b) ch=L ;;
		c) ch=M ;; d) ch=N ;; e) ch=O ;; f) ch=P ;;
		*) echo bad unit for $name in: $i ;;
		esac
E 8
		;;
	esac
I 8

	case $unit in
	a) un=10 ;; b) un=11 ;; c) un=12 ;; d) un=13 ;;
	e) un=14 ;; f) un=15 ;; *) un=$unit ;;
	esac

	umask 044
	eval `echo $ch $major $count $un |
	  awk ' { ch = $1; u = $3 * $4; m = $2; cnt = $3; nd = $4 } END {
	    if (m == 12)
D 12
	        printf("/etc/mknod mpcc%d c 11 %d; /bin/chmod 0600 mpcc%d; ",nd,u,nd);
E 12
I 12
	        printf("mknod mpcc%d c 11 %d; /bin/chmod 0600 mpcc%d; ",nd,u,nd);
E 12
	    for (i = 0; i < cnt; i++)
	      if (i < 10)
D 12
		printf("/etc/mknod tty%s%x c %d %d; ",ch,i,m,u+i);
E 12
I 12
		printf("mknod tty%s%x c %d %d; ",ch,i,m,u+i);
E 12
	      else
D 12
		printf("/etc/mknod tty%s%c c %d %d; ",ch,87+i,m,u+i); }'`
E 12
I 12
		printf("mknod tty%s%c c %d %d; ",ch,87+i,m,u+i); }'`
E 12
	umask 77
E 8
	;;

pty*)
	class=`expr $i : 'pty\(.*\)'`
	case $class in
	0) offset=0 name=p;;
	1) offset=16 name=q;;
	2) offset=32 name=r;;
I 2
D 7
	3) offset=32 name=s;;
E 7
I 7
	3) offset=48 name=s;;
	4) offset=64 name=s;;
	5) offset=80 name=s;;
E 7
E 2
	*) echo bad unit for pty in: $i;;
	esac
	case $class in
D 2
	0|1|2)
E 2
I 2
D 7
	0|1|2|3)
E 7
I 7
	0|1|2|3|4|5)
E 7
E 2
		umask 0
		eval `echo $offset $name | awk ' { b=$1; n=$2 } END {
			for (i = 0; i < 16; i++)
D 12
				printf("/etc/mknod tty%s%x c 9 %d; \
					/etc/mknod pty%s%x c 10 %d; ", \
E 12
I 12
				printf("mknod tty%s%x c 9 %d; \
					mknod pty%s%x c 10 %d; ", \
E 12
					n, i, b+i, n, i, b+i); }'`
D 7
		ls -1 tty?? | grep [A-F] | while read x; do
			y=`echo $x | tr [A-F] [a-f]`
			mv $x $y
		done
		ls -1 pty?? | grep [A-F] | while read x; do
			y=`echo $x | tr [A-F] [a-f]`
			mv $x $y
		done
E 7
		umask 77
		;;
	esac
	;;

enp*)
	unit=`expr $i : 'enp\(.*\)'`
	case $unit in
	[0-6])
D 12
		/etc/mknod enp${unit}ram c 16 $unit; chmod 644 enp${unit}ram
E 12
I 12
		mknod enp${unit}ram c 16 $unit; chmod 644 enp${unit}ram
E 12
		;;
	*)
		echo bad unit for enp in: $i
		;;
	esac
	;;

dr*)
	unit=`expr $i : 'dr\(.*\)'`
	case $unit in
	[0-6])
D 12
		/etc/mknod dr${unit} c 18 $unit; chmod 644 dr${unit}
E 12
I 12
		mknod dr${unit} c 18 $unit; chmod 644 dr${unit}
E 12
		;;
	*)
		echo bad unit for dr in: $i
		;;
	esac
	;;

ik*)
	unit=`expr $i : 'ik\(.*\)'`
	case $unit in
	[0-9])
D 12
		/etc/mknod ik${unit} c 20 $unit; chmod 644 ik${unit}
E 12
I 12
		mknod ik${unit} c 20 $unit; chmod 644 ik${unit}
E 12
		;;
	*)
		echo bad unit for ik in: $i
		;;
	esac
	;;

local)
	sh MAKEDEV.local
	;;
esac
done
E 1
