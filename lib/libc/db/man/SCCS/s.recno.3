h48734
s 00001/00001/00169
d D 8.3 94/02/21 15:11:39 bostic 10 9
c first pass at making DB use basic integral types (the Alpha port)
e
s 00038/00038/00132
d D 8.2 94/01/02 12:03:47 bostic 9 8
c make the man page RECNOINFO element order match the db.h structure
e
s 00002/00002/00168
d D 8.1 93/06/04 15:22:39 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00007/00000/00163
d D 5.7 93/06/03 17:59:14 bostic 7 6
c document defaults for cachesize, psize
e
s 00018/00000/00145
d D 5.6 93/05/16 16:18:51 bostic 6 5
c add psize to the recno structure, to pass down to the btree
c add bfname to the recno structure, to specify the btree file name
e
s 00004/00003/00141
d D 5.5 92/12/04 19:09:40 bostic 5 4
c document cursor shift on insertion/deletion
e
s 00006/00001/00138
d D 5.4 92/10/03 20:29:51 bostic 4 3
c explicitly document renumbering effect of deletion
e
s 00001/00001/00138
d D 5.3 92/08/28 16:54:01 bostic 3 2
c wordsmithing
e
s 00015/00001/00124
d D 5.2 92/07/14 10:32:01 bostic 2 1
c the structure of a `key' got lost when the man pages got broken up,
c add it back in.  Currently, a key references a recno_t -- this may be wrong,
c earlier versions allowed the specification of a length/offset combination too
e
s 00125/00000/00000
d D 5.1 91/09/04 11:36:43 bostic 1 0
c break db(3) up into multiple manual pages
e
u
U
t
T
I 1
D 8
.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
E 8
I 8
.\" Copyright (c) 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 8
.\"
.\" %sccs.include.redist.man%
.\"
.\"	%W% (Berkeley) %G%
.\"
.TH RECNO 3 "%Q%"
.UC 7
.SH NAME
recno \- record number database access method
.SH SYNOPSIS
.nf
.ft B
#include <sys/types.h>
#include <db.h>
.ft R
.fi
.SH DESCRIPTION
The routine
.IR dbopen
is the library interface to database files.
One of the supported file formats is record number files.
The general description of the database access methods is in
.IR dbopen (3),
this manual page describes only the recno specific information.
.PP
The record number data structure is either variable or fixed-length
D 4
records stored in a flat-file format.
E 4
I 4
records stored in a flat-file format, accessed by the logical record
number.
D 5
.PP
E 5
The existence of record number five implies the existence of records
D 5
one through four, and the deletion of record number four causes
record number five to be renumbered to record number four.
E 5
I 5
one through four, and the deletion of record number one causes
record number five to be renumbered to record number four, as well
as the cursor, if positioned after record number one, to shift down
one record.
E 5
E 4
.PP
The recno access method specific data structure provided to
.I dbopen
is defined in the <db.h> include file as follows:
.PP
typedef struct {
.RS
D 9
u_char bval;
E 9
I 9
u_long flags;
E 9
.br
u_int cachesize;
.br
I 6
D 10
index_t psize;
E 10
I 10
u_int psize;
E 10
.br
E 6
D 9
u_long flags;
.br
E 9
int lorder;
.br
size_t reclen;
I 6
.br
I 9
u_char bval;
.br
E 9
char *bfname;
E 6
.RE
} RECNOINFO;
.PP
The elements of this structure are defined as follows:
.TP
D 9
bval
The delimiting byte to be used to mark the end of a record for
variable-length records, and the pad character for fixed-length
records.
If no value is specified, newlines (``\en'') are used to mark the end
of variable-length records and fixed-length records are padded with
spaces.
.TP
cachesize
A suggested maximum size, in bytes, of the memory cache.
This value is
.B only
advisory, and the access method will allocate more memory rather than fail.
I 7
If
.I cachesize
is  0 (no size is specified) a default cache is used.
E 7
I 6
.TP
psize
The recno access method stores the in-memory copies of its records
in a btree.
This value is the size (in bytes) of the pages used for nodes in that tree.
I 7
If
.I psize
is 0 (no page size is specified) a page size is chosen based on the
underlying file system I/O block size.
E 7
See
.IR btree (3)
for more information.
.TP
bfname
The recno access method stores the in-memory copies of its records
in a btree.
If bfname is non-NULL, it specifies the name of the btree file,
as if specified as the file name for a dbopen of a btree file.
E 6
.TP
E 9
flags
The flag value is specified by
.IR or 'ing
any of the following values:
.RS
.TP
R_FIXEDLEN
The records are fixed-length, not byte delimited.
The structure element
.I reclen
specifies the length of the record, and the structure element
.I bval
is used as the pad character.
.TP
R_NOKEY
In the interface specified by
.IR dbopen ,
the sequential record retrieval fills in both the caller's key and
data structures.
If the R_NOKEY flag is specified, the
.I cursor
routines are not required to fill in the key structure.
This permits applications to retrieve records at the end of files without
reading all of the intervening records.
.TP
R_SNAPSHOT
This flag requires that a snapshot of the file be taken when
.I dbopen
is called, instead of permitting any unmodified records to be read from
the original file.
.RE
.TP
I 9
cachesize
A suggested maximum size, in bytes, of the memory cache.
This value is
.B only
advisory, and the access method will allocate more memory rather than fail.
If
.I cachesize
is  0 (no size is specified) a default cache is used.
.TP
psize
The recno access method stores the in-memory copies of its records
in a btree.
This value is the size (in bytes) of the pages used for nodes in that tree.
If
.I psize
is 0 (no page size is specified) a page size is chosen based on the
underlying file system I/O block size.
See
.IR btree (3)
for more information.
.TP
E 9
lorder
The byte order for integers in the stored database metadata.
The number should represent the order as an integer; for example,
big endian order would be the number 4,321.
If
.I lorder
is 0 (no order is specified) the current host order is used.
.TP
reclen
The length of a fixed-length record.
I 9
.TP
bval
The delimiting byte to be used to mark the end of a record for
variable-length records, and the pad character for fixed-length
records.
If no value is specified, newlines (``\en'') are used to mark the end
of variable-length records and fixed-length records are padded with
spaces.
.TP
bfname
The recno access method stores the in-memory copies of its records
in a btree.
If bfname is non-NULL, it specifies the name of the btree file,
as if specified as the file name for a dbopen of a btree file.
E 9
.PP
I 2
The data part of the key/data pair used by the recno access method
is the same as other access methods.
The key is different.
The
.I data
field of the key should be a pointer to a memory location of type
.IR recno_t ,
as defined in the <db.h> include file.
This type is normally the largest unsigned integral type available to
the implementation.
The
.I size
field of the key should be the size of that type.
.PP
E 2
In the interface specified by
.IR dbopen ,
using the
.I put
D 3
interface to create a new record may cause the creation of multiple,
E 3
I 3
interface to create a new record will cause the creation of multiple,
E 3
empty records if the record number is more than one greater than the
largest record currently in the database.
.SH "SEE ALSO"
.IR dbopen (3),
.IR hash (3),
.IR mpool (3),
.IR recno (3)
D 2
.br
E 2
I 2
.sp
E 2
.IR "Document Processing in a Relational Database System" ,
Michael Stonebraker, Heidi Stettner, Joseph Kalash, Antonin Guttman,
Nadene Lynn, Memorandum No. UCB/ERL M82/32, May 1982.
.SH BUGS
Only big and little endian byte order is supported.
E 1
