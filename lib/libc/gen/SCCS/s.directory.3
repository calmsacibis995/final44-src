h30705
s 00002/00002/00155
d D 8.1 93/06/04 12:01:15 bostic 11 10
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00001/00156
d D 6.9 93/05/15 15:39:42 bostic 10 9
c readdir returns a struct dirent *, now
e
s 00001/00001/00156
d D 6.8 93/01/16 12:37:05 bostic 9 8
c simplify the readdir loop (from Marc)
e
s 00117/00085/00040
d D 6.7 91/04/19 14:49:59 cael 8 7
c macro and text revision (-mdoc version 3)
e
s 00001/00011/00124
d D 6.6 90/06/23 17:56:43 trent 7 6
c new copyright notice
e
s 00044/00073/00091
d D 6.5 90/05/25 17:54:44 bostic 6 5
c closedir now returns value (POSIX); some manual page restructuring
e
s 00013/00002/00151
d D 6.4 88/08/03 11:38:18 bostic 5 4
c add Berkeley specific copyright notices
e
s 00012/00001/00141
d D 6.3 86/12/22 11:46:52 bostic 4 3
c document macro dirfd; bug report 4.1BSD/sys/31
e
s 00001/00000/00141
d D 6.2 85/09/24 16:02:13 bloom 3 2
c fix format
e
s 00002/00001/00139
d D 6.1 85/05/15 16:16:12 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00140/00000/00000
d D 5.1 85/05/15 16:16:03 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 8
.\" Copyright (c) 1983 Regents of the University of California.
E 8
I 8
D 11
.\" Copyright (c) 1983, 1991 Regents of the University of California.
E 8
D 5
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
.\" All rights reserved.
E 11
I 11
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 11
.\"
D 7
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 7
I 7
.\" %sccs.include.redist.man%
E 7
E 5
.\"
D 8
.\"	%W% (Berkeley) %G%
E 8
I 8
.\"     %W% (Berkeley) %G%
E 8
.\"
D 2
.TH DIRECTORY 3 "25 February 1983"
E 2
I 2
D 8
.TH DIRECTORY 3 "%Q%"
E 2
.UC 5
.SH NAME
D 4
opendir, readdir, telldir, seekdir, rewinddir, closedir \- directory operations
E 4
I 4
opendir, readdir, telldir, seekdir, rewinddir, closedir, dirfd \- directory operations
E 4
.SH SYNOPSIS
I 2
D 6
.B #include <sys/types.h>
I 3
.br
E 3
E 2
.B #include <sys/dir.h>
.PP
.SM
.B DIR
.B *opendir(filename)
.br
.B char *filename;
.PP
.B struct direct
.B *readdir(dirp)
.br
.SM
.B DIR
.B *dirp;
.PP
.B long
.B telldir(dirp)
.br
.SM
.B DIR
.B *dirp;
.PP
.B seekdir(dirp, loc)
.br
.SM
.B DIR
.B *dirp;
.br
.B long loc;
.PP
.B rewinddir(dirp)
.br
.SM
.B DIR
.B *dirp;
.PP
.B closedir(dirp)
.br
.SM
.B DIR
.B *dirp;
I 4
.PP
.B dirfd(dirp)
.br
.SM
.B DIR
.B *dirp;
E 6
I 6
.nf
.ft B
#include <sys/types.h>
#include <dirent.h>

DIR *
opendir(const char *filename);

struct direct
*readdir(DIR * dirp);

long
telldir(const DIR *dirp);

void
seekdir(DIR *dirp, long loc);

void
rewinddir(DIR *dirp);

int
closedir(DIR *dirp);

int
dirfd(DIR *dirp)
.ft R
.fi
E 6
E 4
.SH DESCRIPTION
.I Opendir
E 8
I 8
.Dd %Q%
.Dt DIRECTORY 3
.Os BSD 4.2
.Sh NAME
.Nm opendir ,
.Nm readdir ,
.Nm telldir ,
.Nm seekdir ,
.Nm rewinddir ,
.Nm closedir ,
.Nm dirfd
.Nd directory operations
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <dirent.h>
.Ft DIR *
.Fn opendir "const char *filename"
D 10
.Ft struct direct
E 10
I 10
.Ft struct dirent *
E 10
.Fn readdir "DIR *dirp"
.Ft long
.Fn telldir "const DIR *dirp"
.Ft void
.Fn seekdir "DIR *dirp" "long  loc"
.Ft void
.Fn rewinddir "DIR *dirp"
.Ft int
.Fn closedir "DIR *dirp"
.Ft int
.Fn dirfd "DIR *dirp"
.Sh DESCRIPTION
The
.Fn opendir
function
E 8
opens the directory named by
D 8
.I filename
and associates a
.I directory stream
with it.
.I Opendir
E 8
I 8
.Fa filename ,
associates a
.Em directory stream
with it
and
E 8
returns a pointer to be used to identify the
D 8
.I directory stream
E 8
I 8
.Em directory stream
E 8
in subsequent operations.  The pointer
D 8
.SM
.B NULL
E 8
I 8
.Dv NULL
E 8
is returned if
D 8
.I filename
E 8
I 8
.Fa filename
E 8
cannot be accessed, or if it cannot
D 8
.IR malloc (3)
E 8
I 8
.Xr malloc 3
E 8
enough memory to hold the whole thing.
D 8
.PP
.I Readdir
E 8
I 8
.Pp
The
.Fn readdir
function
E 8
returns a pointer to the next directory entry.  It returns
D 8
.B NULL
E 8
I 8
.Dv NULL
E 8
upon reaching the end of the directory or detecting an invalid
D 8
.I seekdir
E 8
I 8
.Fn seekdir
E 8
operation.
D 8
.PP
.I Telldir
E 8
I 8
.Pp
The
.Fn telldir
function
E 8
returns the current location associated with the named
D 8
.I directory stream.
.PP
.I Seekdir
E 8
I 8
.Em directory stream .
.Pp
The
.Fn seekdir
function
E 8
sets the position of the next
D 8
.I readdir
E 8
I 8
.Fn readdir
E 8
operation on the
D 8
.I directory stream.
E 8
I 8
.Em directory stream .
E 8
The new position reverts to the one associated with the
D 8
.I directory stream
E 8
I 8
.Em directory stream
E 8
when the
D 8
.I telldir
E 8
I 8
.Fn telldir
E 8
operation was performed.  Values returned by
D 8
.I telldir
are good only for the lifetime of the DIR pointer from which they are derived.
E 8
I 8
.Fn telldir
are good only for the lifetime of the
.Dv DIR
pointer,
.Fa dirp ,
from which they are derived.
E 8
If the directory is closed and then reopened, the 
D 8
.I telldir
E 8
I 8
.Fn telldir
E 8
value may be invalidated due to undetected directory compaction.
It is safe to use a previous
D 8
.I telldir
E 8
I 8
.Fn telldir
E 8
value immediately after a call to
D 8
.I opendir
E 8
I 8
.Fn opendir
E 8
and before any calls to
D 8
.I readdir.
.PP
.I Rewinddir
E 8
I 8
.Fn readdir .
.Pp
The
.Fn rewinddir
function
E 8
resets the position of the named
D 8
.I directory stream
E 8
I 8
.Em directory stream
E 8
to the beginning of the directory.
D 8
.PP
.I Closedir
E 8
I 8
.Pp
The
.Fn closedir
function
E 8
closes the named
D 8
.I directory stream
D 6
and frees the structure associated with the DIR pointer.
E 6
I 6
and frees the structure associated with the DIR pointer,
E 8
I 8
.Em directory stream
and frees the structure associated with the
.Fa dirp
pointer,
E 8
returning 0 on success.
D 8
On failure, -1 is returned and errno is set to indicate the error.
E 6
I 4
.PP
.I Dirfd
E 8
I 8
On failure, \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Pp
The
.Fn dirfd
function
E 8
returns the integer file descriptor associated with the named
D 8
.I directory stream,
see open(2).
E 4
.PP
E 8
I 8
.Em directory stream ,
see
.Xr open 2 .
.Pp
E 8
Sample code which searchs a directory for entry ``name'' is:
D 8
.PP
D 6
.br
	len = strlen(name);
.br
	dirp = opendir(".");
.br
	for (dp = readdir(dirp); dp != NULL; dp = readdir(dirp))
.br
		if (dp->d_namlen == len && !strcmp(dp->d_name, name)) {
.br
			closedir(dirp);
.br
			return FOUND;
.br
		}
.br
	closedir(dirp);
.br
	return NOT_FOUND;
E 6
I 6
.nf
.RS
E 8
I 8
.Bd -literal -offset indent
E 8
len = strlen(name);
dirp = opendir(".");
D 9
for (dp = readdir(dirp); dp != NULL; dp = readdir(dirp))
E 9
I 9
while ((dp = readdir(dirp)) != NULL)
E 9
	if (dp->d_namlen == len && !strcmp(dp->d_name, name)) {
		(void)closedir(dirp);
		return FOUND;
	}
(void)closedir(dirp);
return NOT_FOUND;
D 8
.RE
.fi
E 6
.SH "SEE ALSO"
D 6
open(2),
close(2),
read(2),
lseek(2),
dir(5)
E 6
I 6
open(2), close(2), read(2), lseek(2), dir(5)
E 8
I 8
.Ed
.Sh SEE ALSO
.Xr open 2 ,
.Xr close 2 ,
.Xr read 2 ,
.Xr lseek 2 ,
.Xr dir 5
.Sh HISTORY
The
.Fn opendir ,
.Fn readdir ,
.Fn telldir ,
.Fn seekdir ,
.Fn rewinddir ,
.Fn closedir ,
and
.Fn dirfd
functions appeared in
.Bx 4.2 .
E 8
E 6
E 1
