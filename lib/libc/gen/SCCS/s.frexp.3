h37776
s 00002/00002/00057
d D 8.1 93/06/04 12:01:47 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00004/00000/00055
d D 6.5 91/06/29 14:28:07 bostic 7 6
c add ANSI contribution notice
e
s 00054/00036/00001
d D 6.4 91/04/19 14:49:02 cael 6 5
c macro and text revision (-mdoc version 3)
e
s 00016/00024/00021
d D 6.3 87/04/13 16:19:12 bostic 5 4
c bug report 4.2BSD/lib/10, 4.2BSD/lib/11, 4.2BSD/usr.lib/8
e
s 00004/00002/00041
d D 6.2 87/04/13 11:38:53 bostic 4 3
c bug report 4.2BSD/man/26
e
s 00001/00001/00042
d D 6.1 85/05/15 14:57:27 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00001/00001/00042
d D 5.1 85/05/15 14:57:19 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00043/00000/00000
d D 4.1 85/05/15 14:57:09 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
D 8
.\" Copyright (c) 1991 The Regents of the University of California.
.\" All rights reserved.
E 8
I 8
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 8
E 6
.\"
I 7
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
E 7
D 2
.TH FREXP 3
E 2
I 2
D 3
.TH FREXP 3 "19 January 1983"
E 3
I 3
D 6
.TH FREXP 3 "%Q%"
E 3
E 2
.AT 3
.SH NAME
frexp, ldexp, modf \- split into mantissa and exponent
.SH SYNOPSIS
.nf
.B double frexp(value, eptr)
.B double value;
.B int *eptr;
.PP
.B double ldexp(value, exp)
.B double value;
.PP
.B double modf(value, iptr)
.B double value, *iptr;
.SH DESCRIPTION
D 5
.I Frexp
returns the mantissa of a double 
.I value
as a double quantity,
.I x,
of magnitude less than 1
and stores an integer 
.I n
such that
.I value
=
D 4
\fIx\fP\|\(**\|2\u\fIn\fP\d
E 4
I 4
.if t \fIx\fP\|\(**\|2\u\fIn\fP\d
.if n \fIx\fP * 2 ** \fIn\fP
E 4
indirectly through 
.I eptr.
E 5
I 5
Every nonzero number can be written uniquely as
.if t \fIx\fP\|\(**\|2\u\fIn\fP\d,
.if n \fIx\fP * 2^\fIn\fP,
where the ``mantissa'' (fraction) \fIx\fP is in the range 0.5 <= |x| < 1.0,
and the ``exponent'' \fIn\fP is an integer.  \fIFrexp\fP returns the
mantissa of a double \fIvalue\fP, and stores the exponent indirectly in
the location pointed to by \fIeptr\fP.  If \fIvalue\fP is 0, both results
returned by \fIfrexp\fP are 0.
E 5
.PP
D 5
.I Ldexp
returns the quantity
E 5
I 5
\fILdexp\fP returns the quantity
E 5
D 4
\fIvalue\|\(**\|2\u\fIexp\fP\d.
E 4
I 4
.if t \fIvalue\|\(**\|2\u\fIexp\fP\d.
D 5
.if n \fIvalue\fP * 2 ** \fIexp\fP.
E 5
I 5
.if n \fIvalue\fP * 2^\fIexp\fP.
E 5
E 4
.PP
D 5
.I Modf
returns the positive fractional part of
.I value
and stores the integer part indirectly
through 
.I iptr.
E 5
I 5
\fIModf\fP returns the signed fractional part of \fIvalue\fP
and stores the integer part indirectly in the location pointed
to by \fIiptr\fP.
.SH DIAGNOSTICS
If \fIldexp\fP would cause overflow, \fBHUGE\fP is returned
and \fIerrno\fP is set to \fBERANGE\fP.
E 6
I 6
.\" %sccs.include.redist.man%
.\"
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt FREXP 3
.Os
.Sh NAME
.Nm frexp
.Nd convert floating-point number to fractional and integral components
.Sh SYNOPSIS
.Fd #include <math.h>
.Ft double
.Fn frexp "double value" "int *exp"
.Sh DESCRIPTION
The
.Fn frexp
function breaks a floating-point number into a normalized
fraction and an integral power of 2.
It stores the integer in the
.Em int
object pointed to by
.Fa exp .
.Sh RETURN VALUES
The
.Fn frexp
function returns the value
.Em x ,
such that
.Em x
is a 
.Em double
with magnitude in the interval
.Bq 1/2 , 1
or zero, and
.Fa value
equals
.Em x
times 2 raised to the power
.Fa *exp .
If
.Fa value
is zero, both parts of the result are zero. 
.Sh SEE ALSO
.Xr ldexp 3 ,
.Xr modf 3 ,
.Xr math 3
.Sh STANDARDS
The
.Fn frexp
function conforms to
.St -ansiC .
E 6
E 5
E 1
