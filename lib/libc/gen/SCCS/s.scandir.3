h58409
s 00002/00002/00078
d D 8.1 93/06/04 12:04:45 bostic 10 9
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00051/00043/00029
d D 6.8 91/04/19 14:49:29 cael 9 8
c macro and text revision (-mdoc version 3)
e
s 00001/00001/00071
d D 6.7 90/09/24 13:04:21 bostic 8 7
c scandir takes struct dirent's now, not struct direct's.
e
s 00019/00020/00053
d D 6.6 90/06/24 12:10:45 bostic 7 6
c alphasort takes two void *'s, since it's called from qsort(3);
c minor cleanups as well
e
s 00001/00011/00072
d D 6.5 90/06/23 17:55:49 trent 6 5
c new copyright notice
e
s 00004/00003/00079
d D 6.4 90/06/23 16:42:15 bostic 5 4
c syntactic sugar...
e
s 00013/00002/00069
d D 6.3 88/08/03 11:38:20 bostic 4 3
c add Berkeley specific copyright notices
e
s 00001/00001/00070
d D 6.2 85/09/17 23:58:00 lepreau 3 2
c add alphasort to NAME line
e
s 00001/00001/00070
d D 6.1 85/05/15 16:28:50 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00071/00000/00000
d D 5.1 85/05/15 16:28:43 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 9
.\" Copyright (c) 1983 Regents of the University of California.
E 9
I 9
D 10
.\" Copyright (c) 1983, 1991 Regents of the University of California.
E 9
D 4
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 4
I 4
.\" All rights reserved.
E 10
I 10
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 10
.\"
D 6
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 6
I 6
.\" %sccs.include.redist.man%
E 6
E 4
.\"
D 9
.\"	%W% (Berkeley) %G%
E 9
I 9
.\"     %W% (Berkeley) %G%
E 9
.\"
D 2
.TH SCANDIR 3  "19 January 1983"
E 2
I 2
D 9
.TH SCANDIR 3  "%Q%"
E 2
.UC 5
.SH NAME
D 3
scandir \- scan a directory
E 3
I 3
scandir, alphasort \- scan a directory
E 3
.SH SYNOPSIS
.nf
D 7
.B #include <sys/types.h>
.B #include <sys/dir.h>
.PP
.B scandir(dirname, namelist, select, compar)
.B char *dirname;
D 5
.B struct direct *(*namelist[]);
E 5
I 5
.B struct direct ***namelist;
E 5
.B int (*select)();
.B int (*compar)();
.PP
.B alphasort(d1, d2)
.B struct direct **d1, **d2;
E 7
I 7
.ft B
#include <sys/types.h>
#include <dirent.h>

scandir(dirname, namelist, select, compar)
char *dirname;
D 8
struct direct ***namelist;
E 8
I 8
struct dirent ***namelist;
E 8
int (*select)();
int (*compar)();

alphasort(d1, d2)
void *d1, *d2;
.ft R
E 7
.fi
.SH DESCRIPTION
.I Scandir
E 9
I 9
.Dd %Q%
.Dt SCANDIR 3
.Os BSD 4.2
.Sh NAME
.Nm scandir ,
.Nm alphasort
.Nd scan a directory
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <dirent.h>
.Ft int
.Fn scandir "const char *dirname" "struct dirent ***namelist" "int \\*(lp*select\\*(rp\\*(lpstruct dirent *\\*(rp" "int \\*(lp*compar\\*(rp\\*(lpconst void *, const void *\\*(rp"
.Ft int
.Fn alphasort "const void *d1" "const void *d2"
.Sh DESCRIPTION
The
.Fn scandir
function
E 9
reads the directory
D 9
.I dirname
E 9
I 9
.Fa dirname
E 9
and builds an array of pointers to directory
entries using
D 9
.IR malloc (3).
E 9
I 9
.Xr malloc 3 .
E 9
D 5
It returns the number of entries in the array and a pointer to the
array through
E 5
I 5
It returns the number of entries in the array.
A pointer to the array of directory entries is stored in the location
referenced by
E 5
D 9
.IR namelist .
.PP
E 9
I 9
.Fa namelist .
.Pp
E 9
The
D 9
.I select
E 9
I 9
.Fa select
E 9
parameter is a pointer to a user supplied subroutine which is called by
D 9
.I scandir
E 9
I 9
.Fn scandir
E 9
to select which entries are to be included in the array.
The select routine is passed a
pointer to a directory entry and should return a non-zero
value if the directory entry is to be included in the array.
If
D 9
.I select
E 9
I 9
.Fa select
E 9
is null, then all the directory entries will be included.
D 9
.PP
E 9
I 9
.Pp
E 9
The
D 9
.I compar
E 9
I 9
.Fa compar
E 9
parameter is a pointer to a user supplied subroutine which is passed to
D 9
.IR qsort (3)
E 9
I 9
.Xr qsort 3
E 9
D 7
to sort the completed array. If this pointer is null, the array is not sorted.
E 7
I 7
to sort the completed array.
If this pointer is null, the array is not sorted.
D 9
.PP
E 7
.I Alphasort
E 9
I 9
.Pp
The
.Fn alphasort
function
E 9
is a routine which can be used for the
D 9
.I compar
E 9
I 9
.Fa compar
E 9
parameter to sort the array alphabetically.
D 9
.PP
E 9
I 9
.Pp
E 9
The memory allocated for the array can be deallocated with
D 7
.I free
(see
.IR malloc (3))
by freeing each pointer in the array and the array itself.
E 7
I 7
D 9
.IR free (3),
E 9
I 9
.Xr free 3 ,
E 9
by freeing each pointer in the array and then the array itself.
E 7
D 9
.SH "SEE ALSO"
D 7
directory(3),
malloc(3),
qsort(3),
dir(5)
E 7
I 7
directory(3), malloc(3), qsort(3), dir(5)
E 7
.SH DIAGNOSTICS
E 9
I 9
.Sh DIAGNOSTICS
E 9
Returns \-1 if the directory cannot be opened for reading or if
D 9
.IR malloc (3)
E 9
I 9
.Xr malloc 3
E 9
cannot allocate enough memory to hold all the data structures.
I 9
.Sh SEE ALSO
.Xr directory 3 ,
.Xr malloc 3 ,
.Xr qsort 3 ,
.Xr dir 5
.Sh HISTORY
The
.Fn scandir
and
.Fn alphasort
functions appeared in 
.Bx 4.2 .
E 9
E 1
