h23172
s 00001/00001/00077
d D 8.2 95/04/28 14:40:15 bostic 8 7
c void *, not void; From: Craig Leres <leres@ee.lbl.gov>
e
s 00002/00002/00076
d D 8.1 93/06/09 18:31:14 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00002/00077
d D 5.5 93/06/09 18:31:08 bostic 6 4
c fixed "Under development" line
e
s 00002/00002/00077
d R 8.1 93/06/04 12:05:02 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00054/00040/00025
d D 5.4 91/04/19 14:50:05 cael 4 3
c macro and text revision (-mdoc version 3)
e
s 00001/00011/00064
d D 5.3 90/06/23 17:56:03 trent 3 2
c new copyright notice
e
s 00017/00018/00058
d D 5.2 90/04/16 14:01:50 bostic 2 1
c might as well handle threads from the start
e
s 00076/00000/00000
d D 5.1 90/02/01 22:00:29 bostic 1 0
c date and time created 90/02/01 22:00:29 by bostic
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1989 The Regents of the University of California.
E 4
I 4
D 7
.\" Copyright (c) 1989, 1991 The Regents of the University of California.
E 4
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
.\"
D 3
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 3
I 3
.\" %sccs.include.redist.man%
E 3
.\"
D 4
.\"	%W% (Berkeley) %G%
E 4
I 4
.\"     %W% (Berkeley) %G%
E 4
.\"
D 4
.TH SETMODE 3 "%Q%"
.UC 7
.SH NAME
getmode, setmode \- modify mode bits
.SH SYNOPSIS
.nf
.ft B
D 2
getmode(mode)
mode_t mode;
E 2
I 2
getmode(set, mode)
mode_t *set, mode;
E 2

D 2
setmode(mode_str)
E 2
I 2
set = setmode(mode_str)
mode_t *set;
E 2
char *mode_str;
.ft R
.fi
.SH DESCRIPTION
.I Getmode
E 4
I 4
.Dd %Q%
.Dt SETMODE 3
.Os
.Sh NAME
.Nm getmode ,
.Nm setmode
.Nd modify mode bits
.Sh SYNOPSIS
.Ft mode_t
.Fn getmode "const void *set" "mode_t mode"
D 8
.Ft void
E 8
I 8
.Ft void *
E 8
.Fn setmode "const char *mode_str"
.Sh DESCRIPTION
The
.Fn getmode
function
E 4
D 2
returns the file permission bits
E 2
I 2
returns a copy of the file permission bits
E 2
D 4
.I mode
E 4
I 4
.Fa mode
E 4
D 2
as altered by the string specified to
.IR setmode .
E 2
I 2
as altered by the values pointed to by
D 4
.IR set .
E 4
I 4
.Fa set .
E 4
E 2
While only the mode bits are altered, other parts of the file mode
may be examined.
D 4
.PP
.I Setmode
E 4
I 4
.Pp
The
.Fn setmode
function
E 4
takes an absolute (octal) or symbolic value, as described in
D 4
.IR chmod (1),
E 4
I 4
.Xr chmod 1 ,
E 4
D 2
as an argument.
E 2
I 2
as an argument
and returns a pointer to mode values to be supplied to
D 4
.IR getmode .
E 4
I 4
.Fn getmode .
E 4
E 2
Because some of the symbolic values are relative to the file
creation mask,
D 4
.I setmode
E 4
I 4
.Fn setmode
E 4
may call
D 4
.IR umask (2).
E 4
I 4
.Xr umask 2 .
E 4
If this occurs, the file creation mask will be restored before
D 4
.I setmode
E 4
I 4
.Fn setmode
E 4
returns.
If the calling program changes the value of its file creation mask
after calling
D 4
.IR setmode ,
.I setmode
E 4
I 4
.Fn setmode ,
.Fn setmode
E 4
must be called again if
D 4
.I getmode
E 4
I 4
.Fn getmode
E 4
is to modify future file modes correctly.
D 4
.PP
E 4
I 4
.Pp
E 4
If the mode passed to
D 4
.I setmode
E 4
I 4
.Fn setmode
E 4
D 2
is valid,
E 2
I 2
is invalid,
E 2
D 4
.I setmode
D 2
returns 0; otherwise it returns -1.
E 2
I 2
returns NULL.
E 2
.SH ERRORS
D 2
Neither
.I getmode
or
.I setmode
set the external variable
.IR errno .
.SH ENVIRONMENT
E 2
I 2
.I Setmode
E 4
I 4
.Fn setmode
returns
.Dv NULL . 
.Sh ERRORS
The
.Fn setmode
function
E 4
may fail and set errno for any of the errors specified for the library
routine
D 4
.IR malloc (3).
E 2
.SH SEE ALSO
D 2
chmod(1), stat(2), umask(2)
.SH STANDARDS
E 2
I 2
chmod(1), stat(2), umask(2), malloc(3)
E 4
I 4
.Xr malloc 3 .
.Sh SEE ALSO
.Xr chmod 1 ,
.Xr stat 2 ,
.Xr umask 2 ,
.Xr malloc 3
.Sh HISTORY
The
.Fn getmode
and
.Fn setmode
D 6
functions are
.Ud .
E 6
I 6
functions first appeared in 4.4BSD.
E 6
E 4
E 2
E 1
