h31424
s 00002/00002/00055
d D 8.1 93/06/04 12:05:31 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00001/00056
d D 6.5 93/05/22 10:50:55 bostic 7 6
c sleep(3) returns a u_int
e
s 00000/00000/00057
d D 6.4 91/07/31 19:56:20 cael 6 5
c reposition display
e
s 00055/00030/00002
d D 6.3 91/04/19 14:48:46 cael 5 4
c macro and text revision (-mdoc version 3)
e
s 00001/00003/00031
d D 6.2 86/05/12 20:02:16 karels 4 3
c ualarm
e
s 00001/00001/00033
d D 6.1 85/05/15 15:49:46 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00008/00005/00026
d D 5.1 85/05/15 15:49:32 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00031/00000/00000
d D 4.1 85/05/15 15:49:18 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 8
.\" Copyright (c) 1986, 1991 Regents of the University of California.
.\" All rights reserved.
E 8
I 8
.\" Copyright (c) 1986, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 8
E 5
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
.\" %sccs.include.redist.man%
E 5
.\"
D 2
.TH SLEEP 3 
E 2
I 2
D 3
.TH SLEEP 3  "19 January 1983"
E 3
I 3
D 5
.TH SLEEP 3  "%Q%"
E 3
E 2
.UC 4
.SH NAME
sleep \- suspend execution for interval
.SH SYNOPSIS
.nf
.B sleep(seconds)
.B unsigned seconds;
.fi
.SH DESCRIPTION
The current process is suspended from execution for the number
of seconds specified by the argument.
The actual suspension time may be up to 1 second less than
that requested, because scheduled wakeups occur at fixed 1-second intervals,
and an arbitrary amount longer because of other activity
in the system.
.PP
D 2
The routine is implemented by setting an alarm clock signal
E 2
I 2
The routine is implemented by setting an interval timer
E 2
and pausing until it occurs.
D 2
The previous state of this signal is saved and restored.
If the sleep time exceeds the time to the alarm signal,
E 2
I 2
The previous state of this timer is saved and restored.
If the sleep time exceeds the time to the expiration of the
previous timer,
E 2
the process sleeps only until the signal would have occurred, and the
signal is sent 1 second later.
.SH "SEE ALSO"
D 2
alarm(2), pause(2)
E 2
I 2
D 4
setitimer(2), sigpause(2)
.SH BUGS
An interface with finer resolution is needed.
E 4
I 4
setitimer(2), sigpause(2), usleep(3)
E 5
I 5
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt SLEEP 3
.Os
.Sh NAME
.Nm sleep
.Nd suspend process execution for interval of seconds
.Sh SYNOPSIS
.Fd #include <unistd.h>
D 7
.Ft int
E 7
I 7
.Ft u_int
E 7
.Fn sleep "u_int seconds"
.Sh DESCRIPTION
The
.Fn sleep
function
suspends execution of the calling process
for
.Fa seconds
of time.
System activity or time spent in processing the
call may lengthen the sleep by a second.
.Pp
If a timer is already running on the process its state is saved.
If the value
.Fa seconds
is more than or equal to the remaining clock time for the saved timer,
the sleep time is set to
the remaining clock time.
The state of the previous timer
is restored after
.Fa seconds
has passed.
.Pp
This function is implemented using
.Xr setitimer 2 ;
it requires eight system calls each time it is invoked.
A similar but less compatible function can be obtained with a single
.Xr select 2 ;
such a function would not restart after signals, but would not interfere
with other uses of
.Xr setitimer .
.Sh RETURN VALUES
.Sh SEE ALSO
.Xr setitimer 2 ,
.Xr sigpause 2 ,
.Xr usleep 3
.Sh HISTORY
A
.Fn sleep
function appeared in
.At v7 .
E 5
E 4
E 2
E 1
