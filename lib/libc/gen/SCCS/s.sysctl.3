h64846
s 00018/00003/00626
d D 8.4 95/05/09 16:52:53 mckusick 15 14
c add information about CTL_VFS
e
s 00001/00001/00628
d D 8.3 95/05/03 16:45:02 mckusick 14 13
c correctly describe return value
e
s 00005/00000/00624
d D 8.2 94/06/01 21:22:45 ah 13 12
c page breaks for 4.4BSD manuals
e
s 00002/00002/00622
d D 8.1 93/06/04 12:05:44 bostic 12 11
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00007/00003/00617
d D 6.11 93/05/26 00:25:42 mckusick 11 10
c add some info about CTL_MACHDEP
e
s 00000/00006/00620
d D 6.10 93/05/24 15:26:26 bostic 10 9
c per-process limits are resources, not sysctl(3) variables
e
s 00001/00001/00625
d D 6.9 93/05/24 11:24:11 bostic 9 8
c MAX_INPUT is a min/max
e
s 00020/00004/00606
d D 6.8 93/05/24 10:58:45 bostic 8 7
c add KERN_MAXUFILES, KERN_MAXUPROC, USER_STREAM_MAX, USER_TZNAME_MAX
e
s 00006/00000/00604
d D 6.7 93/05/20 17:52:12 mckusick 7 6
c add KERN_BOOTTIME
e
s 00011/00005/00593
d D 6.6 93/05/14 15:14:11 mckusick 6 5
c refinements of INET definitions from Mike
e
s 00179/00084/00419
d D 6.5 93/05/12 18:11:46 mckusick 5 4
c add debug, net.inet, and profiling info; many small cleanups
e
s 00384/00137/00119
d D 6.4 93/05/10 12:23:21 bostic 4 3
c sysctl has been generalized to contain non-kernel information
c add all of the POSIX 1003.1 and 1003.2 variables, document everything
e
s 00143/00022/00113
d D 6.3 93/03/05 19:16:56 mckusick 3 2
c update to reflect merger of getkerninfo functionality
e
s 00004/00003/00131
d D 6.2 93/03/04 17:54:23 bostic 2 1
c change buffer lengths of sysctl(2) to be size_t's
e
s 00134/00000/00000
d D 6.1 93/03/02 23:26:13 mckusick 1 0
c date and time created 93/03/02 23:26:13 by mckusick
e
u
U
t
T
I 1
D 12
.\" Copyright (c) 1993 The Regents of the University of California.
.\" All rights reserved.
E 12
I 12
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
E 12
.\"
.\" %sccs.include.redist.roff%
.\"
.\"	%W% (Berkeley) %G%
.\"
.Dd "%Q%"
D 4
.Dt SYSCTL 2
E 4
I 4
.Dt SYSCTL 3
E 4
.Os
.Sh NAME
.Nm sysctl
D 4
.Nd get or set kernel state
E 4
I 4
.Nd get or set system information
E 4
.Sh SYNOPSIS
.Fd #include <sys/sysctl.h>
.Ft int
D 2
.Fn sysctl "int *name" "u_int namelen" "void *old" "u_int *oldlenp" "void *new" "u_int newlen"
E 2
I 2
D 4
.Fn sysctl "int *name" "u_int namelen" "void *old" "size_t *oldlenp" "void *new" "size_t newlen"
E 4
I 4
.Fn sysctl "int *name" "u_int namelen" "void *oldp" "size_t *oldlenp" "void *newp" "size_t newlen"
E 4
E 2
.Sh DESCRIPTION
The
D 4
.Fn sysctl
function retrieves kernel state and allows processes with
appropriate privilege to set kernel state.
D 3
The state to be set is described using a ``MIB'' style name,
E 3
I 3
The state to be set is described using a
``Management Information Base'' (MIB) style name,
E 3
described in a
E 4
I 4
.Nm sysctl
function retrieves system information and allows processes with
appropriate privileges to set system information.
The information available from
.Nm sysctl
consists of integers, strings, and tables.
D 5
Unless explicitly noted below,
.Nm sysctl
returns a consistent snapshot of the data requested
E 5
Information may be retrieved and set from the command interface
using the 
.Xr sysctl 1
utility.
.Pp
I 5
Unless explicitly noted below,
.Nm sysctl
returns a consistent snapshot of the data requested.
Consistency is obtained by locking the destination
buffer into memory so that the data may be copied out without blocking.
Calls to
.Nm sysctl
are serialized to avoid deadlock.
.Pp
E 5
The state is described using a ``Management Information Base'' (MIB)
style name, listed in
.Fa name ,
which is a
E 4
.Fa namelen
D 4
length array of integers pointed to by
.Fa name .
The top level names are defined with a CTL_ prefix in
.Pa <sys/sysctl.h> .
The next levels down are found in the files given in the ``FILES''
section of this manual page.
E 4
I 4
length array of integers.
E 4
.Pp
D 3
To retrieve a value,
.Fa old
is set to point to a buffer
into which the requested value is to be placed.
The length of the buffer is given in the location pointed to by
.Fa oldlenp .
The size of the returned value is put in the location pointed to by
.Fa oldlenp .
The size of the requested value can be determined by calling 
.Fn sysctl
with a NULL parameter for
.Fa old ;
the size of the value will be returned in the location pointed to by
.Fa oldlenp .
E 3
I 3
The information is copied into the buffer specified by
D 4
.Fa old .
E 4
I 4
.Fa oldp .
E 4
The size of the buffer is given by the location specified by
.Fa oldlenp
before the call,
and that location gives the amount of data copied after a successful call.
If the amount of data available is greater
than the size of the buffer supplied,
the call supplies as much data as fits in the buffer provided
D 5
and returns with the error code EINVAL.
E 5
I 5
and returns with the error code ENOMEM.
E 5
E 3
If the old value is not desired,
D 4
.Fa old
E 4
I 4
.Fa oldp
E 4
and
.Fa oldlenp
D 4
can be set to NULL.
E 4
I 4
should be set to NULL.
E 4
.Pp
I 3
The size of the available data can be determined by calling 
D 4
.Fn sysctl
E 4
I 4
.Nm sysctl
E 4
with a NULL parameter for
D 4
.Fa old .
E 4
I 4
.Fa oldp .
E 4
D 5
The size of the available data be returned in the location pointed to by
E 5
I 5
The size of the available data will be returned in the location pointed to by
E 5
.Fa oldlenp .
D 5
For some operations, the amount of space may change often;
E 5
I 5
For some operations, the amount of space may change often.
For these operations,
E 5
the system attempts to round up so that the returned size is
large enough for a call to return the data shortly thereafter.
.Pp
E 3
To set a new value,
D 4
.Fa new
E 4
I 4
.Fa newp
E 4
is set to point to a buffer of length
.Fa newlen
from which the requested value is to be taken.
D 3
If the setting of a new value is not desired,
E 3
I 3
If a new value is not to be set,
E 3
D 4
.Fa new
E 4
I 4
.Fa newp
E 4
should be set to NULL and
.Fa newlen
set to 0.
.Pp
D 3
For example, to retrieve the maximum number of processes allowed
in the system, one would use the follow request:
.sp
E 3
I 3
D 4
The information available from
.Fn sysctl
consists of integers, strings, and tables.
The string and integer information is detailed below.
The changeable column shows whether a process with appropriate
privilege can change the value.
Changeable values may be retrieved and set using the 
.Xr sysctl 1
utility.
.Bl -column CTL_KERN/KERN_OSRELEASEXX "integerxx" -offset indent
.It Sy "Name  " "	Type  " "	Changeable"
.It Pa CTL_KERN/KERN_OSTYPE No "	string" No "	no"
.It Pa CTL_KERN/KERN_OSRELEASE No "	string" No "	no"
.It Pa CTL_KERN/KERN_VERSION No "	string" No "	no"
.It Pa CTL_KERN/KERN_OSREV No "	integer" No "	no"
.It Pa CTL_KERN/KERN_POSIX1 No "	integer" No "	no"
.It Pa CTL_KERN/KERN_MAXPROC No "	integer" No "	yes"
.It Pa CTL_KERN/KERN_MAXFILES No "	integer" No "	yes"
.It Pa CTL_KERN/KERN_ARGMAX No "	integer" No "	no"
.It Pa CTL_KERN/KERN_SECURELVL No "	integer" No "	raise only"
.It Pa CTL_KERN/KERN_HOSTNAME No "	string" No "	yes"
.It Pa CTL_KERN/KERN_HOSTID No "	integer" No "	yes"
.It Pa CTL_HW/HW_MACHINE No "	string" No "	no"
.It Pa CTL_HW/HW_MODEL No "	string" No "	no"
.It Pa CTL_HW/HW_NCPU No "	integer" No "	no"
.It Pa CTL_HW/HW_CPUSPEED No "	integer" No "	no"
.It Pa CTL_HW/HW_PHYSMEM No "	integer" No "	no"
.It Pa CTL_HW/HW_USERMEM No "	integer" No "	no"
.It Pa CTL_HW/HW_PAGESIZE No "	integer" No "	no"
E 4
I 4
The top level names are defined with a CTL_ prefix in
.Pa <sys/sysctl.h> ,
and are as follows.
The next and subsequent levels down are found in the include files
listed here, and described in separate sections below.
.Pp
D 5
.Bl -column CTLXMACHDEPXXX "Next level namesXXX" -offset indent
E 5
I 5
.Bl -column CTLXMACHDEPXXX "Next level namesXXXXXX" -offset indent
E 5
.It Sy Pa Name	Next level names	Description
.It CTL\_DEBUG	sys/sysctl.h	Debugging
D 15
.It CTL\_FS	sys/sysctl.h	File system
E 15
I 15
.It CTL\_VFS	sys/mount.h	Filesystem
E 15
.It CTL\_HW	sys/sysctl.h	Generic CPU, I/O
D 11
.It CTL\_KERN	sys/sysctl.h	High kernel: processes, limits
E 11
I 11
.It CTL\_KERN	sys/sysctl.h	High kernel limits
E 11
.It CTL\_MACHDEP	sys/sysctl.h	Machine dependent
.It CTL\_NET	sys/socket.h	Networking
.It CTL\_USER	sys/sysctl.h	User-level
.It CTL\_VM	vm/vm_param.h	Virtual memory
E 4
.El
.Pp
For example, the following retrieves the maximum number of processes allowed
in the system:
E 3
.Bd -literal -offset indent -compact
D 2
int name[2], len, maxproc;
E 2
I 2
D 4
int name[2], maxproc;
E 4
I 4
int mib[2], maxproc;
E 4
size_t len;
E 2
D 3

E 3
I 3
.sp
E 3
D 4
name[0] = CTL_KERN;
name[1] = KERN_MAXPROC;
E 4
I 4
mib[0] = CTL_KERN;
mib[1] = KERN_MAXPROC;
E 4
D 2
len = sizeof maxproc;
E 2
I 2
len = sizeof(maxproc);
E 2
D 4
sysctl(name, 2, &maxproc, &len, NULL, 0);
E 4
I 4
sysctl(mib, 2, &maxproc, &len, NULL, 0);
E 4
.Ed
I 4
.sp
To retrieve the standard search path for the system utilities:
.Bd -literal -offset indent -compact
int mib[2];
size_t len;
char *p;
.sp
mib[0] = CTL_USER;
mib[1] = USER_CS_PATH;
sysctl(mib, 2, NULL, &len, NULL, 0);
p = malloc(len);
sysctl(mib, 2, p, &len, NULL, 0);
.Ed
D 5
.Sh RETURN VALUES
If the call to
.Nm sysctl
is successful, 0 is returned.
Otherwise \-1 is returned and
.Va errno
is set appropriately.
E 5
.Sh CTL_DEBUG
D 5
There are currently no second level names for the debugging interface.
E 5
I 5
The debugging variables vary from system to system.
A debugging variable may be added or deleted without need to recompile
.Nm sysctl
to know about it.
Each time it runs,
.Nm sysctl
gets the list of debugging variables from the kernel and
displays their current values.
The system defines twenty 
.Ns ( Va struct ctldebug )
variables named 
.Nm debug0
through
.Nm debug19 .
They are declared as separate variables so that they can be
individually initialized at the location of their associated variable.
The loader prevents multiple use of the same variable by issuing errors
if a variable is initialized in more than one place.
For example, to export the variable
.Nm dospecialcheck
as a debugging variable, the following declaration would be used:
.Bd -literal -offset indent -compact
int dospecialcheck = 1;
struct ctldebug debug5 = { "dospecialcheck", &dospecialcheck };
.Ed
E 5
D 15
.Sh CTL_FS
There are currently no second level names for the file system.
E 15
I 15
.Sh CTL_VFS
A distinguished second level name, VFS_GENERIC,
is used to get general information about all filesystems.
One of its third level identifiers is VFS_MAXTYPENUM
that gives the highest valid filesystem type number.
Its other third level identifier is VFS_CONF that
returns configuration information about the filesystem
type given as a fourth level identifier (see
.Xr getvfsbyname 3
as an example of its use).
The remaining second level identifiers are the
filesystem type number returned by a
.Xr statfs 2
call or from VFS_CONF.
The third level identifiers available for each filesystem
are given in the header file that defines the mount
argument structure for that filesystem.
E 15
.Sh CTL_HW
D 5
The string and integer information available for the CTL_KERN level
E 5
I 5
The string and integer information available for the CTL_HW level
E 5
is detailed below.
The changeable column shows whether a process with appropriate
privilege may change the value.
D 5
.Bl -column "Second level nameXXX" integerXXX -offset indent
E 5
I 5
.Bl -column "Second level nameXXXXXX" integerXXX -offset indent
E 5
.It Sy Pa Second level name	Type	Changeable
.It HW\_MACHINE	string	no
.It HW\_MODEL	string	no
.It HW\_NCPU	integer	no
.It HW\_BYTEORDER	integer	no
.It HW\_PHYSMEM	integer	no
.It HW\_USERMEM	integer	no
.It HW\_PAGESIZE	integer	no
.\".It HW\_DISKNAMES	integer	no
.\".It HW\_DISKSTATS	integer	no
.El
E 4
I 3
.Pp
D 4
The tables that can be retrieved from the kernel by
.Fn sysctl
are detailed below.
For most operations, the
.Fn sysctl
function returns a consistent snapshot of the data requested.
(This is not currently true for
.Dv KERN_VNODE ) .
The consistency is done by locking the destination buffer into memory
so that the data may be copied out without blocking.
Calls are serialized to avoid deadlock.
E 4
I 4
.Bl -tag -width "123456"
.It Li HW_MACHINE
D 5
Return the machine class.
E 5
I 5
The machine class.
E 5
.It Li HW_MODEL
D 5
Return the machine model
E 5
I 5
The machine model
E 5
.It Li HW_NCPU
D 5
Return the number of cpus.
E 5
I 5
The number of cpus.
I 13
.ne 1i
E 13
E 5
.It Li HW_BYTEORDER
D 5
Return the byteorder (4,321, or 1,234).
E 5
I 5
The byteorder (4,321, or 1,234).
E 5
.It Li HW_PHYSMEM
D 5
Return the bytes of physical memory.
E 5
I 5
The bytes of physical memory.
E 5
.It Li HW_USERMEM
D 5
Return the bytes of non-kernel memory.
E 5
I 5
The bytes of non-kernel memory.
E 5
.It Li HW_PAGESIZE
D 5
Return the software page size.
E 5
I 5
The software page size.
E 5
.\".It Fa HW_DISKNAMES
.\".It Fa HW_DISKSTATS
.El
.Sh CTL_KERN
The string and integer information available for the CTL_KERN level
is detailed below.
The changeable column shows whether a process with appropriate
privilege may change the value.
E 4
The types of data currently available are process information,
system vnodes, the open file entries, routing table entries,
D 4
virtual memory statistics, load average history,
and clock rate information.
The following paragraphs detail how each of these is obtained.
E 4
I 4
virtual memory statistics, load average history, and clock rate
information.
D 5
Consistency in the kernel tables is obtained by locking the destination
buffer into memory so that the data may be copied out without blocking.
Calls are serialized to avoid deadlock.
E 5
.Bl -column "KERNXCHOWNXRESTRICTEDXXX" "struct clockrateXXX" -offset indent
.It Sy Pa Second level name	Type	Changeable
.It KERN\_ARGMAX	integer	no
I 7
.It KERN\_BOOTTIME	struct timeval	no
E 7
.It KERN\_CHOWN\_RESTRICTED	integer	no
D 5
.It KERN\_CLOCKRATE	struct clockinfo	yes
.It KERN\_FILE	struct file	yes
E 5
I 5
.It KERN\_CLOCKRATE	struct clockinfo	no
.It KERN\_FILE	struct file	no
E 5
.It KERN\_HOSTID	integer	yes
.It KERN\_HOSTNAME	string	yes
.It KERN\_JOB\_CONTROL	integer	no
.It KERN\_LINK\_MAX	integer	no
.It KERN\_MAXFILES	integer	yes
.It KERN\_MAXPROC	integer	yes
I 8
D 10
.It KERN\_MAXUFILES	integer	yes
.It KERN\_MAXUPROC	integer	yes
E 10
E 8
D 5
.It KERN\_MAXVNODES	integer	no
E 5
I 5
.It KERN\_MAXVNODES	integer	yes
E 5
.It KERN\_MAX\_CANON	integer	no
.It KERN\_MAX\_INPUT	integer	no
.It KERN\_NAME\_MAX	integer	no
.It KERN\_NGROUPS	integer	no
.It KERN\_NO\_TRUNC	integer	no
.It KERN\_OSRELEASE	string	no
.It KERN\_OSREV	integer	no
.It KERN\_OSTYPE	string	no
.It KERN\_PATH\_MAX	integer	no
.It KERN\_PIPE\_BUF	integer	no
.It KERN\_POSIX1	integer	no
D 5
.It KERN\_PROC	struct proc	yes
.It KERN\_PROF	node	yes
E 5
I 5
.It KERN\_PROC	struct proc	no
.It KERN\_PROF	node	not applicable
E 5
.It KERN\_SAVED\_IDS	integer	no
.It KERN\_SECURELVL	integer	raise only
.It KERN\_VDISABLE	integer	no
.It KERN\_VERSION	string	no
D 5
.It KERN\_VNODE	struct vnode	yes
E 5
I 5
.It KERN\_VNODE	struct vnode	no
E 5
.El
I 13
.ne 1i
E 13
E 4
.Pp
D 4
The entire process table, or a subset of it, may be obtained with
.Pa CTL_KERN/KERN_PROC/<op>/<arg> .
E 4
I 4
.Bl -tag -width "123456"
.It Li KERN_ARGMAX
D 8
Maximum bytes of argument to exec.
E 8
I 8
The maximum bytes of argument to
.Xr exec 2 .
E 8
I 7
.It Li KERN_BOOTTIME
A
.Va struct timeval
structure is returned.
This structure contains the time that the system was booted.
E 7
.It Li KERN_CHOWN_RESTRICTED
Return 1 if appropriate privileges are required for the
.Xr chown 2
system call, otherwise 0.
.It Li KERN_CLOCKRATE
A
D 5
.Ns ( Li struct clockinfo Ns )
E 5
I 5
.Va struct clockinfo
E 5
structure is returned.
This structure contains the clock, statistics clock and profiling clock
frequencies, and the number of micro-seconds per hz tick.
.It Li KERN_FILE
Return the entire file table.
The returned data consists of a single
D 5
.Ns ( Li struct filehead Ns )
E 5
I 5
.Va struct filehead
E 5
followed by an array of
D 5
.Ns ( Li struct file Ns ) ,
E 5
I 5
.Va struct file ,
E 5
whose size depends on the current number of such objects in the system.
.It Li KERN_HOSTID
D 5
Return the host id.
E 5
I 5
Get or set the host id.
E 5
.It Li KERN_HOSTNAME
D 5
Return the hostname.
E 5
I 5
Get or set the hostname.
E 5
.It Li KERN_JOB_CONTROL
Return 1 if job control is available on this system, otherwise 0.
.It Li KERN_LINK_MAX
D 5
Return the maximum file link count.
E 5
I 5
The maximum file link count.
E 5
.It Li KERN_MAXFILES
D 5
Return the maximum number of open files a process may have.
E 5
I 5
The maximum number of open files that may be open in the system.
E 5
.It Li KERN_MAXPROC
D 5
Return the maximum number of simultaneous processes a user may have.
E 5
I 5
The maximum number of simultaneous processes the system will allow.
I 8
D 10
.It Li KERN_MAXUFILES
The maximum number of open files per user id.
.It Li KERN_MAXUPROC
The maximum number of simultaneous processes per user id.
E 10
E 8
E 5
.It Li KERN_MAXVNODES
D 5
Return the maximum number of vnodes available on the system.
E 5
I 5
The maximum number of vnodes available on the system.
E 5
.It Li KERN_MAX_CANON
D 5
Return the maximum number of bytes in terminal canonical input line.
E 5
I 5
The maximum number of bytes in terminal canonical input line.
E 5
.It Li KERN_MAX_INPUT
D 5
Return the minimum number of bytes for which space is available in
E 5
I 5
D 9
The minimum number of bytes for which space is available in
E 9
I 9
The minimum maximum number of bytes for which space is available in
E 9
E 5
a terminal input queue.
.It Li KERN_NAME_MAX
D 5
Maximum number of bytes in a file name.
E 5
I 5
The maximum number of bytes in a file name.
E 5
.It Li KERN_NGROUPS
D 5
Maximum number of supplemental groups.
E 5
I 5
The maximum number of supplemental groups.
E 5
.It Li KERN_NO_TRUNC
D 5
Return 1 if too long pathnames are truncated.
E 5
I 5
Return 1 if file names longer than KERN_NAME_MAX are truncated.
E 5
.It Li KERN_OSRELEASE
D 5
Return the system release string.
E 5
I 5
The system release string.
E 5
.It Li KERN_OSREV
D 5
Return the system revision string.
E 5
I 5
The system revision string.
E 5
.It Li KERN_OSTYPE
D 5
Return the system type string.
E 5
I 5
The system type string.
E 5
.It Li KERN_PATH_MAX
D 5
Maximum number of bytes in a pathname.
E 5
I 5
The maximum number of bytes in a pathname.
E 5
.It Li KERN_PIPE_BUF
D 5
Maximum number of bytes which will be written atomically to a pipe.
E 5
I 5
The maximum number of bytes which will be written atomically to a pipe.
E 5
.It Li KERN_POSIX1
D 5
Return the POSIX 1003.1 version with which the system attempts to comply.
E 5
I 5
D 8
The POSIX 1003.1 version with which the system attempts to comply.
E 8
I 8
The version of ISO/IEC 9945 (POSIX 1003.1) with which the system
attempts to comply.
E 8
E 5
.It Li KERN_PROC
Return the entire process table, or a subset of it.
E 4
An array of
D 4
.Ns ( Fa struct kinfo_proc Ns )
E 4
I 4
D 5
.Ns ( Li struct kinfo_proc Ns )
E 5
I 5
.Va struct kinfo_proc
E 5
E 4
structures is returned,
whose size depends on the current number of such objects in the system.
D 4
The values for <op> and <arg> are:
.Bl -column KERN_PROC_PGRPX "ARG Meaningxx" -offset indent
.It Sy "OP  " "	ARG Meaning  "
.It Dv KERN_PROC_ALL No "	none"
.It Dv KERN_PROC_PID No "	process ID"
.It Dv KERN_PROC_PGRP No "	process group"
.It Dv KERN_PROC_TTY No "	tty device"
.It Dv KERN_PROC_UID No "	user ID"
.It Dv KERN_PROC_RUID No "	real user ID"
E 4
I 4
The third and fourth level names are as follows:
D 5
.Bl -column "Third level nameXXX" "Fourth level is:XXX" -offset indent
E 5
I 5
.Bl -column "Third level nameXXXXXX" "Fourth level is:XXXXXX" -offset indent
E 5
.It Pa Third level name	Fourth level is:
.It KERN\_PROC\_ALL	None
.It KERN\_PROC\_PID	A process ID
.It KERN\_PROC\_PGRP	A process group
.It KERN\_PROC\_TTY	A tty device
.It KERN\_PROC\_UID	A user ID
.It KERN\_PROC\_RUID	A real user ID
E 4
.El
D 4
.Pp
The entire vnode table may be obtained with
.Pa CTL_KERN/KERN_VNODE .
The returned data consists of an array
whose size depends on the current number of such objects in the system.
E 4
I 4
.It Li KERN_PROF
D 5
Return kernel profiling information.
The only currently available third level name is GPROF_STATE, which
returns 1 if the kernel was compiled for profiling, and 0 if it was
not.
E 5
I 5
Return profiling information about the kernel.
If the kernel is not compiled for profiling,
attempts to retrieve any of the KERN_PROF values will
fail with EOPNOTSUPP.
The third level names for the string and integer profiling information 
is detailed below.
The changeable column shows whether a process with appropriate
privilege may change the value.
.Bl -column "GPROFXGMONPARAMXXX" "struct gmonparamXXX" -offset indent
.It Sy Pa Third level name	Type	Changeable
.It GPROF\_STATE	integer	yes
.It GPROF\_COUNT	u_short[\|]	yes
.It GPROF\_FROMS	u_short[\|]	yes
.It GPROF\_TOS	struct tostruct	yes
.It GPROF\_GMONPARAM	struct gmonparam	no
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Li GPROF_STATE
Returns GMON_PROF_ON or GMON_PROF_OFF to show that profiling
is running or stopped.
.It Li GPROF_COUNT
Array of statistical program counter counts.
.It Li GPROF_FROMS
Array indexed by program counter of call-from points.
.It Li GPROF_TOS
Array of
.Va struct tostruct
describing destination of calls and their counts.
.It Li GPROF_GMONPARAM
Structure giving the sizes of the above arrays.
.El
I 13
.ne 1i
E 13
E 5
.It Li KERN_SAVED_IDS
Returns 1 if saved set-group and saved set-user ID is available.
.It Li KERN_SECURELVL
D 5
Returns the system security level.
E 5
I 5
The system security level.
E 5
This level may be raised by processes with appropriate privilege.
I 5
It may only be lowered by process 1.
E 5
.It Li KERN_VDISABLE
Returns the terminal character disabling value.
.It Li KERN_VERSION
D 5
Return the system version string.
E 5
I 5
The system version string.
E 5
.It Li KERN_VNODE
Return the entire vnode table.
D 5
(Note, the vnode table is not necessarily a consistent snapshot of
the system.)
E 5
I 5
Note, the vnode table is not necessarily a consistent snapshot of
the system.
E 5
The returned data consists of an array whose size depends on the
current number of such objects in the system.
E 4
Each element of the array contains the kernel address of a vnode
D 4
.Ns ( Fa struct vnode * Ns )
E 4
I 4
D 5
.Ns ( Li struct vnode * Ns )
E 5
I 5
.Va struct vnode *
E 5
E 4
followed by the vnode itself
D 4
.Ns ( Fa struct vnode Ns ) .
E 4
I 4
D 5
.Ns ( Li struct vnode Ns ) .
E 5
I 5
.Va struct vnode .
E 5
.El
.Sh CTL_MACHDEP
D 11
There are currently no second level names for the machine dependent
interface.
E 11
I 11
The set of variables defined is architecture dependent.
Most architectures define at least the following variables.
.Bl -column "CONSOLE_DEVICEXXX" "integerXXX" -offset indent
.It Sy Pa Second level name	Type	Changeable
.It Li CPU_CONSDEV	dev_t	no
.El
E 11
.Sh CTL_NET
The string and integer information available for the CTL_NET level
is detailed below.
The changeable column shows whether a process with appropriate
privilege may change the value.
D 5
.Bl -column "Second level nameXXX" "routine messagesXXX" -offset indent
E 5
I 5
.Bl -column "Second level nameXXXXXX" "routing messagesXXX" -offset indent
E 5
.It Sy Pa Second level name	Type	Changeable
D 5
.It PF\_ROUTE	routine messages	no
E 5
I 5
.It PF\_ROUTE	routing messages	no
.It PF\_INET	internet values	yes
E 5
.El
E 4
.Pp
D 4
The entire file table may be obtained with
.Pa CTL_KERN/KERN_FILE .
The returned data consists of a single
.Ns ( Fa struct filehead Ns )
followed by an array of
.Ns ( Fa struct file Ns ) ,
whose size depends on the current number of such objects in the system.
E 4
I 4
.Bl -tag -width "123456"
.It Li PF_ROUTE
Return the entire routing table or a subset of it.
The data is returned as a sequence of routing messages (see
.Xr route 4
for the header file, format and meaning).
The length of each message is contained in the message header.
E 4
.Pp
D 4
Information about the system clock rate may be obtained with
.Pa CTL_KERN/KERN_CLOCKRATE .
The returned data consists of a
.Ns ( Fa struct clockinfo Ns ) .
E 4
I 4
The third level name is a protocol number, which is currently always 0.
The fourth level name is an address family, which may be set to 0 to
select all address families.
The fifth and sixth level names are as follows:
D 5
.Bl -column "Fifth level nameXXX" "Sixth level is:XXX" -offset indent
E 5
I 5
.Bl -column "Fifth level nameXXXXXX" "Sixth level is:XXX" -offset indent
E 5
.It Pa Fifth level name	Sixth level is:
.It NET\_RT\_FLAGS	rtflags
.It NET\_RT\_DUMP	None
.It NET\_RT\_IFLIST	None
.El
I 5
.It Li PF_INET
Get or set various global information about the internet protocols.
The third level name is the protocol.
The fourth level name is the variable name.
The currently defined protocols and names are:
I 13
.ne 1i
E 13
.Bl -column "Protocol nameXXXXXX" "Variable nameXXX" "integerXXX" -offset indent
.It Pa Protocol name	Variable name	Type	Changeable
.It ip	forwarding	integer	yes
.It ip	redirect	integer	yes
.It ip	ttl	integer	yes
.It icmp	maskrepl	integer	yes
.It udp	checksum	integer	yes
.El
.Pp
The variables are as follows:
.Bl -tag -width "123456"
.It Li ip.forwarding
D 6
Returns 1 when ip forwarding is enabled for the host.
E 6
I 6
Returns 1 when IP forwarding is enabled for the host,
meaning that the host is acting as a router.
E 6
.It Li ip.redirect
D 6
Returns 1 when redirects may be sent by the host.
E 6
I 6
Returns 1 when ICMP redirects may be sent by the host.
This option is ignored unless the host is routing IP packets,
and should normally be enabled on all systems.
E 6
.It Li ip.ttl
D 6
The maximum time-to-live for an ip packet.
E 6
I 6
The maximum time-to-live (hop count) value for an IP packet sourced by
the system.
This value applies to normal transport protocols, not to ICMP.
E 6
.It Li icmp.maskrepl
D 6
Returns 1 when icmp mask requests are provided.
E 6
I 6
Returns 1 if ICMP network mask requests are to be answered.
E 6
.It Li udp.checksum
D 6
Returns 1 when udp checksums are being done.
E 6
I 6
Returns 1 when UDP checksums are being computed and checked.
Disabling UDP checksums is strongly discouraged.
E 6
.El
E 5
.Sh CTL_USER
The string and integer information available for the CTL_USER level
is detailed below.
The changeable column shows whether a process with appropriate
privilege may change the value.
D 5
.Bl -column "Second level nameXXX" "integerXXX" -offset indent
E 5
I 5
.Bl -column "USER_COLL_WEIGHTS_MAXXXX" "integerXXX" -offset indent
E 5
.It Sy Pa Second level name	Type	Changeable
.It USER\_BC\_BASE\_MAX	integer	no
.It USER\_BC\_DIM\_MAX	integer	no
.It USER\_BC\_SCALE\_MAX	integer	no
.It USER\_BC\_STRING\_MAX	integer	no
.It USER\_COLL\_WEIGHTS\_MAX	integer	no
.It USER\_CS\_PATH	string	no
.It USER\_EXPR\_NEST\_MAX	integer	no
.It USER\_LINE\_MAX	integer	no
.It USER\_POSIX2\_CHAR\_TERM	integer	no
.It USER\_POSIX2\_C\_BIND	integer	no
.It USER\_POSIX2\_C\_DEV	integer	no
.It USER\_POSIX2\_FORT\_DEV	integer	no
.It USER\_POSIX2\_FORT\_RUN	integer	no
.It USER\_POSIX2\_LOCALEDEF	integer	no
.It USER\_POSIX2\_SW\_DEV	integer	no
.It USER\_POSIX2\_UPE	integer	no
.It USER\_POSIX2\_VERSION	integer	no
.It USER\_RE\_DUP\_MAX	integer	no
I 8
.It USER\_STREAM\_MAX	integer	no
.It USER\_TZNAME\_MAX	integer	no
E 8
.El
.Bl -tag -width "123456"
E 4
.Pp
D 4
Information about the load average history may be obtained with
.Pa CTL_VM/VM_LOADAVG .
The returned data consists of a
.Ns ( Fa struct loadavg Ns ) .
E 4
I 4
.It Li USER_BC_BASE_MAX
D 5
Return the maximum ibase/obase values in the
E 5
I 5
The maximum ibase/obase values in the
E 5
.Xr bc 1
D 8
utility
E 8
I 8
utility.
E 8
.It Li USER_BC_DIM_MAX
D 5
Return the maximum array size in the
E 5
I 5
The maximum array size in the
E 5
.Xr bc 1
utility.
.It Li USER_BC_SCALE_MAX
D 5
Return the maximum scale value in the
E 5
I 5
The maximum scale value in the
E 5
.Xr bc 1
utility.
.It Li USER_BC_STRING_MAX
D 5
Return the maximum string length in the
E 5
I 5
The maximum string length in the
E 5
.Xr bc 1
utility.
.It Li USER_COLL_WEIGHTS_MAX
D 5
Return the maximum number of weights that can be assigned to any entry of
E 5
I 5
The maximum number of weights that can be assigned to any entry of
E 5
the LC_COLLATE order keyword in the locale definition file.
.It Li USER_CS_PATH
Return a value for the
.Ev PATH
D 5
environment variable that finds all of the standard utilities.
E 5
I 5
environment variable that finds all the standard utilities.
E 5
.It Li USER_EXPR_NEST_MAX
D 5
Return the maximum number of expressions that can be nested within
E 5
I 5
The maximum number of expressions that can be nested within
E 5
parenthesis by the
.Xr expr 1
utility.
.It Li USER_LINE_MAX
D 5
Return the maximum length in bytes of a text-processing utility's input
E 5
I 5
The maximum length in bytes of a text-processing utility's input
E 5
line.
.It Li USER_POSIX2_CHAR_TERM
Return 1 if the system supports at least one terminal type capable of
all operations described in POSIX 1003.2, otherwise 0.
.It Li USER_POSIX2_C_BIND
Return 1 if the system's C-language development facilities support the
C-Language Bindings Option, otherwise 0.
.It Li USER_POSIX2_C_DEV
Return 1 if the system supports the C-Language Development Utilities Option,
otherwise 0.
.It Li USER_POSIX2_FORT_DEV
Return 1 if the system supports the FORTRAN Development Utilities Option,
otherwise 0.
.It Li USER_POSIX2_FORT_RUN
Return 1 if the system supports the FORTRAN Runtime Utilities Option,
otherwise 0.
.It Li USER_POSIX2_LOCALEDEF
Return 1 if the system supports the creation of locales, otherwise 0.
.It Li USER_POSIX2_SW_DEV
Return 1 if the system supports the Software Development Utilities Option,
otherwise 0.
.It Li USER_POSIX2_UPE
Return 1 if the system supports the User Portability Utilities Option,
otherwise 0.
.It Li USER_POSIX2_VERSION
D 5
Return the POSIX 1003.2 version with which the system attempts to comply.
E 5
I 5
D 8
The POSIX 1003.2 version with which the system attempts to comply.
E 8
I 8
The version of POSIX 1003.2 with which the system attempts to comply.
E 8
E 5
.It Li USER_RE_DUP_MAX
D 5
Return the maximum number of repeated occurrences of a regular expression
E 5
I 5
The maximum number of repeated occurrences of a regular expression
E 5
permitted when using interval notation.
I 13
.ne 1i
E 13
I 8
.It Li USER_STREAM_MAX
The minimum maximum number of streams that a process may have open
at any one time.
.It Li USER_TZNAME_MAX
The minimum maximum number of types supported for the name of a
timezone.
E 8
.El
.Sh CTL_VM
The string and integer information available for the CTL_VM level
is detailed below.
The changeable column shows whether a process with appropriate
privilege may change the value.
D 5
.Bl -column "Second level nameXXX" "struct loadavgXXX" -offset indent
E 5
I 5
.Bl -column "Second level nameXXXXXX" "struct loadavgXXX" -offset indent
E 5
.It Sy Pa Second level name	Type	Changeable
.It VM\_LOADAVG	struct loadavg	no
.It VM\_METER	struct vmtotal	no
.El
E 4
.Pp
D 4
Information about the system wide virtual memory statistics
may be obtained with
.Pa CTL_VM/VM_METER .
E 4
I 4
.Bl -tag -width "123456"
.It Li VM_LOADAVG
Return the load average history.
E 4
The returned data consists of a
D 4
.Ns ( Fa struct vmtotal Ns ) .
.Pp
The entire routing table or a subset of it may be obtained with
.Pa CTL_NET/PF_ROUTE/<protocol number>/<address family>/<op>/<arg> .
The protocol number is currently always zero.
The address family may be set to zero to select all address families.
The values for <op> and <arg> are:
.Bl -column NET_RT_IFLISTX "ARG Meaningxx" -offset indent
.It Sy "OP  " "	ARG Meaning  "
.It Dv NET_RT_FLAGS No "	rtflags"
.It Dv NET_RT_DUMP No "	none"
.It Dv NET_RT_IFLIST No "	none"
E 4
I 4
D 5
.Ns ( Li struct loadavg Ns ) .
E 5
I 5
.Va struct loadavg .
E 5
.It Li VM_METER
Return the system wide virtual memory statistics.
The returned data consists of a
D 5
.Ns ( Li struct vmtotal Ns ) .
E 5
I 5
.Va struct vmtotal .
E 5
E 4
.El
I 5
.Sh RETURN VALUES
If the call to
.Nm sysctl
D 14
is successful, 0 is returned.
E 14
I 14
is successful, the number of bytes copied out is returned.
E 14
Otherwise \-1 is returned and
.Va errno
is set appropriately.
E 5
D 4
The data is returned as a sequence of routing messages (see
.Xr route 4
for the header file, format and meaning).
The length of each message is contained in the message header.
E 3
.Sh RETURN VALUES
If the call to
.Fn sysctl
D 3
is successful, the length of the old value is returned.
E 3
I 3
is successful, 0 is returned.
E 3
Otherwise \-1 is returned and
.Va errno
is set appropriately.
E 4
.Sh ERRORS
D 4
The following error may be reported:
E 4
I 4
The following errors may be reported:
E 4
.Bl -tag -width Er
.It Bq Er EFAULT
The buffer
.Fa name ,
D 4
.Fa old ,
.Fa new ,
E 4
I 4
.Fa oldp ,
.Fa newp ,
E 4
or length pointer
.Fa oldlenp
contains an invalid address.
.It Bq Er EINVAL
The
.Fa name
array is less than two or greater than CTL_MAXNAME.
.It Bq Er EINVAL
A non-null
D 4
.Fa new
E 4
I 4
.Fa newp
E 4
is given and its specified length in
.Fa newlen
is too large or too small.
.It Bq Er ENOMEM
The length pointed to by
.Fa oldlenp
is too short to hold the requested value.
.It Bq Er ENOTDIR
The
.Fa name
array specifies an intermediate rather than terminal name.
.It Bq Er EOPNOTSUPP
The
.Fa name
array specifies a value that is unknown.
.It Bq Er EPERM
An attempt is made to set a read-only value.
.It Bq Er EPERM
A process without appropriate privilege attempts to set a value.
.El
.Sh FILES
D 4
.Bl -tag -width <vm/vm_param.h> -compact
E 4
I 4
D 5
.Bl -tag -width <vm/vmXparam.h> -compact
E 5
I 5
.Bl -tag -width <netinet/icmpXvar.h> -compact
E 5
E 4
.It Pa <sys/sysctl.h>
D 4
definitions for top level identifiers and second level kernel
and hardware identifiers
E 4
I 4
definitions for top level identifiers, second level kernel and hardware
D 5
identifiers, user level identifiers
E 5
I 5
identifiers, and user level identifiers
E 5
E 4
.It Pa <sys/socket.h>
definitions for second level network identifiers
I 5
.It Pa <sys/gmon.h>
definitions for third level profiling identifiers
E 5
.It Pa <vm/vm_param.h>
definitions for second level virtual memory identifiers
I 5
.It Pa <netinet/in.h>
definitions for third level Internet identifiers and
fourth level IP identifiers
.It Pa <netinet/icmp_var.h>
definitions for fourth level ICMP identifiers
.It Pa <netinet/udp_var.h>
definitions for fourth level UDP identifiers
E 5
.El
.Sh SEE ALSO
.Xr sysctl 8
.Sh HISTORY
I 3
The
E 3
D 4
.Fn sysctl
E 4
I 4
.Nm sysctl
E 4
D 3
first appeared in 4.4BSD.
E 3
I 3
function first appeared in 4.4BSD.
E 3
E 1
