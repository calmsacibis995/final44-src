h14194
s 00002/00002/00235
d D 8.1 93/06/04 12:05:53 bostic 20 19
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00002/00236
d D 6.18 92/07/12 23:24:53 bostic 19 18
c ftpd is now provided for explicitly
e
s 00154/00148/00084
d D 6.17 91/04/19 14:49:46 cael 18 17
c macro and text revision (-mdoc version 3)
e
s 00010/00041/00222
d D 6.16 90/10/29 15:53:34 bostic 17 16
c back out change to return error values
e
s 00007/00001/00256
d D 6.15 90/09/30 20:58:56 bostic 16 15
c return EINVAL if the priority parameter to syslog/vsyslog is bad
e
s 00124/00093/00133
d D 6.14 90/09/30 17:41:45 bostic 15 14
c change all syslog routines to return value, set errno correctly
c some rewording for clarity
e
s 00001/00011/00225
d D 6.13 90/06/23 17:55:44 trent 14 13
c new copyright notice
e
s 00048/00060/00188
d D 6.12 89/08/22 14:47:22 bostic 13 12
c no longer forks; delete LOG_NOWAIT and rephrase LOG_CONS
c reformat alphabetically
e
s 00054/00021/00194
d D 6.11 89/04/01 14:00:24 bostic 12 11
c add LOG_NEWS, LOG_CRON, etc.; use .TP, not .IP
e
s 00003/00001/00212
d D 6.10 89/02/15 12:08:53 bostic 11 10
c add LOG_PERROR
e
s 00001/00001/00212
d D 6.9 89/02/12 14:55:56 bostic 10 9
c add vsyslog to synopsis line
e
s 00019/00001/00194
d D 6.8 88/12/19 17:10:59 bostic 9 8
c add vsyslog
e
s 00014/00003/00181
d D 6.7 88/12/19 16:10:11 bostic 8 7
c written by Eric Allman; add Berkely specific copyright
e
s 00022/00008/00162
d D 6.6 86/05/15 13:41:03 karels 7 6
c new stuff
e
s 00001/00001/00169
d D 6.5 85/11/29 17:44:50 mckusick 6 5
c lpd is no longer an example of a DAEMON facility
e
s 00006/00000/00164
d D 6.4 85/11/17 14:11:42 eric 5 4
c document LOG_LPR facility
e
s 00004/00002/00160
d D 6.3 85/10/13 15:23:25 eric 4 3
c old LOG_ODELAY is now the default; use LOG_NDELAY to get the old semantics
e
s 00074/00018/00088
d D 6.2 85/09/17 20:19:20 eric 3 2
c facilities in syslog
e
s 00057/00024/00049
d D 6.1 85/05/15 16:12:55 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00073/00000/00000
d D 5.1 85/05/15 16:11:54 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 8
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 8
I 8
D 18
.\" Copyright (c) 1985 The Regents of the University of California.
E 18
I 18
D 20
.\" Copyright (c) 1985, 1991 The Regents of the University of California.
E 18
.\" All rights reserved.
E 20
I 20
.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 20
.\"
D 14
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 14
I 14
.\" %sccs.include.redist.man%
E 14
E 8
.\"
D 18
.\"	%W% (Berkeley) %G%
E 18
I 18
.\"     %W% (Berkeley) %G%
E 18
.\"
D 2
.\"	@(#)syslog.3	1.2		11/14/82
.TH SYSLOG 3 "14 November 1982"
E 2
I 2
D 18
.TH SYSLOG 3 "%Q%"
E 2
.UC 5
.SH NAME
D 2
syslog, openlog, closelog \- control system log
E 2
I 2
D 10
syslog, openlog, closelog, setlogmask \- control system log
E 10
I 10
D 15
syslog, openlog, closelog, setlogmask, vsyslog \- control system log
E 15
I 15
syslog, vsyslog, openlog, closelog, setlogmask \- control system log
E 15
E 10
E 2
.SH SYNOPSIS
D 15
.B "#include <syslog.h>
.PP
D 2
.B "openlog(ident, logstat)
E 2
I 2
D 3
.B "openlog(ident, logopt, maskpri)
E 3
I 3
.B "openlog(ident, logopt, facility)
E 3
E 2
.br
.B "char *ident;
.PP
.B "syslog(priority, message, parameters ... )
.br
I 9
.B "int priority;
.br
E 9
.B "char *message;
.PP
I 9
.B "#include <varargs.h>
.br
.B "vsyslog(priority, message, args)
.br
.B "int priority;
.br
.B "char *message;
.br
.B "va_list args;
.PP
E 9
.B "closelog()
I 2
.PP
.B "setlogmask(maskpri)
E 15
I 15
.nf
.ft B
#include <syslog.h>
I 17
void
E 17
syslog(int priority, char *message, [, arg ] ... );

D 17
include <varargs.h>
E 17
I 17
#include <varargs.h>
void
E 17
vsyslog(int priority, char *message, va_list args);

I 17
void
E 17
openlog(char *ident, int logopt, int facility);

I 17
void
E 17
closelog(void);

setlogmask(int maskpri);
.ft R
.fi
E 15
E 2
.SH DESCRIPTION
.I Syslog
E 18
I 18
.Dd %Q%
.Dt SYSLOG 3
.Os BSD 4.2
.Sh NAME
.Nm syslog ,
.Nm vsyslog ,
.Nm openlog ,
.Nm closelog ,
.Nm setlogmask
.Nd control system log
.Sh SYNOPSIS
.Fd #include <syslog.h>
.Fd #include <varargs.h>
.Ft void
.Fn syslog "int priority" "const char *message" "..."
.Ft void
.Fn vsyslog "int priority" "const char *message" "va_list args"
.Ft void
.Fn openlog "const char *ident" "int logopt" "int facility"
.Ft void
.Fn closelog void
.Ft int
.Fn setlogmask "int maskpri"
.Sh DESCRIPTION
The
.Fn syslog
function
E 18
D 2
arranges to write the
E 2
I 2
D 15
arranges to write
E 15
I 15
writes
E 15
E 2
D 18
.I message
E 18
I 18
.Fa message
E 18
D 15
onto the system log maintained by
D 2
.IR syslog (8).
E 2
I 2
.IR syslogd (8).
E 2
The message is tagged with
.IR priority .
The message looks like a
E 15
I 15
to the system message logger.
D 18
The message will then be written to the system console, log files,
logged-in users, or forwarded to other machines as appropriate (see
.IR syslogd (8)).
.PP
E 18
I 18
The message is then written to the system console, log files,
logged-in users, or forwarded to other machines as appropriate. (See
.Xr syslogd 8 . )
.Pp
E 18
The message is identical to a
E 15
D 18
.IR printf (3)
D 15
string except that
.B %m
D 13
is replaced by the current error message (collected from
E 13
I 13
is replaced by the current error message (as referenced by
E 13
.IR errno ).
D 9
A trailing newline is added if needed.
E 9
I 9
D 13
A trailing newline is added if needed.  An alternate form,
in which the arguments have already been captured using the
variable-length argument facilities of
E 13
I 13
A trailing newline is added if needed.
An alternate form, in which the arguments have already been captured
E 15
I 15
format string, except that ``%m'' is replaced by the current error
message (as denoted by
.IR errno ;
E 18
I 18
.Xr printf 3
format string, except that
.Ql %m
is replaced by the current error
message. (As denoted by the global variable
.Va errno ;
E 18
see
D 18
.IR strerror (3)).
E 18
I 18
.Xr strerror 3 . )
E 18
A trailing newline is added if none is present.
D 18
.PP
.I Vsyslog
E 18
I 18
.Pp
The
.Fn vsyslog
function
E 18
is an alternate form in which the arguments have already been captured
E 15
using the variable-length argument facilities of
E 13
D 15
.IR varargs (3),
is available under the name
.IR vsyslog .
E 15
I 15
D 18
.IR varargs (3).
E 15
.PP
E 18
I 18
.Xr varargs 3 .
.Pp
E 18
E 9
D 15
This message will be read by
D 2
.IR syslog (8)
and output to the system console or files as appropriate.
E 2
I 2
.IR syslogd (8)
and written to the system console, log files, or forwarded to
.I syslogd
on another host as appropriate.
I 3
.PP
E 15
I 15
The message is tagged with
D 18
.IR priority .
E 18
I 18
.Fa priority .
E 18
E 15
Priorities are encoded as a
D 18
.I facility
E 18
I 18
.Fa facility
E 18
and a
D 18
.IR level .
E 18
I 18
.Em level .
E 18
The facility describes the part of the system
generating the message.
D 15
The level is selected from an ordered list:
E 15
I 15
The level is selected from the following
D 18
.B ordered
E 18
I 18
.Em ordered
E 18
(high to low) list:
E 15
D 12
.IP LOG_EMERG \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
D 13
LOG_EMERG
E 12
A panic condition.
This is normally broadcast to all users.
D 12
.IP LOG_ALERT \w'LOG_WARNING'u+3
E 12
I 12
.TP
E 13
D 15
LOG_ALERT
E 12
A condition that should be corrected immediately,
such as a corrupted system database.
D 12
.IP LOG_CRIT \w'LOG_WARNING'u+3
E 12
I 12
.TP
LOG_CRIT
E 12
Critical conditions,
e.g., hard device errors.
D 12
.IP LOG_ERR \w'LOG_WARNING'u+3
E 12
I 12
.TP
I 13
LOG_DEBUG
Messages that contain information
normally of use only when debugging a program.
.TP
E 15
LOG_EMERG
E 18
I 18
.Bl -tag -width LOG_AUTHPRIV
.It Dv LOG_EMERG
E 18
A panic condition.
This is normally broadcast to all users.
D 18
.TP
I 15
LOG_ALERT
E 18
I 18
.It Dv LOG_ALERT
E 18
A condition that should be corrected immediately, such as a corrupted
system database.
D 18
.TP
LOG_CRIT
E 18
I 18
.It Dv LOG_CRIT
E 18
Critical conditions, e.g., hard device errors.
D 18
.TP
E 15
E 13
LOG_ERR
E 18
I 18
.It Dv LOG_ERR
E 18
E 12
Errors.
D 12
.IP LOG_WARNING \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
D 13
LOG_WARNING
E 12
Warning messages.
E 13
I 13
D 15
LOG_INFO
Informational messages.
E 15
I 15
LOG_WARNING
E 18
I 18
.It Dv LOG_WARNING
E 18
Warning messages.
E 15
E 13
D 12
.IP LOG_NOTICE \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
LOG_NOTICE
E 18
I 18
.It Dv LOG_NOTICE
E 18
E 12
Conditions that are not error conditions,
but should possibly be handled specially.
D 12
.IP LOG_INFO \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
D 13
LOG_INFO
E 12
Informational messages.
D 12
.IP LOG_DEBUG \w'LOG_WARNING'u+3
E 12
I 12
.TP
LOG_DEBUG
E 12
Messages that contain information
normally of use only when debugging a program.
E 13
I 13
D 15
LOG_WARNING
Warning messages.
E 15
I 15
LOG_INFO
E 18
I 18
.It Dv LOG_INFO
E 18
Informational messages.
D 18
.TP
LOG_DEBUG
E 18
I 18
.It Dv LOG_DEBUG
E 18
Messages that contain information
normally of use only when debugging a program.
E 15
E 13
D 18
.PP
E 3
D 15
If
E 15
I 15
.I Openlog
E 18
I 18
.El
.Pp
The
.Fn openlog
function
E 18
provides for more specialized processing of the messages sent
by
E 15
D 18
.I syslog
E 18
I 18
.Fn syslog
E 18
D 15
cannot pass the message to
D 7
.I syslogd
D 3
and the message is priority LOG_FAIL or higher,
E 3
I 3
and the message is priority LOG_ERR or higher,
E 3
it attempts to write the message on
.IR /dev/console.
E 7
I 7
.IR syslogd ,
D 13
it will attempt to write the message on
.I /dev/console
E 13
I 13
it will attempt to write the message to the console (``/dev/console'')
E 13
if the LOG_CONS option is set (see below).
E 7
E 2
.PP
If special processing is needed,
.I openlog
can be called to initialize the log file.
E 15
I 15
and
D 18
.IR vsyslog .
E 18
I 18
.Fn vsyslog .
E 18
E 15
D 2
Parameters are
E 2
I 2
The parameter
E 2
D 18
.I ident
E 18
I 18
.Fa ident
E 18
D 2
which is prepended to every message, and
.I logstat
which is a bit field indicating special status; current values are:
.IP LOG_PID \w'LOG_PID'u+3
E 2
I 2
D 15
is a string that is prepended to every message.
E 15
I 15
is a string that will be prepended to every message.
E 15
D 18
.I Logopt
E 18
I 18
The
.Fa logopt
argument
E 18
D 15
is a bit field indicating logging options.
Current values for
.I logopt
are:
E 15
I 15
is a bit field specifying logging options, which is formed by
D 18
.IR OR 'ing
E 18
I 18
.Tn OR Ns 'ing
E 18
one or more of the following values:
E 15
D 3
.IP LOG_PID \w'LOG_ODELAY'u+3
E 3
I 3
D 12
.IP LOG_PID \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
D 13
LOG_PID
E 12
E 3
E 2
D 11
log the process id with each message:
E 11
I 11
Log the process id with each message:
E 11
useful for identifying instantiations of daemons.
I 11
D 12
.IP LOG_PERROR \w'LOG_WARNING'u+3
E 12
I 12
.TP
LOG_PERROR
E 12
Write the message to stderr as well to the system log.
E 11
D 2
.LP
.I Openlog
returns zero on success.
If it cannot open the file
.I /dev/log,
it writes on
.I /dev/console
instead and returns \-1.
E 2
I 2
D 3
.IP LOG_CONS \w'LOG_ODELAY'u+3
Force writing error messages to the console if unable to send it to
E 3
I 3
D 12
.IP LOG_CONS \w'LOG_WARNING'u+3
E 12
I 12
.TP
E 13
LOG_CONS
E 18
I 18
.Bl -tag -width LOG_AUTHPRIV
.It Dv LOG_CONS
E 18
E 12
D 13
Force writing messages to the console if unable to send it to
E 3
.I syslogd.
This option is safe to use in daemon processes that have no controlling
terminal since
.I syslog
will fork before opening the console.
E 13
I 13
D 15
If unable to send the message to
.IR syslogd ,
write it to the console.
E 15
I 15
If
D 18
.I syslog
E 18
I 18
.Fn syslog
E 18
cannot pass the message to
D 18
.I syslogd
it will attempt to write the message to the console (``/dev/console'').
E 15
E 13
D 3
.IP LOG_ODELAY \w'LOG_ODELAY'u+3
E 3
I 3
D 4
.IP LOG_ODELAY \w'LOG_WARNING'u+3
E 3
Delay opening the connection to
E 4
I 4
D 12
.IP LOG_NDELAY \w'LOG_WARNING'u+3
E 12
I 12
.TP
LOG_NDELAY 
E 18
I 18
.Xr syslogd
it will attempt to write the message to the console
.Pq Dq Pa /dev/console.
.It Dv LOG_NDELAY 
E 18
E 12
D 7
Opening the connection to
E 7
I 7
Open the connection to
E 7
E 4
D 18
.I syslogd
E 18
I 18
.Xr syslogd
E 18
I 4
immediately.
D 15
Normally the open is delayed
E 4
D 3
until the first error occurs. Useful for programs that need to manage the
E 3
I 3
until the first message is logged.
Useful for programs that need to manage the
E 3
order in which file descriptors are allocated.
E 15
I 15
Normally the open is delayed until the first message is logged.
Useful for programs that need to manage the order in which file
descriptors are allocated.
E 15
I 7
D 12
.IP LOG_NOWAIT \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
D 13
LOG_NOWAIT
E 12
Don't wait for children forked to log messages on the console.
This option should be used by processes that enable notification
of child termination via SIGCHLD, as
.I syslog
may otherwise block waiting for a child whose exit status has already
been collected.
E 13
I 13
LOG_PERROR
E 18
I 18
.It Dv LOG_PERROR
E 18
D 15
Write the message to stderr as well to the system log.
E 15
I 15
Write the message to standard error output as well to the system log.
E 15
D 18
.TP
LOG_PID
E 18
I 18
.It Dv LOG_PID
E 18
D 15
Log the process id with each message:
useful for identifying instantiations of daemons.
E 15
I 15
Log the process id with each message: useful for identifying
instantiations of daemons.
E 15
E 13
E 7
E 2
D 18
.PP
E 18
I 18
.El
.Pp
E 18
I 2
The
D 3
.I maskpri
parameter is a mask for screening out low priority messages.
Calls to
.I syslog
with a priority whose corresponding bit in
.I maskpri
is not set are ignored.
The default allows all priorities to be logged.
E 3
I 3
D 18
.I facility
E 18
I 18
.Fa facility
E 18
D 7
parameter is encodes a default facility to be assigned to all messages
E 7
I 7
parameter encodes a default facility to be assigned to all messages
E 7
that do not have an explicit facility encoded:
D 12
.IP LOG_KERN \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
D 13
LOG_KERN
E 12
Messages generated by the kernel.
These cannot be generated by any user processes.
E 13
I 13
LOG_AUTH
E 18
I 18
.Bl -tag -width LOG_AUTHPRIV
.It Dv LOG_AUTH
E 18
The authorization system:
D 18
.IR login (1),
.IR su (1),
.IR getty (8),
E 18
I 18
.Xr login 1 ,
.Xr su 1 ,
.Xr getty 8 ,
E 18
etc.
E 13
D 12
.IP LOG_USER \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
I 15
LOG_AUTHPRIV
The same as LOG_AUTH, but logged to a file readable only by
E 18
I 18
.It Dv LOG_AUTHPRIV
The same as
.Dv LOG_AUTH ,
but logged to a file readable only by
E 18
selected individuals.
D 18
.TP
E 15
D 13
LOG_USER
E 12
Messages generated by random user processes.
D 7
This is the default if none is specified.
E 7
I 7
This is the default facility identifier if none is specified.
E 13
I 13
LOG_CRON
E 18
I 18
.It Dv LOG_CRON
E 18
The clock daemon.
E 13
E 7
D 12
.IP LOG_MAIL \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
D 13
LOG_MAIL
E 12
The mail system.
D 12
.IP LOG_DAEMON \w'LOG_WARNING'u+3
E 12
I 12
.TP
E 13
LOG_DAEMON
E 18
I 18
.It Dv LOG_DAEMON
E 18
E 12
System daemons, such as
D 6
.IR lpd (8),
E 6
I 6
D 18
.IR ftpd (8),
E 6
.IR routed (8),
E 18
I 18
D 19
.Xr ftpd 8 ,
E 19
.Xr routed 8 ,
E 18
D 12
etc.
.IP LOG_AUTH \w'LOG_WARNING'u+3
E 12
I 12
D 15
etc, that are not provided for explicitly by other facilities.
E 15
I 15
D 19
etc., that are not provided for explicitly by other facilities.
E 19
I 19
that are not provided for explicitly by other facilities.
E 19
E 15
D 18
.TP
D 13
LOG_AUTH
E 12
The authorization system:
.IR login (1),
.IR su (1),
.IR getty (8),
etc.
E 13
I 13
LOG_KERN
E 18
I 18
.It Dv LOG_KERN
E 18
Messages generated by the kernel.
These cannot be generated by any user processes.
E 13
I 5
D 12
.IP LOG_LPR \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
D 13
LOG_SYSLOG
Messages generated internally by
.IR syslogd (8).
.TP
E 13
LOG_LPR
E 18
I 18
.It Dv LOG_LPR
E 18
E 12
The line printer spooling system:
D 18
.IR lpr (1),
.IR lpc (8),
.IR lpd (8),
E 18
I 18
.Xr lpr 1 ,
.Xr lpc 8 ,
.Xr lpd 8 ,
E 18
etc.
E 5
D 12
.IP LOG_LOCAL0 \w'LOG_WARNING'u+3
E 12
I 12
D 18
.TP
I 13
LOG_MAIL
E 18
I 18
.It Dv LOG_MAIL
E 18
The mail system.
D 18
.TP
E 13
LOG_NEWS
E 18
I 18
.It Dv LOG_NEWS
E 18
The network news system.
D 18
.TP
I 13
LOG_SYSLOG
E 18
I 18
.It Dv LOG_SYSLOG
E 18
Messages generated internally by
D 18
.IR syslogd (8).
.TP
LOG_USER
E 18
I 18
.Xr syslogd 8 .
.It Dv LOG_USER
E 18
Messages generated by random user processes.
This is the default facility identifier if none is specified.
D 18
.TP
E 13
LOG_UUCP
E 18
I 18
.It Dv LOG_UUCP
E 18
The uucp system.
D 13
.TP
LOG_CRON
The clock daemon.
E 13
D 18
.TP
LOG_LOCAL0
E 18
I 18
.It Dv LOG_LOCAL0
E 18
E 12
Reserved for local use.
D 18
Similarly for LOG_LOCAL1 through LOG_LOCAL7.
E 3
.PP
E 2
.I Closelog
E 18
I 18
Similarly for
.Dv LOG_LOCAL1
through
.Dv LOG_LOCAL7 .
.El 
.Pp
The
.Fn closelog
function
E 18
can be used to close the log file.
I 2
D 18
.PP
.I Setlogmask
E 18
I 18
.Pp
The
.Fn setlogmask
function
E 18
sets the log priority mask to
D 18
.I maskpri
E 18
I 18
.Fa maskpri
E 18
and returns the previous mask.
D 3
Priorities and masks of 0 are ignored.
E 3
I 3
Calls to
D 18
.I syslog
E 18
I 18
.Fn syslog
E 18
D 7
with a priority lower than
E 7
I 7
with a priority not set in
E 7
D 18
.I maskpri
E 18
I 18
.Fa maskpri
E 18
are rejected.
I 7
The mask for an individual priority
D 18
.I pri
D 15
is calculated by the macro LOG_MASK(\fIpri\fP);
E 15
I 15
is calculated by the macro ``LOG_MASK(pri);''
E 18
I 18
.Fa pri
is calculated by the macro
.Fn LOG_MASK pri ;
E 18
E 15
the mask for all priorities up to and including
D 18
.I toppri
D 15
is given by the macro LOG_UPTO(\fItoppri\fP).
E 15
I 15
is given by the macro ``LOG_UPTO(toppri);''.
E 18
I 18
.Fa toppri
is given by the macro
.Fn LOG_UPTO toppri ; .
E 18
E 15
E 7
The default allows all priorities to be logged.
E 3
E 2
D 18
.SH EXAMPLES
.nf
I 15
.RS
E 18
I 18
.Sh RETURN VALUES
The routines
.Fn closelog ,
.Fn openlog ,
.Fn syslog
and
.Fn vsyslog
return no value.
.Pp
The routine
.Fn setlogmask
always returns the previous log mask level.
.Sh EXAMPLES
.Bd -literal -offset indent -compact
E 18
E 15
D 3
syslog(LOG_SALERT, "who: internal error 23");
E 3
I 3
syslog(LOG_ALERT, "who: internal error 23");
E 3

D 2
openlog("serverftp", LOG_PID);
E 2
I 2
D 3
openlog("serverftp", LOG_PID, 0);
E 3
I 3
openlog("ftpd", LOG_PID, LOG_DAEMON);
I 7
setlogmask(LOG_UPTO(LOG_ERR));
E 7
E 3
E 2
syslog(LOG_INFO, "Connection from host %d", CallingHost);
I 3

syslog(LOG_INFO|LOG_LOCAL2, "foobar error: %m");
I 15
D 18
.RE
E 15
E 3
.fi
I 15
.SH RETURNS
The routines
D 17
.I closelog ,
.I openlog ,
.I syslog
E 17
I 17
.IR closelog ,
.IR openlog ,
.IR syslog
E 17
and
.I vsyslog
D 17
return 0 upon successful completion.
Otherwise, -1 is returned and
.I errno
is set to indicate the error.
E 17
I 17
return no value.
E 17
.PP
The routine
.I setlogmask
D 17
always returns the previous log mask level, never returning
an error.
.SH ERRORS
The routines
.I syslog
and
.I vsyslog
may fail and set errno for any of the errors specified for the library
routines
.IR connect (2),
.IR send (2) ,
and
D 16
.IR socket (2).
E 16
I 16
.IR socket (2), 
or the following:
.TP
[EINVAL]
The
.I priority
parameter was invalid.
E 16
.PP
The routine
.I openlog
may fail and set errno for any of the errors specified for the library
routines
.IR connect (2)
and
.IR socket (2).
.PP
The routine
.I closelog
may fail and set errno for any of the errors specified for the library
routine
.IR close (2).
E 17
I 17
always returns the previous log mask level.
E 17
E 15
D 2
.SH "SEE ALSO
syslog(8)
E 2
I 2
.SH "SEE ALSO"
I 3
D 15
logger(1),
E 3
syslogd(8)
E 15
I 15
logger(1), syslogd(8)
E 18
I 18
.Ed
.Sh SEE ALSO
.Xr logger 1 ,
.Xr syslogd 8
.Sh HISTORY
These
functions appeared in 
.Bx 4.2 .
E 18
E 15
E 2
E 1
