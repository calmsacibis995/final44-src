h59756
s 00002/00002/00108
d D 8.1 93/06/04 12:06:28 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00082/00072/00028
d D 6.4 91/04/19 14:49:07 cael 6 5
c macro and text revision (-mdoc version 3)
e
s 00084/00028/00016
d D 6.3 90/08/27 20:44:15 bostic 5 4
c bring back for POSIX; redo using POSIX document as a base
e
s 00002/00000/00042
d D 6.2 89/05/17 21:53:28 bostic 4 3
c move to compatibility library
e
s 00001/00001/00041
d D 6.1 85/05/09 19:19:06 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00007/00008/00035
d D 5.1 85/05/09 19:18:40 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00043/00000/00000
d D 4.1 85/05/09 19:18:12 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 6
.\" Copyright (c) 1990 The Regents of the University of California.
E 6
I 6
D 7
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 6
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
E 5
.\"
I 5
.\" %sccs.include.redist.man%
.\"
E 5
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
.\"     %W% (Berkeley) %G%
E 6
.\"
D 2
.TH TIMES 2 
E 2
I 2
D 3
.TH TIMES 3C "1 April 1983"
E 3
I 3
D 5
.TH TIMES 3C "%Q%"
E 5
I 5
D 6
.TH TIMES 3 "%Q%"
E 5
E 3
E 2
.UC 4
.SH NAME
D 5
times \- get process times
E 5
I 5
times \- process times
E 5
.SH SYNOPSIS
.nf
D 5
.B "#include <sys/types.h>
.B "#include <sys/times.h>
.PP
.B times(buffer)
.B struct tms *buffer;
E 5
I 5
.ft B
#include <sys/times.h>

clock_t times(struct tms *tp);
.ft R
E 5
.fi
.SH DESCRIPTION
I 2
.ft B
D 5
This interface is obsoleted by getrusage(2).
I 4
.br
It is available from the compatibility library, libcompat.
E 5
I 5
This interface is obsoleted by getrusage(2) and gettimeofday(3).
E 5
E 4
.ft R
.PP
E 6
I 6
.Dd %Q%
.Dt TIMES 3
.Os BSD 4
.Sh NAME
.Nm times
.Nd process times
.Sh SYNOPSIS
.Fd #include <sys/times.h>
.Ft clock_t 
.Fn times "struct tms *tp"
.Sh DESCRIPTION
.Bf -symbolic
This interface is obsoleted by getrusage(2)
and gettimeofday(3).
.Ef
.Pp
E 6
E 2
D 5
.I Times
returns time-accounting information
for the current process
and for the terminated child processes
of the current process.
D 2
All times are in 1/HZ seconds, where HZ is either 50 or 60
depending on your locality.
E 2
I 2
All times are in 1/HZ seconds, where HZ is 60.
E 5
I 5
The
D 6
.I times
function returns the value of time in CLK_TCK's of a second since
E 6
I 6
.Fn times
function returns the value of time in
.Dv CLK_TCK Ns 's
of a second since
E 6
0 hours, 0 minutes, 0 seconds, January 1, 1970, Coordinated Universal
Time.
E 5
E 2
D 6
.PP
E 6
I 6
.Pp
E 6
D 5
This is the structure returned by
.IR times :
E 5
I 5
It also fills in the structure pointed to by
D 6
.I tp
E 6
I 6
.Fa tp
E 6
with time-accounting information.
E 5
D 6
.PP
E 6
I 6
.Pp
E 6
D 5
.nf
.so /usr/include/sys/times.h
E 5
I 5
The
D 6
.I tms
E 6
I 6
.Fa tms
E 6
structure is defined as follows:
D 6
.sp
E 6
I 6
.Bd -literal -offset indent
E 6
typedef struct {
D 6
.RS
clock_t tms_utime;
.br
clock_t tms_stime;
.br
clock_t tms_cutime;
.br
clock_t tms_cstime;
.br
.RE
E 6
I 6
	clock_t tms_utime;
	clock_t tms_stime;
	clock_t tms_cutime;
	clock_t tms_cstime;
E 6
}
E 5
D 6
.PP
E 6
I 6
.Ed
.Pp
E 6
D 5
.fi
The children times are the sum
of the children's process times and
their children's times.
E 5
I 5
The elements of this structure are defined as follows:
D 6
.TP
tms_utime
The CPU time charged for the execution of user instructions.
.TP
tms_stime
The CPU time charged for execution by the system on behalf of
E 6
I 6
.Bl -tag -width tms_cutime
.It Fa tms_utime
The
.Tn CPU
time charged for the execution of user instructions.
.It Fa tms_stime
The
.Tn CPU
time charged for execution by the system on behalf of
E 6
the process.
D 6
.TP
tms_cutime
E 6
I 6
.It Fa tms_cutime
E 6
The sum of the
D 6
.IR tms_utime s
E 6
I 6
.Fa tms_utime  s
E 6
and
D 6
.IR tms_cutime s
E 6
I 6
.Fa tms_cutime  s
E 6
of the child processes.
D 6
.TP
tms_cstime
E 6
I 6
.It Fa tms_cstime
E 6
The sum of the
D 6
.IR tms_stime s
E 6
I 6
.Fa tms_stime Ns s
E 6
and
D 6
.IR tms_cstime s
E 6
I 6
.Fa tms_cstime Ns s
E 6
of the child processes.
D 6
.PP
All times are in CLK_TCK's of a second.
.PP
E 6
I 6
.El
.Pp
All times are in
.Dv CLK_TCK Ns 's
of a second.
.Pp
E 6
The times of a terminated child process are included in the
D 6
.I tms_cutime
E 6
I 6
.Fa tms_cutime
E 6
and
D 6
.I tms_cstime
E 6
I 6
.Fa tms_cstime
E 6
elements of the parent when one of the
D 6
.IR wait ()
functions returns the process ID of the terminated child to the parent
(see
.IR wait (2)).
E 6
I 6
.Xr wait 2
functions returns the process ID of the terminated child to the parent.
E 6
If an error occurs,
D 6
.I times
returns ((clock_t)-1), and sets errno to indicate the error.
.SH ERRORS
.I Times
may fail and set errno for any of the errors specified for the library
E 6
I 6
.Fn times
returns the value
.Pq (clock_t)\-1 ,
and sets errno to indicate the error.
.Sh ERRORS
The
.Fn times
function
may fail and set the global variable
.Va errno
for any of the errors specified for the library
E 6
routines
D 6
.IR getrusage (2)
E 6
I 6
.Xr getrusage 2
E 6
and
D 6
.IR gettimeofday (2).
E 5
.SH "SEE ALSO"
D 2
time(1), time(2), vtimes(2)
.SH "ASSEMBLER (PDP-11)"
(times = 43.)
.br
.B sys times; buffer
E 2
I 2
D 5
time(1), getrusage(2), wait3(2), time(3)
E 5
I 5
time(1), getrusage(2), gettimeofday(2), wait(2)
.SH STANDARDS
.B Times
conforms to POSIX Std 1003.1-1988.
E 6
I 6
.Xr gettimeofday 2 .
.Sh SEE ALSO
.Xr time 1 ,
.Xr getrusage 2 ,
.Xr gettimeofday 2 ,
.Xr wait 2
.Sh STANDARDS
The
.Fn times
function
conforms to
.St -p1003.1-88 .
E 6
E 5
E 2
E 1
