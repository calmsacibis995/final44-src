h35536
s 00001/00001/00297
d D 8.2 93/11/17 07:05:44 bostic 7 6
c typo
e
s 00002/00002/00296
d D 8.1 93/06/09 18:51:09 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00002/00297
d D 5.4 93/06/09 18:51:06 bostic 5 3
c fixed the under development line
e
s 00002/00002/00297
d R 8.1 93/06/04 12:06:48 bostic 4 3
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00006/00004/00293
d D 5.3 91/07/23 14:26:49 cael 3 2
c inserted .Os
e
s 00198/00145/00099
d D 5.2 91/04/19 14:49:03 cael 2 1
c macro and text revision (-mdoc version 3)
e
s 00244/00000/00000
d D 5.1 90/12/04 20:11:30 bostic 1 0
c split out tzset and tzsetwall from ctime(3); first cut at making it
c understandable.
c date and time created 90/12/04 20:11:30 by bostic
e
u
U
t
T
I 1
D 2
.\" Copyright (c) 1989 The Regents of the University of California.
E 2
I 2
D 6
.\" Copyright (c) 1989, 1991 The Regents of the University of California.
E 2
.\" All rights reserved.
E 6
I 6
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 6
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Arthur Olson.
D 2
.\"
E 2
D 3
.\" %sccs.include.redist.man%
E 3
.\"
D 2
.\"	%W% (Berkeley) %G%
E 2
I 2
D 3
.\"     %W% (Berkeley) %G%
E 3
I 3
.\" %sccs.include.redist.roff%
E 3
E 2
.\"
I 3
.\"	%W% (Berkeley) %G%
.\"
E 3
D 2
.TH TZSET 3 "%Q%"
.SH NAME
tzset, tzsetwall \- initialize time conversion information
.SH SYNOPSIS
.nf
.ft B
void tzset()

void tzsetwall()
.ft R
.fi
.SH DESCRIPTION
.I Tzset
E 2
I 2
.Dd %Q%
.Dt TZSET 3
I 3
.Os
E 3
.Sh NAME
.Nm tzset ,
.Nm tzsetwall
.Nd initialize time conversion information
.Sh SYNOPSIS
.Fd #include <time.h>
.Ft void
.Fn tzset void
.Ft void
.Fn tzsetwall void
.Sh DESCRIPTION
The
.Fn tzset
function
E 2
initializes time conversion information used by the library routine
D 2
.IR localtime .
E 2
I 2
.Xr localtime 3 .
E 2
The environment variable
D 2
.B TZ
E 2
I 2
.Ev TZ
E 2
specifies how this is done.
D 2
.PP
E 2
I 2
.Pp
E 2
If
D 2
.B TZ
E 2
I 2
.Ev TZ
E 2
does not appear in the environment, the best available approximation to
local wall clock time, as specified by the
D 2
.IR tzfile (5)-format
file ``/etc/localtime'' is used.
.PP
E 2
I 2
.Xr tzfile 5 Ns -format
file
.Pa /etc/localtime
is used.
.Pp
E 2
If
D 2
.B TZ
E 2
I 2
.Ev TZ
E 2
appears in the environment but its value is a null string, Coordinated
D 2
Universal Time (UTC) is used (without leap second correction).
.PP
E 2
I 2
Universal Time
.Pq Tn UTC
is used (without leap second correction).
.Pp
E 2
If
D 2
.B TZ
appears in the environment and its value begins with a colon (``:''),
the rest of its value is used as a pathname of a 
.IR tzfile (5)-format
E 2
I 2
.Ev TZ
appears in the environment and its value begins with a colon
D 7
.Pq Ql : ,
E 7
I 7
.Pq Ql \: ,
E 7
the rest of its value is used as a pathname of a
.Xr tzfile 5 Ns -format
E 2
file from which to read the time conversion information.
D 2
If the first character of the pathname is a slash (``/'') it is used as
E 2
I 2
If the first character of the pathname is a slash
.Pq Ql /
it is used as
E 2
an absolute pathname; otherwise, it is used as a pathname relative to
the system time conversion information directory.
D 2
.PP
E 2
I 2
.Pp
E 2
If its value does not begin with a colon, it is first used as the pathname
of a file (as described above) from which to read the time conversion
information.
If that file cannot be read, the value is then interpreted as a direct
specification (the format is described below) of the time conversion
information.
D 2
.PP
E 2
I 2
.Pp
E 2
If the
D 2
.B TZ
E 2
I 2
.Ev TZ
E 2
environment variable does not specify a
D 2
.IR tzfile (5)-format
E 2
I 2
.Xr tzfile 5 Ns -format
E 2
file and cannot be interpreted as a direct specification,
D 2
UTC is used.
.PP
.I Tzsetwall
E 2
I 2
.Tn UTC
is used.
.Pp
The
.Fn tzsetwall
function
E 2
sets things up so that
D 2
.I localtime
E 2
I 2
.Xr localtime
E 2
returns the best available approximation of local wall clock time.
D 2
.SH "SPECIFICATION FORMAT"
E 2
I 2
.Sh SPECIFICATION FORMAT
E 2
When
D 2
.B TZ
E 2
I 2
.Ev TZ
E 2
is used directly as a specification of the time conversion information,
it must have the following syntax (spaces inserted for clarity):
D 2
.IP
\fIstd\|offset\fR[\fIdst\fR[\fIoffset\fR][\fB,\fIrule\fR]]
.PP
E 2
I 2
.Bd -filled -offset indent
.Em std offset Bo
.Em dst Bo
.Em offset
.Bc
.Bo
.No , Em rule
.Bc
.Bc
.Ed
.Pp
E 2
Where:
D 2
.RS
.TP 15
.IR std " and " dst
E 2
I 2
.Bl -tag -width std_and_dst -offset indent
.It Em std No and Em dst
E 2
Three or more bytes that are the designation for the standard
D 2
.RI ( std )
E 2
I 2
.Pq Em std
E 2
or summer
D 2
.RI ( dst )
E 2
I 2
.Pq Em dst
E 2
time zone.  Only
D 2
.I std
E 2
I 2
.Em std
E 2
is required; if
D 2
.I dst
E 2
I 2
.Em dst
E 2
is missing, then summer time does not apply in this locale.
D 2
Upper- and lowercase letters are explicitly allowed.  Any characters
E 2
I 2
Upper and lowercase letters are explicitly allowed.  Any characters
E 2
except a leading colon
D 2
.RB ( : ),
E 2
I 2
.Pq Ql : ,
E 2
digits, comma
D 2
.RB ( , ),
E 2
I 2
.Pq Ql \&, ,
E 2
minus
D 2
.RB ( \(mi ),
E 2
I 2
.Pq Ql \- ,
E 2
plus
D 2
.RB ( \(pl ),
and ASCII NUL are allowed.
.TP
.I offset
E 2
I 2
.Pq Ql + ,
and
.Tn ASCII
.Dv NUL
are allowed.
.It Em offset
E 2
Indicates the value one must add to the local time to arrive at
Coordinated Universal Time.  The
D 2
.I offset
E 2
I 2
.Em offset
E 2
has the form:
D 2
.RS
.IP
\fIhh\fR[\fB:\fImm\fR[\fB:\fIss\fR]]
.RE
.IP
E 2
I 2
.Bd -unfilled -offset indent
.Em hh Bo
.Pf \&: Em mm
.Bo
.Pf \&: Em ss
.Bc
.Bc
.Ed
.Pp
E 2
The minutes
D 2
.RI ( mm )
E 2
I 2
.Pq Em mm
E 2
and seconds
D 2
.RI ( ss )
E 2
I 2
.Pq Em ss
E 2
are optional.  The hour
D 2
.RI ( hh )
E 2
I 2
.Pq Em hh
E 2
is required and may be a single digit.  The
D 2
.I offset
E 2
I 2
.Em offset
E 2
following
D 2
.I std
E 2
I 2
.Em std
E 2
is required.  If no
D 2
.I offset
E 2
I 2
.Em offset
E 2
follows
D 2
.IR dst ,
E 2
I 2
.Em dst ,
E 2
summer time is assumed to be one hour ahead of standard time.  One or
more digits may be used; the value is always interpreted as a decimal
number.  The hour must be between zero and 24, and the minutes (and
seconds) \(em if present \(em between zero and 59.  If preceded by a
D 2
.RB `` \(mi '',
E 2
I 2
.Pq Ql \-
E 2
the time zone shall be east of the Prime Meridian; otherwise it shall be
west (which may be indicated by an optional preceding
D 2
.RB `` \(pl '').
.TP
.I rule
E 2
I 2
.Pq Ql + ) .
.It Em rule
E 2
Indicates when to change to and back from summer time.  The
D 2
.I rule
E 2
I 2
.Em rule
E 2
has the form:
D 2
.RS
.IP
\fIdate\fB/\fItime\fB,\fIdate\fB/\fItime\fR
.RE
.IP
E 2
I 2
.Bd -filled -offset indent
.Em date/time,date/time
.Ed
.Pp
E 2
where the first
D 2
.I date
E 2
I 2
.Em date
E 2
describes when the change from standard to summer time occurs and the
second
D 2
.I date
E 2
I 2
.Em date
E 2
describes when the change back happens.  Each
D 2
.I time
E 2
I 2
.Em time
E 2
field describes when, in current local time, the change to the other
time is made.
D 2
.IP
E 2
I 2
.Pp
E 2
The format of
D 2
.I date
E 2
I 2
.Em date
E 2
is one of the following:
D 2
.RS
.TP 10
.BI J n
E 2
I 2
.Bl -tag -width "M.m.n.d"
.It Sy J Em n
E 2
The Julian day
D 2
.I n
.RI "(1\ \(<=" "\ n\ " "\(<=\ 365).
E 2
I 2
.Em n
(1 \*(Le
.Em n
\*(Le 365).
E 2
Leap days are not counted; that is, in all years \(em including leap
years \(em February 28 is day 59 and March 1 is day 60.  It is
impossible to explicitly refer to the occasional February 29.
D 2
.TP
.I n
E 2
I 2
.It Em n
E 2
The zero-based Julian day
D 2
.RI "(0\ \(<=" "\ n\ " "\(<=\ 365).
E 2
I 2
(0 \*(Le
.Em n
\*(Le 365 ) .
E 2
Leap days are counted, and it is possible to refer to February 29.
D 2
.TP
.BI M m . n . d
E 2
I 2
.It Sy M  Em m.n.d
E 2
The
D 2
.IR d' th
day
.RI "(0\ \(<=" "\ d\ " "\(<=\ 6)
E 2
I 2
.Em d Ns 'th
day (0 \*(Le
.Em d
\*(Le 6 )
E 2
of week
D 2
.I n
E 2
I 2
.Em n
E 2
of month
D 2
.I m
E 2
I 2
.Em m
E 2
of the year
D 2
.RI "(1\ \(<=" "\ n\ " "\(<=\ 5,
.RI "1\ \(<=" "\ m\ " "\(<=\ 12,
where week 5 means ``the last
.I d
E 2
I 2
(1 \*(Le
.Em n
\*(Le 5),
(1 \*(Le
.Em m
\*(Le 12),
where week 5 means
.Do
the last
.Em d
E 2
day in month
D 2
.IR m ''
E 2
I 2
.Em m
.Dc
E 2
which may occur in either the fourth or the fifth week).  Week 1 is the
first week in which the
D 2
.IR d' th
E 2
I 2
.Em d Ns 'th
E 2
day occurs.  Day zero is Sunday.
D 2
.RE
.IP "" 15
E 2
I 2
.Pp
E 2
The
D 2
.I time
E 2
I 2
.Em time
E 2
has the same format as
D 2
.I offset
E 2
I 2
.Em offset
E 2
except that no leading sign
D 2
.RB (`` \(mi ''
E 2
I 2
.Pq Ql \-
E 2
or
D 2
.RB `` \(pl '')
E 2
I 2
.Pq Ql +
E 2
is allowed.  The default, if
D 2
.I time
E 2
I 2
.Em time
E 2
is not given, is
D 2
.BR 02:00:00 .
.RE
.LP
E 2
I 2
.Sy 02:00:00 .
.El
.Pp
E 2
If no
D 2
.I rule
is present in the 
.BR TZ 
E 2
I 2
.Em rule
is present in the
.Ev TZ
E 2
specification, the rules specified
by the
D 2
.IR tzfile (5)-format
E 2
I 2
.Xr tzfile 5 Ns -format
E 2
file
D 2
.B posixrules
E 2
I 2
.Em posixrules
E 2
in the system time conversion information directory are used, with the
D 2
standard and summer time offsets from UTC replaced by those specified by
E 2
I 2
standard and summer time offsets from
.Tn UTC
replaced by those specified by
E 2
the
D 2
.I offset
E 2
I 2
.Em offset
E 2
values in
D 2
.BR TZ .
.PP
E 2
I 2
.Ev TZ .
.El
.Pp
E 2
For compatibility with System V Release 3.1, a semicolon
D 2
.RB ( ; )
E 2
I 2
.Pq Ql ;
E 2
may be used to separate the
D 2
.I rule
E 2
I 2
.Em rule
E 2
from the rest of the specification.
D 2
.SH FILES
.ta \w'/usr/share/zoneinfo/posixrules\0\0'u
/etc/localtime	local time zone file
.br
/usr/share/zoneinfo	time zone directory
.br
/usr/share/zoneinfo/posixrules	rules for POSIX-style TZ's
.br
/usr/share/zoneinfo/GMT	for UTC leap seconds
.sp
If
.I /usr/share/zoneinfo/GMT
is absent, UTC leap seconds are loaded from
.IR /usr/share/zoneinfo/posixrules .
.SH SEE ALSO
date(1), gettimeofday(2), ctime(3), getenv(3), time(3), tzfile(5)
E 2
I 2
.Sh FILES
.Bl -tag -width /usr/share/zoneinfo/posixrules -compact
.It Pa /etc/localtime
local time zone file
.It Pa /usr/share/zoneinfo
time zone directory
.It Pa /usr/share/zoneinfo/posixrules
rules for
.Tn POSIX Ns -style
.Tn TZ Ns 's
.It Pa /usr/share/zoneinfo/GMT	for
.Tn UTC
leap seconds
.El
.Pp
If the file
.Pa /usr/share/zoneinfo/GMT
does not exist,
.Tn UTC
leap seconds are loaded from
.Pa /usr/share/zoneinfo/posixrules .
.Sh SEE ALSO
.Xr date 1 ,
.Xr gettimeofday 2 ,
.Xr ctime 3 ,
.Xr getenv 3 ,
.Xr time 3 ,
.Xr tzfile 5
.Sh HISTORY
The
D 3
.Fn tzset
E 3
I 3
.Nm tzset
E 3
and
D 3
.Fn tzsetwall
E 3
I 3
.Nm tzsetwall
E 3
D 5
functions are
.Ud .
E 5
I 5
functions first appeared in 4.4BSD.
E 5
E 2
E 1
