h61747
s 00002/00002/00079
d D 8.1 93/06/04 12:43:39 bostic 12 11
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00000/00001/00081
d D 6.9 93/06/02 20:10:37 bostic 11 10
c typo
e
s 00004/00003/00078
d D 6.8 92/06/23 19:03:28 cael 10 9
c fix spelling.
e
s 00015/00015/00066
d D 6.7 91/10/24 16:21:54 bostic 9 8
c prototype the functions
e
s 00039/00035/00042
d D 6.6 91/10/23 17:00:07 bostic 8 7
c add isblank(3); call things functions consistently, don't list the
c rest of the world in the SEE ALSO section
e
s 00075/00091/00002
d D 6.5 91/04/19 14:49:06 cael 7 6
c macro and text revision (-mdoc version 3)
e
s 00001/00001/00092
d D 6.4 86/05/12 17:53:14 karels 6 5
c gotta git grammar
e
s 00001/00001/00092
d D 6.3 85/09/11 17:10:05 bloom 5 4
c change iscntrl back to 4.2 doc.  Fix the source, don't document the bug
e
s 00025/00003/00068
d D 6.2 85/09/06 17:58:23 bloom 4 3
c add isgraph, tolower, toupper, and toascii
c change isprint to old form
e
s 00009/00005/00062
d D 6.1 85/05/15 14:54:19 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00003/00003/00064
d D 5.1 85/05/15 14:54:11 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00067/00000/00000
d D 4.1 85/05/15 14:54:02 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 7
.\"	%W% (Berkeley) %G%
E 7
I 7
D 12
.\" Copyright (c) 1991 Regents of the University of California.
.\" All rights reserved.
E 12
I 12
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 12
E 7
.\"
D 2
.TH CTYPE 3 
E 2
I 2
D 3
.TH CTYPE 3  "25 February 1983"
E 3
I 3
D 7
.TH CTYPE 3  "%Q%"
E 3
E 2
.AT 3
.SH NAME
D 2
isalpha, isupper, islower, isdigit, isalnum, isspace, ispunct, isprint, iscntrl, isascii \- character classification
E 2
I 2
D 3
isalpha, isupper, islower, isdigit, isalnum, isspace, ispunct, isprint, iscntrl, isascii \- character classification macros
E 3
I 3
D 4
isalpha, isupper, islower, isdigit, isxdigit, isalnum, isspace, ispunct, isprint, iscntrl, isascii \- character classification macros
E 4
I 4
isalpha, isupper, islower, isdigit, isxdigit, isalnum, isspace, ispunct, isprint, isgraph, iscntrl, isascii, toupper, tolower, toascii \- character classification macros
E 4
E 3
E 2
.SH SYNOPSIS
.B #include <ctype.h>
.PP
.B isalpha(c)
.PP
.B . . .
.SH DESCRIPTION
These macros classify ASCII-coded integer values
by table lookup.
Each is a predicate returning nonzero for true,
zero for false.
.I Isascii
E 7
I 7
D 11
.\"
E 11
.\" %sccs.include.redist.man%
.\"
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt CTYPE 3
.Os
.Sh NAME
I 8
.Nm isalnum ,
E 8
.Nm isalpha ,
D 8
.Nm isupper ,
.Nm islower ,
E 8
I 8
.Nm isascii ,
.Nm isblank ,
.Nm iscntrl ,
E 8
.Nm isdigit ,
D 8
.Nm isxdigit ,
.Nm isalnum ,
.Nm isspace ,
.Nm ispunct ,
.Nm isprint ,
E 8
.Nm isgraph ,
D 8
.Nm iscntrl ,
.Nm isascii ,
.Nm toupper ,
.Nm tolower ,
E 8
I 8
.Nm islower ,
.Nm isprint ,
.Nm ispunct ,
.Nm isspace ,
.Nm isupper ,
.Nm isxdigit ,
E 8
.Nm toascii
I 8
.Nm tolower ,
.Nm toupper ,
E 8
.Nd character classification macros
.Sh SYNOPSIS
.Fd #include <ctype.h>
.Fa int c
.br
I 8
D 9
.Fn isalnum c
E 8
.Fn isalpha c
D 8
.Fn isupper c
.Fn islower c
E 8
I 8
.Fn isascii c
.Fn iscntrl c
E 8
.Fn isdigit c
D 8
.Fn isxdigit c
.Fn isalnum c
.Fn isspace c
.Fn ispunct c
.Fn isprint c
E 8
.Fn isgraph c
D 8
.Fn iscntrl c
.Fn isascii c
.Fn toupper c
.Fn tolower c
E 8
I 8
.Fn islower c
.Fn isprint c
.Fn ispunct c
.Fn isspace c
.Fn isupper c
.Fn isxdigit c
E 8
.Fn toascii c
I 8
.Fn tolower c
.Fn toupper c
E 9
I 9
.Fn isalnum "int c"
.Fn isalpha "int c"
.Fn isascii "int c"
.Fn iscntrl "int c"
.Fn isdigit "int c"
.Fn isgraph "int c"
.Fn islower "int c"
.Fn isprint "int c"
.Fn ispunct "int c"
.Fn isspace "int c"
.Fn isupper "int c"
.Fn isxdigit "int c"
.Fn toascii "int c"
.Fn tolower "int c"
.Fn toupper "int c"
E 9
E 8
.Sh DESCRIPTION
D 8
The above macros perform character tests and conversions on the integer
E 8
I 8
D 10
The above fucntions perform character tests and conversions on the integer
E 10
I 10
The above functions perform character tests and conversions on the integer
E 10
E 8
.Ar c .
D 8
.Pp
E 8
I 8
D 10
They are available as macros, defined in the include file <ctype.h>, and
as true functions in the C library.
E 10
I 10
They are available as macros, defined in the include file
.Aq Pa ctype.h ,
or as true functions in the C library.
E 10
E 8
See the specific manual pages for more information.
.Sh SEE ALSO
I 8
.Xr isalnum 3 ,
E 8
.Xr isalpha 3 ,
D 8
.Xr isupper 3 ,
.Xr islower 3 ,
E 8
I 8
.Xr isascii 3 ,
.Xr isblank 3 ,
.Xr iscntrl 3 ,
E 8
.Xr isdigit 3 ,
D 8
.Xr isxdigit 3 ,
.Xr isalnum 3 ,
.Xr isspace 3 ,
.Xr ispunct 3 ,
.Xr isprint 3 ,
E 8
.Xr isgraph 3 ,
D 8
.Xr iscntrl 3 ,
.Xr isascii 3 ,
.Xr toupper 3 ,
.Xr tolower 3 ,
E 8
I 8
.Xr islower 3 ,
.Xr isprint 3 ,
.Xr ispunct 3 ,
.Xr isspace 3 ,
.Xr isupper 3 ,
.Xr isxdigit 3 ,
E 8
.Xr toascii 3 ,
I 8
.Xr tolower 3 ,
.Xr toupper 3 ,
E 8
.Xr ascii 7
.Sh STANDARDS
These functions, except for
I 8
.Fn isblank ,
E 8
.Fn toupper ,
.Fn tolower
E 7
D 4
is defined on all integer values; the rest
E 4
I 4
and
D 7
.I toascii
are defined on all integer values; the rest
E 4
are defined only where 
.I isascii
is true and on the single non-ASCII value
EOF (see
D 2
.IR stdio (3)).
E 2
I 2
.IR stdio (3S)).
E 2
.TP 15n
.I isalpha
.I c
is a letter
.TP
.I isupper
.I c
is an upper case letter
.TP
.I islower 
.I c
is a lower case letter
.TP
.I isdigit
.I c
is a digit
.TP
I 3
.I isxdigit
.I c
is a hex digit
.TP
E 3
.I isalnum
.I c
is an alphanumeric character
.TP
.I isspace
.I c
D 3
is a space, tab, carriage return, newline, or formfeed
E 3
I 3
is a space, tab, carriage return, newline, vertical tab, or formfeed
E 3
.TP
.I ispunct
.I c
is a punctuation character (neither control nor alphanumeric)
.TP
.I isprint
.I c
D 3
is a printing character, code 040(8) (space) through 0176 (tilde)
E 3
I 3
D 4
is a printing character, code 041(8) (exclamation point) through 0176 (tilde)
E 4
I 4
is a printing character, code 040(8) (space) through 0176 (tilde)
E 4
E 3
.TP
I 4
.I isgraph
.I c
D 6
is a printing character, like
E 6
I 6
is a printing character, similar to
E 6
.I isprint
except false for space.
.TP
E 4
.I iscntrl
.I c
is a delete character (0177) or ordinary control character
D 3
(less than 040).
E 3
I 3
D 5
(less than 040 and not isspace(c)).
E 5
I 5
(less than 040).
E 5
E 3
.TP
.I isascii
.I c
is an ASCII character, code less than 0200
I 4
.TP
.I tolower
.I c
is converted to lower case.  Return value is undefined if not 
.I isupper(c).
.TP
.I toupper
.I c
is converted to upper case.  Return value is undefined if not 
.I islower(c).
.TP
.I toascii
.I c
is converted to be a valid ascii character.
E 4
.SH "SEE ALSO"
ascii(7)
E 7
I 7
.Fn toascii ,
conform to
.St -ansiC .
E 7
E 1
