h24277
s 00002/00002/00127
d D 8.4 95/05/25 12:22:20 mckusick 11 10
c zero terminated => NULL terminated
e
s 00001/00001/00128
d D 8.3 94/01/12 16:58:32 mckusick 10 9
c typesetting nit
e
s 00001/00000/00128
d D 8.2 93/12/11 22:37:45 mckusick 9 8
c copyediting for Usenix manuals
e
s 00002/00002/00126
d D 8.1 93/06/04 12:50:09 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00092/00077/00036
d D 6.6 91/04/19 14:50:24 cael 7 6
c macro and text revision (-mdoc version 3)
e
s 00001/00011/00112
d D 6.5 90/06/23 17:59:04 trent 6 5
c new copyright notice
e
s 00018/00006/00105
d D 6.4 89/02/14 16:58:27 bostic 5 4
c add Berkeley specific copyright
e
s 00002/00003/00109
d D 6.3 86/05/19 03:19:01 lepreau 4 3
c correct meaning of stayopen flag
e
s 00001/00001/00111
d D 6.2 86/05/09 21:57:41 lepreau 3 2
c p_proto and s_port are int, not long.
e
s 00001/00001/00111
d D 6.1 85/05/15 16:21:13 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00112/00000/00000
d D 5.1 85/05/15 16:21:07 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 7
.\" Copyright (c) 1983 The Regents of the University of California.
E 7
I 7
D 8
.\" Copyright (c) 1983, 1991 The Regents of the University of California.
E 7
.\" All rights reserved.
E 8
I 8
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 8
E 5
.\"
I 5
D 6
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 6
I 6
.\" %sccs.include.redist.man%
E 6
.\"
E 5
D 7
.\"	%W% (Berkeley) %G%
E 7
I 7
.\"     %W% (Berkeley) %G%
E 7
.\"
D 2
.TH GETSERVENT 3N "9 February 1983"
E 2
I 2
D 5
.TH GETSERVENT 3N "%Q%"
E 5
I 5
D 7
.TH GETSERVENT 3 "%Q%"
E 5
E 2
.UC 5
.SH NAME
D 5
getservent, getservbyport, getservbyname, setservent, endservent \- get service entry
E 5
I 5
getservent, getservbyport, getservbyname, setservent,
endservent \- get service entry
E 5
.SH SYNOPSIS
.nf
.ft B
#include <netdb.h>
.PP
.ft B
struct servent *getservent()
.PP
.ft B
struct servent *getservbyname(name, proto)
char *name, *proto;
.PP
.ft B
struct servent *getservbyport(port, proto)
int port; char *proto;
.PP
.ft B
setservent(stayopen)
int stayopen
.PP
.ft B
endservent()
.fi
.SH DESCRIPTION
.IR Getservent ,
.IR getservbyname ,
E 7
I 7
.Dd %Q%
.Dt GETSERVENT 3
.Os BSD 4.2
.Sh NAME
.Nm getservent ,
.Nm getservbyport ,
.Nm getservbyname ,
.Nm setservent ,
.Nm endservent
.Nd get service entry
.Sh SYNOPSIS
.Fd #include <netdb.h>
.Ft struct servent *
.Fn getservent 
.Ft struct servent *
.Fn getservbyname "char *name" "char *proto"
.Ft struct servent *
.Fn getservbyport "int port" proto
.Ft void
.Fn setservent "int stayopen"
.Ft void
.Fn endservent void
.Sh DESCRIPTION
The
.Fn getservent ,
.Fn getservbyname ,
E 7
and
D 7
.I getservbyport
E 7
I 7
.Fn getservbyport
functions
E 7
each return a pointer to an object with the
following structure
containing the broken-out
fields of a line in the network services data base,
D 7
.IR /etc/services .
.RS
.PP
.nf
E 7
I 7
.Pa /etc/services .
.Bd -literal -offset indent
E 7
struct	servent {
	char	*s_name;	/* official name of service */
	char	**s_aliases;	/* alias list */
D 3
	long	s_port;		/* port service resides at */
E 3
I 3
	int	s_port;		/* port service resides at */
E 3
	char	*s_proto;	/* protocol to use */
};
D 7
.ft R
.ad
.fi
.RE
.PP
E 7
I 7
.Ed
.Pp
E 7
The members of this structure are:
D 7
.TP \w's_aliases'u+2n
s_name
E 7
I 7
.Bl -tag -width s_aliases
.It Fa s_name
E 7
The official name of the service.
D 7
.TP \w's_aliases'u+2n
s_aliases
E 7
I 7
.It Fa s_aliases
E 7
D 11
A zero terminated list of alternate names for the service.
E 11
I 11
A NULL-terminated list of alternate names for the service.
E 11
D 7
.TP \w's_aliases'u+2n
s_port
E 7
I 7
.It Fa s_port
E 7
The port number at which the service resides.
Port numbers are returned in network byte order.
D 7
.TP \w's_aliases'u+2n
s_proto
E 7
I 7
.It Fa s_proto
E 7
The name of the protocol to use when contacting the
service.
D 7
.PP
.I Getservent
E 7
I 7
.El
.Pp
The
.Fn getservent
function
E 7
reads the next line of the file, opening the file if necessary.
D 7
.PP
.I Setservent
E 7
I 7
.Pp
The
.Fn setservent
function
E 7
opens and rewinds the file.  If the
D 7
.I stayopen
E 7
I 7
.Fa stayopen
E 7
flag is non-zero,
the net data base will not be closed after each call to 
D 4
.I getservent
(either directly, or indirectly through one of
the other \*(lqgetserv\*(rq calls).
E 4
I 4
D 7
.I getservbyname
or .IR getservbyport .
E 4
.PP
.I Endservent
E 7
I 7
.Fn getservbyname
or
.Fn getservbyport .
.Pp
The
.Fn endservent
function
E 7
closes the file.
D 7
.PP
.I Getservbyname
E 7
I 7
.Pp
The
.Fn getservbyname
E 7
and
D 7
.I getservbyport
E 7
I 7
.Fn getservbyport
functions
E 7
sequentially search from the beginning
of the file until a matching
protocol name or
port number is found,
D 7
or until EOF is encountered.
If a protocol name is also supplied (non-NULL),
E 7
I 7
or until
.Dv EOF
is encountered.
D 11
If a protocol name is also supplied (non-
E 11
I 11
If a protocol name is also supplied (non-\c
E 11
.Dv NULL ) , 
E 7
searches must also match the protocol.
I 9
D 10
.ne 1I
E 10
I 10
.ne 1i
E 10
E 9
D 7
.SH FILES
/etc/services
.SH "SEE ALSO"
D 5
getprotoent(3N), services(5)
E 5
I 5
getprotoent(3), services(5)
E 5
.SH DIAGNOSTICS
E 7
I 7
.Sh FILES
.Bl -tag -width /etc/services -compact
.It Pa /etc/services
.El
.Sh DIAGNOSTICS
E 7
Null pointer
D 7
(0) returned on EOF or error.
.SH BUGS
All information
is contained in a static area
so it must be copied if it is
to be saved.  Expecting port
numbers to fit in a 32 bit
E 7
I 7
(0) returned on
.Dv EOF
or error.
.Sh SEE ALSO
.Xr getprotoent 3 ,
.Xr services 5
.Sh HISTORY
The
.Fn getservent ,
.Fn getservbyport ,
.Fn getservbyname ,
.Fn setservent ,
and
.Fn endservent
functions appeared in 
.Bx 4.2 .
.Sh BUGS
These functions use static data storage;
if the data is needed for future use, it should be
copied before any subsequent calls overwrite it.
Expecting port numbers to fit in a 32 bit
E 7
quantity is probably naive.
E 1
