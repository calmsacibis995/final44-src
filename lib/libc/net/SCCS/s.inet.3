h01796
s 00002/00002/00167
d D 8.1 93/06/04 12:50:17 bostic 12 11
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00101/00077/00068
d D 6.10 91/04/19 14:50:29 cael 11 10
c macro and text revision (-mdoc version 3)
e
s 00001/00011/00144
d D 6.9 90/06/23 17:59:26 trent 10 9
c new copyright notice
e
s 00031/00009/00124
d D 6.8 90/06/23 16:15:37 karels 9 8
c add inet_aton
e
s 00016/00005/00117
d D 6.7 89/02/14 16:54:05 bostic 8 7
c add Berkeley specific copyright
e
s 00002/00002/00120
d D 6.6 87/10/01 14:40:37 bostic 7 6
c return u_long, not int; bug report 4.3BSD/lib/37
e
s 00001/00001/00121
d D 6.5 87/10/01 14:35:23 bostic 6 5
c INADDR_NONE, not -1; bug report 4.3BSD/lib/22
e
s 00001/00001/00121
d D 6.4 86/05/27 10:38:33 kjd 5 4
c add comments
e
s 00001/00001/00121
d D 6.3 86/05/15 14:01:02 mckusick 4 3
c gethostent => gethostbyname
e
s 00001/00001/00121
d D 6.2 86/04/29 14:04:23 karels 3 2
c fix type of inet_network
e
s 00005/00003/00117
d D 6.1 85/05/15 16:22:28 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00120/00000/00000
d D 5.1 85/05/15 16:22:22 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 8
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 8
I 8
D 9
.\" Copyright (c) 1983 The Regents of the University of California.
E 9
I 9
D 11
.\" Copyright (c) 1983, 1990 The Regents of the University of California.
E 11
I 11
D 12
.\" Copyright (c) 1983, 1990, 1991 The Regents of the University of California.
E 11
E 9
.\" All rights reserved.
E 12
I 12
.\" Copyright (c) 1983, 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 12
E 8
.\"
I 8
D 10
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 10
I 10
.\" %sccs.include.redist.man%
E 10
.\"
E 8
D 11
.\"	%W% (Berkeley) %G%
E 11
I 11
.\"     %W% (Berkeley) %G%
E 11
.\"
D 2
.TH INET 3N "18 July 1983"
E 2
I 2
D 8
.TH INET 3N "%Q%"
E 8
I 8
D 11
.TH INET 3 "%Q%"
E 8
E 2
.UC 5
.SH NAME
D 9
inet_addr, inet_network, inet_ntoa, inet_makeaddr, inet_lnaof, inet_netof \- Internet address manipulation routines
E 9
I 9
inet_aton, inet_addr, inet_network, inet_ntoa, inet_makeaddr, inet_lnaof, inet_netof \- Internet address manipulation routines
E 9
.SH SYNOPSIS
.nf
.B "#include <sys/socket.h>
.B "#include <netinet/in.h>
.B "#include <arpa/inet.h>
.PP
I 9
.B "int inet_aton(cp, pin)
.B "char *cp;
.B "struct in_addr *pin;
.PP
E 9
D 2
.B "struct in_addr inet_addr(cp)
E 2
I 2
.B "unsigned long inet_addr(cp)
E 2
.B "char *cp;
.PP
D 3
.B "int inet_network(cp)
E 3
I 3
.B "unsigned long inet_network(cp)
E 3
.B "char *cp;
.PP
.B "char *inet_ntoa(in)
D 2
.B "struct inet_addr in;
E 2
I 2
.B "struct in_addr in;
E 2
.PP
.B "struct in_addr inet_makeaddr(net, lna)
.B "int net, lna;
.PP
D 7
.B "int inet_lnaof(in)
E 7
I 7
.B "unsigned long inet_lnaof(in)
E 7
.B "struct in_addr in;
.PP
D 7
.B "int inet_netof(in)
E 7
I 7
.B "unsigned long inet_netof(in)
E 7
.B "struct in_addr in;
.fi
.SH DESCRIPTION
E 11
I 11
.Dd %Q%
.Dt INET 3
.Os BSD 4.2
.Sh NAME
.Nm inet_aton ,
.Nm inet_addr ,
.Nm inet_network ,
.Nm inet_ntoa ,
.Nm inet_makeaddr ,
.Nm inet_lnaof ,
.Nm inet_netof
.Nd Internet address manipulation routines
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Fd #include <netinet/in.h>
.Fd #include <arpa/inet.h>
.Ft int 
.Fn inet_aton "char *cp" "struct in_addr *pin"
.Ft unsigned long 
.Fn inet_addr "char *cp"
.Ft unsigned long 
.Fn inet_network "char *cp"
.Ft char *
.Fn inet_ntoa "struct in_addr in"
.Ft struct in_addr 
.Fn inet_makeaddr "int net" "int lna"
.Ft unsigned long 
.Fn inet_lnaof "struct in_addr in"
.Ft unsigned long 
.Fn inet_netof "struct in_addr in"
.Sh DESCRIPTION
E 11
The routines
I 9
D 11
.IR inet_aton ,
E 9
.I inet_addr
E 11
I 11
.Fn inet_aton ,
.Fn inet_addr
E 11
and
D 11
.I inet_network
E 11
I 11
.Fn inet_network
E 11
D 9
each interpret character strings representing
E 9
I 9
interpret character strings representing
E 9
D 11
numbers expressed in the Internet standard \*(lq.\*(rq
E 11
I 11
numbers expressed in the Internet standard
.Ql \&.
E 11
D 9
notation, returning numbers suitable for use
E 9
I 9
notation.
The
D 11
.I inet_aton
E 11
I 11
.Fn inet_aton
E 11
routine interprets the specified character string as an Internet address,
placing the address into the structure provided.
It returns 1 if the string was successfully interpreted,
or 0 if the string is invalid.
The
D 11
.I inet_addr
E 11
I 11
.Fn inet_addr
E 11
and
D 11
.I inet_network
E 11
I 11
.Fn inet_network
E 11
functions return numbers suitable for use
E 9
as Internet addresses and Internet network
D 9
numbers, respectively.  The routine
E 9
I 9
numbers, respectively.
The routine
E 9
D 11
.I inet_ntoa
takes an Internet address and returns an ASCII
string representing the address in \*(lq.\*(rq
E 11
I 11
.Fn inet_ntoa
takes an Internet address and returns an
.Tn ASCII
string representing the address in
.Ql \&.
E 11
notation.  The routine
D 11
.I inet_makeaddr
E 11
I 11
.Fn inet_makeaddr
E 11
takes an Internet network number and a local
network address and constructs an Internet address
from it.  The routines
D 11
.I inet_netof
E 11
I 11
.Fn inet_netof
E 11
and
D 11
.I inet_lnaof
E 11
I 11
.Fn inet_lnaof
E 11
break apart Internet host addresses, returning
the network number and local network address part,
respectively.
D 11
.PP
E 11
I 11
.Pp
E 11
D 9
All Internet address are returned in network
E 9
I 9
All Internet addresses are returned in network
E 9
order (bytes ordered from left to right).
All network numbers and local address parts are
returned as machine format integer values.
D 11
.SH "INTERNET ADDRESSES"
Values specified using the \*(lq.\*(rq notation take one
E 11
I 11
.Sh INTERNET ADDRESSES
Values specified using the
.Ql \&.
notation take one
E 11
of the following forms:
D 11
.RS
.nf
E 11
I 11
.Bd -literal -offset indent
E 11
a.b.c.d
a.b.c
a.b
a
D 11
.RE
.fi
E 11
I 11
.Ed
.Pp
E 11
When four parts are specified, each is interpreted
as a byte of data and assigned, from left to right,
to the four bytes of an Internet address.  Note
that when an Internet address is viewed as a 32-bit
D 11
integer quantity on the VAX the bytes referred to
above appear as \*(lqd.c.b.a\*(rq.  That is, VAX bytes are
E 11
I 11
integer quantity on the
.Tn VAX
the bytes referred to
above appear as
.Dq Li d.c.b.a .
That is,
.Tn VAX
bytes are
E 11
ordered from right to left.
D 11
.PP
E 11
I 11
.Pp
E 11
When a three part address is specified, the last
part is interpreted as a 16-bit quantity and placed
D 9
in the right most two bytes of the network address.
E 9
I 9
in the right-most two bytes of the network address.
E 9
This makes the three part address format convenient
for specifying Class B network addresses as
D 11
\*(lq128.net.host\*(rq.
.PP
E 11
I 11
.Dq Li 128.net.host .
.Pp
E 11
When a two part address is supplied, the last part
is interpreted as a 24-bit quantity and placed in
the right most three bytes of the network address.
This makes the two part address format convenient
for specifying Class A network addresses as
D 11
\*(lqnet.host\*(rq.
.PP
E 11
I 11
.Dq Li net.host .
.Pp
E 11
When only one part is given, the value is stored
directly in the network address without any byte
rearrangement.
D 11
.PP
All numbers supplied as \*(lqparts\*(rq in a \*(lq.\*(rq notation
E 11
I 11
.Pp
All numbers supplied as
.Dq parts
in a
.Ql  \&.
notation
E 11
may be decimal, octal, or hexadecimal, as specified
D 5
in the C language (i.e. a leading 0x or 0X implies
E 5
I 5
in the C language (i.e., a leading 0x or 0X implies
E 5
hexadecimal; otherwise, a leading 0 implies octal;
otherwise, the number is interpreted as decimal).
D 11
.SH "SEE ALSO"
D 4
gethostent(3N), getnetent(3N), hosts(5), networks(5),
E 4
I 4
D 8
gethostbyname(3N), getnetent(3N), hosts(5), networks(5),
E 8
I 8
gethostbyname(3), getnetent(3), hosts(5), networks(5),
E 8
E 4
.SH DIAGNOSTICS
D 6
The value \-1 is returned by
E 6
I 6
The constant \fBINADDR_NONE\fP is returned by
E 6
.I inet_addr
E 11
I 11
.Sh DIAGNOSTICS
The constant
.Dv INADDR_NONE
is returned by
.Fn inet_addr
E 11
and
D 11
.I inet_network
E 11
I 11
.Fn inet_network
E 11
for malformed requests.
D 11
.SH BUGS
I 9
The value INADDR_NONE (0xffffffff) is a valid broadcast address, but
.I inet_addr
E 11
I 11
.Sh SEE ALSO
.Xr gethostbyname 3 ,
.Xr getnetent 3 ,
.Xr hosts 5 ,
.Xr networks 5 ,
.Sh HISTORY
These
functions appeared in 
.Bx 4.2 .
.Sh BUGS
The value
.Dv INADDR_NONE
(0xffffffff) is a valid broadcast address, but
.Fn inet_addr
E 11
cannot return that value without indicating failure.
The newer
D 11
.I inet_aton
E 11
I 11
.Fn inet_aton
E 11
function does not share this problem.
E 9
The problem of host byte ordering versus network byte ordering is
D 9
confusing.  A simple way to specify Class C network addresses in a manner
similar to that for Class B and Class A is needed.
E 9
I 9
confusing.
E 9
The string returned by
D 11
.I inet_ntoa
E 11
I 11
.Fn inet_ntoa
E 11
resides in a static memory area.
I 2
D 11
.br
Inet_addr should return a struct in_addr.
E 11
I 11
.Pp
Inet_addr should return a
.Fa struct in_addr .
E 11
E 2
E 1
