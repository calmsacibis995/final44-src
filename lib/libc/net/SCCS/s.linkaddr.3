h34523
s 00002/00002/00103
d D 8.1 93/07/28 13:50:38 bostic 4 3
c 4.4BSD snapshot (revision 8.1)
e
s 00043/00030/00059
d D 5.2 93/03/02 17:49:51 bostic 3 1
c piss on to make consistent
e
s 00002/00002/00088
d R 8.1 93/06/04 12:50:47 bostic 2 1
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00090/00000/00000
d D 5.1 93/01/29 17:00:57 sklower 1 0
c date and time created 93/01/29 17:00:57 by sklower
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1993 The Regents of the University of California.
.\" All rights reserved.
E 4
I 4
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
E 4
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Donn Seeley at BSDI.
.\"
.\" %sccs.include.redist.man%
.\"
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt LINK_ADDR 3
.Os BSD 4.4
.Sh NAME
.Nm link_addr ,
.Nm link_ntoa
.Nd elementary address specification routines for link level access
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Fd #include <net/if_dl.h>
.Ft void
.Fn link_addr "const char *addr" "struct sockaddr_dl *sdl"
.Ft char *
.Fn link_ntoa "const struct sockaddr_dl *sdl"
.Sh DESCRIPTION
The routine
.Fn link_addr
interprets character strings representing
link-level addresses, returning binary information suitable
for use in system calls.
The routine
.Fn link_ntoa
takes
a link-level
D 3
addresses and returns
E 3
I 3
address and returns an
E 3
.Tn ASCII
D 3
strings representing some of the information present
(The link level address itself, and the interface name
or number, if present.)
This facility is still experimental, and had there been
further development of the system would have been subject to change.
E 3
I 3
string representing some of the information present,
including the link level address itself, and the interface name
or number, if present.
This facility is experimental and is
still subject to change.
E 3
.Pp
D 3
The syntax employed by
.Fn link_addr
is an optional network interface identifier (a string of the
form
.Dq name\ unit ,
E 3
I 3
For
.Fn link_addr ,
the string
.Fa addr
may contain
an optional network interface identifier of the form
.Dq "name unit-number" ,
E 3
suitable for the first argument to
D 3
.Xr ifconfig 4 )
followed by a colon when the interface identifier is present,
followed in all cases by a sequence of hexadecimal
.Dq digits
(optionally separated by periods),
of the form:
.Bd -filled -offset indent
<name unit :> <hex digits>.<hex digits>.<hex digits>
.Ed
E 3
I 3
.Xr ifconfig 4 ,
followed in all cases by a colon and
an interface address in the form of
groups of hexadecimal digits
separated by periods.
Each group represents a byte of address;
address bytes are filled left to right from
low order bytes through high order bytes.
E 3
.Pp
D 3
Each pair of hexadecimal digits represents a byte
with the leading digit indicating the higher-ordered bits.
A period following an even number of bytes has no
effect (but may be used to increase legitibility).
A period following an odd number of bytes has the
effective of filling the byte of address being translated
to have its higher order bits filled with zeros.
.Pp
Thus le0:8.0.9.13.d.30 represents an ethernet address
to be transmitted on the first lance ethernet interface.
E 3
I 3
.\" A regular expression may make this format clearer:
.\" .Bd -literal -offset indent
.\" ([a-z]+[0-9]+:)?[0-9a-f]+(\e.[0-9a-f]+)*
.\" .Ed
.\" .Pp
Thus
.Li le0:8.0.9.13.d.30
represents an ethernet address
to be transmitted on the first Lance ethernet interface.
E 3
.Sh RETURN VALUES
.Fn link_ntoa
always returns a null terminated string.
.Fn link_addr
has no return value.
(See
.Sx BUGS . )
.Sh SEE ALSO
.Xr iso 4 ,
.Sh HISTORY
The
.Fn link_addr
and
.Fn link_ntoa
functions appeared in 
.Bx 4.3 Reno  .
.Sh BUGS
The returned values for link_ntoa
reside in a static memory area.
I 3
.Pp
E 3
The function
.Fn link_addr
should diagnose improperly formed input, and there should be an unambiguous
way to recognize this.
I 3
.Pp
If the
.Va sdl_len
field of the link socket address
.Fa sdl
is 0,
.Fn link_ntoa
will not insert a colon before the interface address bytes.
If this translated address is given to
.Fn link_addr
without inserting an initial colon,
the latter will not interpret it correctly.
E 3
E 1
