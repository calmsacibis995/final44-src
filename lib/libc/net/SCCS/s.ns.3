h28051
s 00002/00002/00102
d D 8.1 93/06/04 12:50:54 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00072/00043/00032
d D 6.5 91/04/19 14:50:26 cael 5 4
c macro and text revision (-mdoc version 3)
e
s 00001/00011/00074
d D 6.4 90/06/23 17:59:00 trent 4 3
c new copyright notice
e
s 00015/00004/00070
d D 6.3 89/02/14 17:04:14 bostic 3 2
c add Berkeley specific copyright
e
s 00010/00014/00064
d D 6.2 86/05/12 19:36:15 karels 2 1
c an attempt at English
e
s 00078/00000/00000
d D 6.1 86/04/29 09:29:17 mckusick 1 0
c date and time created 86/04/29 09:29:17 by mckusick
e
u
U
t
T
I 1
D 3
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 3
I 3
D 5
.\" Copyright (c) 1986 The Regents of the University of California.
E 5
I 5
D 6
.\" Copyright (c) 1986, 1991 The Regents of the University of California.
E 5
.\" All rights reserved.
E 6
I 6
.\" Copyright (c) 1986, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 6
E 3
.\"
I 3
D 4
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 4
I 4
.\" %sccs.include.redist.man%
E 4
.\"
E 3
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
.\"     %W% (Berkeley) %G%
E 5
.\"
D 3
.TH NS 3N "%Q%"
E 3
I 3
D 5
.TH NS 3 "%Q%"
E 3
.UC 6
.SH NAME
ns_addr, ns_ntoa \- Xerox NS(tm)  address conversion routines
.SH SYNOPSIS
.nf
.B "#include <sys/types.h>
.B "#include <netns/ns.h>
.PP
.B "struct ns_addr ns_addr(cp)
.B "char *cp;
.PP
.B "char *ns_ntoa(ns)
.B "struct ns_addr ns;
.fi
.SH DESCRIPTION
E 5
I 5
.Dd %Q%
.Dt NS 3
.Os BSD 4.3
.Sh NAME
.Nm ns_addr ,
.Nm ns_ntoa
.Nd Xerox
.Tn NS Ns (tm)
address conversion routines
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <netns/ns.h>
.Ft struct ns_addr 
.Fn ns_addr "char *cp"
.Ft char *
.Fn ns_ntoa "struct ns_addr ns"
.Sh DESCRIPTION
E 5
The routine
D 2
.I ns_addr()
E 2
I 2
D 5
.I ns_addr
E 5
I 5
.Fn ns_addr
E 5
E 2
interprets character strings representing
D 5
XNS addresses, returning binary information suitable
E 5
I 5
.Tn XNS
addresses, returning binary information suitable
E 5
for use in system calls.
D 2
.I ns_ntoa()
E 2
I 2
D 5
.I ns_ntoa
E 2
takes XNS addresses and returns ASCII
E 5
I 5
The routine
.Fn ns_ntoa
takes
.Tn XNS
addresses and returns
.Tn ASCII
E 5
strings representing the address in a
notation in common use in the Xerox Development Environment:
D 5
.nf
	<network number>.<host number>.<port number>
.fi
E 5
I 5
.Bd -filled -offset indent
<network number>.<host number>.<port number>
.Ed
.Pp
E 5
Trailing zero fields are suppressed, and each number is printed in hexadecimal,
D 2
in suitable format as input to 
.I ns_addr(),
above.
E 2
I 2
in a format suitable for input to 
D 5
.IR ns_addr .
E 5
I 5
.Fn ns_addr .
E 5
E 2
Any fields lacking super-decimal digits will have a
D 2
trailing ``H'' appended, so that the number is represented such that
applying
.I ns_addr()
will return you what you started with.
E 2
I 2
D 5
trailing ``H'' appended.
E 2
.PP
Unfortunately, no universal standard exists for representing XNS addresses.
E 5
I 5
trailing
.Ql H
appended.
.Pp
Unfortunately, no universal standard exists for representing
.Tn XNS
addresses.
E 5
An effort has been made to insure that
D 2
.I ns_addr()
E 2
I 2
D 5
.I ns_addr
E 5
I 5
.Fn ns_addr
E 5
E 2
be compatible with most formats in common use.
It will first separate an address into 1 to 3 fields using a single delimiter
chosen from
D 5
period (``.''),
colon (``:'') or pound-sign (``#'').
E 5
I 5
period
.Ql \&. ,
colon
.Ql \&:
or pound-sign
.Ql \&# .
E 5
D 2
Each field is then examined for byte-separators (colon or period).
E 2
I 2
Each field is then examined for byte separators (colon or period).
E 2
If there are byte separators, each subfield separated is taken to be
a small hexadecimal number, and the entirety is taken as a network-byte-ordered
quantity to be zero extended in the high-network-order bytes.
Next, the field is inspected for hyphens, in which case
the field is assumed to be a number in decimal notation
with hyphens separating the millenia.
Next, the field is assumed to be a number:
It is interpreted
D 5
as hexadecimal if there is a leading ``0x'' (as in C),
D 2
a trailing ``H'' (as in Mesa), or any super-decimal digits present.
It is interpreted as octal is there is a leading ``0'' and no super-octal
digits.
E 2
I 2
a trailing ``H'' (as in Mesa), or there are any super-decimal digits present.
It is interpreted as octal is there is a leading ``0''
E 5
I 5
as hexadecimal if there is a leading
.Ql 0x
(as in C),
a trailing
.Ql H
(as in Mesa), or there are any super-decimal digits present.
It is interpreted as octal is there is a leading
.Ql 0
E 5
and there are no super-octal digits.
E 2
Otherwise, it is converted as a decimal number.
D 5
.SH "SEE ALSO"
hosts(5), networks(5),
.SH DIAGNOSTICS
None (see BUGS).
.SH BUGS
E 5
I 5
.Sh RETURN VALUES
None. (See
.Sx BUGS . )
.Sh SEE ALSO
.Xr hosts 5 ,
.Xr networks 5 ,
.Sh HISTORY
The
.Fn ns_addr
and
.Fn ns_toa
functions appeared in 
.Bx 4.3 .
.Sh BUGS
E 5
The string returned by
D 5
.I ns_ntoa
E 5
I 5
.Fn ns_ntoa
E 5
resides in a static memory area.
D 5
.br
.I ns_addr
E 5
I 5
The function
.Fn ns_addr
E 5
should diagnose improperly formed input, and there should be an unambiguous
way to recognize this.
E 1
