h36940
s 00001/00001/00073
d D 8.2 94/04/19 07:03:49 bostic 12 11
c spell
e
s 00002/00002/00072
d D 8.1 93/06/04 13:04:17 bostic 11 10
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00003/00001/00071
d D 6.8 91/06/29 14:21:42 bostic 10 9
c add ANSI contribution notice
e
s 00057/00054/00015
d D 6.7 91/04/19 14:48:29 cael 9 8
c macro and text revision (-mdoc version 3)
e
s 00004/00000/00065
d D 6.6 91/03/05 13:32:41 bostic 8 7
c document errno behavior
e
s 00051/00058/00014
d D 6.5 91/01/20 21:09:30 bostic 7 6
c new stdio
e
s 00002/00003/00070
d D 6.4 89/04/01 15:14:46 bostic 6 5
c remove subsection designations
e
s 00006/00003/00067
d D 6.3 86/05/14 18:21:18 karels 5 4
c document sticky EOF
e
s 00003/00002/00067
d D 6.2 85/06/06 00:08:46 lepreau 4 3
c clearerr resets eof and is not now a macro
e
s 00002/00002/00067
d D 6.1 85/05/15 15:25:53 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00009/00008/00060
d D 5.1 85/05/15 15:25:35 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00068/00000/00000
d D 4.1 85/05/15 15:25:16 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 7
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 7
I 7
D 9
.\" Copyright (c) 1990 The Regents of the University of California.
E 9
I 9
D 11
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 9
.\" All rights reserved.
E 11
I 11
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 11
E 7
.\"
I 7
.\" This code is derived from software contributed to Berkeley by
D 10
.\" Chris Torek.
E 10
I 10
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
E 10
D 9
.\"
E 9
.\" %sccs.include.redist.man%
.\"
E 7
D 9
.\"	%W% (Berkeley) %G%
E 9
I 9
.\"     %W% (Berkeley) %G%
E 9
.\"
D 2
.TH FERROR 3S 
E 2
I 2
D 3
.TH FERROR 3S  "19 January 1983"
E 3
I 3
D 6
.TH FERROR 3S  "%Q%"
E 6
I 6
D 7
.TH FERROR 3  "%Q%"
E 6
E 3
E 2
.UC 4
E 7
I 7
D 9
.TH FERROR 3 "%Q%"
.UC 7
E 7
.SH NAME
D 2
feof, ferror, clearerr, fileno \- stream status inquiries
E 2
I 2
D 7
ferror, feof, clearerr, fileno \- stream status inquiries
E 7
I 7
clearerr, feof, ferror, fileno \- stream status inquiries
E 7
E 2
.SH SYNOPSIS
D 7
.B #include <stdio.h>
.PP
.B feof(stream)
.br
.SM
.B FILE
.B *stream;
.PP
.B ferror(stream)
.br
.SM
.B FILE
.B *stream
.PP
.B clearerr(stream)
.br
.SM
.B FILE
.B *stream
.PP
.B fileno(stream)
.br
.SM
.B FILE
.B *stream;
E 7
I 7
.nf
.ft B
#include <stdio.h>

void
clearerr(FILE *stream);

int
feof(FILE *stream);

int
ferror(FILE *stream);

int
fileno(FILE *stream);
.ft R
.fi
E 7
.SH DESCRIPTION
I 7
.I Clearerr
E 9
I 9
.Dd %Q%
.Dt FERROR 3
.Os
.Sh NAME
.Nm clearerr ,
.Nm feof ,
.Nm ferror ,
.Nm fileno
.Nd check and reset stream status
.Sh SYNOPSIS
.Fd #include <stdio.h>
.Ft void
.Fn clearerr "FILE *stream"
.Ft int
.Fn feof "FILE *stream"
.Ft int
.Fn ferror "FILE *stream"
.Ft int
.Fn fileno "FILE *stream"
.Sh DESCRIPTION
The function
.Fn clearerr
E 9
clears the end-of-file and error indicators for the stream pointed
D 9
to by 
.IR stream .
.PP
E 7
.I Feof
E 9
I 9
to by
.Fa stream .
.Pp
The function
.Fn feof
E 9
D 7
returns non-zero when end of file is read on the named input
E 7
I 7
tests the end-of-file indicator for the stream pointed to by
E 7
D 2
.I stream,
E 2
I 2
D 9
.IR stream ,
E 9
I 9
.Fa stream ,
E 9
E 2
D 7
otherwise zero.
I 5
Unless cleared by
.IR clearerr ,
the end-of-file indication lasts until
the stream is closed.
E 7
I 7
returning non-zero if it is set.
D 9
The end-of-file indicator can only be cleared by
.IR clearerr .
E 7
E 5
.PP
.I Ferror
E 9
I 9
The end-of-file indicator can only be cleared by the function
.Fn clearerr .
.Pp
The function
.Fn ferror
E 9
D 7
returns non-zero when an error has occurred reading or writing
the named
E 7
I 7
tests the error indicator for the stream pointed to by
E 7
D 2
.I stream,
E 2
I 2
D 9
.IR stream ,
E 9
I 9
.Fa stream ,
E 9
E 2
D 7
otherwise zero.
Unless cleared by
D 2
.I clearerr,
E 2
I 2
.IR clearerr ,
E 2
the error indication lasts until
the stream is closed.
E 7
I 7
returning non-zero if it is set.
D 9
The error indicator can only be cleared by
.IR clearerr .
E 7
.PP
D 3
.I Clrerr
E 3
I 3
D 7
.I Clearerr
E 3
D 4
resets the error indication on the named
E 4
I 4
resets the error and end-of-file indicators on the named
E 4
D 2
.I stream.
E 2
I 2
.IR stream .
E 2
.PP
E 7
.I Fileno
D 7
returns the integer file descriptor
associated with the
D 2
.I stream,
E 2
I 2
.IR stream ,
E 2
see
D 5
.IR  open (2).
E 5
I 5
.IR open (2).
E 5
.PP
D 4
These functions
E 4
I 4
D 5
Currently all of these functions except
.I clearerr
E 5
I 5
Currently all of these functions
E 5
E 4
are implemented as macros;
they cannot be redeclared.
E 7
I 7
returns the integer file descriptor associated with the
.I stream
(see
.IR open (2)).
I 8
.SH ERRORS
E 9
I 9
The error indicator can only be reset by the
.Fn clearerr
function.
.Pp
The function
.Fn fileno
examines the argument
.Fa stream
D 12
and returns its integer desciptor.
E 12
I 12
and returns its integer descriptor.
E 12
.Sh ERRORS
E 9
These functions should not fail and do not set the external
variable
D 9
.IR errno .
E 8
E 7
.SH "SEE ALSO"
D 2
fopen(3), open(2)
E 2
I 2
D 6
fopen(3S),
open(2)
E 6
I 6
D 7
open(2), fopen(3)
E 7
I 7
open(2), stdio(3)
.SH STANDARDS
.IR Clearerr ,
.IR feof ,
E 9
I 9
.Va errno .
.Sh SEE ALSO
.Xr open 2 ,
.Xr stdio 3
.Sh STANDARDS
The functions
.Fn clearerr ,
.Fn feof ,
E 9
and
D 9
.I ferror
conform to ANSI X3.159-1989 (``ANSI C'').
E 9
I 9
.Fn ferror
conform to
.St -ansiC .
E 9
E 7
E 6
E 2
E 1
