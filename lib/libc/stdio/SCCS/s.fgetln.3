h45116
s 00001/00001/00096
d D 8.3 94/04/19 07:04:47 bostic 10 9
c spell
e
s 00007/00007/00090
d D 8.2 94/01/02 14:06:41 bostic 9 8
c rename fgetline.{3,c} -> fgetln.{3,c}
e
s 00002/00002/00095
d D 8.1 93/06/09 18:52:43 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00002/00096
d D 5.6 93/06/09 18:52:40 bostic 7 5
c fixed the under development line
e
s 00002/00002/00096
d R 8.1 93/06/04 13:04:43 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00012/00012/00086
d D 5.5 93/03/03 15:28:54 torek 5 4
c interface change: size parameter is required, keep newline;
c no longer returns a C string (callers must use care)
e
s 00074/00051/00024
d D 5.4 91/04/19 14:48:35 cael 4 3
c macro and text revision (-mdoc version 3)
e
s 00003/00003/00072
d D 5.3 91/03/05 14:54:29 bostic 3 2
c man page pass, minor cleanups
e
s 00006/00007/00069
d D 5.2 91/03/05 13:51:46 bostic 2 1
c match template
e
s 00076/00000/00000
d D 5.1 91/03/05 13:34:34 bostic 1 0
c date and time created 91/03/05 13:34:34 by bostic
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1990 The Regents of the University of California.
E 4
I 4
D 8
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 4
.\" All rights reserved.
E 8
I 8
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 8
.\"
.\" %sccs.include.redist.man%
.\"
D 4
.\"	%W% (Berkeley) %G%
E 4
I 4
.\"     %W% (Berkeley) %G%
E 4
.\"
D 4
.TH FGETLINE 3 "%Q%"
.UC 7
.SH NAME
fgetline \- get a line from a stream
.SH SYNOPSIS
.nf
.ft B
#include <stdio.h>

char *
fgetline(FILE *stream, size_t *len);
.ft R
.fi
.SH DESCRIPTION
.I Fgetline
returns a pointer to the next line from the stream pointed to by
.IR stream .
D 2
The newline character at the end of the line is replaced by a '\e0'
character.
E 2
I 2
The newline character at the end of the line is replaced by a NUL.
E 2
.PP
E 4
I 4
.Dd %Q%
D 9
.Dt FGETLINE 3
E 9
I 9
.Dt FGETLN 3
E 9
.Os
.Sh NAME
D 9
.Nm fgetline
E 9
I 9
.Nm fgetln
E 9
.Nd get a line from a stream
.Sh SYNOPSIS
.Fd #include <stdio.h>
.Ft char *
D 9
.Fn fgetline "FILE *stream" "size_t *len"
E 9
I 9
.Fn fgetln "FILE *stream" "size_t *len"
E 9
.Sh DESCRIPTION
The
D 9
.Fn fgetline
E 9
I 9
.Fn fgetln
E 9
function
returns a pointer to the next line from the stream referenced by
.Fa stream .
D 5
The newline character at the end of the line is replaced by a
.Dv NUL .
.Pp
E 4
If
E 5
I 5
This line is
.Em not
a C string as it does not end with a terminating
.Dv NUL
character.
The length of the line, including the final newline,
is stored in the memory location to which
E 5
D 4
.I len
E 4
I 4
.Fa len
E 4
D 5
is non-NULL, the length of the line, not counting the terminating
D 4
NUL, is stored in the memory location it references.
D 2
.SH "SEE ALSO"
ferror(3), fgets(3), fopen(3), putc(3)
E 2
.SH "RETURN VALUE"
E 4
I 4
.Dv NUL ,
is stored in the memory location it references.
E 5
I 5
points.
(Note, however, that if the line is the last
in a file that does not end in a newline,
the returned text will not contain a newline.)
E 5
.Sh RETURN VALUES
E 4
Upon successful completion a pointer is returned;
D 4
this pointer becomes invalid after the next I/O operation on
.I stream
E 4
I 4
this pointer becomes invalid after the next
.Tn I/O
operation on
.Fa stream
E 4
(whether successful or not)
or as soon as the stream is closed.
D 4
Otherwise, NULL is returned.
.I Fgetline
does not distinguish between end-of-file and error, and callers must use
D 3
.I feof
E 3
I 3
.IR feof (3)
E 4
I 4
Otherwise,
.Dv NULL
is returned.
The
D 9
.Fn fgetline
E 9
I 9
.Fn fgetln
E 9
function
does not distinguish between end-of-file and error; the routines
.Xr feof 3
E 4
E 3
and
D 3
.I ferror
E 3
I 3
D 4
.IR ferror (3)
E 4
I 4
.Xr ferror 3
must be used
E 4
E 3
to determine which occurred.
D 10
If an error occurrs, the global variable
E 10
I 10
If an error occurs, the global variable
E 10
D 4
.I errno
E 4
I 4
.Va errno
E 4
is set to indicate the error.
The end-of-file condition is remembered, even on a terminal, and all
D 4
subsequent attempts to read will return NULL until the condition is
E 4
I 4
subsequent attempts to read will return
.Dv NULL
until the condition is
E 4
cleared with
D 3
.IR clearerr .
E 3
I 3
D 4
.IR clearerr (3).
E 3
.PP
E 4
I 4
.Xr clearerr 3 .
.Pp
E 4
D 2
It is not possible to tell whether the final line of an input file
was terminated with a newline.
.PP
E 2
The text to which the returned pointer points may be modified,
D 4
provided that no changes are made beyond the terminating NUL.
E 4
I 4
D 5
provided that no changes are made beyond the terminating
.Dv NUL .
E 5
I 5
provided that no changes are made beyond the returned size.
E 5
E 4
These changes are lost as soon as the pointer becomes invalid.
D 4
.SH ERRORS
.TP 15
[EBADF]
.I Stream
E 4
I 4
.Sh ERRORS
.Bl -tag -width [EBADF]
.It Bq Er EBADF
The argument
.Fa stream
E 4
is not a stream open for reading.
D 4
.PP
.I Fgetline
E 4
I 4
.El
.Pp
The
D 9
.Fn fgetline
E 9
I 9
.Fn fgetln
E 9
function
E 4
may also fail and set
D 4
.I errno
E 4
I 4
.Va errno
E 4
for any of the errors specified for the routines
D 4
.IR fflush (3),
.IR malloc (3),
.IR read (2),
.IR stat (2),
E 4
I 4
.Xr fflush 3 ,
.Xr malloc 3 ,
.Xr read 2 ,
.Xr stat 2 ,
E 4
or
D 4
.IR realloc (3).
I 2
.SH "SEE ALSO"
ferror(3), fgets(3), fopen(3), putc(3)
.SH BUGS
E 4
I 4
.Xr realloc 3 .
.Sh SEE ALSO
.Xr ferror 3 ,
.Xr fgets 3 ,
.Xr fopen 3 ,
.Xr putc 3
.Sh HISTORY
The
D 9
.Fn fgetline
E 9
I 9
.Fn fgetln
E 9
D 7
function is
.Ud .
E 7
I 7
function first appeared in 4.4BSD.
E 7
D 5
.Sh BUGS
E 4
It is not possible to tell whether the final line of an input file
was terminated with a newline.
E 5
E 2
E 1
