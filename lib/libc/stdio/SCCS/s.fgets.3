h54764
s 00002/00002/00123
d D 8.1 93/06/04 13:04:59 bostic 12 11
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00003/00001/00122
d D 6.9 91/06/29 14:25:53 bostic 11 10
c add ANSI contribution notice
e
s 00084/00068/00039
d D 6.8 91/04/19 14:48:27 cael 10 9
c macro and text revision (-mdoc version 3)
e
s 00006/00003/00101
d D 6.7 91/03/05 14:54:31 bostic 9 8
c man page pass, minor cleanups
e
s 00007/00007/00097
d D 6.6 91/03/05 13:53:14 bostic 8 7
c match template
e
s 00086/00033/00018
d D 6.5 91/01/20 21:10:03 bostic 7 6
c new stdio
e
s 00001/00011/00050
d D 6.4 90/06/23 17:53:37 trent 6 5
c new copyright notice
e
s 00046/00054/00013
d D 6.3 89/05/18 19:52:10 bostic 5 4
c break out gets; make ANSI C compatible
e
s 00006/00006/00061
d D 6.2 89/04/01 15:14:54 bostic 4 3
c remove subsection designations
e
s 00002/00002/00065
d D 6.1 85/05/15 15:01:14 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00007/00005/00060
d D 5.1 85/05/15 15:01:06 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00065/00000/00000
d D 4.1 85/05/15 15:00:59 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 5
D 7
.\" Copyright (c) 1989 The Regents of the University of California.
E 7
I 7
D 10
.\" Copyright (c) 1990 The Regents of the University of California.
E 10
I 10
D 12
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 10
E 7
.\" All rights reserved.
E 12
I 12
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 12
.\"
I 7
.\" This code is derived from software contributed to Berkeley by
D 11
.\" Chris Torek.
E 11
I 11
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
E 11
D 10
.\"
E 10
E 7
D 6
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 6
I 6
.\" %sccs.include.redist.man%
E 6
.\"
E 5
I 1
D 10
.\"	%W% (Berkeley) %G%
E 10
I 10
.\"     %W% (Berkeley) %G%
E 10
.\"
D 2
.TH GETS 3S 
E 2
I 2
D 3
.TH GETS 3S  "19 January 1983"
E 3
I 3
D 4
.TH GETS 3S  "%Q%"
E 4
I 4
D 5
.TH GETS 3  "%Q%"
E 5
I 5
D 10
.TH FGETS 3 "%Q%"
E 5
E 4
E 3
E 2
D 7
.AT 3
E 7
I 7
.UC 7
E 7
.SH NAME
D 5
gets, fgets \- get a string from a stream
E 5
I 5
D 7
fgets - get a line from a stream
E 7
I 7
fgets, gets \- get a line from a stream
E 7
E 5
.SH SYNOPSIS
I 5
.nf
E 5
D 7
.B #include <stdio.h>
E 7
I 7
.ft B
#include <stdio.h>
E 7
D 5
.PP
.B char *gets(s)
.br
.B char *s;
.PP
E 5
I 5

E 5
D 7
.B char *fgets(s, n, stream)
D 5
.br
E 5
.B char *s;
D 5
.br
.SM
.B FILE
.B *stream;
E 5
I 5
.B int n;
.B FILE *stream;
E 7
I 7
char *
fgets(char *str, size_t size, FILE *stream);

char *
gets(char *str);
.ft R
E 7
.fi
E 5
.SH DESCRIPTION
D 5
.I Gets
reads a string into
.I s
from the standard input stream
D 2
.B stdin.
E 2
I 2
.BR stdin .
E 2
The string is terminated by a newline
character, which is replaced in
.I s
by a null character.
.I Gets
returns its argument.
.PP
.I Fgets
reads 
.IR n \-1
D 3
characters, or up to a newline
E 3
I 3
characters, or up through a newline
E 3
character, whichever comes first,
from the
E 5
I 5
D 7
The
.I fgets
function reads at most one less than the number of characters specified
by
.I n
from the stream pointed to by
E 7
I 7
.I Fgets
E 10
I 10
.Dd %Q%
.Dt FGETS 3
.Os
.Sh NAME
.Nm fgets ,
.Nm gets
.Nd get a line from a stream
.Sh SYNOPSIS
.Fd #include <stdio.h>
.Ft char *
.Fn fgets "char *str" "size_t size" "FILE *stream"
.Ft char *
.Fn gets "char *str"
.Sh DESCRIPTION
The
.Fn fgets
function
E 10
reads at most one less than the number of characters specified by
D 10
.IR size
E 10
I 10
.Xr size
E 10
from the given
E 7
E 5
D 10
.I stream
D 5
into the string
E 5
I 5
D 7
into the array pointed to by
E 5
.IR s .
D 5
The last character read into
E 5
I 5
No additional characters are read after a new-line character
(which is retained) or after end-of-file.
A null character is written immediately after the last character
read into the array.
E 7
I 7
into the string
.IR str .
E 10
I 10
.Fa stream
and stores them in the string
.Fa str .
E 10
Reading stops when a newline character is found,
at end-of-file or error.
The newline, if any, is retained.
D 10
In any case a '\e0' character is appended to end the string.
E 7
.PP
D 7
The
E 7
I 7
.I Gets
E 10
I 10
In any case a
.Ql \e0
character is appended to end the string.
.Pp
The
.Fn gets
function
E 10
is equivalent to
E 7
D 10
.I fgets
E 10
I 10
.Fn fgets
E 10
D 7
function returns
E 5
.I s
D 5
is followed by a null character.
.I Fgets
returns its first argument.
E 5
I 5
if successful.
If end-of-file is encountered and no characters have been read
into the array, the contents of the array remain unchanged and
a null pointer is returned.
If a read error occurs during the operation, the array contents
are indeterminate and a null pointer is returned.
E 7
I 7
with an infinite
D 10
.I size
E 10
I 10
.Xr size
E 10
and a
D 10
.I stream
E 10
I 10
.Fa stream
E 10
of
D 10
.BR stdin ,
E 10
I 10
.Em stdin ,
E 10
except that the newline character (if any) is not stored in the string.
It is the caller's responsibility to ensure that the input line,
if any, is sufficiently short to fit in the string.
E 7
E 5
D 8
.SH "SEE ALSO"
D 2
puts(3),
getc(3), scanf(3), fread(3),
ferror(3)
E 2
I 2
D 4
puts(3S),
getc(3S),
scanf(3S),
fread(3S),
ferror(3S)
E 4
I 4
D 5
puts(3),
getc(3),
scanf(3),
fread(3),
ferror(3)
E 4
E 2
.SH DIAGNOSTICS
.I Gets
and
.I fgets
return the constant pointer 
.SM
.B NULL
upon end of file or error.
.SH BUGS
.I Gets
deletes a newline,
.I fgets
keeps it,
all in the name of backward compatibility.
E 5
I 5
D 7
getc(3), ferror(3) fread(3), scanf(3)
.SH STANDARDS
The
E 7
I 7
feof(3), ferror(3), fgetline(3)
E 8
D 10
.SH "RETURN VALUE"
.PP
E 10
I 10
.Sh RETURN VALUES
.Pp
E 10
Upon successful completion,
E 7
D 10
.I fgets
E 10
I 10
.Fn fgets
E 10
D 7
function is ANSI C compatible.
E 7
I 7
and 
D 10
.I gets
E 10
I 10
.Fn gets
E 10
return
D 10
.IR s .
E 10
I 10
a pointer to the string.
E 10
If end-of-file or an error occurs before any characters are read, 
D 10
they return NULL.
D 9
Callers must use
.I feof
E 9
I 9
.I Fgets
E 10
I 10
they return
.Dv NULL.
The
.Fn fgets
E 10
E 9
and
D 9
.I ferror
E 9
I 9
D 10
.I gets
E 10
I 10
functions
.Fn gets
E 10
do not distinguish between end-of-file and error, and callers must use
D 10
.IR feof (3)
E 10
I 10
.Xr feof 3
E 10
and
D 10
.I ferror (3)
E 10
I 10
.Xr ferror 3
E 10
E 9
to determine which occurred.
D 10
.SH ERRORS
.TP 15
[EBADF]
.I Stream
E 10
I 10
.Sh ERRORS
.Bl -tag -width [EBADF]
.It Bq Er EBADF
The given
.Fa stream
E 10
is not a readable stream.
D 10
.PP
.I Fgets
E 10
I 10
.El
.Pp
The function
.Fn fgets
E 10
may also fail and set
D 10
.I errno
E 10
I 10
.Va errno
E 10
for any of the errors specified for the routines
D 10
.IR fflush (3),
.IR fstat (2),
.IR read (2),
E 10
I 10
.Xr fflush 3 ,
.Xr fstat 2 ,
.Xr read 2 ,
E 10
or
D 10
.IR malloc (3).
.PP
.I Gets
E 10
I 10
.Xr malloc 3 .
.Pp
The function
.Fn gets
E 10
may also fail and set
D 10
.I errno
E 10
I 10
.Va errno
E 10
for any of the errors specified for the routine
D 10
.IR getchar (3).
I 8
.SH "SEE ALSO"
feof(3), ferror(3), fgetline(3)
.SH STANDARDS
.I Fgets
E 10
I 10
.Xr getchar 3 .
.Sh SEE ALSO
.Xr feof 3 ,
.Xr ferror 3 ,
.Xr fgetline 3
.Sh STANDARDS
The functions
.Fn fgets
E 10
and
D 10
.I gets
conform to ANSI X3.159-1989 (``ANSI C'').
E 8
.SH BUGS
E 10
I 10
.Fn gets
conform to
.St -ansiC .
.Sh BUGS
E 10
Since it is usually impossible to ensure that the next input line
is less than some arbitrary length, and because overflowing the
input buffer is almost invariably a security violation, programs
should
D 10
.B NEVER
E 10
I 10
.Em NEVER
E 10
use
D 10
.IR gets .
.I Gets
exists purely to conform to ANSI X3.159-1989.
E 10
I 10
.Fn gets .
The
.Fn gets
function
exists purely to conform to
.St -ansiC .
E 10
D 8
.SH STANDARDS
.I Fgets
and
.I gets
conform to ANSI X3.159-1989 (``ANSI C'').
E 8
E 7
E 5
E 1
