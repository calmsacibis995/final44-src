h64773
s 00002/00002/00079
d D 8.1 93/06/04 13:05:59 bostic 9 8
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00003/00001/00078
d D 6.6 91/06/29 14:27:07 bostic 8 7
c add ANSI contribution notice
e
s 00064/00053/00015
d D 6.5 91/04/19 14:46:44 cael 7 6
c macro and text revision (-mdoc version 3)
e
s 00000/00000/00068
d D 6.4 91/04/19 14:41:36 cael 6 5
c macro and text revision (-mdoc version 3)
e
s 00059/00041/00009
d D 6.3 91/03/05 13:58:41 bostic 5 4
c from scratch -- combine fputs and puts, rename to fputs.3
e
s 00007/00007/00043
d D 6.2 89/04/01 15:14:59 bostic 4 3
c remove subsection designations
e
s 00001/00001/00049
d D 6.1 85/05/15 15:03:44 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00008/00006/00042
d D 5.1 85/05/15 15:03:35 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00048/00000/00000
d D 4.1 85/05/15 15:03:29 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 5
D 7
.\" Copyright (c) 1990 The Regents of the University of California.
E 7
I 7
D 9
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 7
.\" All rights reserved.
E 9
I 9
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 9
.\"
.\" This code is derived from software contributed to Berkeley by
D 8
.\" Chris Torek.
E 8
I 8
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
E 8
D 7
.\"
E 7
.\" %sccs.include.redist.man%
.\"
E 5
I 1
D 7
.\"	%W% (Berkeley) %G%
E 7
I 7
.\"     %W% (Berkeley) %G%
E 7
.\"
D 2
.TH PUTS 3S 
E 2
I 2
D 3
.TH PUTS 3S  "19 January 1983"
E 3
I 3
D 4
.TH PUTS 3S  "%Q%"
E 4
I 4
D 5
.TH PUTS 3  "%Q%"
E 4
E 3
E 2
.AT 3
E 5
I 5
D 7
.TH FPUTS 3 "%Q%"
.UC 7
E 5
.SH NAME
D 5
puts, fputs \- put a string on a stream
E 5
I 5
fputs, puts \- put a line to a stream
E 5
.SH SYNOPSIS
D 5
.B #include <stdio.h>
.PP
.B puts(s)
.br
.B char *s;
.PP
.B fputs(s, stream)
.br
.B char *s;
.br
.SM
.B FILE
.B *stream;
E 5
I 5
.nf
.ft B
#include <stdio.h>

int
fputs(char *str, FILE *stream);

int
puts(char *str);
.ft R
.fi
E 5
.SH DESCRIPTION
D 5
.I Puts
copies the null-terminated string
.I s
to the standard output stream
D 2
.I stdout
E 2
I 2
.B stdout
E 2
and appends a
newline character.
.PP
E 5
.I Fputs
E 7
I 7
.Dd %Q%
.Dt FPUTS 3
.Os
.Sh NAME
.Nm fputs ,
.Nm puts
.Nd output a line to a stream
.Sh SYNOPSIS
.Fd #include <stdio.h>
.Ft int
.Fn fputs "const char *str" "FILE *stream"
.Ft int
.Fn puts "const char *str"
.Sh DESCRIPTION
The function
.Fn fputs
writes the string pointed to by
.Fa str
to the stream pointed to by
.Fa stream .
.\" The terminating
.\" .Dv NUL
.\" character is not written.
.Pp
The function
.Fn puts
E 7
D 5
copies the null-terminated string
.I s
to the named output
E 5
I 5
writes the string
D 7
.I str
to the given
E 5
.IR stream .
.PP
D 5
Neither routine copies the terminal null character.
.SH "SEE ALSO"
D 2
fopen(3), gets(3),
putc(3), printf(3),
ferror(3)
E 2
I 2
D 4
fopen(3S),
gets(3S),
putc(3S),
printf(3S),
ferror(3S)
E 4
I 4
fopen(3),
gets(3),
putc(3),
printf(3),
ferror(3)
E 4
E 2
.br
D 2
fread(3) for
E 2
I 2
D 4
fread(3S) for
E 4
I 4
fread(3) for
E 4
E 2
.I fwrite
.SH BUGS
E 5
.I Puts
D 5
appends a newline,
.I fputs
does not, all in the name of backward compatibility.
E 5
I 5
writes the string
.I str
to the standard output stream
.BR stdout ,
appending a newline character.
.SH "RETURN VALUE"
.I Fputs
returns 0 on success,
.B EOF
E 7
I 7
.Fa str ,
and a terminating newline character,
to the stream
.Em stdout .
.Sh RETURN VALUES
The
.Fn fputs
function
returns 0 on success and
.Dv EOF
E 7
on error;
D 7
.I puts
returns a nonnegative integer on success,
.B EOF
E 7
I 7
.Fn puts
returns a nonnegative integer on success and
.Dv EOF
E 7
on error.
D 7
.SH "SEE ALSO"
putc(3), ferror(3), stdio(3)
.SH ERRORS
.TP 15
[EBADF]
.I Stream
E 7
I 7
.Sh ERRORS
.Bl -tag -width [EBADF]
.It Bq Er EBADF
The
.Fa stream
supplied
E 7
is not a writable stream.
D 7
.PP
.I Fputs
E 7
I 7
.El
.Pp
The functions
.Fn fputs
E 7
and
D 7
.I puts
E 7
I 7
.Fn puts
E 7
may also fail and set
D 7
.I errno
E 7
I 7
.Va errno
E 7
for any of the errors specified for the routines
D 7
.IR write (2).
.SH STANDARDS
.I Fputs
E 7
I 7
.Xr write 2 .
.Sh SEE ALSO
.Xr putc 3 ,
.Xr ferror 3 ,
.Xr stdio 3
.Sh STANDARDS
The functions
.Fn fputs
E 7
and
D 7
.I puts
conform to ANSI X3.159-1989 (``ANSI C'').
E 7
I 7
.Fn puts
conform to
.St -ansiC .
E 7
E 5
E 1
