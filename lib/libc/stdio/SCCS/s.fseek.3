h08849
s 00002/00002/00160
d D 8.1 93/06/04 13:06:31 bostic 15 13
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00002/00002/00160
d R 6.12 92/06/19 11:10:30 bostic 14 13
c not long, off_t
e
s 00003/00001/00159
d D 6.11 91/06/29 14:25:01 bostic 13 12
c add ANSI contribution notice
e
s 00004/00003/00156
d D 6.10 91/04/20 10:12:29 cael 12 11
c text changes or conversion to -mdoc (version 3)
e
s 00133/00099/00026
d D 6.9 91/04/19 14:46:53 cael 11 10
c macro and text revision (-mdoc version 3)
e
s 00005/00003/00120
d D 6.8 91/03/11 20:10:13 bostic 10 9
c ftell returns the offset, not 0
e
s 00002/00007/00121
d D 6.7 91/03/05 14:54:33 bostic 9 8
c man page pass, minor cleanups
e
s 00109/00043/00019
d D 6.6 91/01/20 21:22:31 bostic 8 7
c new stdio
e
s 00003/00003/00059
d D 6.5 89/04/01 15:14:50 bostic 7 6
c remove subsection designations
e
s 00001/00001/00061
d D 6.4 87/12/05 14:49:33 bostic 6 5
c use L_SET define for rewind call
e
s 00004/00006/00058
d D 6.3 86/02/24 23:50:15 lepreau 5 4
c back to old fseek returning -1 and 0; document the 0 for Sys V compat.
e
s 00006/00004/00058
d D 6.2 85/10/30 17:19:39 mckusick 4 3
c describe return value for fseek (not Sys V compatible, sigh)
e
s 00001/00001/00061
d D 6.1 85/05/15 14:57:53 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00006/00005/00056
d D 5.1 85/05/15 14:57:42 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00061/00000/00000
d D 4.1 85/05/15 14:57:35 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 8
D 11
.\" Copyright (c) 1990 The Regents of the University of California.
E 11
I 11
D 15
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 11
.\" All rights reserved.
E 15
I 15
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 15
.\"
.\" This code is derived from software contributed to Berkeley by
D 13
.\" Chris Torek.
E 13
I 13
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
E 13
D 11
.\"
E 11
.\" %sccs.include.redist.man%
.\"
E 8
I 1
D 11
.\"	%W% (Berkeley) %G%
E 11
I 11
.\"     %W% (Berkeley) %G%
E 11
.\"
D 2
.TH FSEEK 3S 
E 2
I 2
D 3
.TH FSEEK 3S  "19 January 1983"
E 3
I 3
D 7
.TH FSEEK 3S  "%Q%"
E 7
I 7
D 8
.TH FSEEK 3  "%Q%"
E 7
E 3
E 2
.AT 3
E 8
I 8
D 11
.TH FSEEK 3 "%Q%"
.UC 7
E 8
.SH NAME
D 8
fseek, ftell, rewind \- reposition a stream
E 8
I 8
fgetpos, fseek, fsetpos, ftell, rewind \- reposition a stream
E 8
.SH SYNOPSIS
D 8
.B #include <stdio.h>
.PP
D 4
.B fseek(stream, offset, ptrname)
E 4
I 4
D 5
.B long fseek(stream, offset, ptrname)
E 5
I 5
.B fseek(stream, offset, ptrname)
E 5
E 4
.br
.SM
.B FILE
.B *stream;
.br
.B long offset;
.PP
.B long ftell(stream)
.br
.SM
.B FILE
.B *stream;
.PP
.B rewind(stream)
E 8
I 8
.nf
.ft B
#include <stdio.h>

int
fseek(FILE *stream, long offset, int whence);

long
ftell(FILE *stream);

void
rewind(FILE *stream);

int
fgetpos(FILE *stream, fpos_t *pos);

int
fsetpos(FILE *stream, fpos_t *pos);
.ft R
.fi
E 8
.SH DESCRIPTION
.I Fseek
sets the position of the next input or output
D 8
operation on the
E 8
I 8
operation on the given
E 8
.IR stream .
The new position is at the signed distance
.I offset
D 8
bytes
from the beginning, the current position, or the end of the file,
according as 
.I ptrname
has the value 0, 1, or 2.
I 4
D 5
.I Fseek
returns \-1 for improper seeks,
otherwise it returns the new value of the offset relative
to the beginning of the file associated with the named
.IR stream .
E 5
E 4
.PP
E 8
I 8
bytes from a specified point in the file depending on the
value of 
.IR whence .
E 11
I 11
.Dd %Q%
.Dt FSEEK 3
.Os
.Sh NAME
.Nm fgetpos ,
.Nm fseek ,
.Nm fsetpos ,
.Nm ftell ,
.Nm rewind
.Nd reposition a stream
.Sh SYNOPSIS
.Fd #include <stdio.h>
.Ft int
.Fn fseek "FILE *stream" "long offset" "int whence"
.Ft long
.Fn ftell "FILE *stream"
.Ft void
.Fn rewind "FILE *stream"
.Ft int
.Fn fgetpos "FILE *stream" "fpos_t *pos"
.Ft int
.Fn fsetpos "FILE *stream" "fpos_t *pos"
.Sh DESCRIPTION
The
.Fn fseek
function sets the file position indicator for the stream pointed
to by
.Fa stream .
The new position, measured in bytes, is obtained by adding
.Fa offset
bytes to the position specified by
.Fa whence .
E 11
If 
D 11
.I whence
D 9
is set to 
.IR SEEK_SET ,
.IR SEEK_CUR ,
or
.IR SEEK_END ,
the offset is from the beginning, the current position, or the end of
the file, respectively.
E 9
I 9
is set to SEEK_SET, SEEK_CUR, or SEEK_END, the offset is from the
beginning, the current position, or the end of the file, respectively.
E 9
E 8
.I Fseek
undoes any effects of
D 2
.IR  ungetc (3).
E 2
I 2
D 7
.IR  ungetc (3S).
E 7
I 7
D 8
.IR  ungetc (3).
E 8
I 8
.IR ungetc .
E 8
E 7
E 2
.PP
.I Ftell
returns the current value of the offset relative to the beginning
of the file associated with the named
.IR stream .
D 8
It is measured in bytes on UNIX;
on some other systems it is a magic cookie,
and the only foolproof way to obtain an 
.I offset
for
.IR fseek .
E 8
.PP
D 2
.I Rewind(stream)
E 2
I 2
D 8
.IR Rewind ( stream )
E 2
is equivalent to
D 2
.I "fseek(stream, 0L, 0)."
E 2
I 2
.IR fseek ( stream ,
D 6
0L, 0).
E 6
I 6
0L, L_SET).
E 8
I 8
.IR Rewind
is equivalent to ``fseek(stream, 0L, SEEK_SET)'', except the error
indicator for the stream is cleared as well (see
.IR clearerr (3)).
.PP
.I Fgetpos
E 11
I 11
.Fa whence
is set to
.Dv SEEK_SET ,
.Dv SEEK_CUR ,
or
.Dv SEEK_END ,
the offset is relative to the
start of the file, the current position indicator, or end-of-file,
respectively.
A successful call to the
.Fn fseek
function clears the end-of-file indicator for the stream and undoes
any effects of the
.Xr ungetc 3
function on the same stream.
.Pp
The
.Fn ftell
function
obtains the current value of the file position indicator for the
stream pointed to by
.Fa stream .
.Pp
The
.Fn rewind
function sets the file position indicator for the stream pointed
to by
.Fa stream
to the beginning of the file.
It is equivalent to:
.Pp
.Dl (void)fseek(stream, 0L, SEEK_SET)
.Pp
except that the error indicator for the stream is also cleared
(see
.Xr clearerr 3 ) .
.Pp
The
.Fn fgetpos
E 11
and
D 11
.I fsetpos
E 11
I 11
.Fn fsetpos
functions
E 11
are alternate interfaces equivalent to
D 11
.I ftell
E 11
I 11
.Fn ftell
E 11
and
D 11
.I fseek
(with whence set to SEEK_SET), setting and storing the current value of
E 11
I 11
.Fn fseek
(with whence set to
.Dv SEEK_SET
), setting and storing the current value of
E 11
the file offset into or from the object referenced by 
D 11
.IR pos .
On some (non-UNIX) systems an ``fpos_t'' object may be a complex object
E 11
I 11
.Fa pos .
On some
D 12
.Pq (non- Ns Tn UNIX )
E 12
I 12
.Pq non- Ns Tn UNIX
E 12
systems an
.Dq Fa fpos_t
object may be a complex object
E 11
and these routines may be the only way to portably reposition a text stream.
E 8
E 6
E 2
D 11
.SH "SEE ALSO"
D 8
lseek(2),
D 2
fopen(3)
E 2
I 2
D 7
fopen(3S)
E 7
I 7
fopen(3)
E 7
I 5
.SH DIAGNOSTICS
.I Fseek
returns \-1 for improper seeks, otherwise zero.
E 8
I 8
lseek(2)
.SH "RETURN VALUE"
.I Rewind
E 11
I 11
.Sh RETURN VALUES
The
.Fn rewind
function
E 11
returns no value.
Upon successful completion,
D 11
.IR fgetpos ,
.IR fseek ,
E 11
I 11
.Fn fgetpos ,
.Fn fseek ,
D 12
.Fn fsetpos ,
E 12
I 12
.Fn fsetpos
return 0,
E 12
E 11
D 10
.IR fsetpos ,
E 10
and
D 10
.IR ftell 
return 0.
E 10
I 10
D 11
.I fsetpos
return 0,
and
.I ftell
returns the current offset.
E 11
I 11
.Fn ftell
D 12
return 0.
E 12
I 12
returns the current offset.
E 12
E 11
E 10
Otherwise, \-1 is returned and the global variable errno is set to
indicate the error.
D 11
.SH ERRORS
.TP 15
[EBADF]
.I Stream
E 11
I 11
.Sh ERRORS
.Bl -tag -width [EINVAL]
.It Bq Er EBADF
The
.Fa stream
specified
E 11
is not a seekable stream.
D 11
.TP
[EINVAL]
E 11
I 11
.It Bq Er EINVAL
E 11
The
D 11
.I whence
E 11
I 11
.Fa whence
E 11
argument to 
D 11
.I fseek
was not SEEK_SET, SEEK_END, or SEEK_CUR.
.PP
.IR Fgetpos ,
.IR fseek ,
.IR fsetpos ,
E 11
I 11
.Fn fseek
was not
.Dv SEEK_SET ,
.Dv SEEK_END ,
or
.Dv SEEK_CUR .
.El
.Pp
The function
.Fn fgetpos ,
.Fn fseek ,
.Fn fsetpos ,
E 11
and 
D 11
.I ftell
E 11
I 11
.Fn ftell
E 11
may also fail and set
D 11
.I errno
E 11
I 11
.Va errno
E 11
for any of the errors specified for the routines
D 11
.IR fflush (3),
.IR fstat (2),
.IR lseek (2),
E 11
I 11
.Xr fflush 3 ,
.Xr fstat 2 ,
.Xr lseek 2 ,
E 11
and 
D 11
.IR malloc (3).
.SH STANDARDS
.IR Fgetpos ,
.IR fsetpos ,
.IR fseek ,
.IR ftell ,
E 11
I 11
.Xr malloc 3 .
.Sh SEE ALSO
.Xr lseek 2
.Sh STANDARDS
The
.Fn fgetpos ,
.Fn fsetpos ,
.Fn fseek ,
.Fn ftell ,
E 11
and
D 11
.IR rewind
conform to ANSI X3.159-1989 (``ANSI C'').
E 11
I 11
.Fn rewind
functions
conform to
.St -ansiC .
E 11
E 8
E 5
E 2
D 4
.SH DIAGNOSTICS
.I Fseek
returns \-1 for improper seeks.
E 4
E 1
