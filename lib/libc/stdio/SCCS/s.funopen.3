h15776
s 00002/00002/00140
d D 8.1 93/06/09 18:53:19 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00003/00003/00139
d D 5.4 93/06/09 18:53:15 bostic 5 3
c fixed the under development line
e
s 00002/00002/00140
d R 8.1 93/06/04 13:06:51 bostic 4 3
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00103/00079/00039
d D 5.3 91/04/19 14:46:31 cael 3 2
c macro and text revision (-mdoc version 3)
e
s 00000/00000/00118
d D 5.2 91/04/19 14:41:29 cael 2 1
c macro and text revision (-mdoc version 3)
e
s 00118/00000/00000
d D 5.1 91/03/05 14:55:12 bostic 1 0
c date and time created 91/03/05 14:55:12 by bostic
e
u
U
t
T
I 1
D 3
.\" Copyright (c) 1990 The Regents of the University of California.
E 3
I 3
D 6
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 3
.\" All rights reserved.
E 6
I 6
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 6
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek.
D 3
.\"
E 3
.\" %sccs.include.redist.man%
.\"
D 3
.\"	%W% (Berkeley) %G%
E 3
I 3
.\"     %W% (Berkeley) %G%
E 3
.\"
D 3
.TH FUNOPEN 3 "%Q%"
.UC 7
.SH NAME
funopen, fropen, fwopen \- open a stream
.SH SYNOPSIS
.nf
.ft B
#include <stdio.h>

FILE *
funopen(void *cookie, int (*readfn)(void *, char *, int),
.RS
.\" old man macros need the reset of bold mode
.ft B
int (*writefn)(void *, char *, int),
fpos_t (*seekfn)(void *, off_t, int), int (*closefn)(void *));
.RE
.\" old man macros need the reset of bold mode
.ft B

FILE *
fropen(void *cookie, int (*readfn)(void *, char *, int));

FILE *
fwopen(void *cookie, int (*writefn)(void *, char *, int));
.ft R
.fi
.SH DESCRIPTION
.I Funopen
associates a stream with up to four ``I/O functions''.
E 3
I 3
.Dd %Q%
.Dt FUNOPEN 3
.Os
.Sh NAME
.Nm funopen ,
.Nm fropen ,
.Nm fwopen
.Nd open a stream
.Sh SYNOPSIS
.Fd #include <stdio.h>
.Ft FILE *
.Fn funopen "void  *cookie" "int  (*readfn)(void *, char *, int)" "int (writefn*)(void *, const char *, int)" "fpos_t (seekfn*)(void *, fpos_t, int)" "int (closefn*)(void *)"
.Ft FILE *
.Fn fropen "void  *cookie" "int  (*readfn)(void *, char *, int)"
.Ft FILE *
.Fn fwopen "void  *cookie" "int  (*writefn)(void *, char *, int)"
.Sh DESCRIPTION
The
.Fn funopen
function
associates a stream with up to four
.Dq Tn I/O No functions .
E 3
Either 
D 3
.I readfn
E 3
I 3
.Fa readfn
E 3
or
D 3
.I writefn
E 3
I 3
.Fa writefn
E 3
must be specified;
D 3
the others can be given as an appropriately-typed NULL pointer.
These I/O functions will be used to read, write, seek and
E 3
I 3
the others can be given as an appropriately-typed
.Dv NULL
pointer.
These
.Tn I/O
functions will be used to read, write, seek and
E 3
close the new stream.
D 3
.PP
E 3
I 3
.Pp
E 3
In general, omitting a function means that any attempt to perform the
associated operation on the resulting stream will fail.
If the close function is omitted, closing the stream will flush 
any buffered output and then succeed.
D 3
.PP
E 3
I 3
.Pp
E 3
The calling conventions of
D 3
.IR readfn ,
.IR writefn ,
.I seekfn 
E 3
I 3
.Fa readfn ,
.Fa writefn ,
.Fa seekfn
E 3
and
D 3
.I closefn
E 3
I 3
.Fa closefn
E 3
must match those, respectively, of
D 3
.IR read (2),
.IR write (2),
.IR seek (2),
E 3
I 3
.Xr read 2 ,
.Xr write 2 ,
.Xr seek 2 ,
E 3
and
D 3
.IR close (2)
E 3
I 3
.Xr close 2
E 3
with the single exception that they are passed the
D 3
.I cookie
E 3
I 3
.Fa cookie
E 3
argument specified to 
D 3
.I funopen
E 3
I 3
.Fn funopen
E 3
in place of the traditional file descriptor argument.
D 3
.PP
Read and write I/O functions are allowed to change the underlying buffer
E 3
I 3
.Pp
Read and write
.Tn I/O
functions are allowed to change the underlying buffer
E 3
on fully buffered or line buffered streams by calling
D 3
.IR setvbuf .
E 3
I 3
.Xr setvbuf 3 .
E 3
They are also not required to completely fill or empty the buffer.
They are not, however, allowed to change streams from unbuffered to buffered
or to change the state of the line buffering flag.
They must also be prepared to have read or write calls occur on buffers other
than the one most recently specified.
D 3
.PP
All user I/O functions can report an error by returning \-1.
E 3
I 3
.Pp
All user
.Tn I/O
functions can report an error by returning \-1.
E 3
Additionally, all of the functions should set the external variable
D 3
.I errno
E 3
I 3
.Va errno
E 3
appropriately if an error occurs.
D 3
.PP
E 3
I 3
.Pp
E 3
An error on 
D 3
.I closefn
E 3
I 3
.Fn closefn
E 3
does not keep the stream open.
D 3
.PP
As a convenience, the include file ``<stdio.h>'' defines the macros
.I fropen
E 3
I 3
.Pp
As a convenience, the include file
.Aq Pa stdio.h
defines the macros
.Fn fropen
E 3
and
D 3
.I fwopen
E 3
I 3
.Fn fwopen
E 3
as calls to
D 3
.I funopen
E 3
I 3
.Fn funopen
E 3
with only a read or write function specified.
D 3
.SH "SEE ALSO"
fcntl(2), open(2), fclose(3), fopen(3), fseek(3), setbuf(3)
.SH "RETURN VALUES"
E 3
I 3
.Sh RETURN VALUES
E 3
Upon successful completion, 
D 3
.I funopen
returns a FILE pointer.
Otherwise, NULL is returned and the global variable
.I errno
E 3
I 3
.Fn funopen
returns a
.Dv FILE
pointer.
Otherwise,
.Dv NULL
is returned and the global variable
.Va errno
E 3
is set to indicate the error.
D 3
.SH ERRORS
.TP 15
[EINVAL]
.I Funopen
E 3
I 3
.Sh ERRORS
.Bl -tag -width [EINVAL]
.It Bq Er EINVAL
The
.Fn funopen
function
E 3
was called without either a read or write function.
D 3
.I Funopen
may also fail and set errno for any of the errors
E 3
I 3
The
.Fn funopen
function
may also fail and set
.Va errno
for any of the errors
E 3
specified for the routine
D 3
.IR malloc (3).
.SH BUGS
.I Funopen
may not be portable to systems other than BSD.
E 3
I 3
.Xr malloc 3 .
.El
.Sh SEE ALSO
.Xr fcntl 2 ,
.Xr open 2 ,
.Xr fclose 3 ,
.Xr fopen 3 ,
.Xr fseek 3 ,
.Xr setbuf 3
.Sh HISTORY
D 5
These
functions are
.Ud .
E 5
I 5
The
.Fn funopen
functions first appeared in 4.4BSD.
E 5
.Sh BUGS
The
.Fn funopen
function
may not be portable to systems other than
.Bx .
E 3
E 1
