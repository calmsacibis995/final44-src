h13721
s 00002/00002/00108
d D 8.1 93/06/04 13:08:02 bostic 13 12
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00086/00051/00024
d D 6.10 91/04/19 14:46:49 cael 12 11
c macro and text revision (-mdoc version 3)
e
s 00000/00000/00075
d D 6.9 91/04/19 14:41:39 cael 11 10
c macro and text revision (-mdoc version 3)
e
s 00005/00006/00070
d D 6.8 91/03/05 14:54:35 bostic 10 9
c man page pass, minor cleanups
e
s 00001/00011/00075
d D 6.7 90/06/23 17:56:34 trent 9 8
c new copyright notice
e
s 00003/00001/00083
d D 6.6 89/10/16 14:07:57 bostic 8 7
c try it again; add section RETURN VALUE, note errno getting set
e
s 00072/00019/00012
d D 6.5 89/10/16 14:05:45 bostic 7 6
c from scratch; add specification of errno values
e
s 00003/00003/00028
d D 6.4 88/12/21 19:13:12 bostic 6 5
c document that created file is 0600
e
s 00014/00020/00017
d D 6.3 87/04/10 14:57:41 bostic 5 4
c major rework; bug report 4.2BSD/lib/63
e
s 00015/00009/00022
d D 6.2 86/05/14 18:53:16 karels 4 3
c Englishisize, add error return for mkstemp
e
s 00010/00001/00021
d D 6.1 85/05/15 15:02:09 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00001/00001/00021
d D 5.1 85/05/15 15:02:02 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00022/00000/00000
d D 4.1 85/05/15 15:01:56 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 7
D 12
.\" Copyright (c) 1989 The Regents of the University of California.
E 12
I 12
D 13
.\" Copyright (c) 1989, 1991 The Regents of the University of California.
E 12
.\" All rights reserved.
E 13
I 13
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 13
.\"
D 9
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 9
I 9
.\" %sccs.include.redist.man%
E 9
.\"
E 7
I 1
D 12
.\"	%W% (Berkeley) %G%
E 12
I 12
.\"     %W% (Berkeley) %G%
E 12
.\"
D 2
.TH MKTEMP 3 
E 2
I 2
D 3
.TH MKTEMP 3  "19 January 1983"
E 3
I 3
D 12
.TH MKTEMP 3  "%Q%"
E 3
E 2
.AT 3
.SH NAME
D 7
mktemp \- make a unique file name
E 7
I 7
mktemp \- create a unique file name
E 7
.SH SYNOPSIS
.nf
D 7
.B char *mktemp(template)
.B char *template;
E 7
I 7
.ft B
D 10
char *
mktemp(template)
char *template;
E 7
I 3
.sp
D 7
.B mkstemp(template)
.B char *template;
E 7
I 7
mkstemp(template)
char *template;
E 10
I 10
#include <unistd.h>

char *mktemp(char *template);

int mkstemp(char *template);
E 10
.ft R
E 7
E 3
.fi
.SH DESCRIPTION
D 5
.I Mktemp
D 4
replaces
E 4
I 4
creates a unique file name, typically in a temporary filesystem,
by replacing
E 4
.I template
D 4
by a unique file name, and returns the
E 4
I 4
with a unique file name, and returns the
E 4
address of the template.
D 4
The template should look like a file name with six trailing
X's, which will be replaced with the
E 4
I 4
The template should contain a file name with six trailing
X's, which are replaced with the
E 4
current process id and a unique letter.
I 3
.I Mkstemp
D 4
makes the same replacement to the template but returns an open file descriptor
for the template file suitable for reading or writing.
E 4
I 4
makes the same replacement to the template
but returns a file descriptor
for the template file open for reading and writing.
E 4
.I Mkstemp
D 4
avoids the potential race between the creation of the unique
file name and its being opened for use.
E 4
I 4
avoids the race between testing whether the
file exists and opening it for use.
E 5
I 5
D 7
\fIMktemp\fP creates a unique file name and returns the address of
the template.  The template should contain a file name with trailing
\fIX\fP's, normally something like \fI/tmp/tempXXXXXX\fP.  The \fIX\fP's
are replaced by the current process number and/or a unique letter
combination.  \fIMkstemp\fP makes the same replacement to the template
D 6
but opens the template file and returns a file descriptor open for
reading and writing.  \fIMkstemp\fP avoids the race between testing
E 6
I 6
but creates the template file, mode 0600, and returns a file descriptor
open for reading and writing.  \fIMkstemp\fP avoids the race between testing
E 6
whether the file exists and opening it for use.  The number of file
name combinations \fImktemp\fP and \fImkstemp\fP will try depends on
the number of \fIX\fP's placed on the end of the template; six \fIX\fP's
will result in them trying roughly 26 ** 6 combinations.
E 7
I 7
.I Mktemp
takes a file name template and overwrites it to create a unique file
name for use by the application.
The template may be any file name with some number of X's appended
to it, for example ``/tmp/temp.XXXX''.
The trailing X's are replaced with the current process number and/or a
E 12
I 12
.Dd %Q%
.Dt MKTEMP 3
.Os
.Sh NAME
.Nm mktemp
.Nd make temporary file name (unique)
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft char *
.Fn mktemp "char *template"
.Ft int
.Fn mkstemp "char *template"
.Sh DESCRIPTION
The
.Fn mktemp
function
takes the given file name template and overwrites a portion of it
to create a file name.
This file name is unique and suitable for use
by the application.
The template may be any file name with some number of
.Ql X Ns s
appended
to it, for example
.Pa /tmp/temp.XXXX .
The trailing
.Ql X Ns s
are replaced with the current process number and/or a
E 12
unique letter combination.
The number of unique file names
D 12
.I mktemp
can return depends on the number of X's provided; six X's will
E 12
I 12
.Fn mktemp
can return depends on the number of
.Ql X Ns s
provided; six
.Ql X Ns s
will
E 12
result in
D 12
.I mktemp
E 12
I 12
.Fn mktemp
E 12
testing roughly 26 ** 6 combinations.
D 12
.PP
.I Mkstemp
E 12
I 12
.Pp
The
.Fn mkstemp
function
E 12
makes the same replacement to the template and creates the template file,
mode 0600, returning a file descriptor opened for reading and writing.
This avoids the race between testing for a file's existence and opening it
for use.
D 8
.PP
E 8
I 8
D 12
.SH "RETURN VALUE"
E 8
.I Mktemp
returns a pointer to the template on success and NULL on failure.
.I Mkstemp
returns -1 if no suitable file could be created.
I 8
If either call fails an error code is placed in the global location
.IR errno .
E 8
.SH ERRORS
.I Mktemp
E 12
I 12
.Sh RETURN VALUES
The
.Fn mktemp
function
returns a pointer to the template on success and
.Dv NULL
on failure.
The
.Fn mkstemp
function
returns \-1 if no suitable file could be created.
If either call fails an error code is placed in the global variable
.Va errno .
.Sh ERRORS
The
.Fn mktemp
E 12
and
D 12
.I mkstemp
E 12
I 12
.Fn mkstemp
functions
E 12
may set
D 12
.I errno
E 12
I 12
.Va errno
E 12
to one of the following values:
D 12
.TP
[ENOTDIR]
E 12
I 12
.Bl -tag -width [ENOTDIR]
.It Bq Er ENOTDIR
E 12
The pathname portion of the template is not an existing directory.
D 12
.PP
.I Mktemp
E 12
I 12
.El
.Pp
The
.Fn mktemp
E 12
and
D 12
.I mkstemp
E 12
I 12
.Fn mkstemp
functions
E 12
may also set
D 12
.I errno
E 12
I 12
.Va errno
E 12
to any value specified by the
D 12
.IR stat (2)
E 12
I 12
.Xr stat 2
E 12
function.
D 12
.I Mkstemp
E 12
I 12
.Pp
The
.Fn mkstemp
function
E 12
may also set
D 12
.I errno
E 12
I 12
.Va errno
E 12
to any value specified by the
D 12
.IR open (2)
E 12
I 12
.Xr open 2
E 12
function.
E 7
E 5
E 4
E 3
D 12
.SH "SEE ALSO"
D 4
getpid(2)
E 4
I 4
D 5
getpid(2), open(2)
E 5
I 5
D 6
access(2), getpid(2), open(2)
E 6
I 6
chmod(2), getpid(2), open(2), stat(2)
E 12
I 12
.Sh SEE ALSO
.Xr chmod 2 ,
.Xr getpid 2 ,
.Xr open 2 ,
.Xr stat 2
.Sh HISTORY
A
.Nm mktemp
function appeared in
.At v7 .
E 12
E 6
E 5
D 7
.SH DIAGNOSTICS
D 5
.I Mkstemp
returns an open file descriptor upon success.
It returns -1 if no suitable file could be created.
E 5
I 5
\fIMktemp\fP returns NULL on failure, \fImkstemp\fP returns -1 if no
suitable file could be created.
E 7
E 5
E 4
E 1
