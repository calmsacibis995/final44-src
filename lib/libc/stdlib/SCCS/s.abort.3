h39140
s 00002/00002/00042
d D 8.1 93/06/04 13:04:16 bostic 10 9
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00004/00000/00040
d D 6.7 91/06/29 14:17:04 bostic 9 8
c add ANSI contribution notice
e
s 00032/00024/00008
d D 6.6 91/04/19 14:31:22 cael 8 7
c macro and text revision (-mdoc version 3)
e
s 00009/00000/00023
d D 6.5 90/05/17 11:51:49 bostic 7 6
c forgot synopsis line
e
s 00016/00011/00007
d D 6.4 90/05/16 09:55:10 bostic 6 5
c starting from the ANSI C manual page
e
s 00001/00001/00017
d D 6.3 86/05/27 10:07:18 kjd 5 4
c fix quote
e
s 00001/00001/00017
d D 6.2 86/05/12 18:26:00 karels 4 3
c correct error message
e
s 00001/00001/00017
d D 6.1 85/05/15 14:52:14 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00005/00002/00013
d D 5.1 85/05/15 14:52:03 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00015/00000/00000
d D 4.1 85/05/15 14:51:54 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 6
D 8
.\" Copyright (c) 1990 The Regents of the University of California.
E 8
I 8
D 10
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 8
.\" All rights reserved.
E 10
I 10
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 10
.\"
I 9
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
E 9
.\" %sccs.include.redist.man%
.\"
E 6
I 1
D 8
.\"	%W% (Berkeley) %G%
E 8
I 8
.\"     %W% (Berkeley) %G%
E 8
.\"
D 2
.TH ABORT 3
E 2
I 2
D 3
.TH ABORT 3 "18 January 1983"
E 3
I 3
D 8
.TH ABORT 3 "%Q%"
E 3
E 2
.AT 3
.SH NAME
D 6
abort \- generate a fault
E 6
I 6
abort \- cause abnormal program termination
I 7
.SH SYNOPSIS
.nf
.ft B
#include <stdlib.h>

void
abort(void);
.ft R
.fi
E 7
E 6
.SH DESCRIPTION
E 8
I 8
.Dd %Q%
.Dt ABORT 3
.Os
.Sh NAME
.Nm abort
.Nd cause abnormal program termination
.Sh SYNOPSIS
.Fd #include <stdlib.h>
.Ft void
.Fn abort void
.Sh DESCRIPTION
E 8
D 6
.I Abort
executes an instruction which is illegal in user mode.
This causes a signal that normally terminates
the process with a core dump, which may be used for debugging.
E 6
I 6
The
D 8
.I abort
E 8
I 8
.Fn abort
E 8
function causes abnormal program termination to occur, unless the
D 8
signal SIGABRT is being caught and the signal handler does not return.
.PP
E 8
I 8
signal
.Dv SIGABRT
is being caught and the signal handler does not return.
.Pp
E 8
No open streams are closed or flushed.
E 6
D 8
.SH SEE ALSO
D 2
adb(1), signal(2), exit(2)
E 2
I 2
D 6
adb(1), sigvec(2), exit(2)
E 2
.SH DIAGNOSTICS
D 4
Usually `IOT trap \- core dumped' from the shell.
E 4
I 4
D 5
Usually `Illegal instruction \- core dumped' from the shell.
E 5
I 5
Usually ``Illegal instruction \- core dumped'' from the shell.
E 5
E 4
I 2
.SH BUGS
The abort() function does not flush standard I/O buffers.  Use
\fIfflush\fP\|(3S).
E 6
I 6
sigvec(2), exit(2)
.SH STANDARDS
.B Abort
conforms to ANSI X3.159-1989 (``ANSI C'').
E 8
I 8
.Sh RETURN VALUES
The
.Nm abort
function
never returns.
.Sh SEE ALSO
.Xr sigaction 2 ,
.Xr exit 2
.Sh STANDARDS
The
.Fn abort
function
conforms to
.St -ansiC .
E 8
E 6
E 2
E 1
