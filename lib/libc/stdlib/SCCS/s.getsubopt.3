h54732
s 00002/00002/00117
d D 8.1 93/06/09 19:01:02 bostic 10 9
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00002/00118
d D 5.8 93/06/09 19:00:59 bostic 9 7
c fixed the under development line
e
s 00002/00002/00118
d R 8.1 93/06/04 13:06:33 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00002/00002/00118
d D 5.7 93/03/02 17:55:03 bostic 7 6
c fixes, wordsmithing from Donn Seeley at BSDI
e
s 00001/00000/00119
d D 5.6 91/11/14 14:48:42 bostic 6 5
c fix C syntax
e
s 00001/00000/00118
d D 5.5 91/11/14 14:40:39 bostic 5 4
c add suboptarg back in, it got lost somewhere
e
s 00001/00001/00117
d D 5.4 91/07/31 19:56:22 cael 4 3
c reposition display
e
s 00060/00042/00058
d D 5.3 91/04/19 14:49:15 cael 3 2
c macro and text revision (-mdoc version 3)
e
s 00001/00001/00099
d D 5.2 91/02/24 14:32:51 bostic 2 1
c add ANSI prototypes
e
s 00100/00000/00000
d D 5.1 90/10/30 12:41:26 bostic 1 0
c date and time created 90/10/30 12:41:26 by bostic
e
u
U
t
T
I 1
D 3
.\" Copyright (c) 1990 The Regents of the University of California.
E 3
I 3
D 10
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 3
.\" All rights reserved.
E 10
I 10
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 10
.\"
.\" %sccs.include.redist.man%
.\"
D 3
.\"	%W% (Berkeley) %G%
E 3
I 3
.\"     %W% (Berkeley) %G%
E 3
.\"
D 3
.TH GETSUBOPT 3 "%Q%"
.UC 7
.SH NAME
getsubopt \- get sub options from an argument
.SH SYNOPSIS
.nf
.ft B
D 2
int getsubopt(char **optionp, char *tokens[], char **valuep);
E 2
I 2
int getsubopt(char **optionp, char * const *tokens, char **valuep);
E 2

extern char *suboptarg;
.SH DESCRIPTION
.I Getsubopt
E 3
I 3
.Dd %Q%
.Dt GETSUBOPT 3
.Os
.Sh NAME
.Nm getsubopt
.Nd get sub options from an argument
.Sh SYNOPSIS
D 7
.Fd #include <stdio.h>
E 7
I 7
.Fd #include <stdlib.h>
E 7
I 5
.Vt extern char *suboptarg
E 5
.Ft int
.Fn getsubopt "char **optionp" "char * const *tokens" "char **valuep"
.Sh DESCRIPTION
The
.Fn getsubopt
I 7
function
E 7
E 3
parses a string containing tokens delimited by one or more tab, space or
D 3
comma (``,'') characters.
E 3
I 3
comma
.Pq Ql \&,
characters.
E 3
It is intended for use in parsing groups of option arguments provided
as part of a utility command line.
D 3
.PP
.I Optionp
E 3
I 3
.Pp
The argument
.Fa optionp
E 3
is a pointer to a pointer to the string.
D 3
.I Tokens
is a pointer to a NULL-terminated array of pointers to strings.
.PP
.I Getsubopt
E 3
I 3
The argument
.Fa tokens
is a pointer to a
.Dv NULL Ns -terminated
array of pointers to strings.
.Pp
The
.Fn getsubopt
function
E 3
returns the zero-based offset of the pointer in the
D 3
.I tokens
E 3
I 3
.Fa tokens
E 3
array referencing a string which matches the first token
D 3
in the string, or, -1 if the string contains no tokens or
.I tokens
E 3
I 3
in the string, or, \-1 if the string contains no tokens or
.Fa tokens
E 3
does not contain a matching string.
D 3
.PP
E 3
I 3
.Pp
E 3
If the token is of the form ``name=value'', the location referenced by
D 3
.I valuep
E 3
I 3
.Fa valuep
E 3
will be set to point to the start of the ``value'' portion of the token.
D 3
.PP
E 3
I 3
.Pp
E 3
On return from
D 3
.IR getsubopt ,
.I optionp
E 3
I 3
.Fn getsubopt ,
.Fa optionp
E 3
will be set to point to the start of the next token in the string,
or the null at the end of the string if no more tokens are present.
The external variable
D 3
.I suboptarg
will be set to point to the start of the current token, or NULL if no
E 3
I 3
.Fa suboptarg
will be set to point to the start of the current token, or
.Dv NULL
if no
E 3
tokens were present.
D 3
.I Valuep
will be set to point to the ``value'' portion of the token, or NULL
E 3
I 3
The argument
.Fa valuep
will be set to point to the ``value'' portion of the token, or
.Dv NULL
E 3
if no ``value'' portion was present.
D 3
.SH EXAMPLE
.nf
.RS
E 3
I 3
.Sh EXAMPLE
D 4
.Bd -literal -offset indent -compact
E 4
I 4
.Bd -literal -compact
E 4
E 3
char *tokens[] = {
	#define	ONE	0
		"one",
	#define	TWO	1
		"two",
	NULL
};

\&...

extern char *optarg, *suboptarg;
char *options, *value;

D 3
while ((ch = getopt(argc, argv, "ab:")) != -1) {
E 3
I 3
while ((ch = getopt(argc, argv, "ab:")) != \-1) {
E 3
	switch(ch) {
	case 'a':
		/* process ``a'' option */
		break;
	case 'b':
		options = optarg;
		while (*options) {
			switch(getsubopt(&options, tokens, &value)) {
			case ONE:
				/* process ``one'' sub option */
				break;
			case TWO:
				/* process ``two'' sub option */
				if (!value)
					error("no value for two");
				i = atoi(value);
				break;
D 3
			case -1:
E 3
I 3
			case \-1:
E 3
				if (suboptarg)
					error("illegal sub option %s",
D 3
					    suboptarg);
E 3
I 3
					  suboptarg);
E 3
				else
					error("missing sub option");
				break;
I 6
D 7
			}
E 7
E 6
		}
		break;
	}
D 3
.fi
.SH SEE\ ALSO
getopt(3), strsep(3)
E 3
I 3
.Ed
.Sh SEE ALSO
.Xr getopt 3 ,
.Xr strsep 3
.Sh HISTORY
The
.Fn getsubopt
D 9
function is
.Ud .
E 9
I 9
function first appeared in 4.4BSD.
E 9
E 3
E 1
