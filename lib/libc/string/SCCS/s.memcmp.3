h16957
s 00002/00002/00054
d D 8.1 93/06/04 15:10:44 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00003/00001/00053
d D 5.5 91/06/29 14:34:49 bostic 5 4
c add ANSI contribution notice
e
s 00042/00030/00012
d D 5.4 91/04/19 14:45:54 cael 4 3
c macro and text revision (-mdoc version 3)
e
s 00000/00000/00042
d D 5.3 91/04/19 14:41:06 cael 3 2
c macro and text revision (-mdoc version 3)
e
s 00001/00002/00041
d D 5.2 90/06/24 14:08:17 bostic 2 1
c fold strn{casecmp,cat,cmp,cpy}.3 into str{casecmp,cat,cmp,cpy}.3
e
s 00038/00000/00000
d D 5.1 90/05/15 14:08:15 bostic 1 0
c date and time created 90/05/15 14:08:15 by bostic
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1990 The Regents of the University of California.
E 4
I 4
D 6
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 4
.\" All rights reserved.
E 6
I 6
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 6
.\"
.\" This code is derived from software contributed to Berkeley by
D 5
.\" Chris Torek.
E 5
I 5
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
E 5
D 4
.\"
E 4
.\" %sccs.include.redist.man%
.\"
D 4
.\"	%W% (Berkeley) %G%
E 4
I 4
.\"     %W% (Berkeley) %G%
E 4
.\"
D 4
.TH MEMCMP 3 "%Q%"
.UC 7
.SH NAME
memcmp \- compare byte string
.SH SYNOPSIS
.nf
.ft B
#include <string.h>

int
memcmp(const void *b1, const void *b2, size_t len);
.ft R
.fi
.SH DESCRIPTION
.B Memcmp
E 4
I 4
.Dd %Q%
.Dt MEMCMP 3
.Os
.Sh NAME
.Nm memcmp
.Nd compare byte string
.Sh SYNOPSIS
.Fd #include <string.h>
.Ft int
.Fn memcmp "const void *b1" "const void *b2" "size_t len"
.Sh DESCRIPTION
The
.Fn memcmp
function
E 4
compares byte string
D 4
.I b1
E 4
I 4
.Fa b1
E 4
against byte string
D 4
.IR b2 ,
returning zero if they are identical,
otherwise returning the difference between the first two differing bytes
(treated as unsigned char values, so that '\e200' is greater than \&'\e0',
e.g.).
E 4
I 4
.Fa b2 .
E 4
Both strings are assumed to be
D 4
.I len
E 4
I 4
.Fa len
E 4
bytes long.
I 4
.Sh RETURN VALUES
The
.Fn memcmp
function
returns zero if the the two strings are identical,
otherwise returns the difference between the first two differing bytes
(treated as unsigned char values, so that
.Sq Li \e200
is greater than
.Sq Li \&\e0 ,
for example).
E 4
Zero-length strings are always identical.
D 4
.SH SEE ALSO
D 2
bcmp(3), strcasecmp(3), strcmp(3), strcoll(3), strncasecmp(3),
strncmp(3), strxfrm(3)
E 2
I 2
bcmp(3), strcasecmp(3), strcmp(3), strcoll(3), strxfrm(3)
E 2
.SH STANDARDS
.I Memcmp
conforms to ANSI X3.159-1989 (``ANSI C'').
E 4
I 4
.Sh SEE ALSO
.Xr bcmp 3 ,
.Xr strcasecmp 3 ,
.Xr strcmp 3 ,
.Xr strcoll 3 ,
.Xr strxfrm 3
.Sh STANDARDS
The
.Fn memcmp
function
conforms to
.St -ansiC .
E 4
E 1
