h41708
s 00002/00002/00058
d D 8.1 93/06/09 18:59:56 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00002/00059
d D 5.5 93/06/09 18:59:53 bostic 6 4
c fixed the under development line
e
s 00002/00002/00059
d R 8.1 93/06/04 15:11:08 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00044/00033/00017
d D 5.4 91/04/19 14:45:34 cael 4 3
c macro and text revision (-mdoc version 3)
e
s 00000/00000/00050
d D 5.3 91/04/19 14:40:56 cael 3 2
c macro and text revision (-mdoc version 3)
e
s 00013/00004/00037
d D 5.2 90/06/24 14:08:21 bostic 2 1
c fold strn{casecmp,cat,cmp,cpy}.3 into str{casecmp,cat,cmp,cpy}.3
e
s 00035/00000/00000
d D 5.1 90/05/15 14:36:37 bostic 1 0
c date and time created 90/05/15 14:36:37 by bostic
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1990 The Regents of the University of California.
E 4
I 4
D 7
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 4
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek.
D 4
.\"
E 4
.\" %sccs.include.redist.man%
.\"
D 4
.\"	%W% (Berkeley) %G%
E 4
I 4
.\"     %W% (Berkeley) %G%
E 4
.\"
D 4
.TH STRCASECMP 3 "%Q%"
.UC 7
.SH NAME
strcasecmp \- compare strings, ignoring case
.SH SYNOPSIS
.nf
.ft B
#include <string.h>

int
strcasecmp(const char *s1, const char *s2);
I 2

int
strncasecmp(const char *s1, const char *s2, size_t len);
E 2
.ft R
.fi
.SH DESCRIPTION
.B Strcasecmp
E 4
I 4
.Dd %Q%
.Dt STRCASECMP 3
.Os
.Sh NAME
.Nm strcasecmp
.Nd compare strings, ignoring case
.Sh SYNOPSIS
.Fd #include <string.h>
.Ft int
.Fn strcasecmp "const char *s1" "const char *s2"
.Ft int
.Fn strncasecmp "const char *s1" "const char *s2" "size_t len"
.Sh DESCRIPTION
The
.Fn strcasecmp
E 4
D 2
compares null-terminated strings
E 2
I 2
and
D 4
.B strncasecmp
E 4
I 4
.Fn strncasecmp
functions
E 4
compare the null-terminated strings
E 2
D 4
.I s1
E 4
I 4
.Fa s1
E 4
and
D 4
.I s2
E 4
I 4
.Fa s2
E 4
D 2
and returns an integer greater than, equal to, or less than 0,
E 2
I 2
and return an integer greater than, equal to, or less than 0,
E 2
according as
D 4
.I s1
E 4
I 4
.Fa s1
E 4
is lexicographically greater than, equal to, or less than
D 4
.IR s2
E 4
I 4
.Fa s2
E 4
after translation of each corresponding character to lower-case.
The strings themselves are not modified.
D 4
The comparison is done using unsigned characters, so that '\e200'
is greater than '\e0'.
I 2
.PP
.B Strncasecmp
E 4
I 4
The comparison is done using unsigned characters, so that
.Sq Li \e200
is greater than
.Ql \e0 .
.Pp
The
.Fn strncasecmp
E 4
compares at most
D 4
.I len
E 4
I 4
.Fa len
E 4
characters.
E 2
D 4
.SH SEE ALSO
D 2
bcmp(3), memcmp(3), strcmp(3), strcoll(3), strncasecmp(3),
strncmp(3), strxfrm(3)
E 2
I 2
bcmp(3), memcmp(3), strcmp(3), strcoll(3), strxfrm(3)
E 4
I 4
.Sh SEE ALSO
.Xr bcmp 3 ,
.Xr memcmp 3 ,
.Xr strcmp 3 ,
.Xr strcoll 3 ,
.Xr strxfrm 3
.Sh HISTORY
The
.Fn strcasecmp
and
.Fn strncasecmp
D 6
functions are
.Ud .
E 6
I 6
functions first appeared in 4.4BSD.
E 6
E 4
E 2
E 1
