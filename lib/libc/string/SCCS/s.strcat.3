h33817
s 00002/00002/00065
d D 8.1 93/06/04 15:11:14 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00003/00001/00064
d D 5.6 91/06/29 14:39:41 bostic 6 5
c add ANSI contribution notice
e
s 00049/00040/00016
d D 5.5 91/04/19 14:45:32 cael 5 4
c macro and text revision (-mdoc version 3)
e
s 00000/00000/00056
d D 5.4 91/04/19 14:40:55 cael 4 3
c macro and text revision (-mdoc version 3)
e
s 00013/00007/00043
d D 5.3 90/06/24 14:08:24 bostic 3 2
c fold strn{casecmp,cat,cmp,cpy}.3 into str{casecmp,cat,cmp,cpy}.3
e
s 00011/00001/00039
d D 5.2 90/06/24 13:44:05 bostic 2 1
c fold in strncat.3
e
s 00035/00000/00000
d D 5.1 90/05/15 14:37:57 bostic 1 0
c date and time created 90/05/15 14:37:57 by bostic
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1990 The Regents of the University of California.
E 5
I 5
D 7
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 5
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
.\"
.\" This code is derived from software contributed to Berkeley by
D 6
.\" Chris Torek.
E 6
I 6
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
E 6
D 5
.\"
E 5
.\" %sccs.include.redist.man%
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
.\"     %W% (Berkeley) %G%
E 5
.\"
D 5
.TH STRCAT 3 "%Q%"
.UC 4
.SH NAME
strcat \- concatenate strings
.SH SYNOPSIS
.nf
.ft B
#include <string.h>

char *
strcat(char *s, const char *append);
I 2

char *
strncat(char *s, const char *append, size_t count);
E 2
.ft R
.fi
.SH DESCRIPTION
.B Strcat
E 5
I 5
.Dd %Q%
.Dt STRCAT 3
.Os
.Sh NAME
.Nm strcat
.Nd concatenate strings
.Sh SYNOPSIS
.Fd #include <string.h>
.Ft char *
.Fn strcat "char *s" "const char *append"
.Ft char *
.Fn strncat "char *s" "const char *append" "size_t count"
.Sh DESCRIPTION
The
.Fn strcat
E 5
D 3
appends a copy of the null-terminated string
E 3
I 3
and
D 5
.B strncat
E 5
I 5
.Fn strncat
functions
E 5
append a copy of the null-terminated string
E 3
D 5
.I append
E 5
I 5
.Fa append
E 5
to the end of the null-terminated string
D 5
.IR s ,
D 3
then adds a terminating '\e0'.
.I S
E 3
I 3
then add a terminating '\e0'.
E 5
I 5
.Fa s ,
then add a terminating
.Ql \e0 .
E 5
The string
D 5
.I s
E 5
I 5
.Fa s
E 5
E 3
must have sufficient space to hold the result.
D 3
.B Strcat
returns the pointer
.IR s .
E 3
I 2
D 5
.PP
.B Strncat
appends at most
.I count
E 5
I 5
.Pp
The
.Fn strncat
function
appends not more than
.Fa count
E 5
characters.
I 3
D 5
.PP
.B Strcat
E 5
I 5
.Sh RETURN VALUES
The
.Fn strcat
E 5
and
D 5
.B strncat
E 5
I 5
.Fn strncat
functions
E 5
return the pointer
D 5
.IR s .
E 3
E 2
.SH SEE ALSO
D 3
strncat(3)
E 3
I 3
bcopy(3), memccpy(3), memcpy(3), memmove(3), strcpy(3)
E 3
.SH STANDARDS
.B Strcat
E 5
I 5
.Fa s .
.Sh SEE ALSO
.Xr bcopy 3 ,
.Xr memccpy 3 ,
.Xr memcpy 3 ,
.Xr memmove 3 ,
.Xr strcpy 3
.Sh STANDARDS
The
.Fn strcat
E 5
D 2
conforms to ANSI X3.159-1989 (``ANSI C'').
E 2
I 2
and
D 5
.B strncat
conform to ANSI X3.159-1989 (``ANSI C'').
E 5
I 5
.Fn strncat
functions
conform to
.St -ansiC .
E 5
E 2
E 1
