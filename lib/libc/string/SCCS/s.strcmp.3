h59427
s 00002/00002/00065
d D 8.1 93/06/04 15:11:24 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00003/00001/00064
d D 5.6 91/06/29 14:40:01 bostic 6 5
c add ANSI contribution notice
e
s 00054/00042/00011
d D 5.5 91/04/19 14:45:30 cael 5 4
c macro and text revision (-mdoc version 3)
e
s 00000/00000/00053
d D 5.4 91/04/19 14:40:54 cael 4 3
c macro and text revision (-mdoc version 3)
e
s 00004/00002/00049
d D 5.3 90/06/24 14:08:27 bostic 3 2
c fold strn{casecmp,cat,cmp,cpy}.3 into str{casecmp,cat,cmp,cpy}.3
e
s 00012/00003/00039
d D 5.2 90/06/24 13:41:41 bostic 2 1
c fold strncmp(3) into the manual page
e
s 00036/00000/00000
d D 5.1 90/05/15 14:42:37 bostic 1 0
c date and time created 90/05/15 14:42:37 by bostic
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1990 The Regents of the University of California.
E 5
I 5
D 7
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 5
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
.\"
.\" This code is derived from software contributed to Berkeley by
D 6
.\" Chris Torek.
E 6
I 6
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
E 6
D 5
.\"
E 5
.\" %sccs.include.redist.man%
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
.\"     %W% (Berkeley) %G%
E 5
.\"
D 5
.TH STRCMP 3 "%Q%"
.UC 4
.SH NAME
strcmp \- compare strings
.SH SYNOPSIS
.nf
.ft B
#include <string.h>

int
strcmp(const char *s1, const char *s2);
I 2

int
strncmp(const char *s1, const char *s2, size_t len);
E 2
.ft R
.fi
.SH DESCRIPTION
.B Strcmp
E 5
I 5
.Dd %Q%
.Dt STRCMP 3
.Os
.Sh NAME
.Nm strcmp
.Nd compare strings
.Sh SYNOPSIS
.Fd #include <string.h>
.Ft int
.Fn strcmp "const char *s1" "const char *s2"
.Ft int
.Fn strncmp "const char *s1" "const char *s2" "size_t len"
.Sh DESCRIPTION
The
.Fn strcmp
E 5
D 3
compares null-terminated strings
E 3
I 3
and
D 5
.B strncmp
compare null-terminated strings
E 3
.I s1
E 5
I 5
.Fn strncmp
functions
lexicographically compare the null-terminated strings
.Fa s1
E 5
and
D 5
.I s2
D 3
and returns an integer greater than, equal to, or less than 0,
E 3
I 3
and return an integer greater than, equal to, or less than 0,
E 3
according as
.I s1
is lexicographically greater than, equal to, or less than
.IR s2 .
The comparison is done using unsigned characters, so that '\e200'
is greater than '\e0'.
I 2
.PP
.I Strncmp
compares at most
.I len
E 5
I 5
.Fa s2 .
.Sh RETURN VALUES
The
.Fn strcmp
and
.Fn strncmp
return an integer greater than, equal to, or less than 0, according
as the string
.Fa s1
is greater than, equal to, or less than the string
.Fa s2 .
The comparison is done using unsigned characters, so that
.Ql \e200
is greater than
.Ql \e0 .
.Pp
The
.Fn strncmp
compares not more than
.Fa len
E 5
characters.
E 2
D 5
.SH SEE ALSO
D 2
bcmp(3), memcmp(3), strcasecmp(3), strcoll(3), strncasecmp(3),
strncmp(3), strxfrm(3)
E 2
I 2
bcmp(3), memcmp(3), strcasecmp(3), strcoll(3), strxfrm(3)
E 2
.SH STANDARDS
.B Strcmp
E 5
I 5
.Sh SEE ALSO
.Xr bcmp 3 ,
.Xr memcmp 3 ,
.Xr strcasecmp 3 ,
.Xr strcoll 3 ,
.Xr strxfrm 3
.Sh STANDARDS
The
.Fn strcmp
E 5
D 2
conforms to ANSI X3.159-1989 (``ANSI C'').
E 2
I 2
and
D 5
.B strncmp
conform to ANSI X3.159-1989 (``ANSI C'').
E 5
I 5
.Fn strncmp
functions
conform to
.St -ansiC .
E 5
E 2
E 1
