h02497
s 00002/00002/00096
d D 8.1 93/06/09 19:00:13 bostic 16 15
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00002/00097
d D 6.12 93/06/09 19:00:10 bostic 15 13
c fixed the under development line
e
s 00002/00002/00097
d R 8.1 93/06/04 15:11:51 bostic 14 13
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00023/00014/00076
d D 6.11 93/03/02 17:21:08 bostic 13 12
c fixes, wordsmithing from Donn Seeley at BSDI
e
s 00005/00000/00085
d D 6.10 92/10/04 12:59:15 bostic 12 11
c fix include files
e
s 00004/00000/00081
d D 6.9 91/06/29 14:36:16 bostic 11 10
c add ANSI contribution notice
e
s 00075/00050/00006
d D 6.8 91/04/19 14:46:22 cael 10 9
c macro and text revision (-mdoc version 3)
e
s 00000/00000/00056
d D 6.7 91/04/19 14:41:23 cael 9 8
c macro and text revision (-mdoc version 3)
e
s 00003/00003/00053
d D 6.6 91/03/05 15:03:37 bostic 8 7
c rename as strerror.3
e
s 00011/00010/00045
d D 6.5 91/03/05 14:54:36 bostic 7 6
c man page pass, minor cleanups
e
s 00001/00000/00054
d D 6.4 90/06/24 13:08:50 bostic 6 5
c strerror returns a char *
e
s 00023/00016/00031
d D 6.3 88/11/16 16:25:45 bostic 5 4
c add strerror(), deprecate sys_errlist, sys_nerr
e
s 00007/00008/00040
d D 6.2 87/09/10 11:52:51 bostic 4 3
c document perror((char *)NULL)
e
s 00001/00001/00047
d D 6.1 85/05/15 15:37:18 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00006/00008/00042
d D 5.1 85/05/15 15:36:59 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00050/00000/00000
d D 4.1 85/05/15 15:36:44 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 10
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 10
I 10
D 16
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 16
I 16
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 16
E 10
.\"
I 11
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
E 11
D 10
.\"	%W% (Berkeley) %G%
E 10
I 10
.\" %sccs.include.redist.man%
E 10
.\"
D 2
.TH PERROR 3 
E 2
I 2
D 3
.TH PERROR 3  "19 January 1983"
E 3
I 3
D 8
.TH PERROR 3  "%Q%"
E 8
I 8
D 10
.TH STRERROR 3  "%Q%"
E 8
E 3
E 2
.UC 4
.SH NAME
D 5
perror, sys_errlist, sys_nerr \- system error messages
E 5
I 5
perror, strerror, sys_errlist, sys_nerr \- system error messages
E 5
.SH SYNOPSIS
.nf
D 4
.B perror(s)
.B char *s;
E 4
I 4
D 7
.B perror(string)
.B char *string;
E 4
.PP
I 6
.B char *
E 6
D 5
.B int sys_nerr;
.B char *sys_errlist[];
E 5
I 5
.B strerror(errnum)
.B int errnum;
.PP
.B extern int errno, sys_nerr;
.B extern char *sys_errlist[];
E 7
I 7
.ft B
extern int errno, sys_nerr;
extern char *sys_errlist[];

#include <stdio.h>

void perror(const char *string);

char *strerror(int errnum);
.ft R
E 7
E 5
.fi
.SH DESCRIPTION
.I Perror
D 2
produces a short error message
on the standard error file
E 2
I 2
produces a short error message on the standard error file
E 2
describing the last error encountered during a call
D 4
to the system from a C program.
First the argument string
.I s
is printed, then a colon, then the message and a new-line.
Most usefully, the argument string is the name
of the program which incurred the error.
E 4
I 4
D 5
to the system from a C program.  If \fIstring\fP is non-NULL,
it is printed, followed by a colon, followed by a space,
E 5
I 5
to the system from a C program.  If
.I string
is non-NULL, it is printed, followed by a colon, followed by a space,
E 5
followed by the message and a new-line.  Otherwise, just the
message and the new-line are printed.  Most usefully, the argument
string is the name of the program which incurred the error.
E 4
The error number is taken from the external variable
.I errno
(see
.IR intro (2)),
which is set when errors occur but not cleared when
non-erroneous calls are made.
.PP
D 2
To simplify variant formatting
of messages, the vector of message strings
E 2
I 2
D 5
To simplify variant formatting of messages, the vector of message strings
E 2
.I sys_errlist
is provided;
.I errno
can be used as an index in this table to get the
message string without the newline.
E 5
I 5
To simplify variant formatting of messages, the
.I strerror
function returns a pointer to the error message string mapped
to the error number
.IR errnum .
.PP
E 10
I 10
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt STRERROR 3
.Os BSD 4
.Sh NAME
.Nm perror ,
.Nm strerror ,
.Nm sys_errlist ,
.Nm sys_nerr
.Nd system error messages
.Sh SYNOPSIS
I 12
D 13
.Fd #include <errno.h>
E 12
.Vt extern int errno;
E 13
I 12
.Fd #include <stdio.h>
D 13
.Vt extern int sys_nerr;
E 12
.Vt extern char *sys_errlist[];
.Fd #include <stdio.h>
E 13
.Ft void
.Fn perror "const char *string"
I 12
D 13
.Fd #include <errno.h>
E 13
I 13
.Vt extern char *sys_errlist[];
.Vt extern int sys_nerr;
E 13
.Fd #include <string.h>
E 12
.Ft char *
.Fn strerror "int errnum"
.Sh DESCRIPTION
The
.Fn strerror
and
.Fn perror
D 13
functions lookup the error message string affiliated with an
E 13
I 13
functions look up the error message string corresponding to an
E 13
error number.
.Pp
The
D 13
.Fn sterror
E 13
I 13
.Fn strerror
E 13
function accepts an error number argument
.Fa errnum
and
returns a pointer to the corresponding
message string.
.Pp
The
.Fn perror
function finds the error message corresponding to the current
value of the global variable
.Va errno
D 13
and writes it, followed by a new-line, to the
.Em stderr .
E 13
I 13
.Pq Xr intro 2
and writes it, followed by a newline, to the
standard error file descriptor.
E 13
If the argument
.Fa string
is
D 13
.Pf non- Dv NULL
it is pre-appended to the message
E 13
I 13
.Pf non- Dv NULL ,
it is prepended to the message
E 13
string and separated from it by
a colon and space
.Pq Ql \&:\ \& .
If
.Fa string
is
D 13
.Dv NULL
E 13
I 13
.Dv NULL ,
E 13
only the error message string is printed.
.Pp
I 13
If
.Fa errnum
is not a recognized error number,
the error message string will contain
.Dq Li "Unknown error:\0
followed by the error number in decimal.
.Pp
E 13
E 10
The message strings can be accessed directly using the external
D 13
character array
E 13
I 13
array
E 13
D 10
.IR sys_errlist .
E 5
.I Sys_nerr
D 5
is the number of messages provided for in the table;
D 2
it should be checked because new
error codes may be added to the system before
E 2
I 2
it should be checked because new error codes may be added to the system before
E 2
they are added to the table.
E 5
I 5
D 8
is the total number of messages in the array.  The use of these
variables is deprecated;
E 8
I 8
is the total number of messages in the array.
E 10
I 10
.Fa sys_errlist .
The external value
.Fa sys_nerr
contains a count of the messages in
.Fa sys_errlist .
E 10
The use of these variables is deprecated;
E 8
D 10
.I strerror
E 10
I 10
.Fn strerror
E 10
should be used instead.
E 5
D 10
.SH "SEE ALSO"
D 2
intro(2)
E 2
I 2
D 5
intro(2),
psignal(3)
E 5
I 5
D 7
intro(2)
E 7
I 7
intro(2), psignal(3)
E 10
I 10
.Sh SEE ALSO
.Xr intro 2 ,
.Xr psignal 3
.Sh HISTORY
The
.Fn strerror
and
.Fn perror
D 15
functions are
.Ud .
E 15
I 15
functions first appeared in 4.4BSD.
E 15
I 13
.Sh BUGS
For unknown error numbers, the
.Fn strerror
function will return its result in a static buffer which
may be overwritten by subsequent calls.
E 13
E 10
E 7
E 5
E 2
E 1
