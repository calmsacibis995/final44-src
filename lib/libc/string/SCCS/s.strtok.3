h00528
s 00002/00003/00082
d D 8.2 94/02/03 07:22:12 bostic 10 9
c strsep has its own man page now
e
s 00002/00002/00083
d D 8.1 93/06/04 15:12:52 bostic 9 8
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00004/00000/00081
d D 5.8 91/06/29 14:42:27 bostic 8 7
c add ANSI contribution notice
e
s 00063/00046/00018
d D 5.7 91/04/19 14:46:10 cael 7 6
c macro and text revision (-mdoc version 3)
e
s 00000/00000/00064
d D 5.6 91/04/19 14:41:16 cael 6 5
c macro and text revision (-mdoc version 3)
e
s 00001/00011/00063
d D 5.5 90/06/23 17:43:34 trent 5 4
c new copyright notice
e
s 00002/00000/00069
d D 5.4 90/05/17 12:01:57 bostic 4 3
c forgot to include string.h
e
s 00025/00019/00044
d D 5.3 90/05/17 11:08:36 bostic 3 2
c update for ANSI, remove strsep, it has its own man page
e
s 00004/00000/00059
d D 5.2 89/03/11 15:56:18 bostic 2 1
c document strsep's use in the C library
e
s 00058/00000/00000
d D 5.1 88/11/14 09:47:10 bostic 1 0
c date and time created 88/11/14 09:47:10 by bostic
e
u
U
t
T
I 1
D 7
.\" Copyright (c) 1988 The Regents of the University of California.
E 7
I 7
D 9
.\" Copyright (c) 1988, 1991 The Regents of the University of California.
E 7
.\" All rights reserved.
E 9
I 9
.\" Copyright (c) 1988, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 9
.\"
I 8
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
E 8
D 5
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 5
I 5
.\" %sccs.include.redist.man%
E 5
.\"
D 7
.\"	%W% (Berkeley) %G%
E 7
I 7
.\"     %W% (Berkeley) %G%
E 7
.\"
D 7
.TH STRTOK 3 "%Q%"
.UC 3
.SH NAME
strtok, strsep \- string token operations
.SH SYNOPSIS
.nf
D 3
.B char *strtok(str, sep)
.B char *str, *sep;
.PP
.B char *strsep(str, sep)
.B char *str, *sep;
E 3
I 3
.ft B
I 4
#include <string.h>

E 4
char *
strtok(char *str, const char *sep);
.ft R
E 3
.fi
I 3
.SH DESCRIPTION
.ft B
E 7
I 7
.Dd %Q%
.Dt STRTOK 3
.Os BSD 3
.Sh NAME
D 10
.Nm strtok ,
.Nm strsep
.Nd string token operations
E 10
I 10
.Nm strtok
.Nd string tokens
E 10
.Sh SYNOPSIS
.Fd #include <string.h>
.Ft char *
.Fn strtok "char *str" "const char *sep"
.Sh DESCRIPTION
.Bf -symbolic
E 7
This interface is obsoleted by strsep(3).
D 7
.ft R
E 3
.PP
.I Strtok
E 7
I 7
.Ef
.Pp
The
.Fn strtok
function
E 7
is used to isolate sequential tokens in a null-terminated string,
D 7
.IR str .
These tokens are separated in the string by
.B "one or more"
of the characters in
.IR sep .
E 7
I 7
.Fa str .
These tokens are separated in the string by at least one of the
characters in
.Fa sep .
E 7
The first time that
D 7
.I strtok
E 7
I 7
.Fn strtok
E 7
is called,
D 7
.I str
E 7
I 7
.Fa str
E 7
should be specified; subsequent calls, wishing to obtain further tokens
D 3
from the same string, should pass a null pointer instead.  The separator
string,
E 3
I 3
from the same string, should pass a null pointer instead.
The separator string,
E 3
D 7
.IR sep ,
E 7
I 7
.Fa sep ,
E 7
must be supplied each time, and may change between calls.
I 3
D 7
.PP
E 3
.I Strtok
returns a pointer to the start of each subsequent token in the string,
D 3
after replacing the token itself with a NUL character.  When no more
tokens remain, a null pointer is returned.
.PP
.I Strsep
behaves similarly to
.I strtok
with the exception that the tokens in the string are separated by single
occurrences of separator characters.  This routine was added to allow
handling blank fields.
E 3
I 3
after replacing the token itself with a NUL character.
E 7
I 7
.Pp
The
.Fn strtok
function
returns a pointer to the beginning of each subsequent token in the string,
after replacing the token itself with a
.Dv NUL
character.
E 7
When no more tokens remain, a null pointer is returned.
D 7
.SH SEE ALSO
index(3), memchr(3), rindex(3), strchr(3), strcspn(3), strpbrk(3), strrchr(3),
strsep(3), strspn(3), strstr(3)
.SH STANDARDS
.B Strtok
conforms to ANSI X3.159-1989 (``ANSI C'').
E 3
.SH BUGS
E 7
I 7
.Sh SEE ALSO
.Xr index 3 ,
.Xr memchr 3 ,
.Xr rindex 3 ,
.Xr strchr 3 ,
.Xr strcspn 3 ,
.Xr strpbrk 3 ,
.Xr strrchr 3 ,
.Xr strsep 3 ,
.Xr strspn 3 ,
.Xr strstr 3
.Sh STANDARDS
The
.Fn strtok
function
conforms to
.St -ansiC .
.Sh BUGS
E 7
There is no way to get tokens from multiple strings simultaneously.
I 2
D 7
.PP
E 7
I 7
.Pp
E 7
D 3
.I Strsep
is used heavily in the C library; calls to it and calls to the C library
should not be intermixed.
E 3
I 3
The System V
D 7
.B strtok
will, if handed a string containing only delimiter characters,
not alter the next starting point, so that a call to
.B strtok
E 7
I 7
.Fn strtok ,
if handed a string containing only delimiter characters,
will not alter the next starting point, so that a call to
.Fn strtok
E 7
with a different (or empty) delimiter string
D 7
may return a non-NULL value.
E 7
I 7
may return a
.Pf non- Dv NULL
value.
E 7
Since this implementation always alters the next starting point,
D 7
such a sequence of calls would always return NULL.
E 7
I 7
such a sequence of calls would always return
.Dv NULL .
E 7
E 3
E 2
E 1
