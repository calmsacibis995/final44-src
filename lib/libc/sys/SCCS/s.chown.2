h36694
s 00002/00002/00120
d D 8.4 94/04/19 06:43:02 bostic 14 13
c spell
e
s 00007/00000/00115
d D 8.3 94/03/28 13:29:13 bostic 13 12
c note that 4.4BSD follows symbolic links
e
s 00000/00006/00115
d D 8.2 93/12/30 17:44:43 mckusick 12 11
c delete comment about chown'ing a symbolic link
e
s 00002/00002/00119
d D 8.1 93/06/04 13:13:56 bostic 11 10
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00001/00120
d D 6.8 92/06/27 15:09:12 bostic 10 9
c calls take uid_t, gid_t, not int
e
s 00089/00085/00032
d D 6.7 91/03/10 23:37:12 cael 9 8
c man page macro and text revisions (-mdoc version 3)
e
s 00006/00000/00111
d D 6.6 86/05/22 10:18:36 mckusick 8 7
c note that symbolic links are not followed
e
s 00008/00007/00103
d D 6.5 86/05/13 11:26:23 karels 7 6
c owners can chgrp; clarifications
e
s 00010/00002/00100
d D 6.4 85/08/26 23:30:38 mckusick 6 5
c update error messages (mostly from sun!guy)
e
s 00001/00001/00101
d D 6.3 85/06/28 16:22:07 sechrest 5 4
c Improved English
e
s 00012/00011/00090
d D 6.2 85/05/22 18:30:25 mckusick 4 3
c update the error return codes to reflect those in 4.3BSD
e
s 00001/00001/00100
d D 6.1 85/05/09 16:03:00 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00073/00019/00028
d D 5.1 85/05/09 16:02:51 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00047/00000/00000
d D 4.1 85/05/09 16:02:43 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 9
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 9
I 9
D 11
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 11
I 11
D 14
.\" Copyright (c) 1980, 1991, 1993
E 14
I 14
.\" Copyright (c) 1980, 1991, 1993, 1994
E 14
.\"	The Regents of the University of California.  All rights reserved.
E 11
E 9
.\"
D 9
.\"	%W% (Berkeley) %G%
E 9
I 9
.\" %sccs.include.redist.man%
E 9
.\"
D 2
.TH CHOWN 2 
E 2
I 2
D 3
.TH CHOWN 2 "27 July 1983"
E 3
I 3
D 9
.TH CHOWN 2 "%Q%"
E 3
E 2
.UC 4
.SH NAME
chown \- change owner and group of a file
.SH SYNOPSIS
.nf
D 2
.B chown(name, owner, group)
.B char *name;
E 2
I 2
.ft B
chown(path, owner, group)
char *path;
int owner, group;
.PP
.ft B
fchown(fd, owner, group)
int fd, owner, group;
E 2
.fi
.SH DESCRIPTION
The file
D 2
whose name is given by the null-terminated string pointed
to by
.I name
E 2
I 2
D 5
which is named by \fIpath\fP or referenced by \fIfd\fP
E 5
I 5
that is named by \fIpath\fP or referenced by \fIfd\fP
E 5
E 2
has its
.I owner
E 9
I 9
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt CHOWN 2
.Os BSD 4
.Sh NAME
.Nm chown ,
.Nm fchown
.Nd change owner and group of a file
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fn chown "const char *path" "uid_t owner" "gid_t group"
.Ft int
D 10
.Fn fchown "int fd" "int owner" "int group"
E 10
I 10
.Fn fchown "int fd" "uid_t owner" "uid_t group"
E 10
.Sh DESCRIPTION
The owner ID and group ID of the file
named by
.Fa path
or referenced by
.Fa fd
is changed as specified by the arguments
.Fa owner
E 9
and 
D 9
.I group
changed as specified.
D 7
Only the super-user may
execute this call,
E 7
I 7
Only the super-user
may change the owner of the file,
E 7
because if users were able to give files away,
D 2
they could defeat the (nonexistent)
file-space accounting procedures.
E 2
I 2
they could defeat the file-space accounting procedures.
I 7
The owner of the file may change the group
to a group of which he is a member.
E 7
E 2
.PP
On some systems,
.I chown
E 9
I 9
.Fa group .
The owner of a file may change the
.Fa group
to a group of which
he or she is a member,
but the change
.Fa owner
capability is restricted to the super-user.
.Pp
.Fn Chown
E 9
D 2
clears the set-user-id bit
E 2
I 2
clears the set-user-id and set-group-id bits
E 2
on the file
D 9
to prevent accidental creation of
E 9
I 9
D 14
to prevent accidental or mischievious creation of
E 14
I 14
to prevent accidental or mischievous creation of
E 14
E 9
D 2
set-user-id programs owned by the super-user.
E 2
I 2
D 7
set-user-id and set-group-id programs
owned by the super-user.
E 7
I 7
set-user-id and set-group-id programs.
E 7
D 9
.PP
.I Fchown
E 9
I 9
.Pp
.Fn Fchown
E 9
is particularly useful when used in conjunction
with the file locking primitives (see
D 9
.IR flock (2)).
.PP
E 9
I 9
.Xr flock 2 ) .
.Pp
E 9
D 7
Only one of the owner and group id's
may be set by specifying the other as \-1.
E 7
I 7
One of the owner or group id's
D 9
may be left unchanged by specifying it as \-1.
I 8
.PP
E 9
I 9
may be left unchanged by specifying it as -1.
D 12
.Pp
E 9
If the final component of
D 9
.I path
E 9
I 9
.Fa path
E 9
is a symbolic link,
the ownership and group of the symbolic link is changed,
not the ownership and group of the file or directory to which it points.
E 12
E 8
E 7
D 9
.SH "RETURN VALUE
E 9
I 9
.Sh RETURN VALUES
E 9
Zero is returned if the operation was successful;
D 9
\-1 is returned if an error occurs, with a more specific
error code being placed in the global variable \fIerrno\fP.
.SH "ERRORS
.I Chown
E 9
I 9
-1 is returned if an error occurs, with a more specific
error code being placed in the global variable
.Va errno .
.Sh ERRORS
.Fn Chown
E 9
will fail and the file will be unchanged if:
D 9
.TP 15
D 4
[EINVAL]
The argument path does not refer to a file.
.TP 15
E 4
[ENOTDIR]
E 9
I 9
.Bl -tag -width Er
.It Bq Er ENOTDIR
E 9
A component of the path prefix is not a directory.
D 9
.TP 15
D 4
[ENOENT]
The argument pathname is too long.
E 4
I 4
[EINVAL]
E 9
I 9
.It Bq Er EINVAL
E 9
The pathname contains a character with the high-order bit set.
E 4
D 9
.TP 15
D 4
[EPERM]
The argument contains a byte with the high-order bit set.
E 4
I 4
[ENAMETOOLONG]
E 9
I 9
.It Bq Er ENAMETOOLONG
E 9
A component of a pathname exceeded 255 characters,
or an entire path name exceeded 1023 characters.
E 4
D 9
.TP 15
[ENOENT]
E 9
I 9
.It Bq Er ENOENT
E 9
The named file does not exist.
D 9
.TP 15
[EACCES]
E 9
I 9
.It Bq Er EACCES
E 9
D 4
Search permission is denied on a component of the path prefix.
E 4
I 4
Search permission is denied for a component of the path prefix.
E 4
D 9
.TP 15
I 4
[ELOOP]
E 9
I 9
.It Bq Er ELOOP
E 9
Too many symbolic links were encountered in translating the pathname.
D 9
.TP 15
E 4
[EPERM]
E 9
I 9
.It Bq Er EPERM
E 9
D 6
The effective user ID does not match the owner of the file and
the effective user ID is not the super-user.
E 6
I 6
The effective user ID is not the super-user.
E 6
D 9
.TP 15
[EROFS]
E 9
I 9
.It Bq Er EROFS
E 9
The named file resides on a read-only file system.
D 9
.TP 15
[EFAULT]
.I Path
E 9
I 9
.It Bq Er EFAULT
.Fa Path
E 9
points outside the process's allocated address space.
I 6
D 9
.TP 15
[EIO]
E 9
I 9
.It Bq Er EIO
E 9
An I/O error occurred while reading from or writing to the file system.
E 6
D 4
.TP 15
[ELOOP]
Too many symbolic links were encountered in translating the pathname.
E 4
D 9
.PP
.I Fchown
E 9
I 9
.El
.Pp
.Fn Fchown
E 9
will fail if:
D 9
.TP 15
[EBADF]
.I Fd
E 9
I 9
.Bl -tag -width Er
.It Bq Er EBADF
.Fa Fd
E 9
does not refer to a valid descriptor.
D 9
.TP 15
[EINVAL]
.I Fd
E 9
I 9
.It Bq Er EINVAL
.Fa Fd
E 9
refers to a socket, not a file.
I 4
D 9
.TP 15
I 6
[EPERM]
E 9
I 9
.It Bq Er EPERM
E 9
The effective user ID is not the super-user.
D 9
.TP 15
E 6
[EROFS]
E 9
I 9
.It Bq Er EROFS
E 9
The named file resides on a read-only file system.
I 6
D 9
.TP 15
[EIO]
E 9
I 9
.It Bq Er EIO
E 9
An I/O error occurred while reading from or writing to the file system.
E 6
E 4
E 2
D 9
.SH "SEE ALSO"
D 2
chown(1), passwd(5)
.SH DIAGNOSTICS
Zero is returned if the owner is changed;
\-1 is returned
on illegal owner changes.
.SH "ASSEMBLER (PDP-11)"
(chown = 16.)
.br
.B sys chown; name; owner; group
E 2
I 2
D 7
chmod(2), flock(2)
E 7
I 7
chown(8), chgrp(1), chmod(2), flock(2)
E 9
I 9
.El
.Sh SEE ALSO
.Xr chown 8 ,
.Xr chgrp 1 ,
.Xr chmod 2 ,
.Xr flock 2
.Sh STANDARDS
.Fn Chown
is expected to conform to IEEE Std 1003.1-1988
.Pq Dq Tn POSIX .
.Sh HISTORY
The
.Fn fchown
function call
appeared in
.Bx 4.2 .
I 13
.Pp
The
.Fn chown
and
.Fn fchown
functions were changed to follow symbolic links in
.Bx 4.4 .
E 13
E 9
E 7
E 2
E 1
