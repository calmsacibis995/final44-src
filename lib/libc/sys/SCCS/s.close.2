h28914
s 00003/00003/00091
d D 8.2 94/04/19 06:44:35 bostic 8 7
c spell
e
s 00002/00002/00092
d D 8.1 93/06/04 13:14:08 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00069/00045/00025
d D 6.4 91/03/10 23:37:18 cael 6 5
c man page macro and text revisions (-mdoc version 3)
e
s 00002/00002/00068
d D 6.3 86/05/22 11:56:14 anne 5 4
c grammar
e
s 00002/00002/00068
d D 6.2 85/06/28 16:24:47 sechrest 4 3
c Improved English
e
s 00001/00001/00069
d D 6.1 85/05/09 16:03:32 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00056/00038/00014
d D 5.1 85/05/09 16:03:20 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00052/00000/00000
d D 4.1 85/05/09 16:03:10 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 6
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 6
I 6
D 7
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 7
I 7
D 8
.\" Copyright (c) 1980, 1991, 1993
E 8
I 8
.\" Copyright (c) 1980, 1991, 1993, 1994
E 8
.\"	The Regents of the University of California.  All rights reserved.
E 7
E 6
.\"
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
.\" %sccs.include.redist.man%
E 6
.\"
D 2
.TH CLOSE 2 
E 2
I 2
D 3
.TH CLOSE 2 "27 July 1983"
E 3
I 3
D 6
.TH CLOSE 2 "%Q%"
E 3
E 2
.UC 4
.SH NAME
D 2
close \- close a file
E 2
I 2
close \- delete a descriptor
E 2
.SH SYNOPSIS
D 2
.B close(fildes)
E 2
I 2
.B close(d)
.br
.B "int d;"
E 2
.SH DESCRIPTION
E 6
I 6
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt CLOSE 2
.Os BSD 4
.Sh NAME
.Nm close
.Nd delete a descriptor
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fn close "int d"
.Sh DESCRIPTION
E 6
D 2
Given
a file descriptor such as returned from an
.I open,
.I creat,
.I dup
or
.IR pipe (2)
call,
.I close
closes the associated file.
A close of all files is automatic on
.I exit,
E 2
I 2
The
D 6
\fIclose\fP call deletes a descriptor from the per-process object
E 6
I 6
.Fn close
call deletes a descriptor from the per-process object
E 6
reference table.
D 6
If this is the last reference to the underlying object, then
it will be deactivated.
E 6
I 6
If this is the last reference to the underlying object, the
object will be deactivated.
E 6
For example, on the last close of a file
D 6
the current \fIseek\fP pointer associated with the file is lost;
E 6
I 6
the current
.Em seek
pointer associated with the file is lost;
E 6
on the last close of a
D 6
.IR socket (2)
E 6
I 6
.Xr socket 2
E 6
associated naming information and queued data are discarded;
on the last close of a file holding an advisory lock
D 5
the lock is released; see further
.IR flock (2).
E 5
I 5
the lock is released (see further
D 6
.IR flock (2)\fR).
E 5
.PP
A close of all of a process's descriptors is automatic on
.IR exit ,
E 2
but since
D 2
there is a limit on the number of open files per process,
E 2
I 2
there is a limit on the number of active descriptors per process,
E 2
.I close
D 2
is necessary for programs which deal with many files.
E 2
I 2
D 4
is necessary for programs which deal with many descriptors.
E 4
I 4
is necessary for programs that deal with many descriptors.
E 4
E 2
.PP
E 6
I 6
.Xr flock 2 ) .
.Pp
When a process exits,
all associated file descriptors are freed, but since there is
a limit on active descriptors per processes, the
.Fn close
function call
D 8
is useful when a large quanitity of file descriptors are being handled.
E 8
I 8
is useful when a large quantity of file descriptors are being handled.
E 8
.Pp
E 6
D 2
Files are closed upon termination of a process, and
certain high-numbered file descriptors are closed by
.IR exec (2),
and it is possible to arrange for others to be closed
(see FIOCLEX in
.IR ioctl (2)).
E 2
I 2
When a process forks (see
D 6
.IR fork (2)),
E 6
I 6
.Xr fork 2 ) ,
E 6
all descriptors for the new child process reference the same
objects as they did in the parent before the fork.
If a new process is then to be run using
D 6
.IR execve (2),
E 6
I 6
.Xr execve 2 ,
E 6
the process would normally inherit these descriptors.  Most
of the descriptors can be rearranged with
D 6
.IR dup2 (2)
E 6
I 6
.Xr dup2 2
E 6
or deleted with
D 6
.I close
E 6
I 6
.Fn close
E 6
before the
D 6
.I execve
E 6
I 6
.Xr execve
E 6
is attempted, but if some of these descriptors will still
be needed if the execve fails, it is necessary to arrange for them
to be closed if the execve succeeds.
D 4
For this reason, the call ``fcntl(d, F_SETFD, 1)'' is provided
E 4
I 4
D 6
For this reason, the call ``fcntl(d, F_SETFD, 1)'' is provided,
E 6
I 6
For this reason, the call
.Dq Li fcntl(d, F_SETFD, 1)
is provided,
E 6
E 4
which arranges that a descriptor will be closed after a successful
D 6
execve; the call ``fcntl(d, F_SETFD, 0)'' restores the default,
E 6
I 6
execve; the call
.Dq Li fcntl(d, F_SETFD, 0)
restores the default,
E 6
which is to not close the descriptor.
D 6
.SH "RETURN VALUE
E 6
I 6
.Sh RETURN VALUES
E 6
Upon successful completion, a value of 0 is returned.
D 6
Otherwise, a value of \-1 is returned and the global integer variable
.I errno
E 6
I 6
Otherwise, a value of -1 is returned and the global integer variable
.Va errno
E 6
is set to indicate the error.
D 6
.SH ERRORS
.I Close
E 6
I 6
.Sh ERRORS
.Fn Close
E 6
will fail if:
D 6
.TP 15
[EBADF]
\fID\fP is not an active descriptor.
E 2
.SH "SEE ALSO"
D 2
creat(2), open(2), pipe(2), exec(2), ioctl(2)
.SH DIAGNOSTICS
Zero is returned if a file is closed;
\-1 is returned for an unknown file descriptor.
.SH "ASSEMBLER (PDP-11)"
(close = 6.)
.br
(file descriptor in r0)
.br
.B sys close
.PP
.SH BUGS
A file cannot be closed while there are pages which have been
.I vread
but not referenced.
E 2
I 2
accept(2), flock(2), open(2), pipe(2), socket(2), socketpair(2),
execve(2), fcntl(2)
E 6
I 6
.Bl -tag -width Er
.It Bq Er EBADF
.Fa D
is not an active descriptor.
.It Bq Er EINTR
D 8
An interupt was received.
E 8
I 8
An interrupt was received.
E 8
.El
.Sh SEE ALSO
.Xr accept 2 ,
.Xr flock 2 ,
.Xr open 2 ,
.Xr pipe 2 ,
.Xr socket 2 ,
.Xr socketpair 2 ,
.Xr execve 2 ,
.Xr fcntl 2
.Sh STANDARDS
.Fn Close
conforms to IEEE Std 1003.1-1988
.Pq Dq Tn POSIX .
E 6
E 2
E 1
