h09609
s 00002/00002/00119
d D 8.1 93/06/04 13:14:14 bostic 11 10
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00073/00078/00048
d D 6.9 91/03/10 23:37:22 cael 10 9
c man page macro and text revisions (-mdoc version 3)
e
s 00001/00011/00125
d D 6.8 90/06/23 17:48:21 trent 9 8
c new copyright notice
e
s 00014/00003/00122
d D 6.7 89/02/14 17:52:39 bostic 8 7
c add Berkeley specific copyright notice
e
s 00002/00002/00123
d D 6.6 86/05/22 11:58:00 anne 7 6
c grammar
e
s 00003/00003/00122
d D 6.5 86/05/14 14:58:37 karels 6 5
c make them agree
e
s 00020/00005/00105
d D 6.4 86/05/13 11:36:47 karels 5 4
c update
e
s 00001/00001/00109
d D 6.3 85/06/28 16:27:15 sechrest 4 3
c Added comma
e
s 00023/00000/00087
d D 6.2 85/05/22 18:31:47 mckusick 3 2
c update the error return codes to reflect those in 4.3BSD
e
s 00001/00001/00086
d D 6.1 85/05/15 11:53:20 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00087/00000/00000
d D 5.1 85/05/15 11:53:13 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 8
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 8
I 8
D 11
.\" Copyright (c) 1983 The Regents of the University of California.
.\" All rights reserved.
E 11
I 11
.\" Copyright (c) 1983, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 11
.\"
D 9
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 9
I 9
.\" %sccs.include.redist.man%
E 9
E 8
.\"
D 10
.\"	%W% (Berkeley) %G%
E 10
I 10
.\"     %W% (Berkeley) %G%
E 10
.\"
D 2
.TH CONNECT 2 "7 July 1983"
E 2
I 2
D 10
.TH CONNECT 2 "%Q%"
E 2
.UC 5
.SH NAME
connect \- initiate a connection on a socket
.SH SYNOPSIS
.nf
.ft B
#include <sys/types.h>
#include <sys/socket.h>
.PP
.ft B
connect(s, name, namelen)
int s;
struct sockaddr *name;
int namelen;
.fi
.SH DESCRIPTION
E 10
I 10
.Dd %Q%
.Dt CONNECT 2
.Os BSD 4.2
.Sh NAME
.Nm connect
.Nd initiate a connection on a socket
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Ft int
.Fn connect "int s" "struct sockaddr *name" "int namelen"
.Sh DESCRIPTION
E 10
The parameter
D 10
.I s
E 10
I 10
.Fa s
E 10
is a socket.
D 10
If it is of type SOCK_DGRAM,
D 5
then this call permanently specifies the peer to which
datagrams are to be sent;
if it is of type SOCK_STREAM,
E 5
I 5
then this call specifies the peer with which the socket is to be associated;
E 10
I 10
If it is of type
.Dv SOCK_DGRAM ,
this call specifies the peer with which the socket is to be associated;
E 10
this address is that to which datagrams are to be sent,
and the only address from which datagrams are to be received.
D 10
If the socket is of type SOCK_STREAM,
E 5
then this call attempts to make a connection to
E 10
I 10
If the socket is of type
.Dv SOCK_STREAM ,
this call attempts to make a connection to
E 10
another socket.
The other socket is specified by
D 4
.I name
E 4
I 4
D 10
.I name,
E 10
I 10
.Fa name ,
E 10
E 4
which is an address in the communications space of the socket.
Each communications space interprets the
D 10
.I name
E 10
I 10
.Fa name
E 10
parameter in its own way.
I 5
Generally, stream sockets may successfully
D 10
.I connect
E 10
I 10
.Fn connect
E 10
only once; datagram sockets may use
D 10
.I connect
E 10
I 10
.Fn connect
E 10
multiple times to change their association.
Datagram sockets may dissolve the association
by connecting to an invalid address, such as a null address.
E 5
D 10
.SH "RETURN VALUE
If the connection or binding succeeds, then 0 is returned.
Otherwise a \-1 is returned, and a more specific error
code is stored in \fIerrno\fP.
.SH "ERRORS
The call fails if:
.TP 20
[EBADF]
.I S
E 10
I 10
.Sh RETURN VALUES
If the connection or binding succeeds, 0 is returned.
Otherwise a -1 is returned, and a more specific error
code is stored in
.Va errno .
.Sh ERRORS
The
.Fn connect
call fails if:
.Bl -tag -width EADDRNOTAVAILABB
.It Bq Er EBADF
.Fa S
E 10
is not a valid descriptor.
D 10
.TP 20
[ENOTSOCK]
.I S
E 10
I 10
.It Bq Er ENOTSOCK
.Fa S
E 10
is a descriptor for a file, not a socket.
D 10
.TP 20
[EADDRNOTAVAIL]
E 10
I 10
.It Bq Er EADDRNOTAVAIL
E 10
The specified address is not available on this machine.
D 10
.TP 20
[EAFNOSUPPORT]
E 10
I 10
.It Bq Er EAFNOSUPPORT
E 10
Addresses in the specified address family cannot be used with this socket.
D 10
.TP 20
[EISCONN]
E 10
I 10
.It Bq Er EISCONN
E 10
The socket is already connected.
D 10
.TP 20
[ETIMEDOUT]
E 10
I 10
.It Bq Er ETIMEDOUT
E 10
Connection establishment timed out without establishing a connection.
D 10
.TP 20
[ECONNREFUSED]
E 10
I 10
.It Bq Er ECONNREFUSED
E 10
The attempt to connect was forcefully rejected.
D 10
.TP 20
[ENETUNREACH]
E 10
I 10
.It Bq Er ENETUNREACH
E 10
The network isn't reachable from this host.
D 10
.TP 20
[EADDRINUSE]
E 10
I 10
.It Bq Er EADDRINUSE
E 10
The address is already in use.
D 10
.TP 20
[EFAULT]
The \fIname\fP parameter specifies an area outside
E 10
I 10
.It Bq Er EFAULT
The
.Fa name
parameter specifies an area outside
E 10
the process address space.
D 10
.TP 20
D 6
[EWOULDBLOCK]
E 6
I 6
[EINPROGRESS]
E 10
I 10
.It Bq Er EINPROGRESS
E 10
E 6
D 7
The socket is non-blocking and the
E 7
I 7
The socket is non-blocking 
E 7
and the connection cannot
be completed immediately.
It is possible to
D 10
.IR select (2)
E 10
I 10
.Xr select 2
E 10
D 6
the socket while it is connecting by selecting it for writing.
E 6
I 6
for completion by selecting the socket for writing.
E 6
I 5
D 10
.TP 20
D 6
[EINPROGRESS]
E 6
I 6
[EALREADY]
E 10
I 10
.It Bq Er EALREADY
E 10
E 6
The socket is non-blocking
and a previous connection attempt
D 7
has not yet completed.
E 7
I 7
has not yet been completed.
E 7
E 5
I 3
D 10
.PP
E 10
I 10
.El
.Pp
E 10
D 5
.PP
E 5
The following errors are specific to connecting names in the UNIX domain.
D 5
These errors may not apply in future versions of the UNIX ipc domain.
E 5
I 5
These errors may not apply in future versions of the UNIX IPC domain.
E 5
D 10
.TP 15
[ENOTDIR]
E 10
I 10
.Bl -tag -width EADDRNOTAVAILABB
.It Bq Er ENOTDIR
E 10
A component of the path prefix is not a directory.
D 10
.TP 15
[EINVAL]
E 10
I 10
.It Bq Er EINVAL
E 10
The pathname contains a character with the high-order bit set.
D 10
.TP 15
[ENAMETOOLONG]
E 10
I 10
.It Bq Er ENAMETOOLONG
E 10
A component of a pathname exceeded 255 characters,
or an entire path name exceeded 1023 characters.
D 10
.TP 15
[ENOENT]
E 10
I 10
.It Bq Er ENOENT
E 10
The named socket does not exist.
D 10
.TP 15
[EACCES]
E 10
I 10
.It Bq Er EACCES
E 10
Search permission is denied for a component of the path prefix.
I 5
D 10
.TP 15
[EACCES]
E 10
I 10
.It Bq Er EACCES
E 10
Write access to the named socket is denied.
E 5
D 10
.TP 15
[ELOOP]
E 10
I 10
.It Bq Er ELOOP
E 10
Too many symbolic links were encountered in translating the pathname.
E 3
D 10
.SH SEE ALSO
accept(2), select(2), socket(2), getsockname(2)
E 10
I 10
.El
.Sh SEE ALSO
.Xr accept 2 ,
.Xr select 2 ,
.Xr socket 2 ,
.Xr getsockname 2
.Sh HISTORY
The
.Nm
function call appeared in
.Bx 4.2 .
E 10
E 1
