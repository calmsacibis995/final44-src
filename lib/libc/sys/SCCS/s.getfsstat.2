h12996
s 00033/00000/00106
d D 8.3 95/05/25 11:22:38 mckusick 13 12
c add description of flag values
e
s 00017/00020/00089
d D 8.2 95/04/03 17:49:03 mckusick 12 11
c update to reflect new fsstat structure
e
s 00002/00002/00107
d D 8.1 93/06/09 18:57:45 bostic 11 10
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00002/00108
d D 6.9 93/06/09 18:57:42 bostic 10 8
c fixed the under development line
e
s 00002/00002/00108
d R 8.1 93/06/04 13:15:26 bostic 9 8
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00002/00002/00108
d D 6.8 91/12/14 21:46:42 mckusick 8 7
c statfs.f_bsize => statfs.f_iosize; statfs.f_fsize => statfs.f_bsize (for SunOS)
e
s 00002/00001/00108
d D 6.7 91/11/19 13:50:17 mckusick 7 6
c the export interface now permits credentials, needs new include files
e
s 00009/00006/00100
d D 6.6 91/07/23 14:21:24 cael 6 5
c .Os changes, miscellaneous cleanups
e
s 00071/00071/00035
d D 6.5 91/03/10 23:37:59 cael 5 4
c man page macro and text revisions (-mdoc version 3)
e
s 00001/00011/00105
d D 6.4 90/06/23 17:48:36 trent 4 3
c new copyright notice
e
s 00026/00012/00090
d D 6.3 90/03/06 21:11:58 mckusick 3 2
c add flags parameter to specify no waiting
e
s 00004/00003/00098
d D 6.2 89/11/24 14:19:01 mckusick 2 1
c add MFS type; fix parameter types (from Torek)
e
s 00101/00000/00000
d D 6.1 89/06/06 23:17:25 mckusick 1 0
c date and time created 89/06/06 23:17:25 by mckusick
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1989 The Regents of the University of California.
E 5
I 5
D 11
.\" Copyright (c) 1989, 1991 The Regents of the University of California.
E 5
.\" All rights reserved.
E 11
I 11
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 11
.\"
D 4
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 4
I 4
D 6
.\" %sccs.include.redist.man%
E 6
I 6
.\" %sccs.include.redist.roff%
E 6
E 4
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
D 6
.\"     %W% (Berkeley) %G%
E 6
I 6
.\"	%W% (Berkeley) %G%
E 6
E 5
.\"
D 5
.TH GETFSSTAT 2 "%Q%"
.UC 7
.SH NAME
getfsstat \- get list of all mounted filesystems
.SH SYNOPSIS
.nf
.ft B
#include <sys/types.h>
#include <sys/mount.h>
.LP
.ft B
D 3
getfsstat(buf, bufsize)
D 2
struct statfs *buf[];
int bufsize;
E 2
I 2
struct statfs buf[];
size_t bufsize;
E 3
I 3
getfsstat(buf, bufsize, flags)
struct statfs *buf[];
long bufsize;
int flags;
E 3
E 2
.fi
.ft R
.SH DESCRIPTION
.I Getfsstat
E 5
I 5
.Dd %Q%
.Dt GETFSSTAT 2
D 6
.Os BSD 4.4
E 6
I 6
.Os
E 6
.Sh NAME
.Nm getfsstat
.Nd get list of all mounted filesystems
.Sh SYNOPSIS
D 7
.Fd #include <sys/types.h>
E 7
I 7
.Fd #include <sys/param.h>
.Fd #include <sys/ucred.h>
E 7
.Fd #include <sys/mount.h>
.Ft int
.Fn getfsstat "struct statfs *buf" "long bufsize" "int flags"
.Sh DESCRIPTION
.Fn Getfsstat
E 5
returns information about all mounted filesystems.
D 5
.I Buf
is a pointer to an array of
.I statfs
E 5
I 5
.Fa Buf
is a pointer to
.Xr statfs
E 5
structures defined as follows:
D 5
.IP
.ta \w'#define\0\0'u +\w'fsid_t\0\0'u +\w'f_mntfromname[MNAMELEN]\0\0'u
.nf
E 5
I 5
.Bd -literal
E 5
typedef quad fsid_t;
D 5
.sp 1
E 5
I 5

E 5
D 12
#define MNAMELEN 32	/* length of buffer for returned name */
E 12
I 12
#define MFSNAMELEN	16	/* length of fs type name, including null */
#define	MNAMELEN	90	/* length of buffer for returned name */
E 12
D 5
.sp 1
E 5
I 5

E 5
struct statfs {
D 5
	short	f_type;	/* type of filesystem (see below) */
	short	f_flags;	/* copy of mount flags */
D 3
	long	f_fsize;	/* fundamental file system block size */
E 3
I 3
	long	f_fsize;	/* fundamental filesystem block size */
E 3
	long	f_bsize;	/* optimal transfer block size */
D 3
	long	f_blocks;	/* total data blocks in file system */
E 3
I 3
	long	f_blocks;	/* total data blocks in filesystem */
E 3
	long	f_bfree;	/* free blocks in fs */
	long	f_bavail;	/* free blocks avail to non-superuser */
D 3
	long	f_files;	/* total file nodes in file system */
E 3
I 3
	long	f_files;	/* total file nodes in filesystem */
E 3
	long	f_ffree;	/* free file nodes in fs */
D 3
	fsid_t	f_fsid;	/* file system id */
E 3
I 3
	fsid_t	f_fsid;	/* filesystem id */
E 3
	long	f_spare[6];	/* spare for later */
	char	f_mntonname[MNAMELEN];	/* directory on which mounted */
	char	f_mntfromname[MNAMELEN];	/* mounted filesystem */
E 5
I 5
D 12
    short   f_type;	/* type of filesystem (see below) */
    short   f_flags;	/* copy of mount flags */
D 8
    long    f_fsize;	/* fundamental filesystem block size */
    long    f_bsize;	/* optimal transfer block size */
E 8
I 8
    long    f_bsize;	/* fundamental filesystem block size */
    long    f_iosize;	/* optimal transfer block size */
E 8
    long    f_blocks;	/* total data blocks in filesystem */
    long    f_bfree;	/* free blocks in fs */
    long    f_bavail;	/* free blocks avail to non-superuser */
    long    f_files;	/* total file nodes in filesystem */
    long    f_ffree;	/* free file nodes in fs */
    fsid_t  f_fsid;	/* filesystem id */
    long    f_spare[6];	/* spare for later */
    char    f_mntonname[MNAMELEN]; /* directory on which mounted */
    char    f_mntfromname[MNAMELEN]; /* mounted filesystem */
E 12
I 12
	short	f_type;			/* filesystem type number */
	short	f_flags;		/* copy of mount flags */
	long	f_bsize;		/* fundamental file system block size */
	long	f_iosize;		/* optimal transfer block size */
	long	f_blocks;		/* total data blocks in file system */
	long	f_bfree;		/* free blocks in fs */
	long	f_bavail;		/* free blocks avail to non-superuser */
	long	f_files;		/* total file nodes in file system */
	long	f_ffree;		/* free file nodes in fs */
	fsid_t	f_fsid;			/* file system id */
	uid_t	f_owner;		/* user that mounted the filesystem */
	long	f_spare[4];		/* spare for later */
	char	f_fstypename[MFSNAMELEN]; /* fs type name */
	char	f_mntonname[MNAMELEN];	/* directory on which mounted */
	char	f_mntfromname[MNAMELEN];/* mounted filesystem */
E 12
E 5
};
D 12
/*
 * File system types.
 */
#define	MOUNT_UFS	1
#define	MOUNT_NFS	2
D 2
#define	MOUNT_PC	3
E 2
I 2
D 3
#define	MOUNT_MFS	3
#define	MOUNT_PC	4
E 3
I 3
#define	MOUNT_PC	3
E 12
E 3
E 2
D 5
.fi
.PP
D 3
Fields that are undefined for a particular file system are set to \-1.
E 3
I 3
Fields that are undefined for a particular filesystem are set to \-1.
E 5
I 5
.Ed
.Pp
I 13
The flags that may be returned include:
.Bl -tag -width MNT_ASYNCHRONOUS
.It Dv MNT_RDONLY
The filesystem is mounted read-only;
Even the super-user may not write on it.
.It Dv MNT_NOEXEC
Files may not be executed from the filesystem.
.It Dv MNT_NOSUID
Setuid and setgid bits on files are not honored when they are executed.
.It Dv MNT_NODEV
Special files in the filesystem may not be opened.
.It Dv MNT_SYNCHRONOUS
All I/O to the filesystem is done synchronously.
.It Dv MNT_ASYNCHRONOUS
No filesystem I/O is done synchronously.
.It Dv MNT_LOCAL
The filesystem resides locally.
.It Dv MNT_QUOTA
The filesystem has quotas enabled on it.
.It Dv MNT_ROOTFS
Identifies the root filesystem.
.It Dv MNT_EXRDONLY
The filesystem is exported read-only.
.It Dv MNT_EXPORTED
The filesystem is exported for both reading and writing.
.It Dv MNT_DEFEXPORTED
The filesystem is exported for both reading and writing to any Internet host.
.It Dv MNT_EXPORTANON
The filesystem maps all remote accesses to the anonymous user.
.It Dv MNT_EXKERB
The filesystem is exported with Kerberos uid mapping.
.El
.Pp
E 13
Fields that are undefined for a particular filesystem are set to -1.
E 5
E 3
The buffer is filled with an array of
D 5
.I fsstat
E 5
I 5
.Fa fsstat
E 5
structures, one for each mounted filesystem
up to the size specified by
D 5
.I bufsize .
.PP
E 5
I 5
.Fa bufsize .
.Pp
E 5
If
D 5
.I buf
is given as zero,
.I getfsstat
E 5
I 5
.Fa buf
is given as NULL,
.Fn getfsstat
E 5
returns just the number of mounted filesystems.
I 3
D 5
.PP
E 5
I 5
.Pp
E 5
Normally
D 5
.I flags
should be specified as MNT_WAIT.
E 5
I 5
.Fa flags
should be specified as
.Dv MNT_WAIT .
E 5
If
D 5
.I flags
is set to MNT_NOWAIT, then
.I getfsstat
E 5
I 5
.Fa flags
is set to
.Dv MNT_NOWAIT ,
.Fn getfsstat
E 5
will return the information it has available without requesting
an update from each filesystem.
Thus, some of the information will be out of date, but
D 5
.I getfsstat
E 5
I 5
.Fn getfsstat
E 5
will not block waiting for information from a filesystem that is
unable to respond.
E 3
D 5
.SH RETURN VALUE
E 5
I 5
.Sh RETURN VALUES
E 5
Upon successful completion, the number of 
D 5
.I fsstat
E 5
I 5
.Fa fsstat
E 5
structures is returned.
D 5
Otherwise, \-1 is returned and the global variable
.I errno
E 5
I 5
Otherwise, -1 is returned and the global variable
.Va errno
E 5
is set to indicate the error.
D 5
.SH ERRORS
.I Getfsstat
E 5
I 5
.Sh ERRORS
.Fn Getfsstat
E 5
fails if one or more of the following are true:
D 5
.TP 15
EFAULT
.I Buf
E 5
I 5
.Bl -tag -width Er
.It EFAULT
.Fa Buf
E 5
points to an invalid address.
D 5
.TP 15
EIO
E 5
I 5
.It EIO
E 5
D 3
An I/O error occurred while reading from or writing to the file system.
E 3
I 3
D 6
An I/O error occurred while reading from or writing to the filesystem.
E 6
I 6
An
.Tn I/O
error occurred while reading from or writing to the filesystem.
E 6
E 3
D 5
.SH "SEE ALSO"
D 3
statfs(2)
E 3
I 3
statfs(2), fstab(5), mount(8)
E 5
I 5
.El
.Sh SEE ALSO
.Xr statfs 2 ,
.Xr fstab 5 ,
.Xr mount 8
.Sh HISTORY
The
D 6
.Nm
function call is currently under development.
E 6
I 6
.Nm getfsstat
D 10
function call is
.Ud .
E 10
I 10
function first appeared in 4.4BSD.
E 10
E 6
E 5
E 3
E 1
