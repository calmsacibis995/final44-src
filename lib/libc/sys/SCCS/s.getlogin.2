h14112
s 00002/00002/00098
d D 8.1 93/06/09 18:54:03 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00002/00003/00098
d D 6.4 93/06/09 18:53:59 bostic 7 5
c fixed the under development line
e
s 00002/00002/00099
d R 8.1 93/06/04 13:15:48 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00007/00005/00094
d D 6.3 91/07/23 14:21:13 cael 5 4
c .Os changes, miscellaneous cleanups
e
s 00060/00049/00039
d D 6.2 91/03/10 23:38:18 cael 4 3
c man page macro and text revisions (-mdoc version 3)
e
s 00000/00000/00088
d D 6.1 90/06/25 11:06:18 karels 3 2
c rev 6
e
s 00059/00046/00029
d D 1.2 90/06/24 16:03:59 karels 2 1
c good enough for now
e
s 00075/00000/00000
d D 1.1 89/05/18 19:10:09 kfall 1 0
c date and time created 89/05/18 19:10:09 by kfall
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1989 The Regents of the University of California.
E 4
I 4
D 8
.\" Copyright (c) 1989, 1991 The Regents of the University of California.
E 4
.\" All rights reserved.
E 8
I 8
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 8
.\"
D 2
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 2
I 2
D 5
.\" %sccs.include.redist.man%
E 5
I 5
.\" %sccs.include.redist.roff%
E 5
E 2
.\"
D 4
.\"	%W% (Berkeley) %G%
E 4
I 4
D 5
.\"     %W% (Berkeley) %G%
E 5
I 5
.\"	%W% (Berkeley) %G%
E 5
E 4
.\"
D 2
.TH GETLOGNAME 2 "%Q%"
E 2
I 2
D 4
.TH GETLOGIN 2 "%Q%"
E 2
.UC 5
.SH NAME
D 2
getlogname, setlogname \- get/set login name of process owner
E 2
I 2
getlogin, setlogin \- get/set login name
E 2
.SH SYNOPSIS
.nf
.ft B
D 2
getlogname(name, namelen)
char *name;
int namelen;
E 2
I 2
char *getlogin()
E 2
.PP
.ft B
D 2
setlogname(name, namelen)
E 2
I 2
setlogin(name)
E 2
char *name;
D 2
int namelen;
E 2
.fi
.SH DESCRIPTION
E 4
I 4
.Dd %Q%
.Dt GETLOGIN 2
.Os BSD 4.2
.Sh NAME
.Nm getlogin ,
.Nm setlogin
.Nd get/set login name
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft char *
.Fn getlogin void
.Ft int
.Fn setlogin "const char *name"
.Sh DESCRIPTION
E 4
D 2
.I Getlogname
returns the login name of the owner of the current process, as
previously set by
.IR setlogname . 
The parameter
.I namelen
specifies the size of the 
.I name
array.  The returned name is null-terminated unless insufficient
space is provided.
The preferred method for retrieving this information is through the
.IR getlogin (3)
library routine.
E 2
I 2
The
D 4
.I getlogin
E 4
I 4
.Fn getlogin
E 4
routine
returns the login name of the user associated with the current session,
as previously set by
D 4
.IR setlogin .
E 4
I 4
.Fn setlogin .
E 4
The name is normally associated with a login shell
at the time a session is created,
and is inherited by all processes descended from the login shell.
(This is true even if some of those processes assume another user ID,
for example when
D 4
.IR su (1)
E 4
I 4
.Xr su 1
E 4
is used.)
E 2
D 4
.PP
D 2
.I Setlogname
sets the login name of the process owner to be
.IR name ,
which has length
.IR namelen .
This call is restricted to the super-user and
is normally used only at login time, or when a remote shell
is invoked.
E 2
I 2
.I Setlogin
E 4
I 4
.Pp
.Fn Setlogin
E 4
sets the login name of the user associated with the current session to
D 4
.IR name .
E 4
I 4
.Fa name .
E 4
This call is restricted to the super-user, and
is normally used only when a new session is being created on behalf
of the named user
(for example, at login time, or when a remote shell is invoked).
E 2
D 4
.SH "RETURN VALUE
E 4
I 4
.Sh RETURN VALUES
E 4
D 2
If the call succeeds, a value of 0 is returned.  If the call
E 2
I 2
If a call to
D 4
.I getlogin
E 4
I 4
.Fn getlogin
E 4
succeeds, it returns a pointer to a null-terminated string in a static buffer.
D 5
If the name has not been set, it returns NULL.
E 5
I 5
If the name has not been set, it returns
.Dv NULL .
E 5
If a call to
D 4
.I setlogin
E 4
I 4
.Fn setlogin
E 4
succeeds, a value of 0 is returned.  If
D 4
.I setlogin
E 2
fails, then a value of \-1 is returned and an error code is
placed in the global location \fIerrno\fP.
.SH "ERRORS
E 4
I 4
.Fn setlogin
fails, a value of -1 is returned and an error code is
placed in the global location
.Va errno .
.Sh ERRORS
E 4
The following errors may be returned by these calls:
D 4
.TP 15
[EFAULT]
D 2
The \fIname\fP or \fInamelen\fP parameter gave an
E 2
I 2
The \fIname\fP parameter gave an
E 4
I 4
.Bl -tag -width Er
.It Bq Er EFAULT
The
.Fa name
parameter gave an
E 4
E 2
invalid address.
D 4
.TP 15
I 2
[EINVAL]
The \fIname\fP parameter
E 4
I 4
.It Bq Er EINVAL
The
.Fa name
parameter
E 4
pointed to a string that was too long.
D 4
Login names are limited to MAXLOGNAME (from
.IR <sys/param.h> )
E 4
I 4
Login names are limited to
.Dv MAXLOGNAME
(from
.Ao Pa sys/param.h Ac )
E 4
characters, currently 12.
D 4
.TP 15
E 2
[EPERM]
E 4
I 4
.It Bq Er EPERM
E 4
D 2
The caller tried to set the hostname and was not the super-user.
E 2
I 2
The caller tried to set the login name and was not the super-user.
E 2
D 4
.SH SEE ALSO
D 2
getlogin(3)
E 2
I 2
setsid(2)
E 2
.SH BUGS
E 4
I 4
.El
.Sh SEE ALSO
.Xr setsid 2
.Sh BUGS
E 4
D 2
Host names are limited to MAXLOGNAME (from
.IR <sys/user.h> )
characters, currently 12.
E 2
I 2
Login names are limited in length by
D 4
.IR setlogin .
E 4
I 4
.Fn setlogin .
E 4
However, lower limits are placed on login names elsewhere in the system
D 4
(UT_NAMESIZE in
.IR <utmp.h> ).
.PP
E 4
I 4
.Pf ( Dv UT_NAMESIZE
in
.Ao Pa utmp.h Ac ) .
.Pp
E 4
In earlier versions of the system,
D 4
.I getlogin
E 4
I 4
.Fn getlogin
E 4
failed unless the process was associated with a login terminal.
The current implementation (using
D 4
.IR setlogin )
E 4
I 4
.Fn setlogin )
E 4
allows getlogin to succeed even when the process has no controlling terminal.
In earlier versions of the system, the value returned by
D 4
.I getlogin
E 4
I 4
.Fn getlogin
E 4
could not be trusted without checking the user ID.
Portable programs should probably still make this check.
I 4
.Sh HISTORY
The
D 5
.Nm
function call is currently under development.
E 5
I 5
D 7
.Nm getlogin
function call is
.Ud .
E 7
I 7
.Fn getlogin
function first appeared in 4.4BSD.
E 7
E 5
E 4
E 2
E 1
