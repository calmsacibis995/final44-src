h16012
s 00002/00002/00073
d D 8.1 93/06/04 13:15:56 bostic 9 8
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00000/00074
d D 6.7 92/10/01 14:15:53 bostic 8 7
c requires unistd.h
e
s 00012/00013/00062
d D 6.6 92/08/01 13:50:16 bostic 7 6
c I agree, but it won't help to bitch now.
e
s 00035/00011/00040
d D 6.5 92/07/30 19:01:38 marc 6 5
c document new getpgrp that takes no argument, and explain why...
e
s 00036/00027/00015
d D 6.4 91/03/10 23:38:27 cael 5 4
c man page macro and text revisions (-mdoc version 3)
e
s 00001/00001/00041
d D 6.3 85/08/26 23:32:40 mckusick 4 3
c update error messages (mostly from sun!guy)
e
s 00001/00001/00041
d D 6.2 85/06/28 17:01:19 sechrest 3 2
c Improved english
e
s 00001/00001/00041
d D 6.1 85/05/15 11:56:27 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00042/00000/00000
d D 5.1 85/05/15 11:56:19 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 9
.\" Copyright (c) 1983, 1991 Regents of the University of California.
.\" All rights reserved.
E 9
I 9
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 9
E 5
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
.\" %sccs.include.redist.man%
E 5
.\"
D 2
.TH GETPGRP 2 "2 July 1983"
E 2
I 2
D 5
.TH GETPGRP 2 "%Q%"
E 2
.UC 5
.SH NAME
getpgrp \- get process group
.SH SYNOPSIS
.ft B
.nf
pgrp = getpgrp(pid)
D 4
int prgp;
E 4
I 4
int pgrp;
E 4
int pid;
.fi
.ft R
.SH DESCRIPTION
E 5
I 5
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt GETPGRP 2
.Os BSD 4.2
.Sh NAME
.Nm getpgrp
.Nd get process group
.Sh SYNOPSIS
I 8
.Fd #include <unistd.h>
E 8
.Ft pid_t
D 6
.Fn getpgrp "int pid"
E 6
I 6
.Fn getpgrp "void"
E 6
.Sh DESCRIPTION
E 5
D 6
The process group of the specified process is returned by
E 6
I 6
The process group of the current process is returned by
E 6
D 5
.I getpgrp.
E 5
I 5
.Fn getpgrp .
E 5
D 6
If
D 5
.I pid
is zero, then the call applies to the current process.
.PP
E 5
I 5
.Fa pid
is zero, the call applies to the current process.
E 6
.Pp
E 5
Process groups are used for distribution of signals, and
by terminals to arbitrate requests for their input: processes
D 3
which have the same process group as the terminal are foreground
E 3
I 3
that have the same process group as the terminal are foreground
E 3
and may read, while others will block with a signal if they attempt
to read.
D 5
.PP
E 5
I 5
.Pp
E 5
This call is thus used by programs such as
D 5
.IR csh (1)
E 5
I 5
.Xr csh 1
E 5
to create
process groups
in implementing job control.
D 5
The TIOCGPGRP and TIOCSPGRP calls
E 5
I 5
The
D 6
.Dv TIOCGPGRP
E 6
I 6
.Fn tcgetpgrp
E 6
and
D 6
.Dv TIOCSPGRP
E 6
I 6
.Fn tcsetpgrp
E 6
calls
E 5
D 6
described in
D 5
.IR tty (4)
E 5
I 5
.Xr termios 4
E 6
E 5
are used to get/set the process group of the control terminal.
D 5
.SH "SEE ALSO"
setpgrp(2), getuid(2), tty(4)
E 5
I 5
.Sh SEE ALSO
D 6
.Xr setpgrp 2 ,
.Xr getuid 2 ,
E 6
I 6
.Xr setpgid 2 ,
E 6
.Xr termios 4
.Sh HISTORY
The
.Nm
function call appeared in
.Bx 4.0 .
I 6
.Sh STANDARDS
The
.Fn getpgrp
function conforms to IEEE Std 1003.1-1988
.Pq Dq Tn POSIX .
.Sh COMPATABILITY
This version of
.Fn getpgrp
D 7
differs from past Berkeley versions because it does
not take a
E 7
I 7
differs from past Berkeley versions by not taking a
E 7
.Fa "pid_t pid"
D 7
argument.  We regret changing this but were forced to in
order to comply with IEEE Std 1003.1-1988
.Pq Dq Tn POSIX .
The reasons \fIthey\fR gave for changing this are quoted
in the next paragraph.  We wonder why they didn't just
change the name to avoid this incompatability.
E 7
I 7
argument.
This incompatibility is required by
.St -p1003.1-88 .
E 7
.Pp
D 7
(Quoted from the POSIX Rationale)
.br
\fI4.3BSD provides a
E 7
I 7
From the
.St -p1003.1-88
Rationale:
.sp
4.3BSD provides a
E 7
.Fn getpgrp
function that returns the process group ID for a specified process.
Although this function is used to support job control, all known
job-control shells always specify the calling process with this
D 7
function.  Thus, the simpler System V
E 7
I 7
function.
Thus, the simpler System V
E 7
.Fn getpgrp
suffices, and the added complexity of the 4.3BSD
.Fn getpgrp
D 7
has been omitted from POSIX.1.\fP
E 7
I 7
has been omitted from POSIX.1.
E 7
E 6
E 5
E 1
