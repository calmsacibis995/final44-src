h26656
s 00002/00002/00114
d D 8.1 93/06/04 13:16:02 bostic 14 13
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00084/00065/00032
d D 6.9 91/03/10 23:38:35 cael 13 12
c man page macro and text revisions (-mdoc version 3)
e
s 00001/00011/00096
d D 6.8 90/06/23 17:47:30 trent 12 11
c new copyright notice
e
s 00014/00003/00093
d D 6.7 89/05/18 14:15:27 bostic 11 10
c add Berkeley specific copyright notice
e
s 00001/00000/00095
d D 6.6 89/02/06 17:31:21 mckusick 10 9
c add need to include <sys/time.h> (4.3BSD-tahoe/man/2)
e
s 00000/00005/00095
d D 6.5 86/05/22 12:27:26 anne 9 8
c removed 3 lines
e
s 00002/00003/00098
d D 6.4 86/05/13 15:30:44 karels 8 7
c update
e
s 00003/00000/00098
d D 6.3 85/06/06 03:59:06 lepreau 7 4
c zero `who' means current one
e
s 00003/00000/00098
d R 6.3 85/06/06 03:56:56 lepreau 6 4
c doc what a 0 `who' means
e
s 00003/00000/00098
d R 6.3 85/06/06 03:50:18 lepreau 5 4
c doc what a 0 `who' means
e
s 00001/00001/00097
d D 6.2 85/05/22 16:14:41 mckusick 4 3
c return EPERM when non-super-user try to set another process's priority
e
s 00001/00001/00097
d D 6.1 85/05/09 17:41:09 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00083/00031/00015
d D 5.1 85/05/09 17:40:31 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00046/00000/00000
d D 4.1 85/05/09 17:37:37 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 11
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 11
I 11
D 13
.\" Copyright (c) 1980 The Regents of the University of California.
E 13
I 13
D 14
.\" Copyright (c) 1980, 1991 The Regents of the University of California.
E 13
.\" All rights reserved.
E 14
I 14
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 14
.\"
D 12
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 12
I 12
.\" %sccs.include.redist.man%
E 12
E 11
.\"
D 13
.\"	%W% (Berkeley) %G%
E 13
I 13
.\"     %W% (Berkeley) %G%
E 13
.\"
D 2
.TH NICE 2 
E 2
I 2
D 3
.TH GETPRIORITY 2 "18 July 1983"
E 3
I 3
D 13
.TH GETPRIORITY 2 "%Q%"
E 3
E 2
.UC 4
.SH NAME
D 2
nice \- set program priority
E 2
I 2
getpriority, setpriority \- get/set program scheduling priority
E 2
.SH SYNOPSIS
D 2
.B nice(incr)
E 2
I 2
.nf
.ft B
I 10
#include <sys/time.h>
E 10
#include <sys/resource.h>
.PP
.ft B
D 9
#define PRIO_PROCESS	0	/* process */
#define PRIO_PGRP		1	/* process group */
#define PRIO_USER		2	/* user id */
.PP
.ft B
E 9
prio = getpriority(which, who)
int prio, which, who;
.PP
.ft B
setpriority(which, who, prio)
int which, who, prio;
.fi
E 2
.SH DESCRIPTION
E 13
I 13
.Dd %Q%
.Dt GETPRIORITY 2
.Os BSD 4
.Sh NAME
.Nm getpriority ,
.Nm setpriority
.Nd get/set program scheduling priority
.Sh SYNOPSIS
.Fd #include <sys/time.h>
.Fd #include <sys/resource.h>
.Ft int
.Fn getpriority "int which" "int who"
.Ft int
.Fn setpriority "int which" "int who" "int prio"
.Sh DESCRIPTION
E 13
The scheduling
D 2
priority of the process is augmented by
.IR incr .
Positive priorities get less
service than normal.
Priority 10 is recommended to users
who wish to execute long-running programs
without flak from the administration.
E 2
I 2
priority of the process, process group, or user, as indicated by
D 13
.I which
E 13
I 13
.Fa which
E 13
and
D 13
.I who
E 13
I 13
.Fa who
E 13
is obtained with the
D 13
.I getpriority
E 13
I 13
.Fn getpriority
E 13
call and set with the
D 13
.I setpriority
E 13
I 13
.Fn setpriority
E 13
call.
D 13
.I Which
is one of PRIO_PROCESS, PRIO_PGRP, or PRIO_USER, and 
.I who
E 13
I 13
.Fa Which
is one of
.Dv PRIO_PROCESS ,
.Dv PRIO_PGRP ,
or
.Dv PRIO_USER ,
and 
.Fa who
E 13
is interpreted relative to 
D 13
.I which
(a process identifier for PRIO_PROCESS, process group
identifier for PRIO_PGRP, and a user ID for PRIO_USER).
E 13
I 13
.Fa which
(a process identifier for
.Dv PRIO_PROCESS ,
process group
identifier for
.Dv PRIO_PGRP ,
and a user ID for
.Dv PRIO_USER ) .
E 13
I 7
A zero value of
D 13
.I who
E 13
I 13
.Fa who
E 13
denotes the current process, process group, or user.
E 7
D 13
.I Prio
is a value in the range \-20 to 20.  The default priority is 0;
E 13
I 13
.Fa Prio
is a value in the range -20 to 20.  The default priority is 0;
E 13
lower priorities cause more favorable scheduling.
E 2
D 13
.PP
E 13
I 13
.Pp
E 13
D 2
Negative increments are ignored except on behalf of 
the super-user.
The priority is limited to the range
\-20 (most urgent) to 20 (least).
E 2
I 2
The
D 13
.I getpriority
E 13
I 13
.Fn getpriority
E 13
call returns the highest priority (lowest numerical value)
enjoyed by any of the specified processes.  The
D 13
.I setpriority
E 13
I 13
.Fn setpriority
E 13
call sets the priorities of all of the specified processes
to the specified value.  Only the super-user may lower priorities.
D 13
.SH "RETURN VALUE
E 13
I 13
.Sh RETURN VALUES
E 13
Since
D 13
.I getpriority
can legitimately return the value \-1, it is necessary
to clear the external variable \fIerrno\fP prior to the
E 13
I 13
.Fn getpriority
can legitimately return the value -1, it is necessary
to clear the external variable
.Va errno
prior to the
E 13
call, then check it afterward to determine
D 13
if a \-1 is an error or a legitimate value.
E 13
I 13
if a -1 is an error or a legitimate value.
E 13
The
D 13
.I setpriority
E 13
I 13
.Fn setpriority
E 13
call returns 0 if there is no error, or
D 13
\-1 if there is.
.SH ERRORS
.I Getpriority
E 13
I 13
-1 if there is.
.Sh ERRORS
.Fn Getpriority
E 13
and
D 13
.I setpriority
may return one of the following errors:
.TP 15
[ESRCH]
E 13
I 13
.Fn setpriority
will fail if:
.Bl -tag -width Er
.It Bq Er ESRCH
E 13
D 8
No process(es) were located using the 
E 8
I 8
No process was located using the 
E 8
D 13
.I which
E 13
I 13
.Fa which
E 13
and
D 13
.I who
E 13
I 13
.Fa who
E 13
values specified.
D 13
.TP 15
[EINVAL]
.I Which
was not one of PRIO_PROCESS, PRIO_PGRP, or PRIO_USER.
E 2
.PP
E 13
I 13
.It Bq Er EINVAL
.Fa Which
was not one of
.Dv PRIO_PROCESS ,
.Dv PRIO_PGRP ,
or
.Dv PRIO_USER .
.El
.Pp
.Bl -tag -width Er
E 13
D 2
The priority of a process is
passed to a child process by
.IR fork (2).
For a privileged process to return to normal priority
from an unknown state,
.I nice
should be called successively with arguments
\-40 (goes to priority \-20 because of truncation),
20 (to get to 0),
then 0 (to maintain compatibility with previous versions
of this call).
E 2
I 2
In addition to the errors indicated above,
D 13
.I setpriority
may fail with one of the following errors returned:
.TP 15
D 4
[EACCES]
E 4
I 4
[EPERM]
E 13
I 13
.Fn setpriority
will fail if:
.It Bq Er EPERM
E 13
E 4
A process was located, but neither its effective nor real user
ID matched the effective user ID of the caller.
D 13
.TP 15
[EACCES]
E 13
I 13
.It Bq Er EACCES
E 13
D 8
A non super-user attempted to change a process
priority to a negative value.
E 8
I 8
A non super-user attempted to lower a process priority.
E 8
E 2
D 13
.SH "SEE ALSO"
nice(1), fork(2), renice(8)
E 13
I 13
.El
.Sh SEE ALSO
.Xr nice 1 ,
.Xr fork 2 ,
.Xr renice 8
.Sh HISTORY
The
.Nm
function call appeared in
.Bx 4.2 .
E 13
D 2
.SH "ASSEMBLER (PDP-11)"
(nice = 34.)
.br
(priority in r0)
.br
.B sys nice
E 2
E 1
