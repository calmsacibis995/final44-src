h12382
s 00008/00000/00093
d D 8.2 95/05/26 14:53:41 mckusick 15 14
c time cannot be adjusted backward when the system is secure
e
s 00002/00002/00091
d D 8.1 93/06/04 13:16:19 bostic 14 13
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00064/00052/00029
d D 6.11 91/03/10 23:38:53 cael 13 12
c man page macro and text revisions (-mdoc version 3)
e
s 00001/00011/00080
d D 6.10 90/06/23 17:47:04 trent 12 11
c new copyright notice
e
s 00014/00003/00077
d D 6.9 89/05/18 14:15:32 bostic 11 10
c add Berkeley specific copyright notice
e
s 00007/00014/00073
d D 6.8 87/04/11 12:32:09 bostic 10 9
c tp or tzp can be NULL
e
s 00002/00007/00085
d D 6.7 86/05/14 10:03:13 karels 9 8
c fixes and updates
e
s 00018/00009/00074
d D 6.6 86/04/30 10:39:38 lepreau 8 7
c tv_sec is long not u_long; random cleanup
e
s 00003/00000/00080
d D 6.5 85/08/26 23:32:18 mckusick 7 6
c update error messages (mostly from sun!guy)
e
s 00005/00016/00075
d D 6.4 85/06/24 13:23:44 gusella 6 5
c Minor editing because of timed(8)
e
s 00004/00005/00087
d D 6.3 85/06/05 23:50:01 lepreau 5 4
c was misleading
e
s 00016/00006/00076
d D 6.2 85/06/05 23:42:38 lepreau 4 3
c explicate zero tzp; correct type of tv_sec; timedaemon changes BUGS
e
s 00001/00001/00081
d D 6.1 85/05/09 17:56:41 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00069/00021/00013
d D 5.1 85/05/09 17:56:09 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00034/00000/00000
d D 4.1 85/05/09 17:55:00 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 11
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 11
I 11
D 13
.\" Copyright (c) 1980 The Regents of the University of California.
E 13
I 13
D 14
.\" Copyright (c) 1980, 1991 The Regents of the University of California.
E 13
.\" All rights reserved.
E 14
I 14
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 14
.\"
D 12
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 12
I 12
.\" %sccs.include.redist.man%
E 12
E 11
.\"
D 13
.\"	%W% (Berkeley) %G%
E 13
I 13
.\"     %W% (Berkeley) %G%
E 13
.\"
D 2
.TH STIME 2 
E 2
I 2
D 3
.TH GETTIMEOFDAY 2 "27 July 1983"
E 3
I 3
D 13
.TH GETTIMEOFDAY 2 "%Q%"
E 3
E 2
.UC 4
.SH NAME
D 2
stime \- set time
E 2
I 2
gettimeofday, settimeofday \- get/set date and time
E 2
.SH SYNOPSIS
.nf
D 2
.B stime(tp)
.B long *tp;
E 2
I 2
.ft B
#include <sys/time.h>
.PP
.ft B
gettimeofday(tp, tzp)
struct timeval *tp;
struct timezone *tzp;
.PP
.ft B
settimeofday(tp, tzp)
struct timeval *tp;
struct timezone *tzp;
E 2
.fi
.SH DESCRIPTION
E 13
I 13
.Dd %Q%
.Dt GETTIMEOFDAY 2
.Os BSD 4
.Sh NAME
.Nm gettimeofday ,
.Nm settimeofday
.Nd get/set date and time
.Sh SYNOPSIS
.Fd #include <sys/time.h>
.Ft int
.Fn gettimeofday "struct timeval *tp" "struct timezone *tzp"
.Ft int
.Fn settimeofday "struct timeval *tp" "struct timezone *tzp"
.Sh DESCRIPTION
.Bf -symbolic
Note: timezone is no longer used; this information is kept outside
the kernel.
.Ef
E 13
D 2
.I Stime
sets the system's idea of the time and date.
Time, pointed to by
.I tp,
is measured in seconds from 0000 GMT Jan 1, 1970.
Only the super-user may use this call.
.SH "SEE ALSO"
date(1), time(2), ctime(3)
.SH DIAGNOSTICS
Zero is returned if the time was set;
\-1 if user is not the super-user.
.SH "ASSEMBLER (PDP-11)"
(stime = 25.)
.br
(time in r0-r1)
.br
.B sys stime
E 2
I 2
D 8
.I Gettimeofday
D 4
returns the system's notion of the current Greenwich time and
E 4
I 4
D 6
returns the system's notion of the current Greenwich time,
and if
.I tzp
is nonzero,
E 6
I 6
returns the system's notion of the current Greenwich time and
E 6
E 4
the current time zone.  Time returned is expressed relative
in seconds and microseconds since midnight January 1, 1970.
E 8
I 8
D 10
The system's notion of the current Greenwich time and
the current time zone
is obtained with the
.I gettimeofday
call, and set with the
.I settimeofday
call.
The time is expressed
in seconds and microseconds since midnight (0 hour), January 1, 1970.
I 9
The resolution of the system clock is hardware dependent,
and the time may be updated continuously or in ``ticks.''
E 9
E 8
I 7
If
.I tzp
D 8
is NULL, the time zone information will not be returned or set.
E 8
I 8
is zero, the time zone information will not be returned or set.
E 10
I 10
The system's notion of the current Greenwich time and the current time
D 13
zone is obtained with the \fIgettimeofday\fP call, and set with the
\fIsettimeofday\fP call.  The time is expressed in seconds and microseconds
E 13
I 13
zone is obtained with the
.Fn gettimeofday
call, and set with the
.Fn settimeofday
call.  The time is expressed in seconds and microseconds
E 13
since midnight (0 hour), January 1, 1970.  The resolution of the system
clock is hardware dependent, and the time may be updated continuously or
D 13
in ``ticks.''  If \fItp\fP or \fItzp\fP is NULL, the associated time
E 13
I 13
in ``ticks.''  If
.Fa tp
or
.Fa tzp
is NULL, the associated time
E 13
information will not be returned or set.
E 10
E 8
E 7
E 2
D 13
.PP
E 13
I 13
.Pp
E 13
I 2
The structures pointed to by
D 13
.I tp
E 13
I 13
.Fa tp
E 13
and
D 13
.I tzp
E 13
I 13
.Fa tzp
E 13
are defined in 
D 13
.I <sys/time.h>
E 13
I 13
.Ao Pa sys/time.h Ac
E 13
as:
D 13
.PP
.nf
.RS
.DT
E 13
I 13
.Pp
.Bd -literal
E 13
struct timeval {
D 4
	u_long	tv_sec;		/* seconds since Jan. 1, 1970 */
E 4
I 4
D 6
	long	tv_sec;		/* seconds since Jan. 1, 1970 */
E 6
I 6
D 8
	u_long	tv_sec;		/* seconds since Jan. 1, 1970 */
E 8
I 8
	long	tv_sec;		/* seconds since Jan. 1, 1970 */
E 8
E 6
E 4
D 13
	long	tv_usec;		/* and microseconds */
E 13
I 13
	long	tv_usec;	/* and microseconds */
E 13
};
D 13
.sp 1
E 13
I 13

E 13
struct timezone {
D 13
	int	tz_minuteswest;	/* of Greenwich */
E 13
I 13
	int	tz_minuteswest; /* of Greenwich */
E 13
	int	tz_dsttime;	/* type of dst correction to apply */
};
D 13
.RE
.fi
.PP
E 13
I 13
.Ed
.Pp
E 13
The 
D 13
.I timezone
E 13
I 13
.Fa timezone
E 13
structure indicates the local time zone
(measured in minutes of time westward from Greenwich),
and a flag that, if nonzero, indicates that
Daylight Saving time applies locally during
the appropriate part of the year.
D 13
.PP
E 13
I 13
.Pp
E 13
I 4
D 5
If
.I tzp
is zero
E 5
I 5
D 6
Only the super-user may issue the
E 5
.I settimeofday
D 5
does not change the current time zone.
E 4
Only the super-user may set the time of day.
E 5
I 5
call.  If
.I tzp
is zero the current time zone is not changed.
E 6
I 6
D 8
Only the super-user may set the time of day.
E 8
I 8
Only the super-user may set the time of day or time zone.
I 15
If the system is running in secure mode (see
.Xr init 8 ),
the time may only be advanced.
This limitation is imposed to prevent a malicious super-user
from setting arbitrary time stamps on files.
The system time can still be adjusted backwards using the
.Xr adjtime 2
system call even when the system is secure.
E 15
E 8
E 6
E 5
D 13
.SH RETURN
E 13
I 13
.Sh RETURN
E 13
A 0 return value indicates that the call succeeded.
D 13
A \-1 return value indicates an error occurred, and in this
case an error code is stored into the global variable \fIerrno\fP.
.SH "ERRORS
The following error codes may be set in \fIerrno\fP:
.TP 15
[EFAULT]
E 13
I 13
A -1 return value indicates an error occurred, and in this
case an error code is stored into the global variable
.Va errno .
.Sh ERRORS
The following error codes may be set in
.Va errno :
.Bl -tag -width [EFAULT]
.It Bq Er EFAULT
E 13
An argument address referenced invalid memory.
D 13
.TP 15
[EPERM]
E 13
I 13
.It Bq Er EPERM
E 13
A user other than the super-user attempted to set the time.
D 13
.SH "SEE ALSO"
D 4
date(1), ctime(3)
E 4
I 4
D 6
date(1), netdate(1), adjtime(2), ctime(3), timedaemon(8)
E 6
I 6
D 8
date(1), ctime(3)
E 8
I 8
date(1), adjtime(2), ctime(3), timed(8)
E 13
I 13
.El
.Sh SEE ALSO
.Xr date 1 ,
.Xr adjtime 2 ,
.Xr ctime 3 ,
.Xr timed 8
.Sh HISTORY
The
.Nm
function call appeared in
.Bx 4.2 .
E 13
E 8
E 6
E 4
D 9
.SH BUGS
Time is never correct enough to believe the microsecond
D 4
values.  There should a mechanism by which, at least,
local clusters of systems might synchronize their clocks
to millisecond granularity.
E 4
I 4
D 6
values, although the
.I timedaemon
mechanism allows
local clusters of systems to synchronize their clocks
to within a few milliseconds.
E 6
I 6
D 8
values.
E 8
I 8
values, although the
.IR timed (8)
mechanism does enable
clusters of systems to synchronize their clocks
to within a few milliseconds.
E 9
E 8
E 6
E 4
E 2
E 1
