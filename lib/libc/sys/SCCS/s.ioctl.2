h57609
s 00001/00001/00079
d D 8.2 93/12/11 23:08:17 mckusick 8 7
c copyediting for Usenix manuals
e
s 00002/00002/00078
d D 8.1 93/06/04 13:16:33 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00069/00054/00011
d D 6.4 91/03/10 23:39:06 cael 6 5
c man page macro and text revisions (-mdoc version 3)
e
s 00002/00001/00063
d D 6.3 86/03/04 22:13:07 donn 5 4
c Change ioctl request parameter to type unsigned long to avoid lint complaints.
e
s 00001/00001/00063
d D 6.2 85/06/28 17:15:21 sechrest 4 3
c Improved English
e
s 00001/00001/00063
d D 6.1 85/05/09 16:04:45 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00044/00112/00020
d D 5.1 85/05/09 16:04:35 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00132/00000/00000
d D 4.1 85/05/09 16:04:26 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 6
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 6
I 6
D 7
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
E 6
.\"
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
.\" %sccs.include.redist.man%
E 6
.\"
D 2
.TH IOCTL 2 
E 2
I 2
D 3
.TH IOCTL 2 "7 July 1983"
E 3
I 3
D 6
.TH IOCTL 2 "%Q%"
E 3
E 2
.UC 4
.SH NAME
D 2
ioctl, stty, gtty \- control device
E 2
I 2
ioctl \- control device
E 2
.SH SYNOPSIS
.nf
D 2
.B #include <sgtty.h>
E 2
I 2
.ft B
#include <sys/ioctl.h>
E 2
.PP
D 2
.B ioctl(fildes, request, argp)
.B struct sgttyb *argp;
.PP
.B stty(fildes, argp)
.B struct sgttyb *argp;
.PP
.B gtty(fildes, argp)
.B struct sgttyb *argp;
E 2
I 2
.ft B
ioctl(d, request, argp)
D 5
int d, request;
E 5
I 5
int d;
unsigned long request;
E 5
char *argp;
E 2
.fi
I 2
.ft R
E 2
.SH DESCRIPTION
.I Ioctl
performs a variety of functions
D 2
on character special files (devices).
The writeups of various devices
in section 4 discuss how
E 2
I 2
on open descriptors.  In particular, many operating
E 6
I 6
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt IOCTL 2
.Os BSD 4
.Sh NAME
.Nm ioctl
.Nd control device
.Sh SYNOPSIS
.Fd #include <sys/ioctl.h>
.Ft int
.Fn ioctl "int d" "unsigned long request" "char *argp"
.Sh DESCRIPTION
The
.Fn ioctl
function manipulates the underlying device parameters of special files.
In particular, many operating
E 6
characteristics of character special files (e.g. terminals)
may be controlled with
E 2
D 6
.I ioctl
E 6
I 6
.Fn ioctl
E 6
I 2
requests.
D 6
The writeups of various devices in section 4 discuss how
.I ioctl
E 2
applies to them.
.PP
E 6
I 6
The argument
.Fa d
must be an open file descriptor.
.Pp
E 6
D 2
For certain status setting and status inquiries
about terminal devices, the functions
.I stty
and
.I gtty
are equivalent to
.RS
.B ioctl(fildes, TIOCSETP, argp)
.br
.B ioctl(fildes, TIOCGETP, argp)
.RE
.LP
respectively; see
.IR tty (4).
.PP
The following two standard calls, however, apply to any open file:
.PP
.RS
.B ioctl(fildes, FIOCLEX, NULL);
.br
.B ioctl(fildes, FIONCLEX, NULL);
.RE
.LP
The first causes the file to be closed automatically during
a successful
.I exec
operation;
the second reverses the effect of the first.
.PP
The following call is peculiar to the Berkeley implementation, and
also applies to any open file:
.PP
.RS
.B ioctl(fildes, FIONREAD, &count)
.RE
.LP
returning, in the longword
.I count
the number of characters available for reading from
.I fildes.
.SH "SEE ALSO"
stty(1), tty(4), exec(2)
.SH DIAGNOSTICS
Zero is returned if the call was successful;
\-1 if the file descriptor does not refer to
the kind of file for which it was intended,
or if
E 2
I 2
An  ioctl
E 2
D 6
.I request
D 2
attempts to modify the state of a terminal
when
.I fildes
is not writeable.
.PP
E 2
I 2
has encoded in it whether the argument is an \*(lqin\*(rq parameter
or \*(lqout\*(rq parameter, and the size of the argument \fIargp\fP in bytes.
E 6
I 6
.Fa request
has encoded in it whether the argument is an
.Dq in
parameter
or
.Dq out
parameter, and the size of the argument
.Fa argp
in bytes.
E 6
Macros and defines used in specifying an ioctl
D 6
.I request
E 6
I 6
.Fa request
E 6
are located in the file
D 6
.IR <sys/ioctl.h> .
.SH "RETURN VALUE
If an error has occurred, a value of \-1 is returned and
.I errno
E 6
I 6
.Ao Pa sys/ioctl.h Ac .
.Sh RETURN VALUES
If an error has occurred, a value of -1 is returned and
.Va errno
E 6
is set to indicate the error.
D 6
.SH ERRORS
E 2
.I Ioctl
D 2
calls which attempt to modify the state of a process control terminal
while a process is not in the process group of the control terminal
will cause a SIGTTOU signal to be sent to the process' process group.
Such
.IR ioctl s
are allowed,
however,
if SIGTTOU is being held,
ignored,
if the process is an orphan which has been inherited by
.IR init ,
or is the child in an incomplete
.I vfork
(see
.IR jobs (3))
.SH BUGS
Strictly speaking,
since 
.I ioctl
may be extended in different ways to devices with
different properties,
.I argp
should have an open-ended declaration like
.IP
.B union { struct sgttyb
.RB ... ;
\&...
.B } *argp;
.PP
The important thing is that the size is fixed by `struct sgttyb'.
.SH "ASSEMBLER (PDP-11)"
(ioctl = 54.)
.br
.B sys ioctl; fildes; request; argp
.PP
(stty = 31.)
.br
(file descriptor in r0)
.br
.B stty; argp
.PP
(gtty = 32.)
.br
(file descriptor in r0)
.br
.B sys gtty; argp
E 2
I 2
will fail if one or more of the following are true:
.TP 15
[EBADF]
\fID\fP is not a valid descriptor.
.TP 15
[ENOTTY]
\fID\fP is not associated with a character
E 6
I 6
.Sh ERRORS
.Fn Ioctl
D 8
will fail:
E 8
I 8
will fail if:
E 8
.Bl -tag -width [ENOTTY]
.It Bq Er EBADF
.Fa d
is not a valid descriptor.
.It Bq Er ENOTTY
.Fa d
is not associated with a character
E 6
special device.
D 6
.TP 15
[ENOTTY]
E 6
I 6
.It Bq Er ENOTTY
E 6
The specified request does not apply to the kind
D 4
of object which the descriptor \fId\fP references.
E 4
I 4
D 6
of object that the descriptor \fId\fP references.
E 4
.TP 15
[EINVAL]
\fIRequest\fP or \fIargp\fP is not valid.
.SH "SEE ALSO"
execve(2), fcntl(2), mt(4), tty(4), intro(4N)
E 6
I 6
of object that the descriptor
.Fa d
references.
.It Bq Er EINVAL
.Fa Request
or
.Fa argp
is not valid.
.El
.Sh SEE ALSO
.Xr mt 1 ,
.Xr execve 2 ,
.Xr fcntl 2 ,
.Xr tty 4 ,
.Xr intro 4
.Sh HISTORY
An
.Nm
function call appeared in Version 7 AT&T UNIX.
E 6
E 2
E 1
