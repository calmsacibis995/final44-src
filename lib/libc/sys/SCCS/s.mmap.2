h65121
s 00002/00004/00186
d D 8.4 95/05/11 13:14:22 mckusick 10 9
c delete spurious reference to MAP_WRITE
e
s 00002/00008/00188
d D 8.3 94/05/27 15:39:18 hibler 9 8
c back out the restriction that offset be page aligned
e
s 00020/00008/00176
d D 8.2 94/05/27 08:34:28 hibler 8 7
c note that pos should be a multiple of the pagesize,
c fd must be -1 for MAP_ANON, document various EINVAL conditions
e
s 00002/00002/00182
d D 8.1 93/06/04 13:17:42 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00010/00010/00174
d D 6.6 92/12/19 15:44:05 bostic 6 5
c fix comment out of MMAP_FILE
e
s 00002/00002/00182
d D 6.5 92/11/24 10:10:10 bostic 5 4
c delete MAP_FILE, it's the default, no longer needs to be specified
e
s 00001/00001/00183
d D 6.4 92/06/21 13:37:28 bostic 4 3
c second arg to mmap is a size_t
e
s 00028/00010/00156
d D 6.3 91/10/29 11:14:34 cael 3 2
c `an' should have been `and'
e
s 00159/00089/00007
d D 6.2 91/06/05 17:56:26 bostic 2 1
c first cut at a real man page, convert to new-style macros
e
s 00096/00000/00000
d D 6.1 91/05/27 21:44:42 mckusick 1 0
c date and time created 91/05/27 21:44:42 by mckusick
e
u
U
t
T
I 1
D 7
.\" Copyright (c) 1991 Regents of the University of California.
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
.\"
.\" %sccs.include.redist.man%
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH MMAP 2 "%Q%"
.UC 7
.SH NAME
mmap \- map files or devices into memory
.SH SYNOPSIS
.nf
.B caddr_t
mmap(addr, len, prot, flags, fd, pos)
.B caddr_t addr;
.B int len, prot, flags, fd;
.B off_t pos;
.fi
.SH DESCRIPTION
.PP
The \fImmap\fP system call
causes the pages starting at \fIaddr\fP and continuing
for at most \fIlen\fP bytes to be mapped from the object represented by
descriptor \fIfd\fP, starting at byte offset \fIpos\fP.
The starting address of the region is returned;
for the convenience of the system,
it may differ from that supplied
unless the MAP_FIXED flag is given,
in which case the exact address will be used or the call will fail.
The \fIaddr\fP, \fIlen\fP, and \fIpos\fP parameters
must all be multiples of the pagesize.
A successful \fImmap\fP will delete any previous mapping
in the allocated address range.
.PP
The system supports sharing of data between processes
by allowing pages to be mapped into memory.  These mapped
pages may be \fIshared\fP with other processes or \fIprivate\fP
to the process.
Protection and sharing options are defined in \fI<sys/mman.h>\fP as:
.DS
.ta \w'#define\ \ 'u +\w'MAP_HASSEMAPHORE\ \ 'u +\w'0x0080\ \ 'u
/* protections are chosen from these bits, or-ed together */
#define	PROT_READ	0x04	/* pages can be read */
#define	PROT_WRITE	0x02	/* pages can be written */
#define	PROT_EXEC	0x01	/* pages can be executed */
.DE
.DS
.ta \w'#define\ \ 'u +\w'MAP_HASSEMAPHORE\ \ 'u +\w'0x0080\ \ 'u
/* flags contain mapping type, sharing type and options */
/* mapping type; choose one */
#define MAP_FILE	0x0001	/* mapped from a file or device */
#define MAP_ANON	0x0002	/* allocated from memory, swap space */
#define MAP_TYPE	0x000f	/* mask for type field */
.DE
.DS
.ta \w'#define\ \ 'u +\w'MAP_HASSEMAPHORE\ \ 'u +\w'0x0080\ \ 'u
/* sharing types; choose one */
#define	MAP_SHARED	0x0010	/* share changes */
#define	MAP_PRIVATE	0x0000	/* changes are private */
.DE
.DS
.ta \w'#define\ \ 'u +\w'MAP_HASSEMAPHORE\ \ 'u +\w'0x0080\ \ 'u
/* other flags */
#define MAP_FIXED	0x0020	/* map addr must be exactly as requested */
#define MAP_INHERIT	0x0040	/* region is retained after exec */
#define MAP_HASSEMAPHORE	0x0080	/* region may contain semaphores */
.DE
.PP
The parameter \fIprot\fP specifies the accessibility
of the mapped pages.
The parameter \fIflags\fP specifies
the type of object to be mapped,
mapping options, and
whether modifications made to
this mapped copy of the page
are to be kept \fIprivate\fP, or are to be \fIshared\fP with
other references.
Possible types include MAP_FILE,
mapping a regular file or character-special device memory,
and MAP_ANON, which maps memory not associated with any specific file.
The file descriptor used for creating MAP_ANON regions is used only
for naming, and may be given as \-1 if no name
is associated with the region.\(dg
.FS
\(dg The current design does not allow a process
to specify the location of swap space.
In the future we may define an additional mapping type, MAP_SWAP,
in which the file descriptor argument specifies a file
or device to which swapping should be done.
.FE
The MAP_INHERIT flag allows a region to be inherited after an \fIexec\fP.
The MAP_HASSEMAPHORE flag allows special handling for
regions that may contain semaphores.
.SH "SEE ALSO"
msync.2, munmap.2, mprotect.2, madvise.2, mincore.2
E 2
I 2
.Dd "%Q%"
.Dt MMAP 2
.Os BSD 4
.Sh NAME
.Nm mmap
.Nd map files or devices into memory
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
.Ft caddr_t
D 4
.Fn mmap "caddr_t addr" "int len" "int prot" "int flags" "int fd" "off_t offset"
E 4
I 4
.Fn mmap "caddr_t addr" "size_t len" "int prot" "int flags" "int fd" "off_t offset"
E 4
.Sh DESCRIPTION
The
.Nm mmap
function causes the pages starting at
.Fa addr
and continuing for at most
.Fa len
bytes to be mapped from the object described by
.Fa fd ,
starting at byte offset
.Fa offset .
If
D 8
.Fa offset
or
E 8
.Fa len
is not a multiple of the pagesize, the mapped region may extend past the
specified range.
I 8
Any such extension beyond the end of the mapped object will be zero-filled.
E 8
.Pp
If
.Fa addr
is non-zero, it is used as a hint to the system.
(As a convenience to the system, the actual address of the region may differ
from the address supplied.)
If
.Fa addr
is zero, an address will be selected by the system.
The actual starting address of the region is returned.
A successful
.Fa mmap
deletes any previous mapping in the allocated address range.
.Pp
The protections (region accessibility) are specified in the
.Fa prot
argument by
D 3
.Em or Ap ing
E 3
I 3
.Em or Ns 'ing
E 3
the following values:
.Pp
.Bl -tag -width MAP_FIXEDX
.It Dv PROT_EXEC
Pages may be executed.
.It Dv PROT_READ
Pages may be read.
.It Dv PROT_WRITE
Pages may be written.
.El
.Pp
The
.Fa flags
parameter specifies the type of the mapped object, mapping options and
whether modifications made to the mapped copy of the page are private
to the process or are to be shared with other references.
Sharing, mapping type and options are specified in the
.Fa flags
argument by
D 3
.Em or Ap ing
E 3
I 3
.Em or Ns 'ing
E 3
the following values:
.Pp
.Bl -tag -width MAP_FIXEDX
.It Dv MAP_ANON
Map anonymous memory not associated with any specific file.
D 3
The file descriptor used for creating MAP_ANON regions is used only for
E 3
I 3
The file descriptor used for creating
.Dv MAP_ANON
D 8
regions is used only for
E 3
naming, and may be specified as \-1 if no name is associated with the
region.
E 8
I 8
must be \-1.
D 9
If 
.Dv MAP_ANON
is used,
the
E 9
I 9
The
E 9
.Fa offset
D 9
parameter is ignored, otherwise it must be a multiple of the pagesize.
E 9
I 9
parameter is ignored.
E 9
E 8
D 5
.It Dv MAP_FILE
Mapped from a regular file or character-special device memory.
E 5
I 5
D 6
\.".It Dv MAP_FILE
\."Mapped from a regular file or character-special device memory.
E 6
I 6
.\".It Dv MAP_FILE
.\"Mapped from a regular file or character-special device memory.
E 6
E 5
.It Dv MAP_FIXED
Do not permit the system to select a different address than the one
specified.
If the specified address cannot be used,
.Nm mmap
will fail.
If MAP_FIXED is specified,
.Fa addr
must be a multiple of the pagesize.
Use of this option is discouraged.
.It Dv MAP_HASSEMAPHORE
Notify the kernel that the region may contain semaphores and that special
handling may be necessary.
.It Dv MAP_INHERIT
Permit regions to be inherited across
.Xr exec 2
system calls.
.It Dv MAP_PRIVATE
Modifications are private.
.It Dv MAP_SHARED
Modifications are shared.
.El
.Pp
The 
.Xr close 2
function does not unmap pages, see
.Xr munmap 2
for further information.
.Pp
The current design does not allow a process to specify the location of
swap space.
D 3
In the future we may define an additional mapping type, MAP_SWAP, in which
E 3
I 3
In the future we may define an additional mapping type,
.Dv MAP_SWAP ,
in which
E 3
the file descriptor argument specifies a file or device to which swapping
should be done.
.Sh RETURN VALUES
Upon successful completion,
.Nm mmap
returns a pointer to the mapped region.
Otherwise, a value of -1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Mmap
will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
D 3
The flag PROT_READ was specified as part of the
E 3
I 3
The flag
.Dv PROT_READ
was specified as part of the
E 3
.Fa prot
parameter and
.Fa fd
was not open for reading.
D 3
The flags PROT_WRITE, MAP_SHARED and MAP_WRITE were specified as part
E 3
I 3
The flags
D 10
.Dv PROT_WRITE ,
E 10
.Dv MAP_SHARED
and
D 10
.Dv MAP_WRITE
were specified as part
E 3
of the
E 10
I 10
.Dv PROT_WRITE
were specified as part of the
E 10
.Fa flags
and
.Fa prot
parameters and
.Fa fd
was not open for writing.
.It Bq Er EBADF
.Fa Fd
is not a valid open file descriptor.
D 6
.It Bq Er EINVAL
D 3
One of MAP_ANON or MAP_FILE was not specified as part of the
E 3
I 3
One of
.Dv MAP_ANON
or
.Dv MAP_FILE
was not specified as part of the
E 3
.Fa flags
parameter.
E 6
I 6
D 8
.\".It Bq Er EINVAL
E 8
I 8
.It Bq Er EINVAL
E 8
.\"One of
.\".Dv MAP_ANON
.\"or
.\".Dv MAP_FILE
.\"was not specified as part of the
.\".Fa flags
.\"parameter.
E 6
D 3
MAP_FIXED was specified and the
E 3
I 3
.Dv MAP_FIXED
was specified and the
E 3
D 8
.I addr
parameter was not page aligned.
E 8
I 8
.Fa addr
parameter was not page aligned or was outside of the
valid address range for a process.
D 9
.Dv MAP_ANON was not specified and
.Fa pos
was not page aligned.
E 9
.Dv MAP_ANON was specified and
.Fa fd
was not \-1.
E 8
.Fa Fd
did not reference a regular or character special file.
I 8
.Fa Len
was less than zero.
E 8
.It Bq Er ENOMEM
D 3
MAP_FIXED was specified and the
E 3
I 3
.Dv MAP_FIXED
was specified and the
E 3
.Fa addr
parameter wasn't available.
D 3
MAP_ANON was specified an insufficient memory was available.
E 3
I 3
.Dv MAP_ANON
was specified and insufficient memory was available.
E 3
.Sh "SEE ALSO"
.Xr getpagesize 2 ,
.Xr msync 2 ,
.Xr munmap 2 ,
.Xr mprotect 2 ,
.Xr madvise 2 ,
.Xr mincore 2
E 2
E 1
