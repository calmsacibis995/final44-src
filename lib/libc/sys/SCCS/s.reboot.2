h55873
s 00002/00002/00130
d D 8.1 93/06/04 13:18:51 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00082/00066/00050
d D 6.5 91/03/10 23:39:58 cael 7 6
c man page macro and text revisions (-mdoc version 3)
e
s 00077/00033/00039
d D 6.4 90/06/30 16:21:23 bostic 6 5
c bring up to date
e
s 00001/00011/00071
d D 6.3 90/06/23 17:46:49 trent 5 4
c new copyright notice
e
s 00014/00003/00068
d D 6.2 89/05/18 14:15:38 bostic 4 3
c add Berkeley specific copyright notice
e
s 00001/00001/00070
d D 6.1 85/05/09 17:45:07 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00022/00045/00049
d D 5.1 85/05/09 17:44:43 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00094/00000/00000
d D 4.1 85/05/09 17:44:07 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 4
I 4
D 7
.\" Copyright (c) 1980 The Regents of the University of California.
E 7
I 7
D 8
.\" Copyright (c) 1980, 1991 The Regents of the University of California.
E 7
.\" All rights reserved.
E 8
I 8
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 8
.\"
D 5
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 5
I 5
.\" %sccs.include.redist.man%
E 5
E 4
.\"
D 7
.\"	%W% (Berkeley) %G%
E 7
I 7
.\"     %W% (Berkeley) %G%
E 7
.\"
D 2
.TH REBOOT 2V 4/1/81
E 2
I 2
D 3
.TH REBOOT 2 "18 July 1983"
E 3
I 3
D 7
.TH REBOOT 2 "%Q%"
E 3
E 2
.UC 4
.SH NAME
reboot \- reboot system or halt processor
.SH SYNOPSIS
.nf
.B #include <sys/reboot.h>
.PP
.B reboot(howto)
.B int howto;
.fi
.SH DESCRIPTION
.I Reboot
E 7
I 7
.Dd %Q%
.Dt REBOOT 2
.Os BSD 4
.Sh NAME
.Nm reboot
.Nd reboot system or halt processor
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Fd #include <sys/reboot.h>
.Ft int
.Fn reboot "int howto"
.Sh DESCRIPTION
.Fn Reboot
E 7
D 2
is used to cause a system reboot, and is invoked automatically
E 2
I 2
D 6
reboots the system, and is invoked automatically
E 2
in the event of unrecoverable system failures.
.I Howto
is a mask of options passed to the bootstrap program.
The system call interface permits only RB_HALT or RB_AUTOBOOT
to be passed to the reboot program; the other flags
are used in scripts stored on the console storage media, or used
in manual bootstrap procedures.
When none of these options (e.g. RB_AUTOBOOT) is given, the system is rebooted
from file \*(lqvmunix\*(rq in the root file system of unit 0
D 2
of a disk chosen in a processor specific way:
on the 11/780 it is specified by a line in the DEFBOO.CMD script on
the console floppy; on the 11/750 it is determined by the setting
of the front panel switch which picks the bootstrap device.
.\"On the 11/730 it is determined by a file on the console casette.
E 2
I 2
of a disk chosen in a processor specific way.
E 2
An automatic consistency check of the disks is then normally performed.
E 6
I 6
reboots the system.
Only the super-user may reboot a machine on demand.
However, a reboot is invoked
automatically in the event of unrecoverable system failures.
E 6
D 7
.PP
D 6
The bits of
.I howto
are:
E 6
I 6
.I Howto
is a mask of options; the system call interface passes the following
options, defined in the include file ``<sys/reboot.h>'', to be passed
E 7
I 7
.Pp
.Fa Howto
is a mask of options; the system call interface allows the following
options, defined in the include file
.Aq Pa sys/reboot.h ,
to be passed
E 7
to the new kernel or the new bootstrap and init programs.
E 6
D 7
.TP
D 6
RB_HALT
the processor is simply halted; no reboot takes place.
D 2
This should be used with caution.
E 2
I 2
RB_HALT should be used with caution.
E 6
I 6
RB_AUTOBOOT
E 7
I 7
.Bl -tag -width RB_INITNAMEA
.It Dv RB_AUTOBOOT
E 7
The default, causing the system to reboot in its usual fashion.
E 6
E 2
D 7
.TP
RB_ASKNAME
E 7
I 7
.It Dv RB_ASKNAME
E 7
Interpreted by the bootstrap program itself, causing it to
D 6
inquire as to what file should be booted.  Normally, the system is
D 2
booted from the file \*(lqxx(0,0)vmunix\*(rq without asking, where
.I xx
is determined by a code in register
.I r10
(which is known as
.I devtype)
at entry to the bootstrap program.  The code corresponds to the
major device number of the root file system, i.e. \*(lqmajor(rootdev)\*(rq.
Currently, the following values of
.I devtype
are understood:
.RS
.br
.ns
.IP
.nf
0	hp	rm03/rm05/rm80/rp06 massbus disk
1	--	unused
2	up	unibus disks (emulex sc21 w/ cdc/ampex/fujitsu drives)
3	rk	rk07 unibus disks
.fi
.RE
.IP
Thus if
.I r10
contained a 2, the system
.RS
.IP
.B up(0,0)vmunix.
.RE
.IP
would be booted.
This switch not available from the system call interface.
E 2
I 2
booted from the file \*(lqxx(0,0)vmunix\*(rq without asking.
E 6
I 6
prompt on the console as to what file should be booted.
D 7
Normally, the system is booted from the file ``\fIxx\fP(0,0)vmunix'',
where \fIxx\fP is the default disk name,
E 7
I 7
Normally, the system is booted from the file
.Dq Em xx Ns No (0,0)vmunix ,
where
.Em xx
is the default disk name,
E 7
without prompting for the file name.
E 6
E 2
D 7
.TP
I 6
RB_DFLTROOT
E 7
I 7
.It Dv RB_DFLTROOT
E 7
Use the compiled in root device.
Normally, the system uses the device from which it was booted
as the root device if possible.
(The default behavior is dependent on the ability of the bootstrap program
to determine the drive from which it was loaded, which is not possible
on all systems.)
D 7
.TP
RB_DUMP
E 7
I 7
.It Dv RB_DUMP
E 7
Dump kernel memory before rebooting; see
D 7
.IR savecore (8)
E 7
I 7
.Xr savecore 8
E 7
for more information.
D 7
.TP
RB_HALT
E 7
I 7
.It Dv RB_HALT
E 7
the processor is simply halted; no reboot takes place.
This option should be used with caution.
D 7
.TP
RB_INITNAME
E 7
I 7
.It Dv RB_INITNAME
E 7
An option allowing the specification of an init program (see
D 7
.IR init (8)
other than ``/sbin/init'' to be run when the system reboots.
E 7
I 7
.Xr init 8 )
other than
.Pa /sbin/init
to be run when the system reboots.
E 7
This switch is not currently available.
D 7
.TP
RB_KDB
E 7
I 7
.It Dv RB_KDB
E 7
Load the symbol table and enable a built-in debugger in the system.
This option will have no useful function if the kernel is not configured
for debugging.
Several other options have different meaning if combined
with this option, although their use may not be possible
via the
D 7
.I reboot 
E 7
I 7
.Fn reboot
E 7
call.
See
D 7
.IR kadb (4)
E 7
I 7
.Xr kadb 4
E 7
for more information.
D 7
.TP
RB_NOSYNC
E 7
I 7
.It Dv RB_NOSYNC
E 7
Normally, the disks are sync'd (see
D 7
.IR sync (8))
E 7
I 7
.Xr sync 8 )
E 7
before the processor is halted or rebooted.
This option may be useful if file system changes have been made manually
or if the processor is on fire.
D 7
.TP
RB_RDONLY
E 7
I 7
.It Dv RB_RDONLY
E 7
Initially mount the root file system read-only.
D 7
This is currently the default, and this option has been deprecated as
a no-op.
.TP
E 6
RB_SINGLE
E 7
I 7
This is currently the default, and this option has been deprecated.
.It Dv RB_SINGLE
E 7
Normally, the reboot procedure involves an automatic disk consistency
D 2
check and then multi-user operations.  This prevents the consistency
E 2
I 2
D 6
check and then multi-user operations.  RB_SINGLE prevents the consistency
E 2
check, rather simply booting the system with a single-user shell on
D 2
the console, from the file system specified by
.I r10.
This switch is interpreted by the
E 2
I 2
the console.
RB_SINGLE is interpreted by the
E 6
I 6
check and then multi-user operations.
D 7
RB_SINGLE prevents this, booting the system with a single-user shell
E 7
I 7
.Dv RB_SINGLE
prevents this, booting the system with a single-user shell
E 7
on the console.
D 7
RB_SINGLE is actually interpreted by the
E 6
E 2
.IR init (8)
E 7
I 7
.Dv RB_SINGLE
is actually interpreted by the
.Xr init 8
E 7
program in the newly booted system.
D 6
This switch is not available from the system call interface.
E 6
I 2
D 7
.PP
D 6
Only the super-user may
.I reboot
a machine.
E 6
I 6
When no options are given (i.e., RB_AUTOBOOT is used), the system is
E 7
I 7
.Pp
When no options are given (i.e.,
.Dv RB_AUTOBOOT
is used), the system is
E 7
rebooted from file ``vmunix'' in the root file system of unit 0
of a disk chosen in a processor specific way.
D 7
An automatic consistency check of the disks is then normally performed
E 7
I 7
An automatic consistency check of the disks is normally performed
E 7
(see
D 7
.IR fsck (8)).
E 6
.SH "RETURN VALUES"
E 7
I 7
.Xr fsck 8 ) .
.El
.Sh RETURN VALUES
E 7
D 6
If successful, this call never returns.  Otherwise, a \-1
is returned and an error is returned in the global variable
E 6
I 6
If successful, this call never returns.
D 7
Otherwise, a \-1 is returned and an error is returned in the global
E 7
I 7
Otherwise, a -1 is returned and an error is returned in the global
E 7
variable
E 6
D 7
.IR errno .
.SH ERRORS
.TP 15
[EPERM]
E 7
I 7
.Va errno .
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EPERM
E 7
The caller is not the super-user.
E 2
D 7
.SH "SEE ALSO"
D 6
crash(8), halt(8), init(8), reboot(8)
E 6
I 6
kadb(4), crash(8), halt(8), init(8), reboot(8), savecore(8)
E 6
.SH BUGS
I 2
D 6
The notion of ``console medium'', among other things,
is specific to the VAX.
E 6
I 6
The HP300 implementation supports neither RB_DFLTROOT or RB_KDB.
E 7
I 7
.El
.Sh SEE ALSO
.Xr kadb 4 ,
.Xr crash 8 ,
.Xr halt 8 ,
.Xr init 8 ,
.Xr reboot 8 ,
.Xr savecore 8
.Sh BUGS
The HP300 implementation supports neither
.Dv RB_DFLTROOT
nor
.Dv RB_KDB .
.Sh HISTORY
The
.Nm
function call appeared in
.Bx 4.0 .
E 7
E 6
E 2
E 1
