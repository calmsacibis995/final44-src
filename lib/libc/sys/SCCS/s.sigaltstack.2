h52458
s 00003/00003/00136
d D 8.2 95/05/01 21:18:29 mckusick 4 3
c ss_sp should be ss_base (from Torek)
e
s 00002/00002/00137
d D 8.1 93/06/04 13:19:47 bostic 3 2
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00001/00138
d D 5.2 92/07/28 11:23:43 bostic 2 1
c include <signal.h>, not <sys/signal.h>
e
s 00139/00000/00000
d D 5.1 92/04/23 16:31:18 mckusick 1 0
c date and time created 92/04/23 16:31:18 by mckusick
e
u
U
t
T
I 1
D 3
.\" Copyright (c) 1983, 1991, 1992 The Regents of the University of California.
.\" All rights reserved.
E 3
I 3
.\" Copyright (c) 1983, 1991, 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 3
.\"
.\" %sccs.include.redist.man%
.\"
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt SIGALTSTACK 2
.Os BSD 4.2
.Sh NAME
.Nm sigaltstack
.Nd set and/or get signal stack context
.Sh SYNOPSIS
.Fd #include <sys/types.h>
D 2
.Fd #include <sys/signal.h>
E 2
I 2
.Fd #include <signal.h>
E 2
.Bd -literal
struct sigaltstack {
D 4
	caddr_t ss_sp;
E 4
I 4
	caddr_t ss_base;
E 4
	long	ss_size;
	int     ss_flags;
};
.Ed
.Ft int
.Fn sigaltstack "const struct sigaltstack *ss" "struct sigaltstack *oss"
.Sh DESCRIPTION
.Fn Sigaltstack
allows users to define an alternate stack on which signals
are to be processed.
If
.Fa ss
is non-zero,
it specifies a pointer to and the size of a
.Em "signal stack"
on which to deliver signals,
and tells the system if the process is currently executing
on that stack.
When a signal's action indicates its handler
should execute on the signal stack (specified with a
.Xr sigaction 2
call), the system checks to see
if the process is currently executing on that stack.
If the process is not currently executing on the signal stack,
the system arranges a switch to the signal stack for the
duration of the signal handler's execution. 
.Pp
If
.Dv SA_DISABLE
is set in
.Fa ss_flags ,
D 4
.Fa ss_sp
E 4
I 4
.Fa ss_base
E 4
and
.Fa ss_size
are ignored and the signal stack will be disabled.
Trying to disable an active stack will cause
.Nm
to return -1 with
.Va errno
set to
.Dv EINVAL .
A disabled stack will cause all signals to be
taken on the regular user stack.
If the stack is later re-enabled then all signals that were specified
to be processed on an alternate stack will resume doing so.
.Pp
If
.Fa oss
is non-zero, the current signal stack state is returned.
The
.Fa ss_flags
field will contain the value
.Dv SA_ONSTACK
if the process is currently on a signal stack and
.Dv SA_DISABLE
if the signal stack is currently disabled.
.Sh NOTES
The value
.Dv SIGSTKSZ
is defined to be the number of bytes/chars that would be used to cover
the usual case when allocating an alternate stack area.
The following code fragment is typically used to allocate an alternate stack.
.Bd -literal -offset indent
D 4
if ((sigstk.ss_sp = malloc(SIGSTKSZ)) == NULL)
E 4
I 4
if ((sigstk.ss_base = malloc(SIGSTKSZ)) == NULL)
E 4
	/* error return */
sigstk.ss_size = SIGSTKSZ;
sigstk.ss_flags = 0;
if (sigaltstack(&sigstk,0) < 0)
	perror("sigaltstack");
.Ed
An alternative approach is provided for programs with signal handlers
that require a specific amount of stack space other than the default size.
The value
.Dv MINSIGSTKSZ
is defined to be the number of bytes/chars that is required by
the operating system to implement the alternate stack feature.
In computing an alternate stack size,
programs should add
.Dv MINSIGSTKSZ
to their stack requirements to allow for the operating system overhead.
.Pp
Signal stacks are automatically adjusted for the direction of stack
growth and alignment requirements.
Signal stacks may or may not be protected by the hardware and
are not ``grown'' automatically as is done for the normal stack.
If the stack overflows and this space is not protected
unpredictable results may occur.
.Sh RETURN VALUES
Upon successful completion, a value of 0 is returned.
Otherwise, a value of -1 is returned and 
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn Sigstack
will fail and the signal stack context will remain unchanged
if one of the following occurs.
.Bl -tag -width [ENOMEM]
.It Bq Er EFAULT
Either
.Fa ss
or
.Fa oss
points to memory that is not a valid part of the process
address space.
.It Bq Er EINVAL
An attempt was made to disable an active stack.
.It Bq Er ENOMEM
Size of alternate stack area is less than or equal to
.Dv MINSIGSTKSZ .
.El
.Sh SEE ALSO
.Xr sigaction 2 ,
.Xr setjmp 3
.Sh HISTORY
The predecessor to
.Nm sigaltstack ,
the
.Fn sigstack
system call, appeared in
.Bx 4.2 .
E 1
