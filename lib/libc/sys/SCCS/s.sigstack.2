h63368
s 00002/00002/00023
d D 8.1 93/06/04 13:20:00 bostic 9 8
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00006/00055/00019
d D 6.6 92/04/23 16:27:49 mckusick 8 6
c deprecate in favor of sigaltstack.2
e
s 00085/00020/00054
d R 6.6 92/04/13 19:25:34 mckusick 7 6
c update sigstack to the more rational sigaltstack
e
s 00043/00035/00031
d D 6.5 91/03/10 23:40:45 cael 6 5
c man page macro and text revisions (-mdoc version 3)
e
s 00001/00011/00065
d D 6.4 90/06/23 17:45:54 trent 5 4
c new copyright notice
e
s 00014/00003/00062
d D 6.3 89/05/18 14:16:02 bostic 4 3
c add Berkeley specific copyright notice
e
s 00001/00001/00064
d D 6.2 85/06/30 16:53:53 sechrest 3 2
c improved english
e
s 00001/00001/00064
d D 6.1 85/05/15 12:01:03 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00065/00000/00000
d D 5.1 85/05/15 12:00:55 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 4
I 4
D 6
.\" Copyright (c) 1983 The Regents of the University of California.
E 6
I 6
D 8
.\" Copyright (c) 1983, 1991 The Regents of the University of California.
E 8
I 8
D 9
.\" Copyright (c) 1983, 1992 The Regents of the University of California.
E 8
E 6
.\" All rights reserved.
E 9
I 9
.\" Copyright (c) 1983, 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 9
.\"
D 5
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 5
I 5
.\" %sccs.include.redist.man%
E 5
E 4
.\"
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
.\"     %W% (Berkeley) %G%
E 6
.\"
D 2
.TH SIGSTACK 2 "15 June 1983"
E 2
I 2
D 6
.TH SIGSTACK 2 "%Q%"
E 2
.UC 5
.SH NAME
sigstack \- set and/or get signal stack context
.SH SYNOPSIS
.nf
.B #include <signal.h>
.PP
.B struct sigstack {
.B	caddr_t	ss_sp;
.B	int	ss_onstack;
.B };
.PP
.B sigstack(ss, oss);
.B struct sigstack *ss, *oss;
.SH DESCRIPTION
.I Sigstack
E 6
I 6
.Dd %Q%
.Dt SIGSTACK 2
.Os BSD 4.2
.Sh NAME
.Nm sigstack
.Nd set and/or get signal stack context
D 8
.Sh SYNOPSIS
.Fd #include <sys/signal.h>
.Bd -literal
struct sigstack {
	caddr_t ss_sp;
	int     ss_onstack;
};
.Ed
.Ft int
.Fn sigstack "const struct sigstack *ss" "struct sigstack *oss"
E 8
.Sh DESCRIPTION
D 8
.Fn Sigstack
E 6
allows users to define an alternate stack on which signals
are to be processed.  If
D 6
.I ss
E 6
I 6
.Fa ss
E 6
is non-zero,
it specifies a
D 6
.I "signal stack"
E 6
I 6
.Em "signal stack"
E 6
on which to deliver signals
and tells the system if the process is currently executing
on that stack.  When a signal's action indicates its handler
should execute on the signal stack (specified with a
D 6
.IR sigvec (2)
E 6
I 6
.Xr sigvec 2
E 6
call), the system checks to see
if the process is currently executing on that stack.  If the
process is not currently executing on the signal stack,
the system arranges a switch to the signal stack for the
duration of the signal handler's execution. 
If
D 6
.I oss
E 6
I 6
.Fa oss
E 6
is non-zero, the current signal stack state is returned.
D 6
.SH NOTES
E 6
I 6
.Sh NOTES
E 6
Signal stacks are not ``grown'' automatically, as is
done for the normal stack.  If the stack overflows
unpredictable results may occur.
D 6
.SH "RETURN VALUE
E 6
I 6
.Sh RETURN VALUES
E 6
Upon successful completion, a value of 0 is returned.
D 6
Otherwise, a value of \-1 is returned and 
.I errno
E 6
I 6
Otherwise, a value of -1 is returned and 
.Va errno
E 6
is set to indicate the error.
D 6
.SH ERRORS
.I Sigstack
E 6
I 6
.Sh ERRORS
.Fn Sigstack
E 6
will fail and the signal stack context will remain unchanged
if one of the following occurs.
D 6
.TP 15
[EFAULT]
E 6
I 6
.Bl -tag -width [EFAULT]
.It Bq Er EFAULT
E 6
Either
D 6
.I ss
E 6
I 6
.Fa ss
E 6
or
D 6
.I oss
E 6
I 6
.Fa oss
E 6
D 3
points to memory which is not a valid part of the process
E 3
I 3
points to memory that is not a valid part of the process
E 3
address space.
D 6
.SH "SEE ALSO"
sigvec(2), setjmp(3)
E 6
I 6
.El
E 8
I 8
The 
.Fn sigstack
function has been deprecated in favor of the interface described in
.Xr sigaltstack 2 .
E 8
.Sh SEE ALSO
D 8
.Xr sigvec 2 ,
.Xr setjmp 3
E 8
I 8
.Xr sigaltstack 2
E 8
.Sh HISTORY
The
.Nm
function call appeared in
.Bx 4.2 .
E 6
E 1
