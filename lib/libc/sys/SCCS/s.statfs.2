h19485
s 00032/00000/00120
d D 8.5 95/05/24 23:05:25 mckusick 15 14
c list meanings of flags
e
s 00017/00032/00103
d D 8.4 95/04/03 17:50:32 mckusick 14 13
c update to reflect new fsstat structure
e
s 00017/00006/00118
d D 8.3 94/02/11 17:17:57 pendry 13 12
c reality check
e
s 00001/00001/00123
d D 8.2 93/12/11 23:08:29 mckusick 12 11
c copyediting for Usenix manuals
e
s 00002/00002/00122
d D 8.1 93/06/09 18:54:43 bostic 11 10
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00002/00123
d D 6.9 93/06/09 18:54:39 bostic 10 8
c fixed the under development line
e
s 00002/00002/00123
d R 8.1 93/06/04 13:20:18 bostic 9 8
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00000/00001/00125
d D 6.8 93/01/06 09:42:48 bostic 8 7
c ucred.h not needed, sucked in by mount.h
e
s 00002/00002/00124
d D 6.7 91/12/14 21:45:29 mckusick 7 6
c statfs.f_bsize => statfs.f_iosize; statfs.f_fsize => statfs.f_bsize (for SunOS)
e
s 00002/00001/00124
d D 6.6 91/11/19 13:49:14 mckusick 6 5
c the export interface now permits credentials, needs new include files
e
s 00012/00007/00113
d D 6.5 91/07/23 14:21:14 cael 5 4
c .Os changes, miscellaneous cleanups
e
s 00080/00093/00040
d D 6.4 91/03/10 23:41:02 cael 4 3
c man page macro and text revisions (-mdoc version 3)
e
s 00001/00011/00132
d D 6.3 90/06/23 17:48:41 trent 3 2
c new copyright notice
e
s 00002/00001/00141
d D 6.2 89/11/24 14:18:16 mckusick 2 1
c add type MFS
e
s 00142/00000/00000
d D 6.1 89/06/06 23:01:31 mckusick 1 0
c date and time created 89/06/06 23:01:31 by mckusick
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1989 The Regents of the University of California.
E 4
I 4
D 11
.\" Copyright (c) 1989, 1991 The Regents of the University of California.
E 4
.\" All rights reserved.
E 11
I 11
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 11
.\"
D 3
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 3
I 3
D 5
.\" %sccs.include.redist.man%
E 5
I 5
.\" %sccs.include.redist.roff%
E 5
E 3
.\"
D 4
.\"	%W% (Berkeley) %G%
E 4
I 4
D 5
.\"     %W% (Berkeley) %G%
E 5
I 5
.\"	%W% (Berkeley) %G%
E 5
E 4
.\"
D 4
.TH STATFS 2 "%Q%"
.UC 7
.SH NAME
statfs \- get file system statistics
.SH SYNOPSIS
.nf
.ft B
#include <sys/types.h>
#include <sys/mount.h>
.LP
.ft B
statfs(path, buf)
char *path;
struct statfs *buf;
.LP
.ft B
fstatfs(fd, buf)
int fd;
struct statfs *buf;
.fi
.ft R
.SH DESCRIPTION
.I Statfs
E 4
I 4
.Dd %Q%
.Dt STATFS 2
D 5
.Os BSD 4.4
E 5
I 5
.Os
E 5
.Sh NAME
.Nm statfs
.Nd get file system statistics
.Sh SYNOPSIS
D 6
.Fd #include <sys/types.h>
E 6
I 6
.Fd #include <sys/param.h>
D 8
.Fd #include <sys/ucred.h>
E 8
E 6
.Fd #include <sys/mount.h>
.Ft int
.Fn statfs "const char *path" "struct statfs *buf"
.Ft int
.Fn fstatfs "int fd" "struct statfs *buf"
.Sh DESCRIPTION
.Fn Statfs
E 4
returns information about a mounted file system.
D 4
.I path
E 4
I 4
.Fa Path
E 4
is the path name of any file within the mounted filesystem.
D 4
.I Buf
E 4
I 4
.Fa Buf
E 4
is a pointer to a
D 4
.I statfs
E 4
I 4
.Fn statfs
E 4
structure defined as follows:
D 4
.IP
.ta \w'#define\0\0'u +\w'fsid_t\0\0'u +\w'f_mntfromname[MNAMELEN]\0\0'u
.nf
E 4
I 4
.Bd -literal
E 4
typedef quad fsid_t;
D 4
.sp 1
E 4
I 4

E 4
D 13
#define MNAMELEN 32	/* length of buffer for returned name */
E 13
I 13
D 14
#define MNAMELEN 90	/* length of buffer for returned name */
E 14
I 14
#define MFSNAMELEN	16	/* length of fs type name, including null */
#define	MNAMELEN	90	/* length of buffer for returned name */
E 14
E 13
D 4
.sp 1
E 4
I 4

E 4
struct statfs {
D 4
	short	f_type;	/* type of filesystem (see below) */
	short	f_flags;	/* copy of mount flags */
	long	f_fsize;	/* fundamental file system block size */
	long	f_bsize;	/* optimal transfer block size */
	long	f_blocks;	/* total data blocks in file system */
	long	f_bfree;	/* free blocks in fs */
	long	f_bavail;	/* free blocks avail to non-superuser */
	long	f_files;	/* total file nodes in file system */
	long	f_ffree;	/* free file nodes in fs */
	fsid_t	f_fsid;	/* file system id */
	long	f_spare[6];	/* spare for later */
	char	f_mntonname[MNAMELEN];	/* directory on which mounted */
	char	f_mntfromname[MNAMELEN];	/* mounted filesystem */
E 4
I 4
D 14
short	f_type;		  /* type of filesystem (see below) */
short	f_flags;	  /* copy of mount flags */
D 7
long	f_fsize;	  /* fundamental file system block size */
long	f_bsize;	  /* optimal transfer block size */
E 7
I 7
long	f_bsize;	  /* fundamental file system block size */
long	f_iosize;	  /* optimal transfer block size */
E 7
long	f_blocks;	  /* total data blocks in file system */
long	f_bfree;	  /* free blocks in fs */
long	f_bavail;	  /* free blocks avail to non-superuser */
long	f_files;	  /* total file nodes in file system */
long	f_ffree;	  /* free file nodes in fs */
fsid_t	f_fsid;		  /* file system id */
D 13
long	f_spare[6];	  /* spare for later */
E 13
I 13
long	f_spare[9];	  /* spare for later */
E 13
char	f_mntonname[MNAMELEN];	  /* mount point */
char	f_mntfromname[MNAMELEN];  /* mounted filesystem */
E 14
I 14
	short	f_type;			/* filesystem type number */
	short	f_flags;		/* copy of mount flags */
	long	f_bsize;		/* fundamental file system block size */
	long	f_iosize;		/* optimal transfer block size */
	long	f_blocks;		/* total data blocks in file system */
	long	f_bfree;		/* free blocks in fs */
	long	f_bavail;		/* free blocks avail to non-superuser */
	long	f_files;		/* total file nodes in file system */
	long	f_ffree;		/* free file nodes in fs */
	fsid_t	f_fsid;			/* file system id */
	uid_t	f_owner;		/* user that mounted the filesystem */
	long	f_spare[4];		/* spare for later */
	char	f_fstypename[MFSNAMELEN]; /* fs type name */
	char	f_mntonname[MNAMELEN];	/* directory on which mounted */
	char	f_mntfromname[MNAMELEN];/* mounted filesystem */
E 14
E 4
};
D 14
/*
D 4
 * File system types.
 */
E 4
I 4
* File system types.
*/
E 4
D 13
#define	MOUNT_UFS	1
#define	MOUNT_NFS	2
D 2
#define	MOUNT_PC	3
E 2
I 2
#define	MOUNT_MFS	3
#define	MOUNT_PC	4
E 13
I 13
#define	MOUNT_UFS	1	/* Fast Filesystem */
#define	MOUNT_NFS	2	/* Sun-compatible Network Filesystem */
#define	MOUNT_MFS	3	/* Memory-based Filesystem */
#define	MOUNT_MSDOS	4	/* MS/DOS Filesystem */
#define	MOUNT_LFS	5	/* Log-based Filesystem */
#define	MOUNT_LOFS	6	/* Loopback Filesystem */
#define	MOUNT_FDESC	7	/* File Descriptor Filesystem */
#define	MOUNT_PORTAL	8	/* Portal Filesystem */
#define MOUNT_NULL	9	/* Minimal Filesystem Layer */
#define MOUNT_UMAP	10	/* Uid/Gid Remapping Filesystem */
#define MOUNT_KERNFS	11	/* Kernel Information Filesystem */
#define MOUNT_PROCFS	12	/* /proc Filesystem */
#define MOUNT_AFS	13	/* Andrew Filesystem */
#define MOUNT_CD9660	14	/* ISO9660 (aka CDROM) Filesystem */
#define MOUNT_UNION	15	/* Union (translucent) Filesystem */
E 14
E 13
E 2
D 4
.fi
.PP
Fields that are undefined for a particular file system are set to \-1.
.I Fstatfs
E 4
I 4
.Ed
I 15
The flags that may be returned include:
.Bl -tag -width MNT_ASYNCHRONOUS
.It Dv MNT_RDONLY
The filesystem is mounted read-only;
Even the super-user may not write on it.
.It Dv MNT_NOEXEC
Files may not be executed from the filesystem.
.It Dv MNT_NOSUID
Setuid and setgid bits on files are not honored when they are executed.
.It Dv MNT_NODEV
Special files in the filesystem may not be opened.
.It Dv MNT_SYNCHRONOUS
All I/O to the filesystem is done synchronously.
.It Dv MNT_ASYNCHRONOUS
No filesystem I/O is done synchronously.
.It Dv MNT_LOCAL
The filesystem resides locally.
.It Dv MNT_QUOTA
The filesystem has quotas enabled on it.
.It Dv MNT_ROOTFS
Identifies the root filesystem.
.It Dv MNT_EXRDONLY
The filesystem is exported read-only.
.It Dv MNT_EXPORTED
The filesystem is exported for both reading and writing.
.It Dv MNT_DEFEXPORTED
The filesystem is exported for both reading and writing to any Internet host.
.It Dv MNT_EXPORTANON
The filesystem maps all remote accesses to the anonymous user.
.It Dv MNT_EXKERB
The filesystem is exported with Kerberos uid mapping.
.El
E 15
.Pp
Fields that are undefined for a particular file system are set to -1.
.Fn Fstatfs
E 4
returns the same information about an open file referenced by descriptor
D 4
.IR fd .
.SH RETURN VALUE
E 4
I 4
.Fa fd .
.Sh RETURN VALUES
E 4
Upon successful completion, a value of 0 is returned.
D 4
Otherwise, \-1 is returned and the global variable
.I errno
E 4
I 4
Otherwise, -1 is returned and the global variable
.Va errno
E 4
is set to indicate the error.
D 4
.SH ERRORS
.I Statfs
E 4
I 4
.Sh ERRORS
.Fn Statfs
E 4
fails if one or more of the following are true:
D 4
.TP 15
ENOTDIR
E 4
I 4
.Bl -tag -width ENAMETOOLONGA
.It Bq Er ENOTDIR
E 4
A component of the path prefix of
D 4
.I path
E 4
I 4
.Fa Path
E 4
is not a directory.
D 4
.TP 15
EINVAL
.I path
E 4
I 4
.It Bq Er EINVAL
.Fa path
E 4
contains a character with the high-order bit set.
D 4
.TP 15
ENAMETOOLONG
E 4
I 4
.It Bq Er ENAMETOOLONG
E 4
The length of a component of
D 4
.I path
E 4
I 4
.Fa path
E 4
exceeds 255 characters,
or the length of
D 4
.I path
E 4
I 4
.Fa path
E 4
exceeds 1023 characters.
D 4
.TP 15
ENOENT
E 4
I 4
.It Bq Er ENOENT
E 4
The file referred to by
D 4
.I path
E 4
I 4
.Fa path
E 4
does not exist.
D 4
.TP 15
EACCES
E 4
I 4
.It Bq Er EACCES
E 4
Search permission is denied for a component of the path prefix of
D 4
.IR path .
.TP 15
ELOOP
E 4
I 4
.Fa path .
.It Bq Er ELOOP
E 4
Too many symbolic links were encountered in translating
D 4
.IR path .
.TP 15
EFAULT
.I Buf
E 4
I 4
.Fa path .
.It Bq Er EFAULT
.Fa Buf
E 4
or
D 4
.I path
E 4
I 4
.Fa path
E 4
points to an invalid address.
D 4
.TP 15
EIO
E 4
I 4
.It Bq Er EIO
E 4
D 5
An I/O error occurred while reading from or writing to the file system.
E 5
I 5
An
.Tn I/O
error occurred while reading from or writing to the file system.
E 5
D 4
.PP
.I Fstatfs
E 4
I 4
.El
.Pp
.Fn Fstatfs
E 4
D 12
fails if one or both of the following are true:
E 12
I 12
fails if one or more of the following are true:
E 12
D 4
.TP 15
EBADF
.I fd
E 4
I 4
.Bl -tag -width ENAMETOOLONGA
.It Bq Er EBADF
.Fa Fd
E 4
is not a valid open file descriptor.
D 4
.TP 15
EFAULT
.I buf
E 4
I 4
.It Bq Er EFAULT
.Fa Buf
E 4
points to an invalid address.
D 4
.TP 15
EIO
E 4
I 4
.It Bq Er EIO
E 4
D 5
An I/O error occurred while reading from or writing to the file system.
E 5
I 5
An
.Tn I/O
error occurred while reading from or writing to the file system.
E 5
I 4
.El
.Sh HISTORY
The
D 5
.Nm
function call is currently under development.
E 5
I 5
.Nm statfs
D 10
function call is
.Ud .
E 10
I 10
function first appeared in 4.4BSD.
E 10
E 5
E 4
E 1
