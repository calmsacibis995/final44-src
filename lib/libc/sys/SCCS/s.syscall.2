h61144
s 00002/00002/00048
d D 8.1 93/06/16 19:54:42 bostic 12 11
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00009/00015/00041
d D 6.7 93/06/16 16:11:31 mckusick 11 9
c well, the name is back to syscall
e
s 00002/00002/00054
d R 8.1 93/06/16 11:12:16 bostic 10 9
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00015/00009/00041
d D 6.6 93/06/16 11:00:24 mckusick 9 8
c update to reflect history of syscall.2
e
s 00016/00011/00034
d D 6.5 93/06/16 10:37:25 mckusick 8 6
c document _syscall
e
s 00002/00002/00043
d R 8.1 93/06/04 13:20:30 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00002/00002/00043
d D 6.4 93/02/12 15:04:38 bostic 6 5
c include file typo
e
s 00034/00034/00011
d D 6.3 91/03/10 23:41:17 cael 5 4
c man page macro and text revisions (-mdoc version 3)
e
s 00005/00000/00040
d D 6.2 86/04/16 18:41:36 mckusick 4 3
c add declaration of <syscall.h>
e
s 00001/00001/00039
d D 6.1 85/05/09 16:42:43 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00002/00033/00038
d D 5.1 85/05/09 16:42:36 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00071/00000/00000
d D 4.1 85/05/09 16:42:29 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 12
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 12
I 12
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 12
E 5
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
.\" %sccs.include.redist.man%
E 5
.\"
D 2
.TH SYSCALL 2 
E 2
I 2
D 3
.TH SYSCALL 2 "12 February 1983"
E 3
I 3
D 5
.TH SYSCALL 2 "%Q%"
E 3
E 2
.UC 4
.SH NAME
syscall \- indirect system call
.SH SYNOPSIS
.nf
I 4
.ft B
#include <syscall.h>
.PP
E 4
D 2
.BR "syscall(number, r0, r1, arg ...)" \  \  (PDP-11)
E 2
.BR "syscall(number, arg, ...)" \  \  (VAX-11)
.fi
.SH DESCRIPTION
.I Syscall
E 5
I 5
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
D 9
.Dt SYSCALL 2
E 9
I 9
D 11
.Dt INDIR 2
E 11
I 11
.Dt SYSCALL 2
E 11
E 9
.Os BSD 4
.Sh NAME
D 8
.Nm syscall
E 8
I 8
D 9
.Nm syscall ,
.Nm _syscall
E 9
I 9
D 11
.Nm indir ,
.Nm __indir
E 11
I 11
.Nm syscall ,
.Nm __syscall
E 11
E 9
E 8
.Nd indirect system call
.Sh SYNOPSIS
D 6
.Fd #include <unistd.h>
E 6
.Fd #include <sys/syscall.h>
I 6
.Fd #include <unistd.h>
E 6
.Ft int
D 9
.Fn syscall "int number" "..."
E 9
I 9
D 11
.Fn indir "int number" "..."
E 11
I 11
.Fn syscall "int number" "..."
E 11
E 9
I 8
.Ft int
D 9
.Fn _syscall "quad_t number" "..."
E 9
I 9
D 11
.Fn __indir "quad_t number" "..."
E 11
I 11
.Fn __syscall "quad_t number" "..."
E 11
E 9
E 8
.Sh DESCRIPTION
D 9
.Fn Syscall
E 9
I 9
D 11
.Fn Indir
E 11
I 11
.Fn Syscall
E 11
E 9
E 5
performs the system call whose assembly language
interface has the specified
D 5
.I number,
register arguments
.I r0
and
.I r1
D 2
(on the PDP-11, regardless of whether the entry point really
uses them) and further arguments
E 2
I 2
and further arguments
E 2
.IR arg .
E 5
I 5
.Fa number
with the specified arguments.
E 5
I 4
Symbolic constants for system calls can be found in the header file
D 5
.I <syscall.h>.
E 4
.PP
E 5
I 5
D 6
.Ao Pa syscall.h Ac .
E 6
I 6
.Ao Pa sys/syscall.h Ac .
E 6
D 8
.Pp
E 8
I 8
The
D 9
.Nm _syscall
E 9
I 9
D 11
.Nm __indir
E 11
I 11
.Nm __syscall
E 11
E 9
form should be used when one or more of the parameters is a
64-bit argument to ensure that argument alignment is correct.
This system call is useful for testing new system calls that
do not have entries in the C library.
E 8
.Sh RETURN VALUES
E 5
D 8
The r0 value of the system call is returned.
D 5
.SH DIAGNOSTICS
E 5
When the C-bit is set,
D 5
.I syscall
returns \-1 and sets the
E 5
I 5
.Fn syscall
returns -1 and sets the
E 5
external variable 
D 5
.I errno
E 5
I 5
.Va errno
E 5
(see
D 5
.IR intro (2)).
.SH BUGS
E 5
I 5
.Xr intro 2 ) .
E 8
I 8
The return values are defined by the system call being invoked.
In general, a 0 return value indicates success.
A -1 return value indicates an error,
and an error code is stored in
.Va errno .
E 8
.Sh BUGS
E 5
D 8
There is no way to simulate system calls
E 8
I 8
There is no way to simulate system calls that have multiple return values
E 8
such as
D 5
.IR pipe (2),
which return values in register r1.
E 5
I 5
.Xr pipe 2 .
.Sh HISTORY
The
D 9
.Nm
E 9
I 9
D 11
.Nm indir
E 11
I 11
.Nm syscall
E 11
E 9
function call appeared in
D 9
.Bx 4.0 .
E 9
I 9
D 11
.Bx 4.0 
under the name
.Nm syscall .
Due to an oversight its name changed to
.Nm indir
in
.Bx 4.4 .
E 11
I 11
.Bx 4.0 .
E 11
E 9
E 5
D 2
.SH "ASSEMBLER (PDP-11)"
(indir = 0.)
.br
.B sys indir; call
.PP
The system call at the location
.I call
is executed.
Execution resumes after the
.I indir
call.
.PP
On the PDP-11, the main purpose of
.I indir
is to allow a program to
store arguments in system calls and execute them
out of line in the data segment.
This preserves the purity of the text segment.
.PP
If
.I indir
is executed indirectly,
it is a no-op.
If the instruction at the indirect
location is not a system call,
.I indir
returns error code EINVAL;
see
.IR intro (2).
E 2
E 1
