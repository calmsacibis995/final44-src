h48217
s 00002/00002/00084
d D 8.1 93/06/04 13:20:42 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00000/00085
d D 6.4 92/07/27 13:43:22 bostic 6 5
c add symlink(7)
e
s 00059/00058/00026
d D 6.3 91/03/10 23:41:26 cael 5 4
c man page macro and text revisions (-mdoc version 3)
e
s 00019/00009/00065
d D 6.2 85/05/22 18:31:11 mckusick 4 3
c update the error return codes to reflect those in 4.3BSD
e
s 00001/00001/00073
d D 6.1 85/05/09 16:43:07 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00056/00024/00018
d D 5.1 85/05/09 16:42:57 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00042/00000/00000
d D 4.1 85/05/09 16:42:50 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 7
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
E 5
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
.\" %sccs.include.redist.man%
E 5
.\"
D 2
.TH UNLINK 2 
E 2
I 2
D 3
.TH UNLINK 2 "2 July 1983"
E 3
I 3
D 5
.TH UNLINK 2 "%Q%"
E 3
E 2
.UC 4
.SH NAME
unlink \- remove directory entry
.SH SYNOPSIS
.nf
D 2
.B unlink(name)
.B char *name;
E 2
I 2
.ft B
unlink(path)
char *path;
E 2
.fi
I 2
.ft R
E 2
.SH DESCRIPTION
D 2
.I Name
points to a null-terminated string.
E 2
.I Unlink
D 2
removes the entry for the file pointed to by
.I name
E 2
I 2
removes the entry for the file
.I path
E 2
from its directory.
If this entry was the last link to the file,
E 5
I 5
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt UNLINK 2
.Os BSD 4
.Sh NAME
.Nm unlink
.Nd remove directory entry
.Sh SYNOPSIS
.Fd #include <unistd.h>
.Ft int
.Fn unlink "const char *path"
.Sh DESCRIPTION
The
.Fn unlink
function
removes the link named by
.Fa path
from its directory and decrements the link count of the
file which was referenced by the link.
If that decrement reduces the link count of the file
to zero,
E 5
D 2
the contents of the file are freed and the file is destroyed.
E 2
I 2
and no process has the file open, then
all resources associated with the file are reclaimed.
E 2
D 5
If, however, the file was open in any process, the actual
D 2
destruction is delayed until it is closed, even though
the directory entry has disappeared.
E 2
I 2
resource reclamation is delayed until it is closed,
even though the directory entry has disappeared.
.SH "RETURN VALUE
E 5
I 5
If one or more process have the file open when the last link is removed,
the link is removed, but the removal of the file is delayed until
all references to it have been closed.
.Sh RETURN VALUES
E 5
Upon successful completion, a value of 0 is returned.
D 5
Otherwise, a value of \-1 is returned and
.I errno
E 5
I 5
Otherwise, a value of -1 is returned and
.Va errno
E 5
is set to indicate the error.
D 5
.SH "ERRORS
The \fIunlink\fP succeeds unless:
.TP 15
D 4
[EPERM]
The path contains a character with the high-order bit set.
.TP 15
[ENOENT]
The path name is too long.
.TP 15
E 4
[ENOTDIR]
E 5
I 5
.Sh ERRORS
The
.Fn unlink
succeeds unless:
.Bl -tag -width ENAMETOOLONGAA
.It Bq Er ENOTDIR
E 5
A component of the path prefix is not a directory.
D 5
.TP 15
I 4
[EINVAL]
E 5
I 5
.It Bq Er EINVAL
E 5
The pathname contains a character with the high-order bit set.
D 5
.TP 15
[ENAMETOOLONG]
E 5
I 5
.It Bq Er ENAMETOOLONG
E 5
A component of a pathname exceeded 255 characters,
or an entire path name exceeded 1023 characters.
D 5
.TP 15
E 4
[ENOENT]
E 5
I 5
.It Bq Er ENOENT
E 5
The named file does not exist.
D 5
.TP 15
[EACCES]
E 5
I 5
.It Bq Er EACCES
E 5
Search permission is denied for a component of the path prefix.
D 5
.TP 15
[EACCES]
E 5
I 5
.It Bq Er EACCES
E 5
Write permission is denied on the directory containing the link
to be removed.
D 5
.TP 15
I 4
[ELOOP]
E 5
I 5
.It Bq Er ELOOP
E 5
Too many symbolic links were encountered in translating the pathname.
D 5
.TP 15
E 4
[EPERM]
E 5
I 5
.It Bq Er EPERM
E 5
The named file is a directory and the effective user ID
of the process is not the super-user.
D 5
.TP 15
I 4
[EPERM]
E 5
I 5
.It Bq Er EPERM
E 5
The directory containing the file is marked sticky,
and neither the containing directory nor the file to be removed
are owned by the effective user ID.
D 5
.TP 15
E 4
[EBUSY]
E 5
I 5
.It Bq Er EBUSY
E 5
The entry to be unlinked is the mount point for a
mounted file system.
D 5
.TP 15
I 4
[EIO]
E 5
I 5
.It Bq Er EIO
E 5
An I/O error occurred while deleting the directory entry
or deallocating the inode.
D 5
.TP 15
E 4
[EROFS]
E 5
I 5
.It Bq Er EROFS
E 5
The named file resides on a read-only file system.
D 5
.TP 15
[EFAULT]
.I Path
E 5
I 5
.It Bq Er EFAULT
.Fa Path
E 5
points outside the process's allocated address space.
D 4
.TP 15
[ELOOP]
Too many symbolic links were encountered in translating the pathname.
E 4
E 2
D 5
.SH "SEE ALSO"
D 2
rm(1), link(2)
.SH DIAGNOSTICS
Zero is normally returned;
\-1 indicates that the file does not
exist, that its directory cannot be written,
or that the file contains pure procedure text
that is currently in use.
Write permission is not required on the file itself.
It is also illegal to unlink a directory
(except for the super-user).
.SH "ASSEMBLER (PDP-11)"
(unlink = 10.)
.br
.B sys  unlink; name
E 2
I 2
close(2), link(2), rmdir(2)
E 5
I 5
.El
.Sh SEE ALSO
.Xr close 2 ,
.Xr link 2 ,
.Xr rmdir 2
I 6
.Xr symlink 7
E 6
.Sh HISTORY
An
.Nm
function call appeared in Version 6 AT&T UNIX.
E 5
E 2
E 1
