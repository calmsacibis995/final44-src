h06573
s 00002/00002/00113
d D 8.1 93/06/04 16:22:24 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00071/00059/00044
d D 6.5 91/04/19 14:30:46 cael 7 6
c macro and text revision (-mdoc version 3)
e
s 00003/00001/00100
d D 6.4 89/05/17 21:53:32 bostic 6 5
c move to compatibility library
e
s 00001/00006/00100
d D 6.3 86/05/12 20:24:36 karels 5 4
c it's already gone
e
s 00003/00000/00103
d D 6.2 86/03/14 04:15:17 donn 4 3
c documented include file
e
s 00001/00001/00102
d D 6.1 85/05/09 18:36:54 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00005/00001/00098
d D 5.1 85/05/09 18:36:05 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00099/00000/00000
d D 4.1 85/05/09 18:35:32 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 7
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 7
I 7
D 8
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 8
I 8
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 8
E 7
.\"
D 7
.\"	%W% (Berkeley) %G%
E 7
I 7
.\" %sccs.include.redist.man%
E 7
.\"
D 2
.TH VTIMES 2V
E 2
I 2
D 3
.TH VTIMES 3C "13 June 1983"
E 3
I 3
D 7
.TH VTIMES 3C "%Q%"
E 3
E 2
.UC 4
.SH NAME
vtimes \- get information about resource utilization
.SH SYNOPSIS
.nf
I 4
.PP
.B "#include <sys/vtimes.h>"
.PP
E 4
.B "vtimes(par_vm, ch_vm)"
.B "struct vtimes *par_vm, *ch_vm;"
.fi
.SH DESCRIPTION
I 2
.ft B
E 7
I 7
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt VTIMES 3
.Os BSD 4
.Sh NAME
.Nm vtimes
.Nd get information about resource utilization
.Sh SYNOPSIS
.Fd #include <sys/vtimes.h>
.Fn vtimes "struct vtimes *par_vm" "struct vtimes *ch_vm"
.Sh DESCRIPTION
.Bf -symbolic
E 7
D 6
This facility is superseded by getrusage(2).
E 6
I 6
This interface is obsoleted by getrusage(2).
D 7
.br
E 7
It is available from the compatibility library, libcompat.
E 6
D 7
.ft R
.PP
E 2
.I Vtimes
E 7
I 7
.Ef
.Pp
The
.Fn vtimes
function
E 7
returns accounting information for the current process and for
the terminated child processes of the current
process.  Either
D 7
.I par_vm
E 7
I 7
.Fa par_vm
E 7
or 
D 7
.I ch_vm
E 7
I 7
.Fa ch_vm
E 7
or both may be 0, in which case only the information for the pointers
which are non-zero is returned.
D 7
.PP
E 7
I 7
.Pp
E 7
After the call, each buffer contains information as defined by the
contents of the include file
D 7
.I /usr/include/sys/vtimes.h:
.LP
.nf
E 7
I 7
.Pa /usr/include/sys/vtimes.h :
.Bd -literal -offset indent
E 7
struct vtimes {
D 7
	int	vm_utime;		/* user time (*HZ) */
	int	vm_stime;		/* system time (*HZ) */
E 7
I 7
	int	vm_utime;	/* user time (*HZ) */
	int	vm_stime;	/* system time (*HZ) */
E 7
	/* divide next two by utime+stime to get averages */
D 7
	unsigned vm_idsrss;		/* integral of d+s rss */
	unsigned vm_ixrss;		/* integral of text rss */
	int	vm_maxrss;		/* maximum rss */
	int	vm_majflt;		/* major page faults */
	int	vm_minflt;		/* minor page faults */
	int	vm_nswap;		/* number of swaps */
	int	vm_inblk;		/* block reads */
	int	vm_oublk;		/* block writes */
E 7
I 7
	unsigned vm_idsrss;	/* integral of d+s rss */
	unsigned vm_ixrss;	/* integral of text rss */
	int	vm_maxrss;	/* maximum rss */
	int	vm_majflt;	/* major page faults */
	int	vm_minflt;	/* minor page faults */
	int	vm_nswap;	/* number of swaps */
	int	vm_inblk;	/* block reads */
	int	vm_oublk;	/* block writes */
E 7
};
D 7
.fi
.PP
E 7
I 7
.Ed
.Pp
E 7
The
D 7
.I vm_utime
E 7
I 7
.Fa vm_utime
E 7
and
D 7
.I vm_stime
E 7
I 7
.Fa vm_stime
E 7
fields give the user and system
time respectively in 60ths of a second (or 50ths if that
is the frequency of wall current in your locality.) The
D 7
.I vm_idrss
E 7
I 7
.Fa vm_idrss
E 7
and
D 7
.I vm_ixrss
E 7
I 7
.Fa vm_ixrss
E 7
measure memory usage.  They are computed by integrating the number of
memory pages in use each
D 7
over cpu time.  They are reported as though computed
E 7
I 7
over
.Tn CPU
time.  They are reported as though computed
E 7
discretely, adding the current memory usage (in 512 byte
pages) each time the clock ticks.  If a process used 5 core
pages over 1 cpu-second for its data and stack, then
D 7
.I vm_idsrss
E 7
I 7
.Fa vm_idsrss
E 7
would have the value 5*60, where
D 7
.I vm_utime+vm_stime
E 7
I 7
.Fa vm_utime+vm_stime
E 7
would be the 60.  
D 7
.I Vm_idsrss
E 7
I 7
The
.Fa Vm_idsrss
argument
E 7
integrates data and stack segment
usage, while
D 7
.I vm_ixrss
E 7
I 7
.Fa vm_ixrss
E 7
integrates text segment usage.
D 7
.I Vm_maxrss
E 7
I 7
The
.Fa Vm_maxrss
function
E 7
reports the maximum instantaneous sum of the
text+data+stack core-resident page count.
D 7
.PP
E 7
I 7
.Pp
E 7
The 
D 7
.I vm_majflt
E 7
I 7
.Fa vm_majflt
E 7
field gives the number of page faults which
resulted in disk activity; the
D 7
.I vm_minflt
E 7
I 7
.Fa vm_minflt
E 7
field gives the
number of page faults incurred in simulation of reference
bits;
D 7
.I vm_nswap
E 7
I 7
.Fa vm_nswap
E 7
is the number of swaps which occurred.  The
number of file system input/output events are reported in
D 7
.I vm_inblk
E 7
I 7
.Fa vm_inblk
E 7
and
D 7
.I vm_oublk
E 7
I 7
.Fa vm_oublk
E 7
These numbers account only for real
D 7
i/o; data supplied by the caching mechanism is charged only
E 7
I 7
.Tn I/O ;
data supplied by the caching mechanism is charged only
E 7
to the first process to read or write the data.
D 7
.SH SEE ALSO
D 5
time(2), wait3(2)
.SH BUGS
This call is peculiar to this version of UNIX.
The options and specifications of this system call are subject to change.
It may be extended to include additional information
in future versions of the system.
E 5
I 5
time(2), wait3(2), getrusage(2)
E 7
I 7
.Sh SEE ALSO
.Xr time 2 ,
.Xr wait3 2 ,
.Xr getrusage 2
.Sh HISTORY
The
.Fn vlimit
function appeared in 
.Bx 4.2 .
E 7
E 5
E 1
