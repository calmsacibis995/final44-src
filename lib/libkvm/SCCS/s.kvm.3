h49201
s 00002/00002/00073
d D 8.1 93/06/04 16:53:12 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00000/00074
d D 5.4 93/04/27 15:23:26 bostic 4 3
c add kvm_getloadavg(3)
e
s 00004/00000/00070
d D 5.3 92/05/26 14:37:28 bostic 3 2
c add LBL credit line
e
s 00023/00051/00047
d D 5.2 92/04/29 11:41:00 bostic 2 1
c update from LBL (Chris, Craig and Steve)
e
s 00098/00000/00000
d D 5.1 92/04/01 18:29:00 mckusick 1 0
c from Steve McCanne
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1992 The Regents of the University of California.
.\" All rights reserved.
E 5
I 5
.\" Copyright (c) 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 5
.\"
I 3
.\" This code is derived from software developed by the Computer Systems
.\" Engineering group at Lawrence Berkeley Laboratory under DARPA contract
.\" BG 91-66 and contributed to Berkeley.
.\"
E 3
.\" %sccs.include.redist.man%
.\"
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt KVM 3
.Os
.Sh NAME
D 2
.Nm kvm_open ,
.Nm kvm_openfiles ,
.Nm kvm_close ,
.Nm kvm_read ,
.Nm kvm_write ,
.Nm kvm_nlist ,
.Nm kvm_getprocs ,
.Nm kvm_getargv ,
.Nm kvm_getenvv ,
.Nm kvm_geterr
E 2
I 2
.Nm kvm
E 2
.Nd kernel memory interface
D 2
.Sh SYNOPSIS
.Fd #include <kvm.h>
.br
.Ft kvm_t *
.Fn kvm_open "const char *execfile" "const char *corefile" "char *swapfile" "int flag" "const char *errstr"
.Ft void
.Fn kvm_close "kvm_t *kd"
.Ft ssize_t
.Fn kvm_read "const kvm_t *kd" "u_long addr" "char *buf" "size_t nbytes"
.Ft ssize_t
.Fn kvm_write "const kvm_t *kd" "u_long addr" "char *buf" "size_t nbytes"
.Ft int
.Fn kvm_nlist "kvm_t *kd" "struct nlist *nl"
.Ft struct kinfo_proc *
.Fn kvm_getprocs "kvm_t *kd" int int "int *"
.Ft char **
.Fn kvm_getargv "kvm_t *kd" "const struct proc *p" "int strspc"
.Ft void
.Fn kvm_geterr "const kvm_t *kd"
E 2
.Sh DESCRIPTION
D 2
The 
E 2
I 2
The
E 2
.Xr kvm 3
D 2
library provides a uniform interface for accessing kernel virtual mememory
E 2
I 2
library provides a uniform interface for accessing kernel virtual memory
E 2
images, including live systems and crashdumps.
Access to live systems is via
/dev/mem
while crashdumps can be examined via the core file generated by
.Xr savecore 8 .
The interface behaves identically in both cases.
D 2
Memory can be read and written, kernel symbol addresses can be 
E 2
I 2
Memory can be read and written, kernel symbol addresses can be
E 2
looked up efficiently, and information about user processes can
be gathered.
.Pp
.Fn kvm_open
is first called to obtain a descriptor for all subsequent calls.
.Sh COMPATIBILITY
The kvm interface was first introduced in SunOS.  A considerable
number of programs have been developed that use this interface,
making backward compatibility highly desirable.
D 2
In most respects, the Sun kvm inteface is consistent and clean.
E 2
I 2
In most respects, the Sun kvm interface is consistent and clean.
E 2
Accordingly, the generic portion of the interface (i.e.,
D 2
.Fn kvm_open,
.Fn kvm_close,
.Fn kvm_read,
.Fn kvm_write,
E 2
I 2
.Fn kvm_open ,
.Fn kvm_close ,
.Fn kvm_read ,
.Fn kvm_write ,
E 2
and
D 2
.Fn kvm_nlist
.) has been incorportated into the BSD interface.  Indeed, many kvm
applications (i.e., debuggers and statistical monitors) use only 
E 2
I 2
.Fn kvm_nlist )
has been incorporated into the BSD interface.  Indeed, many kvm
applications (i.e., debuggers and statistical monitors) use only
E 2
this subset of the interface.
.Pp
The process interface was not kept.  This is not a portability
D 2
issue since any code that manipulates processes is inherenly
E 2
I 2
issue since any code that manipulates processes is inherently
E 2
machine dependent.
.Pp
Finally, the Sun kvm error reporting semantics are poorly defined.
The library can be configured either to print errors to stderr automatically,
or to print no error messages at all.
In the latter case, the nature of the error cannot be determined.
To overcome this, the BSD interface includes a
routine,
.Xr kvm_geterr 3 ,
to return (not print out) the error message
corresponding to the most recent error condition on the
given descriptor.
.Sh SEE ALSO
D 2
.Xr kvm_open 3,
.Xr kvm_openfiles 3,
.Xr kvm_close 3,
.Xr kvm_read 3,
.Xr kvm_write 3,
.Xr kvm_nlist 3,
.Xr kvm_getprocs 3,
.Xr kvm_getargv 3,
.Xr kvm_getenvv 3,
.Xr kvm_geterr 3
E 2
I 2
.Xr kvm_close 3 ,
.Xr kvm_getargv 3 ,
.Xr kvm_getenvv 3 ,
.Xr kvm_geterr 3 ,
I 4
.Xr kvm_getloadavg 3 ,
E 4
.Xr kvm_getprocs 3 ,
.Xr kvm_nlist 3 ,
.Xr kvm_open 3 ,
.Xr kvm_openfiles 3 ,
.Xr kvm_read 3 ,
.Xr kvm_write 3
E 2
E 1
