h54963
s 00002/00002/00054
d D 8.1 93/06/04 17:01:03 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00005/00007/00051
d D 6.4 91/04/20 14:20:21 bostic 6 5
c delete last vestige of AT&T wording
e
s 00051/00030/00007
d D 6.3 91/04/19 14:50:52 cael 5 4
c macro and text revision (-mdoc version 3)
e
s 00001/00001/00036
d D 6.2 86/05/12 17:10:39 karels 4 3
c intro(3M) => math(3M), move see also's to end
e
s 00008/00001/00029
d D 6.1 85/09/11 18:53:12 mckusick 3 2
c new from Kahan
e
s 00011/00022/00019
d D 1.2 85/08/21 14:56:49 miriam 2 1
c Revision by Prof. Kahan.
e
s 00041/00000/00000
d D 1.1 85/05/24 11:55:05 miriam 1 0
c date and time created 85/05/24 11:55:05 by miriam
e
u
U
t
From Prof. Kahan at UC at Berkeley
T
I 1
D 2
.EQ
delim $$
.EN
.TH ERF 3M  "9 May 1985"
E 2
I 2
D 3
.TH ERF 3M  "4 August 1985"
E 3
I 3
D 5
.\" Copyright (c) 1985 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 7
.\" Copyright (c) 1985, 1991 Regents of the University of California.
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
E 5
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
D 6
.\" %sccs.include.redist.man%
E 6
I 6
.\" %sccs.include.redist.roff%
E 6
E 5
.\"
D 5
.TH ERF 3M  "%Q%"
.UC 6
E 3
E 2
.SH NAME
erf, erfc \- error functions
.SH SYNOPSIS
.nf
.B #include <math.h>
.PP
.B double erf(x)
.B double x;
.PP
.B double erfc(x)
.B double x;
.fi
.SH DESCRIPTION
D 2
.I Erf(x)
returns the error function of 
.I x.
E 2
I 2
Erf\|(x) returns the error function of x; where
E 5
I 5
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt ERF 3
.Os BSD 4.3
.Sh NAME
.Nm erf ,
.Nm erfc
.Nd error function operators
.Sh SYNOPSIS
.Fd #include <math.h>
.Ft double
.Fn erf "double x"
.Ft double
.Fn erfc "double x"
.Sh DESCRIPTION
These functions calculate the error function of
.Fa x .
.Pp
The
.Fn erf
calculates the error function of x; where
.Bd -filled -offset indent
E 5
.if n \{\
E 2
D 5
.PP
E 5
D 2
.I Erfc(x)
returns
.I 1.0\-erf(x).
E 2
I 2
erf(x) = 2/sqrt(pi)\(**\|integral from 0 to x of exp(\-t\(**t) dt. \}
.if t \{\
erf\|(x) := 
(2/\(sr\(*p)\|\(is\d\s8\z0\s10\u\u\s8x\s10\d\|exp(\-t\u\s82\s10\d)\|dt. \}
E 2
D 5
.PP
D 2
.I Erf(x)
is defined by
${2 over sqrt {pi}} int from 0 to x e sup {-t sup 2} dt$.
E 2
I 2
Erfc\|(x) returns 1.0\-erf\|(x).
E 2
.PP
D 2
The entry for
.I erfc
is provided because of the extreme loss of relative accuracy if
.I erf(x)
is called for large
.I x
E 2
I 2
The entry for erfc is provided because of the extreme loss
of relative accuracy if erf\|(x) is called for large x
E 2
and the result subtracted from 1.
D 2
(e.g. for
.I x
= 10, 12 places are lost).
E 2
I 2
(e.g. for x = 10, 12 places are lost).
E 2
.SH SEE ALSO
D 4
intro(3M)
E 4
I 4
math(3M)
E 5
I 5
.Ed
.Pp
The
.Fn erfc
function calculates the complementary error function of
.Fa x ;
that is
.Fn erfc
D 6
subtracts the result of
the error function
E 6
I 6
subtracts the result of the error function
E 6
.Fn erf x
from 1.0.
This is useful, since for large
D 6
.Fa x ,
such as x = 10, 12 places disappear.
E 6
I 6
.Fa x
places disappear.
E 6
.Sh SEE ALSO
.Xr math 3
.Sh HISTORY
The
.Fn erf
and
.Fn erfc
D 6
functions
appeared in
E 6
I 6
functions appeared in
E 6
.Bx 4.3 .
E 5
E 4
E 1
