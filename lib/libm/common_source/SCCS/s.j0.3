h52375
s 00002/00003/00098
d D 8.2 94/04/19 07:14:26 bostic 11 10
c spell
e
s 00002/00002/00099
d D 8.1 93/06/04 17:02:49 bostic 10 9
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00099/00040/00002
d D 6.7 91/04/19 14:50:42 cael 9 8
c macro and text revision (-mdoc version 3)
e
s 00002/00002/00040
d D 6.6 86/05/12 17:11:39 karels 8 7
c intro(3M) => math(3M), move see also's to end
e
s 00008/00001/00034
d D 6.5 85/09/11 18:52:38 mckusick 7 6
c new from Kahan
e
s 00005/00010/00030
d D 6.4 85/08/21 15:20:27 miriam 6 5
c Revision by Prof. Kahan.
e
s 00002/00000/00038
d D 6.3 85/06/03 18:10:43 miriam 5 4
c add declaration on n to be an integer
e
s 00003/00004/00035
d D 6.2 85/05/24 12:08:50 miriam 4 3
c From Prof. Kahan
e
s 00001/00001/00038
d D 6.1 85/05/15 15:01:51 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00002/00003/00037
d D 5.1 85/05/15 15:01:44 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00040/00000/00000
d D 4.1 85/05/15 15:01:39 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 4
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH J0 3M 
E 2
I 2
D 3
.TH J0 3M  "19 January 1983"
E 3
I 3
.TH J0 3M  "%Q%"
E 3
E 2
.AT 3
E 4
I 4
D 7
.TH J0 3M  "19 January 1983"
E 7
I 7
D 9
.\" Copyright (c) 1985 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 9
I 9
D 10
.\" Copyright (c) 1985, 1991 Regents of the University of California.
.\" All rights reserved.
E 10
I 10
.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 10
E 9
.\"
D 9
.\"	%W% (Berkeley) %G%
E 9
I 9
.\" %sccs.include.redist.man%
E 9
.\"
D 9
.TH J0 3M  "%Q%"
.UC 4
E 7
E 4
.SH NAME
j0, j1, jn, y0, y1, yn \- bessel functions
.SH SYNOPSIS
.nf
.B #include <math.h>
.PP
.B double j0(x)
.B double x;
.PP
.B double j1(x)
.B double x;
.PP
D 6
.B double jn(n, x)
E 6
I 6
.B double jn(n,x)
E 6
I 5
.B int n;
E 5
.B double x;
.PP
.B double y0(x)
.B double x;
.PP
.B double y1(x)
.B double x;
.PP
D 6
.B double yn(n, x)
E 6
I 6
.B double yn(n,x)
E 6
I 5
.B int n;
E 5
.B double x;
.fi
.SH DESCRIPTION
These functions calculate Bessel functions of the first
and second kinds for real arguments and integer orders.
I 4
D 8
.SH SEE ALSO
D 6
intro(3M)
E 6
I 6
intro(3M), infnan(3M)
E 8
E 6
E 4
.SH DIAGNOSTICS
D 6
Negative arguments cause
.I y0, y1,
and
.I yn
D 2
to return a huge negative value
and set
E 2
I 2
to return a huge negative value and set
E 2
.I errno
to EDOM.
E 6
I 6
On a VAX, negative arguments cause y0, y1 and yn
to return the reserved operand and set \fIerrno\fR to EDOM.
I 8
.SH SEE ALSO
math(3M), infnan(3M)
E 9
I 9
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt J0 3
.Os BSD 4
.Sh NAME
.Nm j0 ,
.Nm j1 ,
.Nm jn ,
.Nm y0 ,
.Nm y1 ,
.Nm yn
.Nd bessel functions of first and second kind
.Sh SYNOPSIS
.Fd #include <math.h>
.Ft double
.Fn j0 "double x"
.Ft double
.Fn j1 "double x"
.Ft double
.Fn jn "int n" "double x"
.Ft double
.Fn y0 "double x"
.Ft double
.Fn y1 "double x"
.Ft double
.Fn yn "int n" "double x"
.Sh DESCRIPTION
The functions
.Fn j0
and
.Fn j1
compute the
.Em Bessel function of the first kind of the order
0 and the
.Em order
1, respectively,
for the
real value
.Fa x ;
the function
.Fn jn
computes the
.Em Bessel function of the first kind of the integer order
.Fa n
for the real value
.Fa x .
.Pp
The functions
.Fn y0
and
.Fn y1
compute the linearly independent
.Em Bessel function of the second kind of the order
0 and the
.Em order
1, respectively,
D 11
for the
postive
E 11
I 11
for the positive
E 11
.Em integer
value
.Fa x
(expressed as a double);
the function
.Fn yn
computes the
.Em Bessel function of the second kind for the integer order
.Fa n
D 11
for the postive 
E 11
I 11
for the positive 
E 11
.Em integer
value
.Fa x
(expressed as a double).
.Sh RETURN VALUES
If these functions are successful,
the computed value is returned. On the
.Tn VAX
and
.Tn Tahoe
architectures,
a negative
.Fa x
value
results in an error; the global
variable
.Va errno
is set to
.Er EDOM
and a reserve operand fault is generated.
.Sh SEE ALSO
.Xr math 3 ,
.Xr infnan 3
.Sh HISTORY
A set of these functions
function appeared in
.At v7 .
E 9
E 8
E 6
E 1
