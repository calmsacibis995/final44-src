h29708
s 00002/00002/00111
d D 8.1 93/06/04 18:50:44 bostic 12 11
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00000/00001/00113
d D 6.9 92/07/28 17:07:24 bostic 11 10
c typo
e
s 00064/00043/00050
d D 6.8 91/05/04 15:38:05 cael 10 9
c mdoc version three/bsd copyright
e
s 00001/00011/00092
d D 6.7 90/06/23 18:00:18 trent 9 8
c new copyright notice
e
s 00005/00005/00098
d D 6.6 90/06/23 16:30:57 trent 8 7
c changed /sbin/getty to /usr/libexec/getty
e
s 00059/00042/00044
d D 6.5 89/09/19 11:28:36 bostic 7 6
c move field explanations from getttyent.3 here; reword parts, break
c up into smaller paragraphs, add Berkeley specific copyright notice.
e
s 00016/00015/00070
d D 6.4 86/05/20 09:36:02 karels 6 5
c bogosity is fixed
e
s 00004/00003/00081
d D 6.3 86/05/17 17:18:31 lepreau 5 4
c only some fields can be quoted.  what a botch
e
s 00022/00010/00062
d D 6.2 86/05/17 16:39:54 lepreau 4 3
c ungarble; enumerate flag and window strings
e
s 00055/00022/00017
d D 6.1 85/05/15 18:16:06 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00019/00019/00020
d D 5.1 85/05/15 18:15:58 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00039/00000/00000
d D 4.1 85/05/15 18:15:52 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 7
D 10
.\" Copyright (c) 1985 The Regents of the University of California.
E 10
I 10
D 12
.\" Copyright (c) 1985, 1991 The Regents of the University of California.
E 10
.\" All rights reserved.
E 12
I 12
.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 12
.\"
D 9
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 9
I 9
D 10
.\" %sccs.include.redist.man%
E 10
I 10
.\" %sccs.include.redist.roff%
E 10
E 9
.\"
E 7
I 1
D 10
.\"	%W% (Berkeley) %G%
E 10
I 10
.\"     %W% (Berkeley) %G%
E 10
.\"
D 2
.TH TTYS 5 
E 2
I 2
D 3
.TH TTYS 5  "18 July 1983"
E 3
I 3
D 10
.TH TTYS 5  "%Q%"
E 3
E 2
.AT 3
.SH NAME
ttys \- terminal initialization data
.SH DESCRIPTION
The
.I ttys
D 3
file is read by the
.I init
D 2
program and specifies
which terminal special files are to have
a process created for them which will allow people to
log in.
It contains one line per special file.
E 2
I 2
program and specifies which terminal special files are to have
a process created for them so that people can log in.
E 3
I 3
file contains information that is used by various routines to initialize
E 10
I 10
.Dd %Q%
.Dt TTYS 5
.Os
.Sh NAME
.Nm ttys
.Nd terminal initialization information
.Sh DESCRIPTION
The file
.Nm ttys
contains information that is used by various routines to initialize
E 10
D 7
and control the use of terminal special files. This information is read
with the
E 7
I 7
and control the use of terminal special files.
This information is read with the
E 7
D 10
.IR getttyent (3)
E 10
I 10
.Xr getttyent 3
E 10
library routines.
I 10
D 11
The
E 11
E 10
E 3
There is one line in the 
D 10
.I ttys
file per special file.
E 10
I 10
.Nm ttys
file per special device file.
E 10
E 2
D 3
.PP
D 2
The first character of a line is either `0' or `1';
the former causes the line to be ignored,
the latter causes it to be effective.
The second character is used as an argument to
E 2
I 2
The first character of a line in the 
.I ttys
file is either `0' or `1'.  If the first character on the line is a `0', the 
.I init
program ignores that line.  If the first character on the line is a `1', the
.I init
program creates a login process for that line.
The second character on each line is used as an argument to
E 3
I 3
Fields are separated by tabs and/or spaces.
D 4
A field of more than one word may be enclosed by quotes.
E 4
I 4
D 5
A field of more than one word should be enclosed in double quotes.
E 5
I 5
D 7
Some fields may contain more than one word and should be enclosed
in double quotes.
E 5
E 4
Blank lines and comments can appear anywhere in the file; comments
D 6
are delimited by `#' and new line. Unspecified fields default to
the empty string or zero as appropriate.
E 6
I 6
are delimited by `#' and new line. Unspecified fields default to null.
E 6
The first field is the terminal's entry in the device directory, /dev.
E 7
I 7
Fields comprised of more than one word should be enclosed in double
quotes (``"'').
Blank lines and comments may appear anywhere in the file; comments
are delimited by hash marks (``#'') and new lines.
Any unspecified fields will default to null.
D 10
.PP
The first field is the terminal's entry in the device directory, ``/dev''.
.PP
E 10
I 10
.Pp
The first field is the
name of the terminal special file as it is found in
.Pa /dev .
.Pp
E 10
E 7
The second field of the file is the command to execute for the line,
D 10
typically
E 3
E 2
.IR getty (8),
D 2
which performs such tasks as baud-rate recognition,
reading the login name,
E 2
I 2
which performs such tasks as baud-rate recognition, reading the login name,
E 2
and calling
D 3
.I login.
D 2
For normal lines,
the character is `0';
E 2
I 2
For normal lines, the character is `0';
E 2
other characters can be used, for example, with hard-wired terminals
D 2
where speed recognition is unnecessary
or which have special characteristics.
E 2
I 2
where speed recognition is unnecessary or which have special characteristics.
E 2
.RI ( Getty
will have to be fixed in such cases.)
D 2
The remainder of the line is the terminal's entry
in the device directory, /dev.
E 2
I 2
The remainder of the line is the terminal's entry in the device directory, /dev.
E 3
I 3
.IR login (1).
E 10
I 10
usually
.Xr getty 8 ,
which initializes and opens the line, setting the speed, waiting for
a user name and executing the
.Xr login 1
program.
E 10
D 6
It can be, however, any command you wish, for example
E 6
I 6
It can be, however, any desired command, for example
E 6
D 4
the start up for a window system terminal emulator or maintain other
daemon processes.
The third field is the type of terminal normally connected to the
terminal special file as found in the
E 4
I 4
the start up for a window system terminal emulator or some other
D 5
daemon process.
E 5
I 5
daemon process, and can contain multiple words if quoted.
E 5
D 7
The third field is the type of terminal normally connected to that
tty line, as found in the
E 7
I 7
D 10
.PP
E 10
I 10
.Pp
E 10
The third field is the type of terminal usually connected to that
tty line, normally the one found in the
E 7
E 4
D 10
.IR termcap (5)
E 10
I 10
.Xr termcap 5
E 10
data base file.
I 7
D 10
The environmental variable ``TERM'' is initialized with the value by
E 10
I 10
The environment variable
.Dv TERM
is initialized with the value by
E 10
either
D 10
.IR getty (8)
E 10
I 10
.Xr getty 8
E 10
or
D 10
.IR login (1).
.PP
E 10
I 10
.Xr login 1 .
.Pp
E 10
E 7
D 4
The remaining fields are flags to be set in the
E 4
I 4
The remaining fields set flags in the
E 4
D 10
.I ty_status
E 10
I 10
.Fa ty_status
E 10
entry (see
D 10
.IR getttyent (3))
E 10
I 10
.Xr getttyent 3 )
E 10
D 4
or for a window system process indicated by
the "window" keyword that
.IR init(8)
E 4
I 4
or specify a window system process that
D 10
.IR init (8)
E 10
I 10
.Xr init 8
E 10
E 4
will maintain for the terminal line.
I 4
D 7
As flag values,
the strings `on' and `off' specify whether
E 7
I 7
D 10
.PP
E 10
I 10
.Pp
E 10
As flag values, the strings ``on'' and ``off'' specify that
E 7
D 10
.I init
E 10
I 10
.Xr init
E 10
D 7
should execute the command
given in the second field,
while `secure' in addition to `on' allows root to login on
D 5
this line.  Note that these these flag strings should not be quoted.
E 5
I 5
this line.  These flag fields should not be quoted.
E 5
The string `window=' is followed by a quoted command
E 7
I 7
should (should not) execute the command given in the second field,
while ``secure'' (if ``on'' is also specified) allows users with a
uid of 0 to login on
this line.
These flag fields should not be quoted.
D 10
.PP
E 10
I 10
.Pp
E 10
The string ``window='' may be followed by a quoted command
E 7
string which
D 10
.I init
E 10
I 10
.Xr init
E 10
D 6
will execute.
E 6
I 6
D 7
will execute before starting
.IR getty .
E 6
E 4
If the line ends in a comment, the comment is included in the
.I ty_comment
field of the ttyent structure.
.PP
Some examples:
.PP
E 7
I 7
will execute
D 10
.B before
E 10
I 10
.Em before
E 10
starting the command specified by the second field.
D 10
.SH EXAMPLES
E 7
.nf
E 10
I 10
.Sh EXAMPLES
.Bd -literal
E 10
D 6
console "/etc/getty std.1200" vt100 on secure
ttyd0 "/etc/getty d1200" dialup on
ttyh0 "/etc/getty std.9600" hp2621-nl on
D 4
ttyh1 "/etc/getty std.9600" plugboard on
E 4
I 4
ttyh1 "/etc/getty std.9600" plugboard on John's office
E 4
ttyp0 none network
ttyp1 none network off
ttyv0 "/etc/xpty -L :0" vs100 on window="/etc/X 0"
E 6
I 6
D 7
.ta \w'console\ 'u +\w'"/etc/getty std.9600"\ \ \ 'u +\w'hp2621-nl\ \ \ \ 'u +.7i
console	"/etc/getty std.1200"	vt100	on secure
ttyd0	"/etc/getty d1200"	dialup	on	# 555-1234
ttyh0	"/etc/getty std.9600"	hp2621-nl	on	# 254MC
ttyh1	"/etc/getty std.9600"	plugboard	on	# John's office
E 7
I 7
# root login on console at 1200 baud
D 8
console	"/sbin/getty std.1200"	vt100	on secure
E 8
I 8
console	"/usr/libexec/getty std.1200"	vt100	on secure
E 8
# dialup at 1200 baud, no root logins
D 8
ttyd0	"/sbin/getty d1200"		dialup	on		# 555-1234
E 8
I 8
ttyd0	"/usr/libexec/getty d1200"	dialup	on	# 555-1234
E 8
# Mike's terminal: hp2621
D 8
ttyh0	"/sbin/getty std.9600"	hp2621-nl	on		# 457 Evans
E 8
I 8
ttyh0	"/usr/libexec/getty std.9600"	hp2621-nl	on	# 457 Evans
E 8
# John's terminal: vt100
D 8
ttyh1	"/sbin/getty std.9600"	vt100	on		# 459 Evans
E 8
I 8
ttyh1	"/usr/libexec/getty std.9600"	vt100	on		# 459 Evans
E 8
# terminal emulate/window system
D 8
ttyv0	"/usr/new/xterm -L :0"	vs100	on window="/usr/new/Xvs100 0"
E 8
I 8
ttyv0	"/usr/new/xterm -L :0"		vs100	on window="/usr/new/Xvs100 0"
E 8
# Network pseudo ttys -- don't enable getty
E 7
ttyp0	none	network
ttyp1	none	network	off
D 7
ttyv0	"/usr/new/xterm -L :0"	vs100	on window="/usr/new/Xvs100 0"
E 7
E 6
D 10
.fi
D 7
.PP
The first example permits root login on the console at 1200 baud,
the second allows dialup at 1200 baud without root login,
the third and fourth allow login at 9600 baud with terminal types of
"hp2621-nl" and "plugboard" respectively,
the fifth and sixth line are examples of network pseudo ttys, which
D 6
should not have getty enabled on them,
E 6
I 6
should not have
.I getty
enabled on them,
E 6
and the last example shows a terminal emulator and window system
startup entry.
E 7
E 3
E 2
.SH FILES
/etc/ttys
.SH "SEE ALSO"
D 2
init(8), getty(8), login(1)
E 2
I 2
D 3
gettytab(5), init(8), getty(8), login(1)
E 3
I 3
D 6
getttyent(3), gettytab(5), init(8), getty(8), login(1)
I 4
.SH BUGS
The parsing of the flags, window, and comment fields is stupid.
E 6
I 6
D 7
login(1), getttyent(3), gettytab(5), init(8), getty(8)
E 7
I 7
login(1), getttyent(3), ttyslot(3), gettytab(5), termcap(5), getty(8), init(8)
E 10
I 10
.Ed
.Sh FILES
.Bl -tag -width /etc/ttys -compact
.It Pa /etc/ttys
.El
.Sh SEE ALSO
.Xr login 1 ,
.Xr getttyent 3 ,
.Xr ttyslot 3 ,
.Xr gettytab 5 ,
.Xr termcap 5 ,
.Xr getty 8 ,
.Xr init 8
.Sh HISTORY
A
.Nm
file appeared in
.At v6 .
E 10
E 7
E 6
E 4
E 3
E 2
E 1
