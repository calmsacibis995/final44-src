#
# Mach Operating System
# Copyright (c) 1989 Carnegie-Mellon University
# Copyright (c) 1988 Carnegie-Mellon University
# Copyright (c) 1987 Carnegie-Mellon University
# Copyright (c) 1986 Carnegie-Mellon University
# All rights reserved.  The CMU software License Agreement specifies
# the terms and conditions for use and redistribution.
#  
#
# HISTORY
# $Log:	MASTER.sun3,v $
# Revision 2.18  90/07/03  16:36:32  mrt
# 	Added configuration symbol CODA for the Coda file system.
# 	[90/05/25            dcs]
# 
# Revision 2.17  89/11/18  19:03:45  mja
# 	Add SCSI disks sd4,5,6,7,12,13 to sc0, disks sd6,7,12,13 to
# 	si0, and tape st1 to si0, to support a maximum of 5 disks (10
# 	if two logical units per SCSI disk) and 2 tapes per system.
# 	[89/11/13  14:07:48  mja]
# 
# Revision 2.16  89/10/11  13:55:00  dlb
# 	Add hw_ast to MSTD.
# 	[89/08/30            dlb]
# 
# Revision 2.15  89/06/02  11:16:32  rvb
# 	Added second SCSI tape device "st1".
# 	[89/06/01  14:58:17  mja]
# 
# Revision 2.14  89/03/09  05:46:39  rpd
# 	Added UNTESTED set, for devices/options that weren't in ANY.
# 	Added pseudo-device entries for those devices.
# 
# Revision 2.13  89/02/28  12:19:19  mrt
# 	gcc can now handle -MD; So DEPENDS= goes away
# 	[89/02/28            rvb]
# 
# Revision 2.12  89/02/25  17:38:48  gm0w
# 	Changes for cleanup.
# 
# Revision 2.11  89/01/23  22:14:35  af
# 	Handle gcc compilation by the target "gcc".
# 	[89/01/16  17:07:54  af]
# 
# Revision 1.2  88/12/22  13:50:26  rvb
# spelling
# 

# Revision 2.10  88/11/21  16:55:29  rvb
# 	move MDG to local
# 
# Revision 2.10  88/11/21  16:35:14  rvb
# 	move MDG to local
#
# Revision 2.9  88/11/14  15:49:19  gm0w
# 	Added lines for two additional scsi disks.
# 	[88/11/14            gm0w]
# 
# Revision 2.8  88/08/22  21:27:40  mja
# 	Add comments for standard macro definitions.
# 	[88/08/18  11:43:00  mja]
# 	
# 	Add "color" attribute to ANY and WS macros.
# 	[88/08/09  14:08:42  mja]
# 	
# 	Correct wrong priority and missing vector bug in cgtwo entry
# 	[88/08/09            jjc]
# 	
# 	Add "xt" device to ANY and MF macros.
# 	[88/08/08  15:57:42  mja]
# 
# Revision 2.7  88/08/12  12:39:25  rvb
# MDG = [ STD md xp me medium WS ] use STD vs MACH. MACH is defined
# to strangely (viz you have to look at <>.local to understand it
# 
# Revision 2.6  88/08/11  13:32:09  rvb
# Make MACHXPE work for this architecture; also make MDG be
# MACHXPE for WS
# 
# Revision 2.5  88/08/09  17:37:02  rvb
# make mach_directory option switch on correctly and rename it md
# define MD, MV, MDG
# 
#
# Revision 2.4  88/07/15  15:41:54  mja
# Configure 4 drives on each xy controller;  add attributes for
# MF macro;  use "NOTUSED" attribute to comment out lines we
# don't (yet) need;  reformat to eliminate long lines.
# 
#  3-Jun-88  Michael Young (mwyoung) at Carnegie-Mellon University
#	Attempted to coalesce Mach and Facilities productions.
#
# 19-May-88  Mike Accetta (mja) at Carnegie-Mellon University
#	Made MF and WS synonyms for ANY for now;  added EXTRA macro
#	(null for now).
#	[ V5.1(XF25) ]
#
# 12-May-88  Mike Accetta (mja) at Carnegie-Mellon University
#	Deleted SUN_UNIX option (it is now subsumed by MACH_COMPAT);
#	assigned unused "gp1" attribute to "gpone" device which is not
#	currently used here;  renamed SUN3 => ANY.
#	[ V5.1(XF24) ]
#
#  9-Apr-88  Daniel Julin (dpj) at Carnegie-Mellon University
#	Added MACHSUN3DIR.
#
# 17-Mar-88  Jonathan J. Chew (jjc) at Carnegie-Mellon University
#	Added line for gpone graphics processor.
#
# 25-Feb-88  Jonathan J. Chew (jjc) at Carnegie-Mellon University
#	Added line for cgfour color monitor.
#
# 15-Dec-87  Robert Baron (rvb) at Carnegie-Mellon University
#	Add Mach generic configurations.  Also split out devices
#	so they can be indivually requested.
#
#  4-Dec-87  Michael Young (mwyoung) at Carnegie-Mellon University
#	Revise as per MASTER; remove old history.
#
# ??-Nov-87  Jonathan J. Chew (jjc) at Carnegie-Mellon University
#	Added line for fpa.
#
# 17-Nov-87  Mike Accetta (mja) at Carnegie-Mellon University
#	Revised production configurations into a single "SUN3" macro
#	for use with the latest "doconf" technology.
#	[ V5.1(XF21) ]
#
# 13-Oct-87  Mike Accetta (mja) at Carnegie-Mellon University
#	Flush EXTRA
#	[ V5.1(XF18) ]
#
# 03-Oct-87  Jonathan J. Chew (jjc) at Carnegie-Mellon University
#	Added changes for Sun 3/{60,110,260}.
#

#
#  Master SUN configuration file (see the master machine independent
#  configuration file for a description of the file format).
#
#
#  SUN (PSEUDO-)DEVICES (select any combination)
#
#
#  CPU TYPE (select exactly one)
#
#	sun = any SUN CPU
#
#  
#  Devices both on Vme bus and onBoard:
#
#  si = [ siV siB ]
#  ie = [ ieV ieB ]

#  Standard CMU CS/RI Production Configurations:
#  -------- --- -- -- ---------- --------------
#
#  ANY = [ sun xt xy sc si  ie  le zs mti color bw debug ]
#  MF  = [ sun xt xy sc siB ieB le zs           bw debug ]
#  WS  = [ sun       sc siB ieB le zs     color bw debug ]
#
#  (any SUN-3 cpu model)
#  ("mainframe" SUN3 cpu configurations: machine rooms)
#  ("work-station" SUN3 cpu configurations: offices)
#
#  EXTRA = [ ]
#
#  ("one-of-a-kind" devices)
#
#  UNTESTED = [ ar bwone cgone dbx des ec en gpone ip pi ropc sf sky sw mt tod vp vpc zss ]
#
#  (we've got code for these guys, but who knows)
#
#  Options which are almost always turned on when mach is turned on,
#  but can still be individually selected:
#
#  MSTD  = [hw_ast]
#
#  Standard Mach Research Configurations:
#  -------- ---- -------- ---------------
#
#  MACH =  [ medium ANY ]
#
#  MACHEXP =  [ medium ANY ]
#
#  Support for the Coda File System:
#  ------- --- --- ---- ---- -------
#
#  CODA	= [ cfs ipmcast ]
#

machine		"sun3"
cpu		"SUN3_160"	# type 1
cpu		"SUN3_50"	# type 2
cpu		"SUN3_260"	# type 3
cpu		"SUN3_110"	# type 4
cpu		"SUN3_60"	# type 7

config		mach		swap generic	# <!unix>
config		vmunix		swap generic	# <unix>

#
#  Mach/4.3 on the SUN-3
#
controller      obio 1 at nexus ?			# <ieB,le,zs>
controller	obio 2 at nexus ?			# <ieB,le,zs>
controller	obio 3 at nexus ?			# <ieB,le,zs>
controller	obio 4 at nexus ?			# <ieB,le,zs>
controller	obio 7 at nexus ?			# <ieB,le,zs>

controller      obmem 1 at nexus ?			# <bw>
controller	obmem 2 at nexus ?			# <bw>
controller	obmem 3 at nexus ?			# <bw>
controller	obmem 4 at nexus ?			# <bw>
controller	obmem 7 at nexus ?			# <bw>

controller      virtual 1 at nexus ?
controller	virtual 2 at nexus ?
controller	virtual 3 at nexus ?
controller	virtual 4 at nexus ?
controller	virtual 7 at nexus ?

controller      vme16d16 1 at nexus ?			# <xy,mti>
controller	vme16d32 1 at nexus ?			# <NOTUSED>
controller      vme24d16 1 at nexus ?			# <sc,siV,ieV,color>
controller	vme24d32 1 at nexus ?			# <NOTUSED>
controller	vme32d16 1 at nexus ?			# <NOTUSED>
controller	vme32d32 1 at nexus ?			# <NOTUSED>
controller	vme16d16 3 at nexus ?			# <xy,mti>
controller	vme24d16 3 at nexus ?			# <sc,siV,ieV,color>
controller	vme32d16 3 at nexus ?			# <NOTUSED>
controller	vme16d32 3 at nexus ?			# <NOTUSED>
controller	vme24d32 3 at nexus ?			# <NOTUSED>
controller	vme32d32 3 at nexus ?			# <NOTUSED>
controller	vme16d16 4 at nexus ?			# <xy,mti>
controller	vme24d16 4 at nexus ?			# <sc,siV,ieV,color>
controller	vme32d16 4 at nexus ?			# <NOTUSED>
controller	vme16d32 4 at nexus ?			# <NOTUSED>
controller	vme24d32 4 at nexus ?			# <NOTUSED>
controller	vme32d32 4 at nexus ?			# <NOTUSED>

controller	xyc0 at vme16d16 ? csr 0xee40 		# <xy>
		        priority 2 vector xyintr 0x48 	# <xy>
controller	xyc1 at vme16d16 ? csr 0xee48		# <xy>
			priority 2 vector xyintr 0x49 	# <xy>
disk		xy0 at xyc0 drive 0			# <xy>
disk		xy1 at xyc0 drive 1			# <xy>
disk		xy2 at xyc0 drive 2			# <xy>
disk		xy3 at xyc0 drive 3			# <xy>
disk		xy4 at xyc1 drive 0			# <xy>
disk		xy5 at xyc1 drive 1			# <xy>
disk		xy6 at xyc1 drive 2			# <xy>
disk		xy7 at xyc1 drive 3			# <xy>

controller	sc0 at vme24d16 ? csr 0x200000		# <sc>
			priority 2 vector scintr 0x40	# <sc>

disk		sd0 at sc0 drive 0 flags 0		# <sc>
disk		sd1 at sc0 drive 1 flags 0		# <sc>
disk		sd2 at sc0 drive 8 flags 0		# <sc>
disk		sd3 at sc0 drive 9 flags 0		# <sc>
disk		sd4 at sc0 drive 16 flags 0		# <sc>
disk		sd5 at sc0 drive 17 flags 0		# <sc>
disk		sd6 at sc0 drive 24 flags 0		# <sc>
disk		sd7 at sc0 drive 25 flags 0		# <sc>
tape		st0 at sc0 drive 32 flags 1		# <sc>
tape		st1 at sc0 drive 40 flags 1		# <sc>
disk		sd12 at sc0 drive 48 flags 0		# <sc>
disk		sd13 at sc0 drive 49 flags 0		# <sc>

controller	si0 at vme24d16 ? csr 0x200000		# <siV>
			priority 2 vector siintr 0x40	# <siV>
controller	si0 at obio ? csr 0x140000 priority 2	# <siB>

disk		sd0 at si0 drive 0 flags 0		# <siV,siB>
disk		sd1 at si0 drive 1 flags 0		# <siV,siB>
disk		sd2 at si0 drive 8 flags 0		# <siV,siB>
disk		sd3 at si0 drive 9 flags 0		# <siV,siB>
disk		sd4 at si0 drive 16 flags 0		# <siV,siB>
disk		sd5 at si0 drive 17 flags 0		# <siV,siB>
disk		sd6 at si0 drive 24 flags 0		# <siV,siB>
disk		sd7 at si0 drive 25 flags 0		# <siV,siB>
tape		st0 at si0 drive 32 flags 1		# <siV,siB>
tape		st1 at si0 drive 40 flags 1		# <siV,siB>
disk		sd12 at si0 drive 48 flags 0		# <siV,siB>
disk		sd13 at si0 drive 49 flags 0		# <siV,siB>

controller	xtc0 at vme16d16 ? csr 0xee60 		# <xt>
			priority 3 vector xtintr 0x64	# <xt>
controller	xtc1 at vme16d16 ? csr 0xee68		# <xt>
			priority 3 vector xtintr 0x65	# <xt>
tape		xt0 at xtc0 drive 0 flags 1		# <xt>
tape		xt1 at xtc1 drive 0 flags 1		# <xt>

device		ie0 at obio ? csr 0xc0000 priority 3	# <ieB>
device		ie1 at vme24d16 ? csr 0xe88000		# <ieV>
			priority 3 vector ieintr 0x75	# <ieV>

device		le0 at obio ? csr 0x120000 priority 3	# <le>

device		zs0 at obio ? csr 0x20000 flags 3 priority 3		# <zs>
device		zs1 at obio ? csr 0x00000 flags 0x103 priority 3	# <zs>

device		mti0 at vme16d16 ? csr 0x620 flags 0xffff priority 4	# <mti>
		vector mtiintr 0x88					# <mti>

device		bwtwo0 at obmem 1 csr 0xff000000 priority 4	# <bw>
device		bwtwo0 at obmem 2 csr 0x100000 priority 4	# <bw>
device		bwtwo0 at obmem 3 csr 0xff000000 priority 4	# <bw>
device          bwtwo0 at obmem 4 csr 0xff000000		# <bw>
device          bwtwo0 at obmem 7 csr 0xff000000 priority 4	# <bw>
device          bwtwo1 at obmem 7 csr 0xff400000		# <bw>
device          gpone0 at vme24d16 ? csr 0x210000		# <gp1>
			priority 4 vector gponeintr 0xac	# <gp1>
device		cgtwo0 at vme24d16 ? csr 0x400000		# <color>
			priority 4 vector cgtwointr 0xa8	# <color>
device          cgfour0 at obmem 4 csr 0xff000000 priority 4	# <color> 
device          cgfour0 at obmem 7 csr 0xff400000 priority 4	# <color>

device          fpa0 at virtual ? csr 0xe0000000

#
#	PSEUDO DEVICES
#
pseudo-device   win128
pseudo-device   dtop4
pseudo-device   ms3
pseudo-device	kb3

#
#	UNTESTED DEVICES
#
pseudo-device	ar		# <ar>
pseudo-device	bwone		# <bwone>
pseudo-device	cgone		# <cgone>
pseudo-device	dbx		# <dbx>
pseudo-device	des		# <des>
pseudo-device	ec		# <ec>
pseudo-device	en		# <en>
pseudo-device	gpone		# <gpone>
pseudo-device	ip		# <ip>
pseudo-device	pi		# <pi>
pseudo-device	ropc		# <ropc>
pseudo-device	sf		# <sf>
pseudo-device	sky		# <sky>
pseudo-device	sw		# <sw>
pseudo-device	mt		# <mt>
pseudo-device	tod		# <tod>
pseudo-device	vp		# <vp>
pseudo-device	vpc		# <vpc>
pseudo-device	zss		# <zss>

#
#	MAKE VARIABLES
#

#
#	OVERRIDES FOR GCC
#	 No longer use inline
#

makevariables	KCC="	gcc"					# <gcc>
makevariables	GAS="	gas"					# <gcc>
makevariables	KCPP="	${CC} -ES"				# <gcc>
makevariables	VOLATILE=					# <gcc>
makevariables	FORCE_VOLATILE="-fvolatile "	 		# <gcc>
makevariables	"C_RULE_1A"="${KCC} -c -O ${COPTS} -fno-function-cse " # <gcc>
makevariables	"C_RULE_2"=					# <gcc>
makevariables	"C_RULE_3"=					# <gcc>
makevariables	"C_RULE_4"=					# <gcc>
makevariables	LDDEPS_PREFIX=					# <gcc>
makevariables	SWAPDEPS_PREFIX=				# <gcc>
makevariables	OBJSDEPS=					# <gcc>
