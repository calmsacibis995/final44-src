/*
 * Mach Operating System
 * Copyright (c) 1994-1989 Carnegie Mellon University
 * All Rights Reserved.
 * 
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
 * ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 * 
 *  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 * 
 * any improvements or extensions that they make and grant Carnegie Mellon
 * the rights to redistribute these changes.
 *  
 *
 * HISTORY
 * $Log:	MASTER.bnr,v $
 * Revision 2.5  94/12/15  15:12:29  dbg
 * 	Use standard device configuration lines for i386at
 * 	and i386ps2.
 * 	[94/03/19            dbg]
 * 
 * Revision 2.4  93/12/23  10:02:37  dbg
 * 	Added 174x driver (dherity@cs.tcd.ie & ralf@chpc.org)
 * 	[93/10/06            af]
 * 
 * 	Added PS2 ethernet driver, from Zon Williamson.
 * 	[93/09/13            dbg]
 * 
 * 	Added mc and pit clock devices for PS2.
 * 	[93/09/08            dbg]
 * 
 * 	Added mc and pit clock devices for AT386 configurations, for
 * 	real-time support.
 * 	[93/06/04            dbg]
 * 
 * 	Integrate PS2 code from IBM. - by prithvi, rvb
 * 
 * Revision 2.3  93/05/14  13:44:11  rvb
 * 	.cf->.bnr
 * 
 * Revision 2.2  93/05/10  17:45:31  rvb
 * 	Revised for bsdss
 * 	[93/05/04  16:49:20  rvb]
 * 
 * Revision 2.2  93/02/04  14:46:01  mrt
 * 	Flush blit and par; add dlink ethernet de device.
 * 	lineno is now defined in MI MASTER
 * 		Integrate PS2 code from IBM. - by prithvi, rvb
 * 	[93/01/21            danner]
 * 
 * Revision 2.25  93/01/14  17:22:52  danner
 * 	Added ipc_compat to all configs.
 * 	[92/12/10            af]
 * 
 * Revision 2.24  92/02/19  16:29:12  elf
 * 	Add lpr and par devices.  (taken from 2.5)
 * 	[92/02/13            rvb]
 * 
 * Revision 2.23  92/02/19  15:06:20  elf
 * 	Simplified, condensed history.
 * 	[92/02/13            rpd]
 * 
 *
 * Condensed history:
 *	Sequent support (dbg).
 *	iPSC support (jsb).
 *	Created (af).
 *
 *  Master I386 configuration file (see the master machine independent
 *  configuration file for a description of the file format).
 *
 *	
 *	 
 *	
 *	  I386 (PSEUDO-)DEVICES (select any combination)
 *	
 *	fpe	floating-point emulation support
 * 
 *	  CPU TYPE (select exactly one)
 *	AT	ISA/EISA bus
 *	PS2     PS/2 w/ MCA bus
 *	MBII	multibus II bus
 *	iPSC	Intel Hypercube
 *	SQT	Sequent Symmetry
 *	
 *	#####################################################################
 * 
 *	I386 Devices
 * 
 *	for an ISA bus:
 * 
 *		hd		Hard Disk
 *		fd		Floppy Disk
 *		blit		Blit Screen
 *		pc586		PC 586 Ethernet card
 *		3c		3Com Ethernet card
 *		com		Serial Lines 0 and 1 (DOS 1 and 2)
 *		wt		Streamer Tape	<<< not supported >>>
 *		scsi		Adaptec and/or SCSI boards
 *		de		Dlink pocket ethernet adapter
 *		mc		MCxxx watch chip as real-time clock
 * 
 *	for a PS/2 w/ MCA bus:
 * 
 *		hd		Hard Disk
 *		fd		Floppy Disk
 *		kd		console
 *		tr		Token Ring
 *		en		Ethernet
 *		mc		MCxxx watch chip as real-time clock
 * 
 *	for an Intel Hypercube:
 * 
 *		sd		Disk
 *		usm
 *		dcm
 *		cnp
 * 
 *	for a Sequent Symmetry:
 * 
 *		mbad		Multibus devices:
 *		    xy		Xylogics disk
 *		    zt		Xylogics tape
 *		    st		Systech terminal board
 *		    sl		Systech line printer board
 * 
 *		sec		SCSI/Ethernet devices:
 *		    se		Ethernet
 *		    sc		SCSI disk
 *		    ts		SCSI streamer tape
 *		    sm		SCSI shared memory (not needed on Symmetry)
 * 
 *		zd		ZDC disk
 * 
 *	#####################################################################
 *	
 *	  Standard Mach Research Configurations:
 *	  -------- ---- -------- ---------------
 * 
 *	  WS	   = [ ipc_compat 3c at com de fd fpe hd lpr pc586 scsi wd mc ]
 * 
 *	  PS2      = [ ipc_compat ps2 ps2hd ps2fd ps2tr en abios mouse fpe ps2mc ]
 * 
 *	  iPSC     = [ ipc_compat ipsc sd usm dcm cnp md ]
 * 
 *	  SQT	   = [ ipc_compat sqt sec sc se zd timing multi32 host ]
 * 
 *	#####################################################################
 */

#if	defined(AT) || defined(PS2) || defined(WS)
conftype	"i386"
platform	"AT386"

#define	IPC_COMPAT
#endif

#if	defined(SQT)
conftype	"sqt"
platform	SYMMETRY

#define IPC_COMPAT
#define MULTI32
#define HOST
#endif

#if	defined(IPSC)
conftype	"i386"
platform	"iPSC386"
options		"iPSC386"

#define IPC_COMPAT
#endif


config		mach_kernel

options		MACH_MACHINE_ROUTINES

#if	defined(FPE) || defined(WS) || defined(PS2)
options		FPE
#endif


#if	defined(SQT)
makevariables	TEXTORG="c0000000"
#else
makevariables	TEXTORG="c0100000"
#endif

/*
 *  Devices for PS/2 w/ MCA bus
 */
#if	defined(PS2)
controller      mca0    at nexus ?
#endif
#if	defined(ps2mc) || defined(PS2)
device		mc0	at mca0 csr 0x70
			vector mc_intr 8 priority 7
#endif
#if	defined(PS2)
device		kd0	at mca0 csr 0x60
			vector kdintr  1 priority 6
#endif
#if	defined(PS2HD) || defined(PS2)
controller      hdc0    at mca0 csr 0xffffffff
			vector hdintr 14 priority 5
disk            hd0     at hdc0 drive 0
disk            hd1     at hdc0 drive 1
#endif
#if	defined(PS2FD) || defined(PS2)
controller      fdc0    at mca0 csr 0xffffffff
			vector fdintr 6 priority 6
device          fd0     at fdc0 drive 0
device          fd1     at fdc0 drive 1
#endif
#if	defined(PS2UN)
device          un0     at mca0 csr 0x00001550
			vector unintr 3 priority 5
#endif
#if	defined(PS2TR) || defined(PS2)
device          tr0     at mca0 csr 0x00000a20
			vector trintr 9
device          tr1     at mca0 csr 0x00000a24
			vector trintr 10
#endif
#if	defined(EN) || defined(PS2)
device		en0	at mca0 csr 0x000C0000
			vector enintr 12
#endif
#if	defined(MOUSE) || defined(PS2)
pseudo-device	mouse
#endif
#if	defined(CONS)
options		IBM_CONSOLE
pseudo-device	cons
device		mouse0
device		xga0
device		vga0
device		ibmeff0
options		XEMUL
#endif
/*
 *  Devices for AT bus
 */
#if	defined(WS)
controller	isa0	at nexus ?
#endif
#if	defined(HD) || defined(WS)
controller	hdc0	at isa0 csr 0x1f0
			vector hdintr 14 priority 5

disk		hd0	at hdc0 drive 0 memory 0x104
disk		hd1	at hdc0 drive 1 memory 0x118

controller	hdc1	at isa0 csr 0x170
			vector hdintr 15 priority 5

disk		hd2	at hdc1 drive 0 memory 0x104
disk		hd3	at hdc1 drive 1 memory 0x118
#endif
#if	defined(fD) || defined(WS)
controller	fdc0	at isa0 csr 0x3f2
			vector fdintr 6 priority 5

disk		fd0	at fdc0 drive 0
disk		fd1	at fdc0 drive 1

controller	fdc1	at isa0 csr 0x372
			vector hdintr 10 priority 5

disk		fd2	at fdc1 drive 0
disk		fd3	at fdc1 drive 1
#endif
#if	defined(MC) || defined(WS)
device		mc0	at isa0 csr 0x70
			vector mc_intr 8 priority 7
#endif
#if	defined(PIT)
device		clockpit0   at isa0 csr 0x40
			vector clockpitintr 0 priority 7
#endif
#if	defined(STAT)
device		clockstat0  at isa0 csr 0x250
			vector clockstatintr 3 priority 7
device		clockstat0  at isa1 csr 0x254
			vector clockstatintr 3 priority 7
#endif
#if	defined(WS)
device		kd0	at isa0 csr 0x60
			vector kdintr  1 priority 6
#endif
#if	defined(PC586) || defined(WS)
device		"pc586" 0   at isa0 csr 0xd0000
			    vector "pc586intr" 9 priority 5
device		"pc586" 0   at isa0 csr 0xc0000
			    vector "pc586intr" 5 priority 5
device		"pc586" 0   at isa0 csr 0xf00000
			    vector "pc586intr" 12 priority 5
#endif

#if	defined(ELI) || defined(WS)
device		"at3c501" 0 at isa0 csr 0x300
			    vector "at3c501intr" 9 priority 6
#endif

#if	defined(ELII) || defined(WS)
device		"ns8390" 0  at isa0 csr 0x280 memory 0xd0000
			    vector "ns8390intr" 9 priority 6
device		"ns8390" 0  at isa0 csr 0x2a0 memory 0xd0000
			    vector "ns8390intr" 9 priority 6
device		"ns8390" 0  at isa0 csr 0x2e0 memory 0xd0000
			    vector "ns8390intr" 5 priority 6
device		"ns8390" 0  at isa0 csr 0x300 memory 0xd0000
			    vector "ns8390intr" 5 priority 6
device		"ns8390" 0  at isa0 csr 0x250 memory 0xd0000
			    vector "ns8390intr" 5 priority 6
device		"ns8390" 0  at isa0 csr 0x350 memory 0xd0000
			    vector "ns8390intr" 5 priority 6
device		"ns8390" 0  at isa0 csr 0x240 memory 0xd0000
			    vector "ns8390intr" 11 priority 6
device		"ns8390" 0  at isa0 csr 0x340 memory 0xd0000
			    vector "ns8390intr" 15 priority 6
#endif

#if	defined(COM) || defined(WS)
device		com0	at isa0 csr 0x3f8
			vector comintr 4 priority 5
device		com1	at isa0 csr 0x2f8
			vector comintr 3 priority 5
device		com2	at isa0 csr 0x3e8
			vector comintr 5 priority 5
#endif

#if	defined(LPR) || defined(WS)
device		lpr0	at isa0 csr 0x378
			vector lprintr 7 priority 5
device		lpr0	at isa0 csr 0x278
			vector lprintr 7 priority 5
device		lpr0	at isa0 csr 0x3bc
			vector lprintr 7 priority 5
#endif

#if	defined(SCSI) || defined(WS)
/*
 * SCSI driver: total HBAs
 */
pseudo-device	scsi	2

/*
 * Adaptec
 */
controller	aha0	at isa0 csr 0x330
			vector aha_intr 11 priority 5
controller	aha1	at isa0 csr 0x234
			vector aha_intr 12 priority 5

controller	eaha0	at isa0 csr 0x1000
			vector eaha_intr 12 priority 5

disk		rz0	at aha0 drive 0
disk		rz1	at aha0 drive 1
disk		rz2	at aha0 drive 2
disk		rz3	at aha0 drive 3
disk		rz4	at aha0 drive 4
disk		rz5	at aha0 drive 5
disk		rz6	at aha0 drive 6
disk		rz7	at aha0 drive 7
disk		rz8	at aha1 drive 0
disk		rz9	at aha1 drive 1
disk		rz10	at aha1 drive 2
disk		rz11	at aha1 drive 3
disk		rz12	at aha1 drive 4
disk		rz13	at aha1 drive 5
disk		rz14	at aha1 drive 6
disk		rz15	at aha1 drive 7

device		tz0	at aha0 drive 0
device		tz1	at aha0 drive 1
device		tz2	at aha0 drive 2
device		tz3	at aha0 drive 3
device		tz4	at aha0 drive 4
device		tz5	at aha0 drive 5
device		tz6	at aha0 drive 6
device		tz7	at aha0 drive 7
device		tz8	at aha1 drive 0
device		tz9	at aha1 drive 1
device		tz10	at aha1 drive 2
device		tz11	at aha1 drive 3
device		tz12	at aha1 drive 4
device		tz13	at aha1 drive 5
device		tz14	at aha1 drive 6
device		tz15	at aha1 drive 7

disk		rz0	at eaha0 drive 0
disk		rz1	at eaha0 drive 1
disk		rz2	at eaha0 drive 2
disk		rz3	at eaha0 drive 3
disk		rz4	at eaha0 drive 4
disk		rz5	at eaha0 drive 5
disk		rz6	at eaha0 drive 6
disk		rz7	at eaha0 drive 7
device		tz0	at eaha0 drive 0
device		tz1	at eaha0 drive 1
device		tz2	at eaha0 drive 2
device		tz3	at eaha0 drive 3
device		tz4	at eaha0 drive 4
device		tz5	at eaha0 drive 5
device		tz6	at eaha0 drive 6
device		tz7	at eaha0 drive 7

/*
 * scsi-special
 */
pseudo-device	cendata 0
#endif

#if	defined(FP)
pseudo-device	fp
#endif

#if	defined(DE) || defined(WS)
pseudo-device	"de6c"
#endif
#if	defined(PAR)
pseudo-device	par
#endif

#if	defined(BLIT)
pseudo-device	blit
#endif


/*
 *	Devices for iPSC
 */
#if	defined(SD) || defined(IPSC)
device		sd0
#endif
#if	defined(USM) || defined(IPSC)
device		usm0
#endif
#if	defined(DCM) || defined(IPSC)
device		dcm0
#endif
#if	defined(CNP) || defined(IPSC)
device		cnp0
#endif
#if	defined(MD) || defined(IPSC)
device		md0
#endif

/*
 *	Devices for Sequent Symmetry
 */

/*
 * Multibus Adapters
 */
#if	defined(MBAD)
controller	mbad0	at slot ?
/*controller	mbad1	at slot ?*/
#endif
#if	defined(SEC) || defined(SQT)
/*
 * SCSI/Ether Controllers
 */
controller	sec0	at slot ?
controller	sec1	at slot ?
/*
 * Console devices on SEC
 */
device		co0	at sec0 req 4 doneq 4 bin 4 unit 0
device		co0	at sec0 req 4 doneq 4 bin 4 unit 1
device		co1	at sec0 req 4 doneq 4 bin 4 unit 2
device		co1	at sec0 req 4 doneq 4 bin 4 unit 3
/*
device		co2	at sec1 req 4 doneq 4 bin 4 unit 0
device		co2	at sec1 req 4 doneq 4 bin 4 unit 1
device		co3	at sec1 req 4 doneq 4 bin 4 unit 2
device		co3	at sec1 req 4 doneq 4 bin 4 unit 3
*/
#endif
#if	defined(ZD) || defined(SQT)
/*
 * ZDC Controllers
 */
controller	zdc0	at slot ?
/*controller	zdc1	at slot ?*/
/*
 * ZDC Drives
 */
device		zd0	at zdc? drive ? drive_type ?
device		zd1	at zdc? drive ? drive_type ?
device		zd2	at zdc? drive ? drive_type ?
device		zd3	at zdc? drive ? drive_type ?
/*
device		zd4	at zdc? drive ? drive_type ?
device		zd5	at zdc? drive ? drive_type ?
device		zd6	at zdc? drive ? drive_type ?
device		zd7	at zdc? drive ? drive_type ?
*/
#endif
/*
 * Multibus Xylogics 450 Disk Controllers
 */
#if	defined(XY)
/*
device		xy0	at mbad? csr 0x100 maps 34 bin 5 intr 0
device		xy1	at mbad? csr 0x110 maps 34 bin 5 intr 1
device		xy2	at mbad? csr 0x120 maps 34 bin 5 intr 2
*/
#endif
/*
 * Systech multibus terminal boards
 */
#if	defined(ST)
device		st0	at mbad? csr 0x200 maps  0 bin 4 intr 3
device		st1	at mbad? csr 0x210 maps  0 bin 4 intr 4
/*
device		st2	at mbad? csr 0x220 maps  0 bin 4 intr 5
device		st3	at mbad? csr 0x230 maps  0 bin 4 intr 3
device		st4	at mbad? csr 0x240 maps  0 bin 4 intr 4
device		st5	at mbad? csr 0x250 maps  0 bin 4 intr 5
*/
#endif
/*
 * Multibus Xylogics 472 Tape Controllers
 */
#if	defined(ZT)
/*device		zt0	at mbad? csr 0x300 maps 34 bin 5 intr 7*/
#endif
/*
 * Systech multibus line printer boards
 */
#if	defined(SL)
/*device		sl0	at mbad? csr 0x400 maps  8 bin 5 intr 6*/
#endif
/*
 * Ether devices on SEC
 */
#if	defined(SE) || defined(SQT)
/*device		se0	at sec0 req 200 doneq 200 bin 6 unit 0*/
device		se0	at sec0 req  20 doneq  20 bin 6 unit 0
device		se0	at sec0 req  10 doneq  10 bin 6 unit 1
/*
device		se1	at sec1 req 200 doneq 200 bin 6 unit 0
device		se1	at sec1 req  10 doneq  10 bin 6 unit 1
*/
#endif
/*
 * SCSI disk on SEC
 */
#if	defined(SC) || defined(SQT)
device		sd0	at sec? req 4 doneq 4 bin 5 unit ? targsec ?
device		sd1	at sec? req 4 doneq 4 bin 5 unit ? targsec ?
#endif
/*
 * SCSI streamer tape on SEC
 */
#if	defined(TS)
device		ts0	at sec? req 4 doneq 4 bin 5 unit ? targsec 4
#endif
/*
 * SCSI memory driver on SEC
 */
#if	defined(SM)
device		sm0	at sec0 req 3 doneq 3 bin 4 unit 0
/*device		sm1	at sec1 req 3 doneq 3 bin 4 unit 0*/
#endif

#include <i386/MASTER.local.bnr>

#include <MASTER.bnr>
