#
# Mach Operating System
# Copyright (c) 1993-1986 Carnegie Mellon University
# All Rights Reserved.
# 
# Permission to use, copy, modify and distribute this software and its
# documentation is hereby granted, provided that both the copyright
# notice and this permission notice appear in all copies of the
# software, derivative works or modified versions, and any portions
# thereof, and that both notices appear in supporting documentation.
# 
# CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
# CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
# ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
# 
# Carnegie Mellon requests users of this software to return to
# 
#  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU
#  School of Computer Science
#  Carnegie Mellon University
#  Pittsburgh PA 15213-3890
# 
# any improvements or extensions that they make and grant Carnegie Mellon
# the rights to redistribute these changes.
#  
#
# HISTORY
# $Log:	MASTER,v $
# Revision 2.3  93/03/11  12:10:15  danner
# 	iberated LINENO
# 	[93/03/11            danner]
# 
# Revision 2.2  93/02/04  15:54:20  mrt
# 	Removed lineno as it is now defined in MI MASTER.
# 	[93/01/25            mrt]
# 
# Revision 2.15  93/01/14  17:23:14  danner
# 		Added dtop pseudo-device.
# 	[93/01/14            danner]
# 
# 	Added ipc_compat to VAX6bb config (the only one that works)
# 	[92/12/10            af]
# 
# Revision 2.14  92/02/19  15:06:43  elf
# 	Simplified, condensed history.
# 	[92/02/17            rpd]
# 
#
# Condensed history:
#	gcc support (dbg).
#	Created (mja).

######################################################################
#
#  Master VAX configuration file (see the master machine independent
#  configuration file for a description of the file format).
#
######################################################################
#
#  VAX (PSEUDO-)DEVICES (select any combination)
#
#	dmf  = DMF-11 driver
#	dmz  = DMZ-32 driver
#	de   = DEUNA driver
#	dr   = DR-11 driver
#	ds   = DSC-200 analog/digital/analog convert
#	dz   = DZ-11/DZQ-11 driver
#	emul = MicroVax instruction emulation
#	en   = 3Mb ethernet driver
#	fps  = FPS-100 driver
#	hk   = RK07 driver
#	hp   = RPxx/RMxx driver
#	ht   = TE16/TU45 driver
#	il   = Interlan 10Mb ethernet driver
#	ip   = DEANZA IP8500 image processing display driver
#	ni   = DEBNA bi ethernet
#	ra   = RAxx/RDxx driver
#	tms  = TK50/TU81 driver
#	ts   = TS-11 driver
#	ut   = SI 9700 TU-45 emulation driver
#	vp   = VERSATEC matrix printer/plotter driver
#	qe   = DEQNA driver
#	qv   = QVSS driver
#	qd   = QDSS driver
#
#
#  CPU TYPE (select exactly one)
#
#	vax    = any VAX CPU
#	vax750 = VAX-11/750 CPU
#	vax6xx = MicroVAX CPU
#
#
#  Production Configuration Components:
#  ---------- ------------- ----------
#
#  ANY   =[bi de dhu dmf dr dz emul en hk hp ht il mpm ni qe qd qv ra tms ts ut dmz ds fps ip vp vax   ]
#  MF    =[   de     dmf dr dz      en hk hp ht il                           ut dmz ds fps ip vp vax   ]
#  MP    =[bi de     dmf    dz emul    hk hp    il mpm ni          ra        ut                  vax   ]
#  BI    =[bi                  emul                    ni          ra                            vaxbi ]
#  WS    =[      dhu        dz emul                       qe qd qv ra tms ts                     vax   ]
#
#  VAX6bb=[ipc_compat                    emul                       qe qd qv ra                            vax6xx pvax]
#  VAX750=[                 dz      en    hp                                 ut                  vax750]
#  VAXSBI=[   de     dmf dr dz      en hk hp ht il mpm                       ut                  vaxsbi]
#
#  (any VAX cpu model)
#  ("main-frame" VAX cpu models:    750, 780, 8650)
#  (multi-processor VAX cpu models: 784, 8200, 8800, 6200)
#  ("work-station" VAX cpu models:  610, 630, 650, 3100)
#
#  (minimal MicroVAX boot floppy configuration)
#  (minimal VAX-11/750 configuration)
#  (only SBI mainframes (with multiport memory))
#
#  EXTRA = [ ]
#
#  ("one-of-a-kind" devices)
#
#  UNTESTED = [ acc ad css ct ddn dh dmc dn drv dzq ec ex gfb hdh hy ik kg lp lpa mu npix pcl ps pup qn rb rl rx te up uu va vs vv ]
#
#  (we've got code for these guys, but who knows)
#
conftype	vax		# <vax,vax750,vax6xx,vaxbi,vaxsbi>
platform	"VAX6200"	# <bi,vaxbi>
###platform	"VAX8800"	# <bi,vaxbi>
platform	"VAX8600"	# <vax,vaxsbi>
platform	"VAX820"	# <bi,vaxbi>
platform	"VAX780"	# <vax,vaxsbi>
platform	"VAX750"	# <vax,vaxsbi,vax750>
platform	"VAX3100"	# <pvax>
platform	VAXSTATION	# <pvax>
platform	"VAX650"	# <vax,vax6xx>
platform	"VAX630"	# <vax,vax6xx>
###platform	"VAX1"		# <vax,vax6xx>

options 	MACH_LOAD	# Variable load point support	# <mpm>
options		NET_UDA		# new uda driver from Chris Torek # <!ora>
options		ULTRIX_TMSCP	# Latest TMSCP driver from Ultrix # <!otms>

# The standard LINENO value of g generates a file that is too....
makevariables   LINENO=                                 # <lineno>


config		mach_kernel

#
#  Multi-port memory
#
pseudo-device	mach_mpm	4	# <mpm>

#
# What should BI be classified as?
#
pseudo-device	bi	4		# <bi,vaxbi>

#
#  Gruss Frame Buffer
#
pseudo-device	gfb			# <gfb>

#
#  Micro-VAX string instruction emulation
#
pseudo-device	emul			# <emul>

#
#  Massbus adapters
#
controller	mba0	at nexus ?		# <hp,ht>
controller	mba1	at nexus ?		# <hp,ht>
controller	mba2	at nexus ?		# <hp,ht>
controller	mba3	at nexus ?		# <hp,ht>

#
#  HP/RM massbus disks (SI 9900 and DEC)
#
disk		hp0	at mba? drive 0		# <hp>
disk		hp1	at mba? drive ?		# <hp>
disk		hp2	at mba? drive ?		# <hp>
disk		hp3	at mba? drive ?		# <hp>
disk		hp4	at mba? drive ?		# <hp>
disk		hp5	at mba? drive ?		# <hp>
disk		hp6	at mba? drive ?		# <hp>
disk		hp7	at mba? drive ?		# <hp>
disk		hp8	at mba? drive ?		# <hp>
disk		hp9	at mba? drive ?		# <hp>
disk		hp10	at mba? drive ?		# <hp>
disk		hp11	at mba? drive ?		# <hp>

#
#  TE16 tape unit
#
master		ht0	at mba? drive ?		# <ht>
master		ht1	at mba? drive ?		# <ht>
tape		tu0	at ht0 slave 0		# <ht>
tape		tu1	at ht1 slave 0		# <ht>
tape		tu2	at ht0 slave 1		# <ht>
tape		tu3	at ht1 slave 1		# <ht>


#
#  Unibus adapter
#
controller	uba0	at nexus ?		# <vax,vax750,vax6xx,vaxbi,vaxsbi>
controller	uba1	at nexus ?		# <vax,vaxsbi,vaxbi>
controller	uba2	at nexus ?		# <vax,vaxsbi,vaxbi>
controller	uba3	at nexus ?		# <vax,vaxsbi,vaxbi>

#
#  DHV11
#
device		dhu0	at uba? csr 0160440 flags 0xff	vector dhurint dhuxint	# <dhu>

#
#  DMF32
#
device		dmf0	at uba? csr 0162000 flags 0xff				# <dmf>
	vector dmfsrint dmfsxint dmfdaint dmfdbint dmfrint dmfxint dmflint	# <dmf>
device		dmf1	at uba? csr 0162040 flags 0xff				# <dmf>
	vector dmfsrint dmfsxint dmfdaint dmfdbint dmfrint dmfxint dmflint	# <dmf>
device		dmf2	at uba? csr 0162100 flags 0xff				# <dmf>
	vector dmfsrint dmfsxint dmfdaint dmfdbint dmfrint dmfxint dmflint	# <dmf>
device		dmf3	at uba? csr 0162140 flags 0xff				# <dmf>
	vector dmfsrint dmfsxint dmfdaint dmfdbint dmfrint dmfxint dmflint	# <dmf>
device		dmf4	at uba? csr 0162200 flags 0xff				# <dmf>
	vector dmfsrint dmfsxint dmfdaint dmfdbint dmfrint dmfxint dmflint	# <dmf>
device		dmf5	at uba? csr 0162240 flags 0xff				# <dmf>
	vector dmfsrint dmfsxint dmfdaint dmfdbint dmfrint dmfxint dmflint	# <dmf>

#
#  DMZ-32
#
device          dmz0    at uba? csr 0160500 flags 0xffffff			# <dmz>
	vector dmzrinta dmzxinta dmzrintb dmzxintb dmzrintc dmzxintc		# <dmz>

#
#  DR11-B/DR11-W (DR11-W interface never tested)
#
device		dr0	at uba? csr 0172410 flags 0x1 vector drintr	# <dr>
device		dr1	at uba? csr 0172420 flags 0x1 vector drintr	# <dr>
device		dr2	at uba? csr 0160240 flags 0x1 vector drintr	# <dr>
pseudo-device	drb							# <dr>
pseudo-device	gmr							# <dr>

#
#  DZ11
#
device		dz0	at uba? csr 0160100 flags 0xff	vector dzrint dzxint	# <dz>
device		dz1	at uba? csr 0160110 flags 0xff	vector dzrint dzxint	# <dz>
device		dz2	at uba? csr 0160120 flags 0xff	vector dzrint dzxint	# <dz>
device		dz3	at uba? csr 0160130 flags 0xff	vector dzrint dzxint	# <dz>
device		dz4	at uba? csr 0160140 flags 0xff	vector dzrint dzxint	# <dz>
device		dz5	at uba? csr 0160150 flags 0x00	vector dzrint dzxint	# <dz>
device		dz6	at uba? csr 0160160 flags 0xff	vector dzrint dzxint	# <dz>
device		dz7	at uba? csr 0160170 flags 0xff	vector dzrint dzxint	# <dz>

#
#  DZQ11 (special purpose for ASSY)
#
device		dzq0	at uba? csr 0160100 flags 0xff	vector dzqrint dzqxint	# <dzq>

#
#  RAxx/RDxx disk
#
pseudo-device	genmscp						# <ra>
#
controller	uda0	at uba? csr 0172150 vector udintr	# <ra,ora>
controller	uda1	at uba? csr 0160334 vector udintr	# <ra,ora>
controller	uda2	at uba? csr 0160340 vector udintr	# <ra,ora>
disk		ra0	at uda0 drive ?				# <ra>
disk		ra1	at uda0 drive ?				# <ra>
disk		ra2	at uda0 drive ?				# <ra>
disk		ra3	at uda0 drive ?				# <ra>
disk		ra4	at uda1 drive ?				# <ra>
disk		ra5	at uda1 drive ?				# <ra>
disk		ra6	at uda1 drive ?				# <ra>
disk		ra7	at uda1 drive ?				# <ra>
disk		ra8	at uda2 drive ?				# <ra>
disk		ra9	at uda2 drive ?				# <ra>
disk		ra10	at uda2 drive ?				# <ra>
disk		ra11	at uda2 drive ?				# <ra>
disk		ra0	at uda0 drive 0				# <ora>
disk		ra1	at uda0 drive 1				# <ora>
disk		ra2	at uda0 drive 2				# <ora>
disk		ra3	at uda0 drive 3				# <ora>
disk		ra4	at uda1 drive 0				# <ora>
disk		ra5	at uda1 drive 1				# <ora>
disk		ra6	at uda1 drive 2				# <ora>
disk		ra7	at uda1 drive 3				# <ora>
disk		ra8	at uda2 drive 0				# <ora>
disk		ra9	at uda2 drive 1				# <ora>
disk		ra10	at uda2 drive 2				# <ora>
disk		ra11	at uda2 drive 3				# <ora>

#
#  RK07 disks
#
controller	hk0	at uba? csr 0177440	vector rkintr	# <hk>
disk		rk0	at hk0 drive 0				# <hk>
disk		rk1	at hk0 drive 1				# <hk>
disk		rk2	at hk0 drive 2				# <hk>
disk		rk3	at hk0 drive 3				# <hk>

#
#  3Mb ethernet
#
device		en0	at uba? csr 0164000 	vector	enxint enrint enxint	# <en>


#  DEQNA 10Mb ethernet
#
device		qe0	at uba0 csr 0174440	vector qeintr	# <qe>

#
#  DEUNA 10Mb ethernet
#
device		de0	at uba? csr 0174510 vector deintr		# <de>

#
#  DEBNA 10Mb bi ethernet
#
device		ni0	vector niintr					# <ni>

#
#  Interlan 10Mb ethernet
#
device		il0	at uba? csr 0164040 vector ilrint ilcint	# <il>

#
#  QVSS Graphics Display
#
device		qv0	at uba0 csr 0177200 flags 0x0f 	vector qvkint qvvint qvstrayint qvstrayint	# <qv>
#device		qv1	at uba0 csr 0176200 flags 0x0f	vector qvkint qvvint # <qv>

#
#  QDSS Graphics Display
#
device		qd0	at uba0 csr 0177400 flags 0x0f 	vector qddint qdaint qdiint # <qd>

#
#  Versatec printer
#
device		vp0	at uba? csr 0177510 vector vpintr vpintr	# <vp>

#
#  DSC-200
#
device		ds0	at uba? csr 0164400 vector dsintr	# <ds>

#
#  FPS-100
#
device		fps0	at uba? csr 0165200 vector fpsint	# <fps>

#
#  DEANZA IP8500 Image Processing Display
#
device		ip0	at uba? csr 0166000 vector Ipintr	# <ip>

#
#  TK50/TU81 tape
#
controller	tmscp0	at uba0 csr 0174500	vector tmscpintr # <tms>
tape		tms0	at tmscp0 drive0 			# <tms>

#
#  TS-11 tape (SI uVax emulation)
#
controller	zs0	at uba? csr 0172520	vector tsintr	# <ts>
device		ts0	at zs0 drive 0				# <ts>

#
#  SI 9700 TU45 tape unit
#
controller	ut0	at uba? csr 0172440		vector utintr	# <ut>
controller	ut1	at uba? csr 0172500		vector utintr	# <ut>
tape		tj0	at ut0 drive 0					# <ut>
tape		tj1	at ut1 drive 0					# <ut>

#
# 		VAX3100 pseudo-devices
#		PMAX DEVICES
#
# DC7085 serial line controller (console)
pseudo-device	dz_			1			# <pvax>

# Generic console driver
pseudo-device	constty			4			# <pvax>

# LK201 keyboard driver
pseudo-device	lk			1			# <pvax>

# Bitmapped screen(s):
#	bm	is the generic bitmapped screen layer
#	fb	is the pmax monochrome/color framebuffer
#	cfb	is the 3max simple color framebuffer (needs fb)
#	gx	is the driver for the 2d/3d graphic engines
pseudo-device	bm						# <pvax>
pseudo-device	fb						# <pvax,kmax>
pseudo-device	cfb						# <kmax>
pseudo-device	gx						# <kmax>
pseudo-device	dtop						# <kmax>

# AMD7990 ethernet controller
pseudo-device	ln			2			# <pvax>

# SCSI driver
pseudo-device	scsi			2			# <pvax>
# DC7061 SCSI HBA
#pseudo-device	sii			1			# <pmax>
# NCR 53C94 SCSI HBA
#pseudo-device	asc			1			# <pmax>
# NCR 5380 SCSI HBA
pseudo-device	sci			2			# <pvax>


#
#	UNTESTED DEVICES
#
pseudo-device	acc		# <acc>
pseudo-device	ad		# <ad>
pseudo-device	css		# <css>
pseudo-device	ct		# <ct>
pseudo-device	ddn		# <ddn>
pseudo-device	dh		# <dh>
pseudo-device	dmc		# <dmc>
pseudo-device	dn		# <dn>
pseudo-device	drv		# <drv>
# dzq has real spec above
pseudo-device	ec		# <ec>
pseudo-device	ex		# <ex>
# gfb has real spec above
pseudo-device	hdh		# <hdh>
pseudo-device	hy		# <hy>
pseudo-device	ik		# <ik>
pseudo-device	kg		# <kg>
pseudo-device	lp		# <lp>
pseudo-device	lpa		# <lpa>
pseudo-device	mu		# <mu>
# the tag "np" is already taken by netport
pseudo-device	np		# <npix>
pseudo-device	pcl		# <pcl>
pseudo-device	ps		# <ps>
pseudo-device	pup		# <pup>
pseudo-device	qn		# <qn>
pseudo-device	rb		# <rb>
pseudo-device	rl		# <rl>
pseudo-device	rx		# <rx>
pseudo-device	te		# <te>
pseudo-device	up		# <up>
pseudo-device	uu		# <uu>
pseudo-device	va		# <va>
pseudo-device	vs		# <vs>
pseudo-device	vv		# <vv>
