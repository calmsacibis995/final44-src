.\" 
.\" Mach Operating System
.\" Copyright (c) 1993 Carnegie Mellon University
.\" All Rights Reserved.
.\" 
.\" Permission to use, copy, modify and distribute this software and its
.\" documentation is hereby granted, provided that both the copyright
.\" notice and this permission notice appear in all copies of the
.\" software, derivative works or modified versions, and any portions
.\" thereof, and that both notices appear in supporting documentation.
.\" 
.\" CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
.\" CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
.\" ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
.\" 
.\" Carnegie Mellon requests users of this software to return to
.\" 
.\"  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU
.\"  School of Computer Science
.\"  Carnegie Mellon University
.\"  Pittsburgh PA 15213-3890
.\" 
.\" any improvements or extensions that they make and grant Carnegie Mellon 
.\" the rights to redistribute these changes.
.\"
.\"
.\" HISTORY
.\" $Log:	periodic_thread_create.man,v $
.\" Revision 2.2  93/12/07  13:54:45  dbg
.\" 	Created.
.\" 
.\"
.TH periodic_thread_create 2 12/7/93
.CM 4
.SH NAME
.nf
periodic_thread_create  \-  create a periodic real-time thread
periodic_thread_restart  \-  sleep until the next period of execution
.SH SYNOPSIS
.nf
.ft B
#include <mach.h>

.nf
.ft B
kern_return_t periodic_thread_create(
	task_t			task,
	mach_clock_t		clock,
	policy_param_realtime_t	rt_attr,
	mach_port_t		deadline_port,
	int			state_flavor,
	thread_state_t		state,
	unsigned int		state_count,
	thread_t		*thread_p)		/* OUT */


.fi
.ft P
.nf
.ft B
kern_return_t periodic_thread_restart(
	thread_t		thread)


.fi
.ft P
.SH ARGUMENTS
.TP 15
.B
task
The task in which to create the thread
.TP 15
.B
clock
The clock to use for the thread's period and deadline timers
.TP 15
.B
rt_attr
The real-time attributes for the thread: period, deadline, and
starting time
.TP 15
.B
deadline_port
The port to which deadline-expired messages will be sent.
.TP 15
.B
state_flavor
Which initial register state to set.  The register state flavor
is machine-dependent.
.TP 15
state
The initial register state to set for thread, as selected by
.B state_flavor.
.TP 15
.B
state_count
The size of
.B state,
in integers.
.TP 15
.B
thread
Returns the newly created thread.

.SH DESCRIPTION

Periodic_thread_create creates a new periodic thread in
.B task.
The thread is created with the initial register set
.B state[state_count]
selected by
.B state_flavor.
.B Clock
is used as the time base for the thread's periodic and deadline
timers.
.B Deadline_port
is the port to which a message will be sent
if the deadline timer expires (the thread misses its deadline).
.B Rt_attr
specifies the starting time, period, and deadline for the
thread.  If
.B rt_attr.start_when
is THREAD_START_ABSOLUTE, the starting time in
.B rt_attr.start_time
is absolute; if it is
THREAD_START_RELATIVE, the starting time is relative to the current
time of
.B clock
at the time that
.B periodic_thread_create
is called.  The thread will start executing at the specified time.
If 
.B rt_attr.start_time
is infinite, the thread will, instead, be suspended;
.B thread_resume
must be used to start it.  If 
.B rt_attr.period
is infinite, the thread will execute only once.  If
.B rt_attr.deadline
is infinite, the thread will have no deadline timer.

.B Periodic_thread_restart
terminates the current period of execution of
.B thread.
If the thread is periodic, it will sleep until the start of
its next period of execution, and its deadline timer (if it exists)
will be reset to the corresponding deadline for the next period of
execution.  If
.B thread
is not periodic,
.B periodic_thread_restart
terminates the thread (as in
.B thread_terminate).

.SH DIAGNOSTICS
.TP 25
KERN_SUCCESS
The timers were set or returned.
.TP 25
KERN_INVALID_ARGUMENT
.B task
is not a task, or
.B clock
is not a valid clock in the system, or
.B state
is not valid, or
.B rt_attr
contains an invalid start_time, period, or deadline.

.SH SEE ALSO
.B thread_create, thread_set_state, thread_set_periodic_timers,
thread_get_periodic_timers, timer_arm

.SH BUGS
Availability limited.
