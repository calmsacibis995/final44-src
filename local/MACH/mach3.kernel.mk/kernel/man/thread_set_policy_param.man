.\" 
.\" Mach Operating System
.\" Copyright (c) 1993 Carnegie Mellon University
.\" All Rights Reserved.
.\" 
.\" Permission to use, copy, modify and distribute this software and its
.\" documentation is hereby granted, provided that both the copyright
.\" notice and this permission notice appear in all copies of the
.\" software, derivative works or modified versions, and any portions
.\" thereof, and that both notices appear in supporting documentation.
.\" 
.\" CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS"
.\" CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND FOR
.\" ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
.\" 
.\" Carnegie Mellon requests users of this software to return to
.\" 
.\"  Software Distribution Coordinator  or  Software.Distribution@CS.CMU.EDU
.\"  School of Computer Science
.\"  Carnegie Mellon University
.\"  Pittsburgh PA 15213-3890
.\" 
.\" any improvements or extensions that they make and grant Carnegie Mellon
.\" the rights to redistribute these changes.
.\" 
.\" 
.\" HISTORY
.\" $Log:	thread_set_policy_param.man,v $
.\" Revision 2.2  93/12/07  14:00:14  dbg
.\" 	Created.
.\" 
.\" 
.TH thread_set_policy_param 2 9/22/93
.CM 4
.SH NAME
.nf
thread_set_policy_param  \-  set scheduling parameters for thread
thread_set_policy_limit  \-  set max scheduling parameters for thread
.SH SYNOPSIS
.nf
.ft B
#include <mach.h>

.nf
.ft B
kern_return_t thread_set_policy_param(
	thread_t	thread,
	boolean_t	set_limit,
	policy_param_t	param,
	natural_t	param_count);


.fi
.ft P
.nf
.ft B
kern_return_t thread_set_policy_limit(
	thread_t	thread,
	processor_set_t	processor_set,
	policy_param_t	limit,
	natural_t	limit_count);


.fi
.ft P
.SH ARGUMENTS
.TP 15
.B
thread
The thread whose scheduling parameters are to be changed.
.TP 15
.B
param[param_count]
The new priority to change it to.
.TP 15
.B
set_limit
Also set thread's scheduling policy limits if TRUE.
.TP 15
.B
processor_set
The control port for the processor set to which the 
thread is currently assigned.

.SH DESCRIPTION
A thread has two sets of policy parameters associated with it by
the system: its
.B current
policy parameters (for example, the base priority for a timesharing
thread), and its policy
.B limit
parameters (for example, the maximum priority).
The current policy parameters are used to make scheduling decisions
about the thread.  For example, the current policy parameter is the
base priority of a timesharing thread.  The policy parameters may
be set under user control, but may never exceed the policy limit
parameters.
Changing the policy limit requires presentation of the control port
for the thread's processor set; since the control port for the default
processor set is privileged, users cannot raise their limits (for example,
their maximum timesharing priority)
to unfairly compete with other users on that set.  Newly created threads
obtain their scheduling policy and parameters from their task,
and their policy limits from their assigned processor set.

.B thread_set_policy_param
changes the current policy parameters, and optionally the
policy limits, of
.B thread.
The policy parameters vary depending on the policy; see
.B thread_set_policy
for the parameters for each policy.
The policy limit values of the thread are also set if 
.B set_limit
is TRUE.  This call will fail if 
.B param
specifies values that exceed the policy limits of the thread.  As
a result, this call can only lower the policy parameters of
the thread.

.B thread_set_policy_limit
changes the policy limit values of the thread.  Because it requires
presentation of the corresponding processor set port, this call can reset
the limit to any legal value.

.SH DIAGNOSTICS
.TP 25
KERN_SUCCESS
Operation completed successfully
.TP 25
KERN_INVALID_ARGUMENT
.B thread
is not a thread, or
.B processor_set
is not a control port for a processor set, or
.B param
is invalid for the thread's current scheduling policy.
.TP 25
KERN_FAILURE
The requested operation would violate the thread's 
policy limit values
(thread_set_policy_param) or the thread is not assigned to the processor set
whose control port was presented.

.SH BUGS
Availability limited.

.SH SEE ALSO
.B thread_set_policy, task_set_default_policy, processor_set_policy_limit

