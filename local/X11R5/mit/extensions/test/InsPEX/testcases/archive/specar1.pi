/* $XConsortium: specar1.pi,v 5.1 91/02/16 10:02:02 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## specar1.pi -
## Test special cases archive all, retrieve all, and delete all operations
## Test that nothing bad happens when there is nothing to archive,
## retrieve or delete from archive.
##
## Verify the structure identifiers in archive 
##

source macro.pi
source armacro.pi

tbegintest("specar1","special cases arhive, retrieve, and delete all structures");

# INTIALIZE: archive structure list
buf = malloc(256)
inqids = I_Pint_list(0,buf);

# SETUP: remove existing archive file, open PHIGS, create archive file
unlink("archfile1");
i_open_phigs(NULL,PDEF_MEM_SIZE);
popen_ar_file(1,"archfile1");

# test archive all operation
par_all_structs(1);

im_confirm_archive_strids(1,0, NULL,NULL,NULL,NULL,
	"failed struct ids in archive != NULL %s\n",
	"after archiving all strs when there are no strs in CSS");

# test retrieve all operation
pret_all_structs(1);

im_confirm_CSS_strids(0, NULL,NULL,NULL,NULL,
	"failed struct ids in CSS != NULL %s\n",
	"after retrieving all strs when there are no strs in archive");

# test delete all operation
pdel_all_structs_ar(1);

im_confirm_archive_strids(1,0, NULL,NULL,NULL,NULL,
	"failed struct ids in archive != NULL\n",
	"after deleting all strs when there are no strs in archive");

# CLEANUP: close and remove created archive file
pclose_ar_file(1);
unlink("archfile1");

tendtest();
