
/* $XConsortium: dccolrep.pi,v 5.2 91/07/24 18:49:04 hersh Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## dccolrep.pi -  
## Test requirements:
##   test display update with colour representation modification 

source macro.pi
source dcmacro.pi
source xpmacro.pi

tbegintest("dccolrep","display update with colour representation modification");

# INITIALIZE: data for a line, and a colour representation
line = IA_Ppoint(2, 0.25,0.25, 0.75,0.75);
line3 = IA_Ppoint3(2, 0.25,0.25,0.0, 0.75,0.75,0.0);
pl = I_Ppoint_list(2,line);
rep = I_Pcolr_rep(PMODEL_RGB,0.0,1.0,0.0);
rep2 = I_Pcolr_rep(PMODEL_RGB,1.0,1.0,1.0);

# SETUP: open phigs and a workstation, create structure 1,
#   which contains a polyline element, post structure 1

i_open_phigs(NULL,0);
i_open_x_ws(1,&xdisplay,&xwindow,0,0,200,200);
popen_struct(1);
ppolyline(&pl);
pclose_struct();
ppost_struct(1,1,1.0);

#OPERATION: set display update modes to WAIT/UQUM, 
#  change colour representation of colour index 1
pset_disp_upd_st(1,PDEFER_WAIT,PMODE_UQUM);
pset_colr_rep(1,1,&rep);
pset_colr_rep(1,2,&rep2);

#VERIFICATION: 
dynmod = i_get_ws_dyn_mod(1,"colour representation modification");
if (dynmod == PDYN_IRG) # if dynamic modification is IRG

	# verify that visual rep state is PVISUAL_ST_DEFER
	im_confirm_visual_rep(1,PVISUAL_ST_DEFER,
  		"failed: visual rep=%d,expected PVISUAL_ST_DEFER before updatews\n");
	#  Verify the picture by sampling pixels at the expected locations.
	im_confirm_line3(xdisplay,xwindow,1,0,line3,5,2,
		"failed: line of default col 1 is missing before updatews\n",NULL);
endif

if (dynmod == PDYN_CBS) # if dynamic modification is CBS
	# verify that visual rep state is PVISUAL_ST_SIMULATED
	im_confirm_visual_rep(1,PVISUAL_ST_SIMULATED,
  		"failed: visual rep=%d,expected PVISUAL_ST_SIMULATED before updatews\n");
endif

if (dynmod == PDYN_IMM) # if dynamic modification is IMM
	# verify that visual rep state is PVISUAL_ST_CORRECT
	im_confirm_visual_rep(1,PVISUAL_ST_CORRECT,
  		"failed: visual rep=%d,expected PVISUAL_ST_CORRECT before updatews\n");
	#  Verify the picture by sampling pixels at the expected locations.
	im_confirm_line3(xdisplay,xwindow,1,0,line3,5,1,
		"failed: line of modified col 1 is missing before updatews\n",
			NULL);
endif
tvprintf(2,"before updatews\n");
i_pause();

#OPERATION: update workstation with PERFORM
pupd_ws(1,PFLAG_PERFORM);

#VERIFICATION: 
#verify visual rep state is PVISUAL_ST_CORRECT
im_confirm_visual_rep(1,PVISUAL_ST_CORRECT,
  "failed: visual rep=%d,expected PVISUAL_ST_CORRECT after updatews\n");

#  Verify the picture by sampling pixels at the expected locations.
im_confirm_line3(xdisplay,xwindow,1,0,line3,5,1,
	"failed: line of modified col 1 is missing before updatews\n",NULL);
tvprintf(2,"after updatews\n");
i_pause();

tendtest();
