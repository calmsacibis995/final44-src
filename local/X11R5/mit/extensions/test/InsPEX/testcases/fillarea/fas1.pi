
/* $XConsortium: fas1.pi,v 5.2 91/07/12 18:36:22 hersh Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## fas1.pi -  
## Test fill area set geometry 
## with 1-set and with edge ON
##	. triangle
##	. quadrilateral
##	. bowtie
##	. self crossing area
##	. n vertexes: n = 129
## Test individual interior attributes: 
##	. interior style
##	. interior colour index
##	. edge flag
##	. edge width
##	. edge colour index
source macro.pi

tbegintest("fas1","fill area set geometry and individual interior attributes");

# initialize: fill area set geometry data
fa_triangle = IA_Ppoint3(3, 0.2,0.9,0.0, 0.1,0.7,0.0, 0.0,0.8,0.0);
fa_quad = IA_Ppoint3(4, 0.3,0.8,0.0, 0.5,0.9,0.0, 0.45,0.8,0.5, 0.3,0.7,0.5);
fa_bowtie = IA_Ppoint3(4, 0.6,0.9,0.0, 0.8,0.7,0.0, 0.8,0.9,0.0,
                          0.6,0.7,0.0);
fa_self_cross = IA_Ppoint3(10, 0.0,0.5,0.0, 0.4,0.5,0.0, 0.4,0.2,0.0,
                          0.1,0.2,0.0, 0.1,0.6,0.0, 0.2,0.6,0.0,
                          0.2,0.3,0.0, 0.3,0.3,0.0, 0.3,0.4,0.0,
                          0.0,0.4,0.0);
fa_n_vertexes = i_generate_n_Ppoint3(129, 0.45,0.35, 0.015);
triangle = I_Ppoint_list3(3,fa_triangle);
triangle_l = I_Ppoint_list_list3(1,&triangle);
quad = I_Ppoint_list3(4,fa_quad);
quad_l = I_Ppoint_list_list3(1,&quad);
bowtie = I_Ppoint_list3(4,fa_bowtie);
bowtie_l = I_Ppoint_list_list3(1,&bowtie);
self_cross = I_Ppoint_list3(10,fa_self_cross);
self_cross_l = I_Ppoint_list_list3(1,&self_cross);
n_vertexes = I_Ppoint_list3(129,fa_n_vertexes);
n_vertexes_l = I_Ppoint_list_list3(1,&n_vertexes);

# setup: open phigs and a workstation, open a structure
i_open_phigs(NULL,PDEF_MEM_SIZE); 
i_open_x_ws(1,&xdisplay,&xwindow,0,0,200,200);
popen_struct(1);

# draw the various fill areas with non-default interior and edge attributes
pset_int_style(PSTYLE_SOLID);
pset_edge_flag(PEDGE_ON);
pset_edgewidth(2.0);
pset_edge_colr_ind(4);
pfill_area_set3(&bowtie_l);
pfill_area_set3(&self_cross_l);
pfill_area_set3(&n_vertexes_l);
pset_int_colr_ind(2);
pfill_area_set3(&triangle_l);
pset_int_style(PSTYLE_HOLLOW);
pfill_area_set3(&quad_l);

# close and post structure
pclose_struct();
ppost_struct(1,1,1.0);

# verify image
i_check_image("fas1",xdisplay,xwindow,0,0,199,199,"fillareaset geometry and individual interior attributes");

im_def_grid();
i_pause();

tendtest();
