

/* $XConsortium: fas3.pi,v 5.2 91/07/12 18:36:31 hersh Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/



## fas3.pi -  
## Test adjacent fill area set edges 
## also test interior and edge colour, interior and edge colour indices

source macro.pi

tbegintest("fas3","adjacent fill area set edges and edge colours");

# initialize: various fill area set geometry data and two RGB colours
fa1 = IA_Ppoint3(4, 0.3,0.3,0.0, 0.3,0.6,0.0, 0.5,0.375,0.0, 0.7,0.3,0.0);
fa2 = IA_Ppoint3(4, 0.3,0.6,0.0, 0.3,0.7,0.0, 0.5,0.7,0.0, 0.5,0.375,0.0);
fa3 = IA_Ppoint3(3, 0.5,0.7,0.0, 0.7,0.7,0.0, 0.5,0.5,0.0);
fa4 = IA_Ppoint3(3, 0.7,0.7,0.0, 0.7,0.5,0.0, 0.5,0.5,0.0);
fa5 = IA_Ppoint3(4, 0.7,0.5,0.0, 0.7,0.3,0.0, 0.5,0.375,0.0, 0.5,0.5,0.0);

fas1 = I_Ppoint_list3(4,fa1);
fas1_l = I_Ppoint_list_list3(1,&fas1);
fas2 = I_Ppoint_list3(4,fa2);
fas2_l = I_Ppoint_list_list3(1,&fas2);
fas3 = I_Ppoint_list3(3,fa3);
fas3_l = I_Ppoint_list_list3(1,&fas3);
fas4 = I_Ppoint_list3(3,fa4);
fas4_l = I_Ppoint_list_list3(1,&fas4);
fas5 = I_Ppoint_list3(4,fa5);
fas5_l = I_Ppoint_list_list3(1,&fas5);

gc1 = I_Pgcolr(PMODEL_RGB,1.0,0.0,0.0)
gc2 = I_Pgcolr(PMODEL_RGB,0.0,0.0,1.0)

# setup: open phigs and a workstation, open and post structure
i_open_phigs(NULL,PDEF_MEM_SIZE); 
i_open_x_ws(1,&xdisplay,&xwindow,0,0,200,200);
popen_struct(1);
ppost_struct(1,1,1.0);

# set edge ON, set interior style SOLID, interior colour 
pset_int_style(PSTYLE_SOLID);
pset_int_colr(&gc1);
pset_edge_flag(PEDGE_ON);

# draw the various fill areas with different edge colours
pset_edge_colr_ind(1);
pfill_area_set3(&fas1_l);

pset_edge_colr(&gc2);
pfill_area_set3(&fas2_l);

pset_edge_colr_ind(3);
pfill_area_set3(&fas3_l);

pset_edge_colr_ind(6);
pfill_area_set3(&fas4_l);

pset_edge_colr_ind(5);
pfill_area_set3(&fas5_l);

pclose_struct();

# verify image
i_check_image("fas3",xdisplay,xwindow,50,50,99,99,
	"adjacent fill area set edges of different edge colours ");

im_def_grid();
i_pause();

tendtest();
