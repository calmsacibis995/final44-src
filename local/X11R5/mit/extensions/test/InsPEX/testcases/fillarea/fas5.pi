

/* $XConsortium: fas5.pi,v 5.2 91/07/12 18:36:36 hersh Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/



## fas5.pi -  
## Test fill area set with combinations of edge type and edge width 

source macro.pi

tbegintest("fas5", "combinations of edge type end edge width");

# setup: open phigs and a workstation, open structure
# set edge flag ON, interior colour index to 2, interior style to SOLID
i_open_phigs(NULL,PDEF_MEM_SIZE); 
i_open_x_ws(1,&xdisplay,&xwindow,0,0,200,200);
popen_struct(1);
pset_edge_flag(PEDGE_ON);
pset_int_colr_ind(2);
pset_int_style(PSTYLE_SOLID);

foreach @edgetype @y1 @y2 (
	PLINE_DOT; 0.05;0.25;
	PLINE_DASH_DOT; 0.3;0.5;
	PLINE_DASH; 0.55;0.75;
	PLINE_SOLID; 0.8;1.0;
)
	pset_edgetype(@edgetype);
	foreach @edgewidth @x1 @x2 (
	6.0; 0.05;0.2;
	3.5; 0.25;0.4;
	1.0; 0.45;0.6;
	0.0; 0.65;0.8;
	-2.5;0.85;1.0;
	)
		pset_edgewidth(@edgewidth);
		fa = IA_Ppoint3(3, @x1,@y1,0.0, @x2,@y2,0.0, @x2,@y1,0.0);
		fas = I_Ppoint_list3(3,fa);
		fas_l = I_Ppoint_list_list3(1,&fas);
		pfill_area_set3(&fas_l);

	end
end

# close and post structure
pclose_struct();
ppost_struct(1,1,1.0);

# verify image
i_check_image("fas5",xdisplay,xwindow,0,0,199,199,
	"combinations of edge types and edge widths");
tvprintf(2,"%s\n","combinations of edge types and edge widths");

im_def_grid();
i_pause();

tendtest();
