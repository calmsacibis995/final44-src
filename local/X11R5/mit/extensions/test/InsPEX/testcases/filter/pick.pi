
/* $XConsortium: pick.pi,v 5.1 91/02/16 10:03:42 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## pick.pi -  
##   Test combinations of pick filters and name sets 
##   Verify the picking of the primitive accordingly.

source macro.pi


tbegintest("pick","pick filter");

# initialize: pick filters, and namesets
ia12 = IA_Pint(2,1,2);
ia1 = IA_Pint(1,1);
ia3 = IA_Pint(1,3);
elmt1 = IA_Pint(1,1);
elmt2 = IA_Pint(1,2);
elmt3 = IA_Pint(1,3);
IL12 = I_Pint_list(2,ia12);
IL1 = I_Pint_list(1,ia1);
IL3 = I_Pint_list(1,ia3);
ILNULL = I_Pint_list(0,NULL);
filter1 = I_Pfilter(ILNULL,IL12);
filter2 = I_Pfilter(IL1,ILNULL);
filter3 = I_Pfilter(IL1,IL1);
filter4 = I_Pfilter(IL12,IL3);
nameset1 = I_Pint_list(1,elmt1);
nameset2 = I_Pint_list(1,elmt2);
nameset3 = I_Pint_list(1,elmt3);

# initialize expected/inquire pick path
pelem2 = I_Ppick_path_elem(0,0,0);
inqpath = I_Ppick_path(0,&pelem2);

# initialize data for fill area primitive and test point
pts = IA_Ppoint3(3, 0.3,0.3,0.0, 0.5,0.5,0.0, 0.7,0.3,0.0);
farea = I_Ppoint_list3(3, pts);
testpt1 = I_Ppoint3(0.5,0.4,0.0);


# SETUP: open phigs and a workstation, 
#   open structure 1
#   set the current name set to (1,2,3)
#   set interior style to SOLID

i_open_phigs(NULL,PDEF_MEM_SIZE); 
i_open_ws(1);
popen_struct(1);
ppost_struct(1,1,1.0);
padd_names_set(&nameset1);
padd_names_set(&nameset2);
padd_names_set(&nameset3);
pset_pick_id(1);
pset_int_style(PSTYLE_SOLID);
pfill_area3(&farea);

# primitive should not be picked
pset_pick_filter(1,1,&filter1);
i_fake_button(1,0,testpt1,1);
preq_pick(1,1,1,&inqstatus,&inqpath);
im_ifneq(inqstatus,PIN_STATUS_NONE,
	"failed: pick filter incl(),excl(1,2), current nameset(1,2,3)\n",NULL);

# primitive should be picked
pset_pick_filter(1,1,&filter2);
i_fake_button(1,0,testpt1,1);
preq_pick(1,1,1,&inqstatus,&inqpath);
im_ifneq(inqstatus,PIN_STATUS_OK,
	"failed: pick filter incl(1),excl(), current nameset(1,2,3)\n",NULL);

# primitive should not be picked
pset_pick_filter(1,1,&filter3);
i_fake_button(1,0,testpt1,1);
preq_pick(1,1,1,&inqstatus,&inqpath);
im_ifneq(inqstatus,PIN_STATUS_NONE,
	"failed: pick filter incl(1),excl(1), current nameset(1,2,3)\n",NULL);

# primitive should not be picked
pset_pick_filter(1,1,&filter4);
i_fake_button(1,0,testpt1,1);
preq_pick(1,1,1,&inqstatus,&inqpath);
im_ifneq(inqstatus,PIN_STATUS_NONE,
	"failed: pick filter incl(1,2),excl(3), current nameset(1,2,3)\n",NULL);
pdel_elem();

premove_names_set(&nameset3)
# primitive should be picked
pfill_area3(&farea);
i_fake_button(1,0,testpt1,1);
preq_pick(1,1,1,&inqstatus,&inqpath);
im_ifneq(inqstatus,PIN_STATUS_OK,
	"failed: pick filter incl(1,2),excl(3), current nameset(1,2)\n",NULL);
pdel_elem();

premove_names_set(&nameset2)
# primitive should be picked
pfill_area3(&farea);
i_fake_button(1,0,testpt1,1);
preq_pick(1,1,1,&inqstatus,&inqpath);
im_ifneq(inqstatus,PIN_STATUS_OK,
	"failed: pick filter incl(1,2),excl(3), current nameset(1)\n",NULL);
pdel_elem();

premove_names_set(&nameset1)
# primitive should not be picked
pfill_area3(&farea);
i_fake_button(1,0,testpt1,1);
preq_pick(1,1,1,&inqstatus,&inqpath);
im_ifneq(inqstatus,PIN_STATUS_NONE,
	"failed: pick filter incl(1,2),excl(3), current nameset()\n",NULL);

tendtest();
