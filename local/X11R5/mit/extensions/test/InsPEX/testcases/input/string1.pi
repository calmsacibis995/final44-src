/* $XConsortium: string1.pi,v 5.1 91/02/16 10:03:21 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## string1.pi -  
## Test initialize string, inquire string state (verify initialized values)
## Sample string, verify that value is same as initialized
 
source macro.pi

tbegintest("string1","initialize string");

# setup: open phigs and workstation 
i_open_phigs(NULL,PDEF_MEM_SIZE);
i_open_ws(1);

# INITIALIZE: echo area/volume, string storage
earea = I_Plimit(0.0,300.0, 0.0,300.0);
evol = I_Plimit3(0.0,300.0, 0.0,300.0, 0.0,1.0);
inqsample = malloc(128);

# create storage
pcreate_store(&err,&store);
im_ifneq(err,0,"ERROR: %d in preate_store\n",err);
pcreate_store(&err,&store3);
im_ifneq(err,0,"ERROR: %d in preate_store\n",err);

# retrieve default data
pinq_string_st(1,1,store,&err,&inqmode,&inqswitch,&inqstring,
	&inqpet,&inqevol, &data);
im_ifneq(err,0,"ERROR: %d in pinq_string_st\n",err);
pinq_string_st3(1,1,store3,&err,&inqmode,&inqswitch,&inqstring,
	&inqpet,&inqevol, &data3);
im_ifneq(err,0,"ERROR: %d in pinq_string_st3\n",err);

# operation: initialize string device
pinit_string( 1, 1, "string", 1, &earea, data);

# verify: inquire string states and verify against the expected values

pinq_string_st(1,1,store,&err,&inqmode,&inqswitch,&inqstring,
	&inqpet, &inqearea, &inqdata);
im_ifneq(err,0,"ERROR: %d in pinq_string_st\n",err);

im_ifneq(inqpet,1,"failed: string init prompt and echo type %d, expected 1\n",
	inqpet);

status = strcmp(inqstring,"string");
im_ifneq(status,0,
  "failed: string init string (%s) expected (string)\n",inqstring);

status = i_compare_Plimit(inqearea,earea);
im_ifneq(status,1,"failed: string init echo area != expected\n",NULL);

# test sample string
pset_string_mode(1,1,POP_SAMPLE,PSWITCH_ECHO);
psample_string(1,1,inqsample);
status = strcmp(inqsample,"string");
im_ifneq(status,0,
  "failed: after init string,string (%s) expected (string)\n",inqsample);
pset_string_mode(1,1,POP_REQ,PSWITCH_ECHO);


# operation: initialize string(3) device
pinit_string3( 1, 1, "string3", 1, &evol,data3);

# verify: inquire string(3) states and verify against the expected values

pinq_string_st3(1,1,store3,&err,&inqmode,&inqswitch,&inqstring,
	&inqpet,&inqevol, &inqdata3);
im_ifneq(err,0,"ERROR: %d in pinq_string_st3\n",err);

im_ifneq(inqpet,1,
  "failed: string3 init prompt and echo type %d, expected 1\n",inqpet);

status = strcmp(inqstring,"string3");
im_ifneq(status,0,
  "failed: string3 init string (%s) expected (string3)\n",inqstring);

status = i_compare_Plimit3(inqevol,evol);
im_ifneq(status,1,
  "failed: string3 init echo volume != expected\n",NULL);

# test sample string
pset_string_mode(1,1,POP_SAMPLE,PSWITCH_ECHO);
psample_string(1,1,inqsample);
status = strcmp(inqsample,"string3");
im_ifneq(status,0,
  "failed: after init string3,string (%s) expected (string3)\n",inqsample);
pset_string_mode(1,1,POP_REQ,PSWITCH_ECHO);

pclose_ws(1);

tendtest();
