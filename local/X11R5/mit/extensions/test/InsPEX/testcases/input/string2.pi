/* $XConsortium: string2.pi,v 5.1 91/02/16 10:03:22 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## string2.pi -  
## Test setting string mode, inquire string state (verify values that are set)
 
source macro.pi

tbegintest("string2","set string mode");

# setup: open phigs and workstation 
i_open_phigs(NULL,PDEF_MEM_SIZE);
i_open_ws(1);

# initialize: data storage
pcreate_store(&err,&store);
im_ifneq(err,0,"ERROR: %d in preate_store\n",err);
pcreate_store(&err,&store3);
im_ifneq(err,0,"ERROR: %d in preate_store\n",err);

# verify: inquire default mode and echo switch
pinq_string_st(1,1,store,&err,&inqmode,&inqswitch,&inqstr,
	&inqpet,&inqearea,&inqdata);
im_ifneq(err,0,"ERROR: %d in pinq_string_st\n",err);

im_ifneq(inqmode,POP_REQ,
  "failed: default string operating mode %d, expected POP_REQ\n",inqmode);

im_ifneq(inqswitch,PSWITCH_ECHO,
  "failed: default string echo switch %d, expected PSWITCH_ECHO\n",inqswitch);

pinq_string_st3(1,1,store3,&err,&inqmode,&inqswitch,&inqstr,
	&inqpet,&inqevol,&inqdata3);
im_ifneq(err,0,"ERROR: %d in pinq_string_st3\n",err);

im_ifneq(inqswitch,PSWITCH_ECHO,
  "failed: default string3 echo switch %d, expected PSWITCH_ECHO\n",inqswitch);

foreach @mode @switch (
	POP_EVENT;PSWITCH_NO_ECHO;
	POP_SAMPLE;PSWITCH_ECHO;
	POP_REQ;PSWITCH_NO_ECHO;
)
	pset_string_mode(1,1,@mode,@switch);

	pinq_string_st(1,1,store,&err,&inqmode,&inqswitch,&inqstr,
		&inqpet,&inqearea,&inqdata);
	im_ifneq(err,0,"ERROR: %d in pinq_string_st\n",err);

	im_ifneq(inqmode,@mode,
  	"failed: string operating mode %d, expected @mode\n",inqmode);

	im_ifneq(inqswitch,@switch,
  	"failed: string echo switch %d, expected @switch\n",inqswitch);

	pinq_string_st3(1,1,store3,&err,&inqmode,&inqswitch,&inqstr,
		&inqpet,&inqevol,&inqdata3);
	im_ifneq(err,0,"ERROR: %d in pinq_string_st3\n",err);

	im_ifneq(inqmode,@mode,
  	"failed: string3 operating mode %d, expected @mode\n",inqmode);

	im_ifneq(inqswitch,@switch,
  	"failed: string3 echo switch %d, expected @switch\n",inqswitch);
end


tendtest();
