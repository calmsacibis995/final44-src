/* $XConsortium: pldata2.pi,v 5.2 91/11/26 15:27:19 hersh Exp $ */
/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## pldata2.pi - test ppolyline_set3_data with different types and widths.
## For each of several widths, render polyline sets of 4 types.

tbegintest("pldata2", "POLYLINE_SET3_DATA combinations of width & line type");
source macro.pi

@WINSIZE = 200
@SAMPLESIZE = 200

#
# data for a few polylines: vertices and RGB colors
#


upper_left1 = I_Pline_vdata_list3_from_data(4, PVERT_COORD_COLOUR, PMODEL_RGB,
	0.1,0.8,0.1,	0.0,1.0,0.0,
	0.2,0.7,0.3,	0.9,1.0,0.5,
	0.5,0.9,0.2,	0.9,1.0,1.0,
	0.3,0.6,0.1,	0.9,1.0,0.9);
upper_left2 = I_Pline_vdata_list3_from_data(2, PVERT_COORD_COLOUR, PMODEL_RGB,
	0.1,0.9,0.8,	1.0,1.0,0.0,
	0.4,0.9,0.2,	1.0,1.0,1.0);
set_upper_left = IA_Pline_vdata_list3(2, upper_left1, upper_left2);

# upper right
upper_right1 = I_Pline_vdata_list3_from_data(4, PVERT_COORD_COLOUR, PMODEL_RGB,
	0.6,0.8,0.1,	0.0,1.0,0.0,
	0.7,0.5,0.3,	0.9,1.0,0.5,
	0.9,0.8,0.2,	0.9,1.0,1.0,
	0.9,0.6,0.1,	0.9,1.0,0.9);
upper_right2 = I_Pline_vdata_list3_from_data(2, PVERT_COORD_COLOUR, PMODEL_RGB,
	0.6,0.9,0.8,	1.0,1.0,0.0,
	0.9,0.9,0.2,	1.0,1.0,1.0);
set_upper_right = IA_Pline_vdata_list3(2, upper_right1, upper_right2);

# lower left
lower_left1 = I_Pline_vdata_list3_from_data(4, PVERT_COORD_COLOUR, PMODEL_RGB,
	0.2,0.3,0.0,	0.0,0.0,1.0,
	0.5,0.4,0.0,	0.0,1.0,1.0,
	0.1,0.4,0.5,	1.0,0.8,1.0,
	0.4,0.2,0.8,	1.0,1.0,1.0);
lower_left2 = I_Pline_vdata_list3_from_data(2, PVERT_COORD_COLOUR, PMODEL_RGB,
	0.1,0.1,0.1,	1.0,0.0,1.0,
	0.2,0.5,0.5,	0.0,1.0,0.0);
set_lower_left = IA_Pline_vdata_list3(2, lower_left1, lower_left2);
	
#lower right
lower_right1 = I_Pline_vdata_list3_from_data(4, PVERT_COORD_COLOUR, PMODEL_RGB,
	0.5,0.1,0.0,	1.0,0.0,0.0,
	0.7,0.2,0.0,	1.0,0.8,0.8,
	0.9,0.5,0.5,	1.0,0.8,0.0,
	0.6,0.3,0.1,	1.0,0.0,0.0);
lower_right2 = I_Pline_vdata_list3_from_data(2, PVERT_COORD_COLOUR, PMODEL_RGB,
	0.9,0.1,0.3,	0.0,1.0,0.0,
	0.5,0.2,0.2,	1.0,0.0,0.0);
set_lower_right = IA_Pline_vdata_list3(2, lower_right1, lower_right2);

imagename = malloc(16);
imagetext = malloc(100);

# Set up phigs, workstation, and structure
i_open_phigs(NULL,PDEF_MEM_SIZE);
i_open_x_ws(1, &display, &window, 100, 300, @WINSIZE, @WINSIZE);
popen_struct(1);
ppost_struct(1,1,1.0);


foreach @linewidth @widthname (0.0; "thin";
			       7.0; "thick";)

	pset_linewidth(@linewidth);

	# solid in upper left
	pset_linetype(PLINE_SOLID);
	ppolyline_set3_data(PVERT_COORD_COLOUR, PMODEL_RGB, 2, set_upper_left);

	# dash in upper right
	pset_linetype(PLINE_DASH);
	ppolyline_set3_data(PVERT_COORD_COLOUR, PMODEL_RGB, 2, set_upper_right);

	# dot in lower left
	pset_linetype(PLINE_DOT);
	ppolyline_set3_data(PVERT_COORD_COLOUR, PMODEL_RGB, 2, set_lower_left);

	# dotdash in lower right
	pset_linetype(PLINE_DASH_DOT);
	ppolyline_set3_data(PVERT_COORD_COLOUR, PMODEL_RGB, 2, set_lower_right);

	# compose the image name and description, compare images
	strcpy(imagename, "pld2");
	strcat(imagename, @widthname);
	strcpy(imagetext, @widthname);
	strcat(imagetext, " ppolyline_set3_data of types solid, dash, dot, & dotdash");
	i_check_image(imagename,display,window,0,0,@SAMPLESIZE,@SAMPLESIZE,
		      imagetext);
	i_pause();

	# empty the structure
	pempty_struct(1);

end;

tendtest();

