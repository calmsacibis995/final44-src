/* $XConsortium: polymark3.pi,v 5.1 91/02/16 10:00:39 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## polymark3.pi - test centering and appearance of five polymarker types.  
## Draw a large polymarker
## of each type against a differently-colored crosshair of polylines.
## The lines are in a structure posted at lower priority, so they 
## should be underneath.

tbegintest("polymark3", "centering of polymarkers");

source macro.pi		

# X coordinates of the markers and marking lines
@X1 = 0.1
@X2 = 0.3
@X3 = 0.5
@X4 = 0.7
@X5 = 0.9

# vertices of the polylines
horiz = IA_2_Ppoint(0.0,0.5, 1.0,0.5);
horizlist = I_Ppoint_list(2, horiz);
vert1 = IA_2_Ppoint(@X1,1.0, @X1,0.0);
vert1list = I_Ppoint_list(2, vert1);
vert2 = IA_2_Ppoint(@X2,1.0, @X2,0.0);
vert2list = I_Ppoint_list(2, vert2);
vert3 = IA_2_Ppoint(@X3,1.0, @X3,0.0);
vert3list = I_Ppoint_list(2, vert3);
vert4 = IA_2_Ppoint(@X4,1.0, @X4,0.0);
vert4list = I_Ppoint_list(2, vert4);
vert5 = IA_2_Ppoint(@X5,1.0, @X5,0.0);
vert5list = I_Ppoint_list(2, vert5);


# Set up phigs, workstation, and structure
i_open_phigs(NULL,PDEF_MEM_SIZE);
i_open_x_ws(1, &display, &window, 200, 300, 250, 250);

popen_struct(1);
pset_marker_size(20.0);

# draw a marker of each standard type, in each of 5 sizes
foreach @markertype @x (PMARKER_DOT;		@X1;
			PMARKER_PLUS;		@X2;
			PMARKER_ASTERISK;	@X3;
			PMARKER_CIRCLE;		@X4;
			PMARKER_CROSS;		@X5;)	


	pset_marker_type(@markertype);
	point = I_Ppoint(@x, 0.5);
	pointlist = I_Ppoint_list(1, &point);
	ppolymarker(&pointlist);
end;

ppost_struct(1,1,1.0);
pclose_struct();

# draw the polylines in a different color, in a structure posted
# at lower priority.
popen_struct(2);
pset_line_colr_ind(2);
ppolyline(&horizlist);
ppolyline(&vert1list);
ppolyline(&vert2list);
ppolyline(&vert3list);
ppolyline(&vert4list);
ppolyline(&vert5list);
pclose_struct();
ppost_struct(1, 2, 0.5);

sleep(1);

i_check_image("pmark3",display,window,0,50,250,150,
	"5 polymarker types, centered on line intersections");
i_pause();

tendtest();



