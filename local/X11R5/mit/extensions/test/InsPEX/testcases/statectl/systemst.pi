/* $XConsortium: systemst.pi,v 5.1 91/02/16 10:01:11 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## systemst.pi -
## Test system operating state 
## Test the following sequences: 
## open phigs, close phigs, open phigs, close phigs
## Verify system state changes 

source macro.pi
source scmacro.pi

tbegintest("systemst","system operating state");

# TEST begin:

# verify that system state is PHCL 
im_confirm_sysstate(PSYS_ST_PHCL,
	"failed: state = %d, expected PSYS_ST_PHCL before opening phigs\n");

## open phigs
i_open_phigs(NULL,PDEF_MEM_SIZE);

# verify that system state is PHOP 
im_confirm_sysstate(PSYS_ST_PHOP,
	"failed: state = %d, expected PSYS_ST_PHOP after opening phigs\n");

# close phigs
pclose_phigs();

# verify that system state is PHCL 
im_confirm_sysstate(PSYS_ST_PHCL,
	"failed: state = %d, expected PSYS_ST_PHCL after closing phigs\n");

# open phigs
i_open_phigs(NULL,PDEF_MEM_SIZE);

# verify that system state is PHOP 
im_confirm_sysstate(PSYS_ST_PHOP,
	"failed: state = %d, expected PSYS_ST_PHOP after re-opening phigs[4]\n");

# close phigs
pclose_phigs();

# verify that system state is PHCL 
im_confirm_sysstate(PSYS_ST_PHCL,
	"failed: state = %d, expected PSYS_ST_PHCL after re-closing phigs[5]\n");

tendtest();
