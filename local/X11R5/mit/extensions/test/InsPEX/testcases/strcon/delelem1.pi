
/* $XConsortium: delelem1.pi,v 5.1 91/02/16 10:00:45 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## delelem1.pi - test pdel_elem on empty structure, single element structure,
## and with element pointer == 0

tbegintest("delelem1", "DELETE ELEMENTS function on size 0 and 1 structures");

source macro.pi		/* general testing utility macros */
source strmacro.pi	/* macros for structure content, like im_confirm_xx */
source apimacro.pi	/* macros for api-specific functions */

# Set up phigs, workstation, and structure
api_open_phigs(NULL,PDEF_MEM_SIZE);
api_open_ws(1);
popen_struct(1);
ppost_struct(1,1,1.0);

# See if deleting from an empty structure causes anything bad
pdel_elem();
im_confirm_elemptr(0, "failed: elemptr %d non-zero after del from empty struct\n");

# Add an element, make sure it's OK
plabel(1);
im_confirm_elemtype(1, 1, PELEM_LABEL, 
	"failed: couldn't add label to empty struct afer deletion; got %d\n");


# set element pointer to 0, confirm that a pdel_elem() doesn't delete the elem
pset_elem_ptr(0);
pdel_elem();
pinq_elem_type_size(1, 1, &error, &actualtype, &elemsize);
im_ifneq(error, 0, 
	"failed: pinq_elem_type_size had error %d after delete with ptr=0\n",error);
im_ifneq(actualtype, PELEM_LABEL,
	"failed: deletion with ptr=0 left element %d, not LABEL\n", actualtype);

# delete that element, confirm deletion by inquiring pointer
pset_elem_ptr(1);
pdel_elem();
im_confirm_elemptr(0, "failed: elem ptr %d, not 0, after deleting only element\n");

pclose_struct();
pclose_ws(1);
pclose_phigs();
tendtest();
