
/* $XConsortium: delelem2.pi,v 5.1 91/02/16 10:00:46 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## delelem2.pi - test pdel_elem(), deleting from beginning, middle,
## and end of multi-element structure, and calling with struct ptr = 0.

tbegintest("delelem2", "DELETE ELEMENTS function on multi-element structures");

source macro.pi		/* general testing utility macros */
source strmacro.pi	/* macros for structure content area, like im_confirm_xx */
source apimacro.pi	/* macros for api-specific functions */

# Set up phigs, workstation, and structure
i_open_phigs(NULL,PDEF_MEM_SIZE);
i_open_ws(1);
popen_struct(1);
ppost_struct(1,1,1.0);

# Add some elements to the structure
# (struct should become: (LINETYPE, LABEL, MARKERTYPE))
pset_linetype(1);
plabel(2);
pset_marker_type(3);
im_confirm_elemtype(1, 2, PELEM_LABEL, 
	"failed: element 2 was %d, expected PELEM_LABEL\n");
im_confirm_elemtype(1, 3, PELEM_MARKER_TYPE,
	"failed: element 3 was %d, expected PELEM_MARKER_TYPE\n");

# delete with element pointer = 0 --> should be no action
pset_elem_ptr(0);
pdel_elem();
pinq_elem_type_size(1, 1, &error, &actualtype, &elemsize);
im_chkerr(error, "pinq_elem_type_size");
if (actualtype != PELEM_LINETYPE)
    if (actualtype == PELEM_LABEL)
	tfprintf("failed: pdel_elem with ptr=0 deleted first element\n");
    else
	tfprintf("failed: pdel_elem with ptr=0 replace 1st elem with %d\n",
		actualtype);
    endif
endif

# delete last element (should become (LINETYPE, LABEL))
pset_elem_ptr(99);
pdel_elem();
im_confirm_elemptr(2, "failed: pdel_elem on 3rd element left elem ptr %d\n");
im_confirm_elemtype(1, 1, PELEM_LINETYPE,
	"failed: element 1 was %d, expected PELEM_LINETYPE\n");
im_confirm_elemtype(1, 2, PELEM_LABEL, 
	"failed: element 2 was %d, expected PELEM_LABEL\n");
pset_elem_ptr(99);
im_confirm_elemptr(2, "failed: deleting third element left %d elements\n");

# Add a edge index and edge type to end of structure
# (struct should become: (LINETYPE, LABEL, EDGE_INDEX, EDGETYPE))
pset_edge_ind(3);
pset_edgetype(4);

# delete first element, confirm that element pointer & contents are correct
# (struct should become: (LABEL, EDGE_INDEX, EDGETYPE))
pset_elem_ptr(1);
pdel_elem();
im_confirm_elemptr(0, "failed: elem ptr %d, not 0, after del'ing 1st elem\n");
pinq_elem_type_size(1, 1, &error, &actualtype, &elemsize);
im_chkerr(error, "pinq_elem_type_size");
if (actualtype != PELEM_LABEL)  
    if (actualtype == PELEM_LINETYPE)
        tfprintf("failed: pdel_elem failed to delete first element\n");
    else
        tfprintf("failed: pdel_elem with ptr=1 replace 1st elem with %d\n",
                actualtype);
    endif
endif   

#delete middle element, confirm results
# (struct should become: (LABEL, EDGETYPE))
pset_elem_ptr(2);
pdel_elem(); 
im_confirm_elemptr(1, "failed: elem ptr %d, not 1, after del'ing 2nd elem\n");
pinq_elem_type_size(1, 2, &error, &actualtype, &elemsize);
im_chkerr(error, "pinq_elem_type_size"); 
if (actualtype != PELEM_EDGETYPE)  
    if (actualtype == PELEM_EDGE_IND) 
        tfprintf("failed: pdel_elem failed to delete second element\n"); 
    else 
        tfprintf("failed: pdel_elem with ptr=2 replace 2nd elem with %d\n", 
                actualtype); 
    endif 
endif    
im_confirm_elemtype(1, 1, PELEM_LABEL,
	"failed: deleting 2nd element replaced 1st with %d\n");

pclose_struct();
pclose_ws(1);
pclose_phigs();
tendtest();
