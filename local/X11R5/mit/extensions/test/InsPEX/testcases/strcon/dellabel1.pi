
/* $XConsortium: dellabel1.pi,v 5.1 91/02/16 10:00:47 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## dellabel1.pi - test DELETE ELEMENTS BETWEEN LABELS
## using labels of different value, and of same value.

tbegintest("dellabel1", "DELETE ELEMENT BETWEEN LABELS");

source macro.pi		/* generic macros */
source strmacro.pi	/* macros specific to structure content area */
source apimacro.pi	/* macros isolating api-specific functionality */


# Set up phigs, workstation, and structure
i_open_phigs(NULL,PDEF_MEM_SIZE);
i_open_ws(1);
popen_struct(1);
ppost_struct(1,1,1.0);

# Add some elements to the structure, with two different labels
# (struct should become: (LINETYPE, LABEL, MARKERTYPE,LABEL, EDGE_INDEX))
pset_linetype(1);
plabel(2);
pset_marker_type(3);
plabel(4);
pset_edge_ind(5);

# delete between the labels, confirm result
# (struct should become: (LINETYPE, LABEL,LABEL, EDGE_INDEX))
pset_elem_ptr(1);
pdel_elems_labels(2,4);
im_confirm_elemptr(2, "failed: elem ptr %d, should point to first label, 2\n");
im_confirm_elemtype(1, 3, PELEM_LABEL,
	"failed: element 3 should be LABEL, not %d\n");
im_confirm_elemtype(1, 4, PELEM_EDGE_IND,
	"failed: element 4 should be EDGE_INDEX, not %d\n");

# add more elements, including another label 4
# (struct should become: (LINETYPE, LABEL,LABEL, EDGE_INDEX,MARKER_TYPE,
# MARKER INDEX, LABEL, TEXTINDEX))
pset_elem_ptr(99);
pset_marker_type(3);
pset_marker_ind(4);
plabel(4);
pset_text_ind(4);

# delete between the two "4" labels, confirm results
# (struct should become: (LINETYPE, LABEL,LABEL, LABEL, TEXTINDEX))
pset_elem_ptr(1);
pdel_elems_labels(4,4);
im_confirm_elemptr(3, "failed: elem ptr %d should be first matching label, 3\n");
im_confirm_elemtype(1, 1, PELEM_LINETYPE,
	"failed: first element changed to %d by deletions later in struct\n");
for (@elptr; 2; 4 )
    im_confirm_elemtype(1, @elptr, PELEM_LABEL,
	"failed: element @elptr should be LABEL, not %d\n");
end;



pclose_struct();
pclose_ws(1);
pclose_phigs();
tendtest();
