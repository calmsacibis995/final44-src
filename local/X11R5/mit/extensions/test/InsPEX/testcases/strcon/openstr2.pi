
/* $XConsortium: openstr2.pi,v 5.1 91/02/16 10:00:57 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## openstr2.pi - after opening a workstation, test pinq_open_struct() 
## with no opened structure, with an open structure, and after a 
## structure has been opened and closed.  
# (like openstr1.pi, except for the opened workstation)

tbegintest("openstr2.pi", "test INQUIRE OPEN STRUCTURE w/ open WS")

source macro.pi		/* generic macros */
source strmacro.pi	/* macros specific to structure content area */
source apimacro.pi	/* macros isolating api-specific functionality */

@WS1 = 1

# Set up phigs, open a workstation
i_open_phigs(NULL,PDEF_MEM_SIZE);
i_open_ws(@WS1);

# Test with no opened structures
pinq_open_struct(&error, &status, &str_id);
im_chkerr(error, "pinq_open_struct");
im_ifneq(status, PSTRUCT_NONE, "failed: structure status %d should have been PSTRUCT_NONE\n", status);

# Open a structure and check status
popen_struct(4);
pinq_open_struct(&error, &status, &str_id);
im_chkerr(error, "pinq_open_struct");
im_ifneq(status, PSTRUCT_OPEN, "failed: structure status %d should have been PSTRUCT_OPEN\n", status);

# Close the structure and check status
pclose_struct();
pinq_open_struct(&error, &status, &str_id);
im_chkerr(error, "pinq_open_struct");
im_ifneq(status, PSTRUCT_NONE, "failed: structure status %d should have been PSTRUCT_NONE after closing structure\n", status);


tendtest();
