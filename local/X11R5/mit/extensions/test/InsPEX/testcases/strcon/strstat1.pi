
/* $XConsortium: strstat1.pi,v 5.2 91/11/26 14:51:34 hersh Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## strstat1.pi - test pinq_struct_status() on a non-existent structure,
## an empty structure, and a non-empty structure.

tbegintest("strstat1","test INQUIRE STRUCTURE STATUS");

source macro.pi		/* generic macros */
source strmacro.pi	/* macros specific to structure content area */
source apimacro.pi	/* macros isolating api-specific functionality */

@WS1 = 1
points1 = IA_Ppoint(3, 0.3,0.95, 0.7,0.5, 0.1,0.5);
lines1 = I_Ppoint_list(3, points1);

# Set up phigs
i_open_phigs(NULL,PDEF_MEM_SIZE);

# test on a non-existent structure before workstation opened.
im_confirm_struct_status(1, PSTRUCT_STATUS_NON_EXISTENT, "failed: non-existent structure, so status %d should be PSTRUCT_STATUS_NON_EXISTENT\n");

# open a workstation, and a structure
i_open_ws(@WS1);
popen_struct(2);
im_confirm_struct_status(2, PSTRUCT_STATUS_EMPTY, "failed: status was %d, expected PSTRUCT_STATUS_EMPTY --empty structure should have been created by popen_struct\n")

pset_line_colr_ind(3);
ppolyline(&lines1);
pclose_struct();
im_confirm_struct_status(2, PSTRUCT_STATUS_NOT_EMPTY, "failed: struct status %d should have been PSTRUCT_STATUS_NOT_EMPTY\n");


tendtest();
