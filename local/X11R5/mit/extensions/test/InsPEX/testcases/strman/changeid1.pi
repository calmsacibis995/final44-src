/* $XConsortium: changeid1.pi,v 5.1 91/02/16 10:02:30 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## changeid1.pi - test pchange_struct_id() where original structure
## is non-existent or empty.

tbegintest("changeid1", "change structure ID w/ non-existent & empty structs");

source macro.pi		/* general testing utility macros */
source strmacro.pi	/* macros for structure testing */
source apimacro.pi	/* macros for api-specific functions */

# initialize phigs 
i_open_phigs(NULL, PDEF_MEM_SIZE);
i_open_ws(1);

# pchange_struct_id with non-existent original structure.
# The resulting structure should be empty, and the original
# structure should continue to be non-existent.
# 1 is non-existent original, 2 is the result.
pchange_struct_id(1, 2);
im_confirm_struct_status(1, PSTRUCT_STATUS_NON_EXISTENT, 
	"failed: non-existent original structure exists with status %d\n");
im_confirm_struct_status(2, PSTRUCT_STATUS_EMPTY,
	"failed: from non-existent original, previously non-existent result structure should have been created as empty, has status %d\n");

# Create an empty structure by opening it and closing it.
popen_struct(3);
pclose_struct();

# pchange_struct_id with empty original structure.  
# Afterward, the original and resulting structures should
# both be empty.  
pchange_struct_id(3,4);
im_confirm_struct_status(3, PSTRUCT_STATUS_EMPTY,
	"failed: empty original structure should have remained empty, has status %d\n");
im_confirm_struct_status(4, PSTRUCT_STATUS_EMPTY,
	"failed: from empty original, result structure should be created as empty, has status %d\n");

tendtest();




