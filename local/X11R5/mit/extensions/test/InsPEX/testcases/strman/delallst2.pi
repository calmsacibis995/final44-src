/* $XConsortium: delallst2.pi,v 5.1 91/02/16 10:02:36 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## delallst2.pi - test pdel_all_structs() with multi-level posted structures.
## Create some, and delete, confirming with pinq_struct_status()
## and by inquiring posted structures.

tbegintest("delallst2.pi", "del_all_structs on multi-level structs");

source macro.pi		/* general testing utility macros */
source strmacro.pi	/* macros for structure testing */
source apimacro.pi	/* macros for api-specific functions */

# initialize phigs, opening two workstations
i_open_phigs(NULL, PDEF_MEM_SIZE);
i_open_ws(1);
i_open_ws(2);

# closed parent, open child case: structure 1 executes structure
# 2, which has a few things in it and is open.
# Structure 1 is posted to workstation 1, struct 2 to WS 2.
# After pdel_all_structs, 1 should be non-existent and
# 2 should be empty.

popen_struct(1);
pexec_struct(2);
pclose_struct();
ppost_struct(1, 1, 1.0);

popen_struct(2);
pset_marker_type(1);
pset_line_colr_ind(2);
ppost_struct(2, 2, 1.0);

pdel_all_structs();
im_confirm_struct_status(1, PSTRUCT_STATUS_NON_EXISTENT,
"failed: parent should have been deleted, has status %d%d\n");
im_confirm_struct_status(2, PSTRUCT_STATUS_EMPTY,
"failed: open child structure should have be empty, has status %d%d\n");

# confirm that neither structure is posted
poststat = i_is_posted_struct(1, 1, &priority);
im_ifneq(poststat, 0, "failed: deleted parent structure still posted\n", NULL);
poststat = i_is_posted_struct(2, 2, &priority);
im_ifneq(poststat, 0, "failed: deleted child structure still posted\n", NULL);

# confirm that one structure exists
pinq_struct_ids(0, 0, &err, &id, &num_structs);
im_ifneq(num_structs, 1, "failed: pdel_all_structs() with open structure left %d existing structs, expected 1\n", num_structs);
pclose_struct();

tendtest();




