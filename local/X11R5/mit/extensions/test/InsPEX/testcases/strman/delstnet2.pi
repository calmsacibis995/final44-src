/* $XConsortium: delstnet2.pi,v 5.1 91/02/16 10:02:37 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## delstnet2.pi - test pdel_struct() on simple open and closed
## single-level structures.

tbegintest("delstnet2","delete structure network on simple structures");

source macro.pi		/* general testing utility macros */
source strmacro.pi	/* macros for structure testing */
source apimacro.pi	/* macros for api-specific functions */

# initialize phigs 
i_open_phigs(NULL, PDEF_MEM_SIZE);
i_open_ws(1);

# empty closed structure case:
# open and close a structure to create it as empty,
# and delete it with pdel_struct_net(); it should then be non-existent
popen_struct(2);
pclose_struct();
pdel_struct_net(2, PFLAG_KEEP);
im_confirm_struct_status(2, PSTRUCT_STATUS_NON_EXISTENT,
    "failed: closed empty struct should have been deleted, has status %d\n");

# non-empty closed structure case:
# open a structure, put a couple of random primitives in it, and close
# it, then delete; it should be non-existent
popen_struct(3);
pset_marker_type(1);
pset_line_colr_ind(2);
pclose_struct();
pdel_struct_net(3, PFLAG_KEEP);
im_confirm_struct_status(3, PSTRUCT_STATUS_NON_EXISTENT,
"failed: closed non-empty struct should have been deleted, has status %d%d\n");

tendtest();




