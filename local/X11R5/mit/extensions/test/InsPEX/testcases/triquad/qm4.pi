
/* $XConsortium: qm4.pi,v 5.1 91/02/16 10:04:11 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/

## qm4.pi
## Test quad mesh with data geometry with lighting attribute
## positional and ambient light source 
##	. 4 vertices FACET_NONE/VERT_COORD
##	. 4 vertices FACET_NORMAL/VERT_COORD
##	. 4 vertices FACET_COLOUR_NORMAL/VERT_COORD
##	. 4 vertices FACET_NONE/VERT_COORD_NORMAL
##	. 4 vertices FACET_NONE/VERT_COORD_COLOUR_NORMAL

tbegintest("qm4","quad mesh with data - geometry and lighting attributes");

source macro.pi

# quad mesh data initialization 
# common data
dim = I_Pint_size(2,2);
pts1 = IA_Ppoint3(4, 0.3,0.6,0.0, 0.7,0.6,0.0, 0.5,0.5,0.5, 0.5,0.5,0.5);
pts2 = IA_Ppoint3(4, 0.7,0.6,0.0, 0.7,0.4,0.0, 0.5,0.5,0.5, 0.5,0.5,0.5);
pts3 = IA_Ppoint3(4, 0.5,0.5,0.5, 0.5,0.5,0.5, 0.3,0.4,0.0, 0.7,0.4,0.0);
pts4 = IA_Ppoint3(4, 0.3,0.6,0.0, 0.5,0.5,0.5, 0.3,0.4,0.0, 0.5,0.5,0.5);
pt1 = I_Ppoint3(0.3,0.6,0.0);
pt2 = I_Ppoint3(0.7,0.6,0.0);
pt3 = I_Ppoint3(0.5,0.5,0.5);
pt4 = I_Ppoint3(0.7,0.4,0.0);
pt5 = I_Ppoint3(0.3,0.4,0.0);
norm1 = I_Pvec3(  0.00, 0.9806, 0.1961);
norm2 = I_Pvec3(  0.9285, 0.00, 0.3714);
norm3 = I_Pvec3(  0.00,-0.9806, 0.1961);
norm4 = I_Pvec3( -0.9285, 0.00, 0.3714);
vdata1 = I_Pfacet_vdata_arr3(PVERT_COORD, pts1);
vdata2 = I_Pfacet_vdata_arr3(PVERT_COORD, pts2);
vdata3 = I_Pfacet_vdata_arr3(PVERT_COORD, pts3);
vdata4 = I_Pfacet_vdata_arr3(PVERT_COORD, pts4);

#       . FACET_NORMAL
fdata21 = I_Pfacet_data_arr3(PFACET_NORMAL, &norm1);
fdata22 = I_Pfacet_data_arr3(PFACET_NORMAL, &norm2);
fdata23 = I_Pfacet_data_arr3(PFACET_NORMAL, &norm3);
fdata24 = I_Pfacet_data_arr3(PFACET_NORMAL, &norm4);

#       . FACET_COLOUR_NORMAL
col3 = I_Pcoval(PMODEL_RGB, 1.0,1.0,0.2);
conorm31 = IA_Pconorm3(1,col3,norm1);
conorm32 = IA_Pconorm3(1,col3,norm2);
conorm33 = IA_Pconorm3(1,col3,norm3);
conorm34 = IA_Pconorm3(1,col3,norm4);
fdata31 = I_Pfacet_data_arr3(PFACET_COLOUR_NORMAL, conorm31);
fdata32 = I_Pfacet_data_arr3(PFACET_COLOUR_NORMAL, conorm32);
fdata33 = I_Pfacet_data_arr3(PFACET_COLOUR_NORMAL, conorm33);
fdata34 = I_Pfacet_data_arr3(PFACET_COLOUR_NORMAL, conorm34);

#       . VERT_COORD_NORMAL
ptnorm41 = IA_Pptnorm3(4,pt1,norm1,pt2,norm1,pt3,norm1,pt3,norm1);
ptnorm42 = IA_Pptnorm3(4,pt2,norm2,pt4,norm2,pt3,norm2,pt3,norm2);
ptnorm43 = IA_Pptnorm3(4,pt3,norm3,pt3,norm3,pt5,norm3,pt4,norm3);
ptnorm44 = IA_Pptnorm3(4,pt1,norm4,pt3,norm4,pt5,norm4,pt3,norm4);
vdata41 = I_Pfacet_vdata_arr3(PVERT_COORD_NORMAL, ptnorm41);
vdata42 = I_Pfacet_vdata_arr3(PVERT_COORD_NORMAL, ptnorm42);
vdata43 = I_Pfacet_vdata_arr3(PVERT_COORD_NORMAL, ptnorm43);
vdata44 = I_Pfacet_vdata_arr3(PVERT_COORD_NORMAL, ptnorm44);

#       . VERT_COORD_COLOUR_NORMAL

col5 = I_Pcoval(PMODEL_RGB, 1.0,1.0,0.2);
ptnorm51 = IA_Pptconorm3(4,pt1,col5,norm1,pt2,col5,norm1,pt3,col5,norm1,
	pt3,col5,norm1);
ptnorm52 = IA_Pptconorm3(4,pt2,col5,norm2,pt4,col5,norm2,pt3,col5,norm2,
	pt3,col5,norm2);
ptnorm53 = IA_Pptconorm3(4,pt3,col5,norm3,pt3,col5,norm3,pt5,col5,norm3,
	pt4,col5,norm3);
ptnorm54 = IA_Pptconorm3(4,pt1,col5,norm4,pt3,col5,norm4,pt5,col5,norm4,
	pt3,col5,norm4);
vdata51 = I_Pfacet_vdata_arr3(PVERT_COORD_COLOUR_NORMAL, ptnorm51);
vdata52 = I_Pfacet_vdata_arr3(PVERT_COORD_COLOUR_NORMAL, ptnorm52);
vdata53 = I_Pfacet_vdata_arr3(PVERT_COORD_COLOUR_NORMAL, ptnorm53);
vdata54 = I_Pfacet_vdata_arr3(PVERT_COORD_COLOUR_NORMAL, ptnorm54);

#       . VERT_COORD, back facing
pts61 = IA_Ppoint3(4, 0.7,0.6,0.0, 0.5,0.5,0.5, 0.3,0.6,0.0, 0.3,0.6,0.0);
pts62 = IA_Ppoint3(4, 0.5,0.5,0.5, 0.7,0.6,0.0, 0.7,0.4,0.0, 0.7,0.4,0.0);
pts63 = IA_Ppoint3(4, 0.3,0.4,0.0, 0.5,0.5,0.5, 0.7,0.4,0.0, 0.7,0.4,0.0);
pts64 = IA_Ppoint3(4, 0.5,0.5,0.5, 0.3,0.4,0.0, 0.3,0.6,0.0, 0.3,0.6,0.0);
vdata61 = I_Pfacet_vdata_arr3(PVERT_COORD, pts61);
vdata62 = I_Pfacet_vdata_arr3(PVERT_COORD, pts62);
vdata63 = I_Pfacet_vdata_arr3(PVERT_COORD, pts63);
vdata64 = I_Pfacet_vdata_arr3(PVERT_COORD, pts64);
 
# light attribute initialization 
ia = IA_Pint(2,1,2);
active = I_Pint_list(2,ia);
deactive = I_Pint_list(0,0);
yellow = I_Pgcolr(PMODEL_RGB,1.0,1.0,0.2);
white = I_Pgcolr(PMODEL_RGB,1.0,1.0,1.0);
mag = I_Pgcolr(PMODEL_RGB,1.0,0.2,1.0);
src = I_Ppoint3(0.45,0.65,0.7);
possrc = I_Plight_src_bundle(PLIGHT_POSITIONAL,white,src,1.0,0.0);
ambsrc = I_Plight_src_bundle(PLIGHT_AMBIENT,mag); 
aprop = I_Prefl_props(0.5,1.0,1.0,white,1.0,0.0);

# setup: open phigs, a workstation and a structure, post structure 
i_open_phigs(NULL,0);
i_open_x_ws(1,&xdisplay,&xwindow,0,0,200,200);
popen_struct(1);
ppost_struct(1,1,1.0);

pset_int_style(PSTYLE_SOLID);
pset_int_colr(&yellow);
pset_int_shad_meth(PSD_NONE);
pset_refl_eqn(PREFL_AMB_DIFF);
pset_refl_props(&aprop);
pset_light_src_rep(1,1,&possrc);
pset_light_src_rep(1,2,&ambsrc);
pset_light_src_state(&active,&deactive);

# test front face
foreach @fflag @vflag @fd1 @vd1 @fd2 @vd2 
	@fd3 @vd3 @fd4 @vd4 @imagename @imagetext(

	PFACET_NONE;PVERT_COORD;
	NULL;&vdata1;NULL;&vdata2;NULL;&vdata3;NULL;&vdata4;
	"qm4_1";"quad mesh: FACET_NONE,VERT_COORD";
  
	PFACET_NORMAL;PVERT_COORD;
	&fdata21;&vdata1;&fdata22;&vdata2;&fdata23;&vdata3;&fdata24;&vdata4;
	"qm4_2";"quad mesh: FACET_NORMAL,VERT_COORD";

	PFACET_COLOUR_NORMAL;PVERT_COORD;
	&fdata31;&vdata1;&fdata32;&vdata2;&fdata33;&vdata3;&fdata34;&vdata4;
	"qm4_3";"quad mesh: FACET_COLOUR_NORMAL,VERT_COORD";

	PFACET_NONE;PVERT_COORD_NORMAL;
	NULL;&vdata41;NULL;&vdata42;NULL;&vdata43;NULL;&vdata44;
	"qm4_4";"quad mesh: FACET_NONE,VERT_COORD_NORMAL";

	PFACET_NONE;PVERT_COORD_COLOUR_NORMAL;
	NULL;&vdata51;NULL;&vdata52;NULL;&vdata53;NULL;&vdata54;
	"qm4_5";"quad mesh: FACET_NONE,VERT_COORD_COLOUR_NORMAL";
)
	pquad_mesh3_data(@fflag,@vflag,PMODEL_RGB,&dim,@fd1,@vd1);
	pquad_mesh3_data(@fflag,@vflag,PMODEL_RGB,&dim,@fd2,@vd2);
	pquad_mesh3_data(@fflag,@vflag,PMODEL_RGB,&dim,@fd3,@vd3);
	pquad_mesh3_data(@fflag,@vflag,PMODEL_RGB,&dim,@fd4,@vd4);
	# verify image
	i_check_image(@imagename,xdisplay,xwindow,0,0,199,199,@imagetext);
	i_pause();
	pdel_elem();
	pdel_elem();
	pdel_elem();
	pdel_elem();
end

# test back face
pempty_struct(1);
pset_face_disting_mode(PDISTING_YES);
pset_back_int_style(PSTYLE_SOLID);
pset_back_int_colr(&yellow);
pset_back_refl_eqn(PREFL_AMB_DIFF);
pset_back_int_shad_meth(PSD_NONE);
pset_back_refl_props(&aprop);
pset_light_src_state(&active,&deactive);
pquad_mesh3_data(PFACET_NONE,PVERT_COORD,PMODEL_RGB,&dim,NULL,&vdata61);
pquad_mesh3_data(PFACET_NONE,PVERT_COORD,PMODEL_RGB,&dim,NULL,&vdata62);
pquad_mesh3_data(PFACET_NONE,PVERT_COORD,PMODEL_RGB,&dim,NULL,&vdata63);
pquad_mesh3_data(PFACET_NONE,PVERT_COORD,PMODEL_RGB,&dim,NULL,&vdata64);
# verify image
i_check_image("qm4_6",xdisplay,xwindow,0,0,199,199,
	"FACET_NONE,VERT_COORD, back facing");
i_pause();


tendtest();
