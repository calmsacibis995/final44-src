
/* $XConsortium: ts1.pi,v 5.1 91/02/16 10:03:58 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## ts1.pi
## Test triangle strip geometry and facet/vertex colour
## 	. 3 vertices FACET_COLOUR (indirect) VERT_COORD 
## 	. 4 vertices FACET_NONE,VERT_COORD_COLOUR (RGB)
## 	. 4 vertices FACET_COLOUR (RGB) VERT_COORD 
## 	. 5 vertices FACET_NONE,VERT_COORD
## 	. 3 vertices FACET_COLOUR (RGB) VERT_COORD_COLOUR (RGB) 
source macro.pi

# data structures initialization section
tbegintest("ts1","triangle strip with data - geometry and facet/vertex colour");

# initialize geometry for triangle strip 

# 3 vertex - facet indirect colour, vertex coordinate
colarr2 = IA_Pcoval(1,PINDIRECT, 4);
fdata2 = I_Pfacet_data_arr3(PFACET_COLOUR, colarr2);
ptarr2 = IA_Ppoint3(3, 0.4,0.1,0.0, 0.5,0.2,1.0, 0.6,0.1,0.0);
vdata2 = I_Pfacet_vdata_arr3(PVERT_COORD, ptarr2);

# 4 vertex - facet none, vertex coordinate and RGB colour
p31 = I_Ppoint3(0.1,0.7,1.0);
p32 = I_Ppoint3(0.1,0.5,0.0);
p33 = I_Ppoint3(0.3,0.7,1.0);
p34 = I_Ppoint3(0.3,0.5,1.0);
c31 = I_Pcoval(PMODEL_RGB,0.0,0.0,1.0);
c32 = I_Pcoval(PMODEL_RGB,1.0,1.0,0.0);
c33 = I_Pcoval(PMODEL_RGB,0.0,1.0,0.0);
c34 = I_Pcoval(PMODEL_RGB,0.0,1.0,0.0);
ptcolarr3 = IA_Pptco3(4,p31,c31,p32,c32,p33,c33,p34,c34);
vdata3 = I_Pfacet_vdata_arr3(PVERT_COORD_COLOUR, ptcolarr3);

# 4 vertex - facet RGB colour, vertex coordinate
colarr4 = IA_Pcoval(2,PMODEL_RGB, 1.0,0.0,0.0, 0.0,0.0,1.0);
fdata4 = I_Pfacet_data_arr3(PFACET_COLOUR, colarr4);
ptarr4 = IA_Ppoint3(4,0.4,0.7,1.0, 0.4,0.5,0.0,
                      0.6,0.7,1.0, 0.6,0.5,0.0);
vdata4 = I_Pfacet_vdata_arr3(PVERT_COORD, ptarr4);

# 5 vertex - facet none, vertex coordinate
ptarr5 = IA_Ppoint3(5,0.1,0.8,1.0, 0.2,0.9,0.0,
                      0.3,0.8,1.0, 0.4,0.9,0.0,
                      0.5,0.8,1.0);
vdata5 = I_Pfacet_vdata_arr3(PVERT_COORD, ptarr5);

# 3 vertex - facet RGB colour, vertex coordinate and RGB colour
colarr6 = IA_Pcoval(1,PMODEL_RGB, 1.0,0.0,0.0);
fdata6 = I_Pfacet_data_arr3(PFACET_COLOUR, colarr6);
p61 = I_Ppoint3(0.6,0.8,1.0);
p62 = I_Ppoint3(0.7,0.9,0.0);
p63 = I_Ppoint3(0.8,0.8,1.0);
c61 = I_Pcoval(PMODEL_RGB,1.0,1.0,1.0);
c62 = I_Pcoval(PMODEL_RGB,1.0,0.0,1.0);
c63 = I_Pcoval(PMODEL_RGB,0.0,1.0,1.0);
ptcolarr6 = IA_Pptco3(3,p61,c61,p62,c62,p63,c63);
vdata6 = I_Pfacet_vdata_arr3(PVERT_COORD_COLOUR, ptcolarr6);

# state initialization 
i_open_phigs(NULL,0);
i_open_x_ws(1,&xdisplay,&xwindow,0,0,200,200);
popen_struct(1);

pset_int_shad_meth(PSD_NONE);
pset_int_style(PSTYLE_SOLID);
pset_int_colr_ind(1);

# triangle strip with data

# 3 vertex - facet indirect colour, vertex coordinate
ptri_strip3_data(PFACET_COLOUR,PVERT_COORD,PINDIRECT,3,&fdata2,&vdata2)

# 4 vertex - facet none, vertex coordinate and RGB colour
ptri_strip3_data(PFACET_NONE,PVERT_COORD_COLOUR,PMODEL_RGB,4,NULL,&vdata3)

# 4 vertex - facet RGB colour, vertex coordinate
ptri_strip3_data(PFACET_COLOUR,PVERT_COORD,PMODEL_RGB,4,&fdata4,&vdata4)

# 5 vertex - facet none, vertex coordinate
ptri_strip3_data(PFACET_NONE,PVERT_COORD,PMODEL_RGB,5,NULL,&vdata5)

# 3 vertex - facet RGB colour, vertex coordinate and RGB colour
ptri_strip3_data(PFACET_COLOUR,PVERT_COORD_COLOUR,PMODEL_RGB,3,&fdata6,&vdata6)

ppost_struct(1,1,1.0)

# verify image
i_check_image("ts1",xdisplay,xwindow,0,0,199,199,
	"triangle strip with data - geometry and colour");

im_def_grid();
i_pause();

tendtest();
