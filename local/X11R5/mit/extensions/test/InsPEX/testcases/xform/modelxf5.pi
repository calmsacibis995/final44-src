
/* $XConsortium: modelxf5.pi,v 5.1 91/02/16 10:01:32 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## modelxf5.pi -  
## Test requirements:
##   Test that modelling clipping indicator attribute,which is set in a parent
##   structure, is inherited by a child structure.
##   Test that modelling clipping indicator attribute, which is set in a child
##   structure, affects only the child structure, not the parent.

source macro.pi

tbegintest("modelxf5","modelling clipping indicator attribute inheritance");

# initialize data for a fillareas, test points and a halfspace
farea1 = IA_Ppoint(4, 0.25,0.25,  0.25,0.35, 0.35,0.35, 0.35,0.25);
farea2 = IA_Ppoint(4, 0.75,0.25,  0.75,0.35, 0.85,0.35, 0.85,0.25);
farea3 = IA_Ppoint(4, 0.25,0.75,  0.25,0.85, 0.35,0.85, 0.35,0.75);
farea4 = IA_Ppoint(4, 0.75,0.75,  0.75,0.85, 0.85,0.85, 0.85,0.75);
fa1 = I_Ppoint_list(4,farea1);
fa2 = I_Ppoint_list(4,farea2);
fa3 = I_Ppoint_list(4,farea3);
fa4 = I_Ppoint_list(4,farea4);
testpt1 = I_Ppoint3 (0.3,0.3,0.0);
testpt2 = I_Ppoint3 (0.8,0.3,0.0);
testpt3 = I_Ppoint3 (0.3,0.8,0.0);
testpt4 = I_Ppoint3 (0.8,0.8,0.0);

pt = I_Ppoint(0.95,0.5);
norm = I_Pvec(1.0,0.0);
hs = I_Phalf_space(pt,norm);
hslst = I_Phalf_space_list(1,hs);

# set up phigs, a workstation , post and open a structure , and a 
# clipping volume that should result in clipping each primitivs entirely
# if modelling clipping indicator in ON.

i_open_phigs(NULL,PDEF_MEM_SIZE);
i_open_x_ws(1,&xdisplay,&xwindow,0,0,200,200);
popen_struct(1);
ppost_struct(1,1,1.0);
pset_model_clip_vol(PMC_REPLACE,&hslst);


# edit parent structure
pset_int_style(PSTYLE_SOLID);
pfill_area(&fa1);
pexec_struct(2);
pfill_area(&fa2);
pclose_struct();

popen_struct(2);
pfill_area(&fa3);
pset_model_clip_ind(PIND_CLIP);
pfill_area(&fa4);
pclose_struct();

#fillarea1,2 from parent and fillarea3 from child structure shouldn't be clipped
im_confirm_point3(xdisplay,xwindow,1,0,testpt1,1,5,1,"lower left fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt2,1,5,1,"lower right fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt3,1,5,1,"upper left fill area");

#fillarea4 from child structure should be clipped
im_confirm_point3(xdisplay,xwindow,1,0,testpt4,1,5,0,"upper right fill area");

i_pause();

tendtest();
