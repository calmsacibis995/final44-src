
/* $XConsortium: modelxf7.pi,v 5.1 91/02/16 10:01:33 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## modelxf7.pi -  
## Test requirements:
##   Test that modelling clipping volume(3) attribute,which is set in a parent
##   structure, is inherited by a child structure.
##   Test that modelling clipping volume(3) attribute, which is set in a child
##   structure, affects only the child structure, not the parent.

source macro.pi

tbegintest("modelxf7","modelling clipping volume attribute inheritance");

# INITIALIZE: data for a fillareas, test points and a halfspace for 2D/3D cases
farea1 = IA_Ppoint(4, 0.45,0.45,  0.45,0.55, 0.55,0.55, 0.55,0.45);
farea2 = IA_Ppoint(4, 0.70,0.20,  0.70,0.30, 0.80,0.30, 0.80,0.20);
farea3 = IA_Ppoint(4, 0.20,0.70,  0.20,0.80, 0.30,0.80, 0.30,0.70);
farea4 = IA_Ppoint(4, 0.70,0.70,  0.70,0.80, 0.80,0.80, 0.80,0.70);
fa1 = I_Ppoint_list(4,farea1);
fa2 = I_Ppoint_list(4,farea2);
fa3 = I_Ppoint_list(4,farea3);
fa4 = I_Ppoint_list(4,farea4);
 
farea31 = IA_Ppoint3(4,0.45,0.45,0.0,0.45,0.55,0.0,0.55,0.55,0.0,0.55,0.45,0.0);
farea32 = IA_Ppoint3(4, 0.7,0.2,0.0,  0.7,0.3,0.0, 0.8,0.3,0.0, 0.8,0.2,0.0);
farea33 = IA_Ppoint3(4, 0.2,0.7,0.0,  0.2,0.8,0.0, 0.3,0.8,0.0, 0.3,0.7,0.0);
farea34 = IA_Ppoint3(4, 0.7,0.7,0.0,  0.7,0.8,0.0, 0.8,0.8,0.0, 0.8,0.7,0.0);
fa31 = I_Ppoint_list(4,farea31);
fa32 = I_Ppoint_list(4,farea32);
fa33 = I_Ppoint_list(4,farea33);
fa34 = I_Ppoint_list(4,farea34);

testpt11 = I_Ppoint3 (0.45,0.45,0.0);
testpt12 = I_Ppoint3 (0.55,0.55,0.0);
testpt21 = I_Ppoint3 (0.7,0.2,0.0);
testpt22 = I_Ppoint3 (0.8,0.3,0.0);
testpt31 = I_Ppoint3 (0.2,0.7,0.0);
testpt32 = I_Ppoint3 (0.3,0.8,0.0);
testpt41 = I_Ppoint3 (0.7,0.7,0.0);
testpt42 = I_Ppoint3 (0.8,0.8,0.0);

pt1 = I_Ppoint(0.5,0.5);
norm1 = I_Pvec(1.0,1.0);
hs1 = I_Phalf_space(pt1,norm1);
hslst1 = I_Phalf_space_list(1,hs1);

pt2 = I_Ppoint(0.75,0.75);
norm2 = I_Pvec(1.0,1.0);
hs2 = I_Phalf_space(pt2,norm2);
hslst2 = I_Phalf_space_list(1,hs2);

pt3_1 = I_Ppoint3(0.5,0.5,0.0);
norm3_1 = I_Pvec3(1.0,1.0,0.0);
hs3_1 = I_Phalf_space3(pt3_1,norm3_1);
hslst3_1 = I_Phalf_space_list3(1,hs3_1);

pt3_2 = I_Ppoint3(0.75,0.75,0.0);
norm3_2 = I_Pvec3(1.0,1.0,0.0);
hs3_2 = I_Phalf_space3(pt3_2,norm3_2);
hslst3_2 = I_Phalf_space_list3(1,hs3_2);

# SETUP: open phigs, a workstation , post and open a structure , 
# and set clipping indicator ON

i_open_phigs(NULL,PDEF_MEM_SIZE);
i_open_x_ws(1,&xdisplay,&xwindow,0,0,200,200);
popen_struct(1);
ppost_struct(1,1,1.0);
pset_model_clip_ind(PIND_CLIP);

# OPERATIONS: 2D case

# edit parent structure

pset_model_clip_vol(PMC_REPLACE,&hslst1);
pfill_area(&fa1);
pexec_struct(2);
pfill_area(&fa2);
pclose_struct();

# edit child structure

popen_struct(2);
pfill_area(&fa3);
pset_model_clip_vol(PMC_REPLACE,&hslst2);
pfill_area(&fa4);
pclose_struct();

# VERIFICATIONS: 2D case

# All four fill area should be clipped diagonally.
im_confirm_point3(xdisplay,xwindow,1,0,testpt11,0,5,1,
	"(2D)LL corner of center fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt12,1,5,1,
	"(2D)UR corner of center fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt21,0,5,1,
	"(2D)LL corner of LR fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt22,1,5,1,
	"(2D)UR corner of LR fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt31,0,5,1,
	"(2D)LL corner of UL fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt32,1,5,1,
	"(2D)UR corner of UL fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt41,0,5,1,
	"(2D)LL corner of UR fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt42,1,5,1,
	"(2D)UR corner of UR fill area");
i_pause();

# CLEANUP: 2D case, SETUP: 3D case - empty str 1&2, re-open str1
# set modelling clip indicator ON
pempty_struct(1);
pempty_struct(2);
popen_struct(1);
pset_model_clip_ind(PIND_CLIP);

# OPERATIONS: 3D case

# edit parent structure

pset_model_clip_vol3(PMC_REPLACE,&hslst3_1);
pfill_area3(&fa31);
pexec_struct(2);
pfill_area3(&fa32);
pclose_struct();

# edit child structure

popen_struct(2);
pfill_area3(&fa33);
pset_model_clip_vol3(PMC_REPLACE,&hslst3_2);
pfill_area3(&fa34);
pclose_struct();

# VERIFICATIONS: 3D case

# All four fill area should be clipped diagonally.
im_confirm_point3(xdisplay,xwindow,1,0,testpt11,0,5,1,
	"(3D)LL corner of center fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt12,1,5,1,
	"(3D)UR corner of center fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt21,0,5,1,
	"(3D)LL corner of LR fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt22,1,5,1,
	"(3D)UR corner of LR fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt31,0,5,1,
	"(3D)LL corner of UL fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt32,1,5,1,
	"(3D)UR corner of UL fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt41,0,5,1,
	"(3D)LL corner of UR fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt42,1,5,1,
	"(3D)UR corner of UR fill area");

i_pause();

tendtest();
