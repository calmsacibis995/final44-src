
/* $XConsortium: modelxf8.pi,v 5.1 91/02/16 10:01:34 rws Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## modelxf8.pi -  
## Test requirements:
##   Test restore modelling clipping volume resets the current modelling
##   clipping volume to the value inherited by the structure being traversed.

source macro.pi

tbegintest("modelxf8","restore modelling clipping volume");

# INITIALIZE: data for a fillareas, test points and a halfspace for 2D case
farea1 = IA_Ppoint(4, 0.20,0.70,  0.20,0.80, 0.30,0.80, 0.30,0.70);
farea2 = IA_Ppoint(4, 0.70,0.70,  0.70,0.80, 0.80,0.80, 0.80,0.70);
fa1 = I_Ppoint_list(4,farea1);
fa2 = I_Ppoint_list(4,farea2);
 
testpt11 = I_Ppoint3 (0.2,0.7,0.0);
testpt12 = I_Ppoint3 (0.3,0.8,0.0);
testpt21 = I_Ppoint3 (0.7,0.7,0.0);
testpt22 = I_Ppoint3 (0.8,0.8,0.0);

pt1 = I_Ppoint(0.75,0.75);
norm1 = I_Pvec(-1.0,-1.0);
hs1 = I_Phalf_space(pt1,norm1);
hslst1 = I_Phalf_space_list(1,hs1);

pt2 = I_Ppoint(0.25,0.75);
norm2 = I_Pvec(1.0,1.0);
hs2 = I_Phalf_space(pt2,norm2);
hslst2 = I_Phalf_space_list(1,hs2);

# SETUP: open phigs, a workstation , post and open a structure , 
# and set clipping indicator ON

i_open_phigs(NULL,PDEF_MEM_SIZE);
i_open_x_ws(1,&xdisplay,&xwindow,0,0,200,200);
popen_struct(1);
ppost_struct(1,1,1.0);
pset_model_clip_ind(PIND_CLIP);

# OPERATIONS: 

# edit parent structure: set a clip volume

pset_model_clip_vol(PMC_REPLACE,&hslst1);
pexec_struct(2);
pclose_struct();

# edit child structure: set another clip volume
popen_struct(2);
pset_model_clip_vol(PMC_REPLACE,&hslst2);
pfill_area(&fa1);
prestore_model_clip_vol();
pfill_area(&fa2);
pclose_struct();

# VERIFICATIONS: 

# LHS fill area: LL corner should be clipped with child's clip volume
# RHS fill area: UR corner should be clipped with parent's clip volume
im_confirm_point3(xdisplay,xwindow,1,0,testpt11,0,5,1,
	"LL corner of LHS fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt12,1,5,1,
	"UR corner of LHS fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt21,1,5,1,
	"LL corner of RHS fill area");
im_confirm_point3(xdisplay,xwindow,1,0,testpt22,0,5,1,
	"UR corner of RHS fill area");

i_pause();

tendtest();
