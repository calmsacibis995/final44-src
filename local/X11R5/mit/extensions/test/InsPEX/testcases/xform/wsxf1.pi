/* $XConsortium: wsxf1.pi,v 5.2 91/11/26 14:54:44 hersh Exp $ */

/*****************************************************************
Copyright (c) 1989, 1990, 1991,1990 by Sun Microsystems, Inc. and the X Consortium.

                        All Rights Reserved

Permission to use, copy, modify, and distribute this software and its 
documentation for any purpose and without fee is hereby granted, 
provided that the above copyright notice appear in all copies and that
both that copyright notice and this permission notice appear in 
supporting documentation, and that the names of Sun Microsystems,
the X Consortium, and MIT not be used in advertising or publicity 
pertaining to distribution of the software without specific, written 
prior permission.  

SUN MICROSYSTEMS DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, 
INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT 
SHALL SUN MICROSYSTEMS BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL 
DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.

******************************************************************/


## wsxf1.pi -  
## Verify the default workstation transformation
## Set and inquire workstation transformation 
## verify by comparing the values inquired against expected

source macro.pi
source xpmacro.pi

tbegintest("wsxf1","set and inquire workstation transformation");


# INITIALIZE: workstation type, 2D & 3D ws window and viewport
wstype = i_get_ws_type("phigs_ws_type_x_drawable");
wswindow = I_Plimit(0.0,1.0, 0.0,1.0);
wsviewport = I_Plimit(0.0,100.0, 0.0,100.0);
wswindow3 = I_Plimit3(0.0,1.0, 0.0,1.0, 0.0,1.0);
wsviewport3 = I_Plimit3(0.0,100.0, 0.0,100.0, 0.0,1.0);

# SETUP: open phigs, workstation
i_open_phigs(NULL,PDEF_MEM_SIZE);
i_make_xwindow(&display,&window1,&conn1,0,0,100,100);
popen_ws(1,&conn1,wstype);


# OPERATION and VERIFICATION begins:
# testing 2D case
# verify default ws transformation
im_confirm_wsxform(PUPD_NOT_PEND,wswindow,wswindow,wsviewport,wsviewport,
	"failed: default ws window,viewport(2D) != exp\n");

# set and inquire ws transformation 
pset_ws_win(1,&wswindow);
pset_ws_vp(1,&wsviewport);
im_confirm_wsxform(PUPD_NOT_PEND,wswindow,wswindow,wsviewport,wsviewport,
	"failed: set and inquire ws window,viewport(2D) != exp\n");

# CLEANUP and re-SETUP: close ws and re-open ws
pclose_ws(1);
XDestroyWindow(display,window1);
sleep(1);
i_make_xwindow(&display,&window1,&conn1,0,0,100,100);
popen_ws(1,&conn1,wstype);

# testing 3D case
# verify default ws transformation3
im_confirm_wsxform3(PUPD_NOT_PEND,wswindow3,wswindow3,wsviewport3,wsviewport3,
	"failed: default ws window,viewport(3D) != exp\n");

# set and inquire ws transformation3 
pset_ws_win3(1,&wswindow3);
pset_ws_vp3(1,&wsviewport3);
im_confirm_wsxform3(PUPD_NOT_PEND,wswindow3,wswindow3,wsviewport3,wsviewport3,
	"failed: set and inquire ws window,viewport(3D): inq != exp\n");

tendtest()
