# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.51 89/12/12 12:37:30 jim Exp $

# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#

# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit hpbsd.cf to change

# platform:  $XConsortium: hpbsd.cf,v 1.1 91/09/27 12:10:52 mark Exp $

# operating system:             BSD 4.4Alpha

# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

            SHELL = 	/bin/sh

              TOP = ../../../.
      CURRENT_DIR = ./fonts/bdf/misc

               AR = ar clq
  BOOTSTRAPCFLAGS =
               CC = gcc
               AS = as

         COMPRESS = compress
              CPP = /usr/libexec/gcc2/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -E $(STD_CPP_DEFINES)
          INSTALL = install
               LD = ld
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
     STD_INCLUDES =
  STD_CPP_DEFINES = -traditional
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES =
             TAGS = ctags

    PROTO_DEFINES =

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -g kmem -m 2755

     TOP_INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -O
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)

           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS)

   LDCOMBINEFLAGS = -X -r
      DEPENDFLAGS =

        MACROFILE = hpbsd.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)
        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules 			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def 			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.138.1.1 92/11/11 09:49:19 rws Exp $

# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules

          PATHSEP = /
        USRLIBDIR = /usr/lib
           BINDIR = /usr/bin/X11
          INCROOT = /usr/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = /usr/man
    MANSOURCEPATH = $(MANPATH)/man
        MANSUFFIX = n
     LIBMANSUFFIX = 3
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
           NLSDIR = $(LIBDIR)/nls
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = $(IMAKESRC)/imake
           DEPEND = $(DEPENDSRC)/makedepend
              RGB = $(RGBSRC)/rgb

            FONTC = $(BDFTOPCFSRC)/bdftopcf

        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
        MKDIRHIER = 	/bin/sh $(SCRIPTSRC)/mkdirhier.sh

        CONFIGSRC = $(TOP)/config
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
         FSLIBSRC = $(FONTSRC)/lib/fs
    FONTSERVERSRC = $(FONTSRC)/server
     EXTENSIONSRC = $(TOP)/extensions
         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
        PEXLIBSRC = $(EXTENSIONSRC)/lib/PEXlib
      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX

  DEPEXTENSIONLIB = $(EXTENSIONSRC)/lib/libXext.a
     EXTENSIONLIB = 			  $(DEPEXTENSIONLIB)

          DEPXLIB = $(DEPEXTENSIONLIB) $(XLIBSRC)/libX11.a
             XLIB = $(EXTENSIONLIB) 			 $(XLIBSRC)/libX11.a

      DEPXAUTHLIB = $(XAUTHSRC)/libXau.a
         XAUTHLIB = 			 $(DEPXAUTHLIB)
      DEPXDMCPLIB = $(XDMCPLIBSRC)/libXdmcp.a
         XDMCPLIB = 			 $(DEPXDMCPLIB)

        DEPXMULIB = $(XMUSRC)/libXmu.a
           XMULIB = 			 $(DEPXMULIB)

       DEPOLDXLIB = $(OLDXLIBSRC)/liboldX.a
          OLDXLIB = 			 $(DEPOLDXLIB)

      DEPXTOOLLIB = $(TOOLKITSRC)/libXt.a
         XTOOLLIB = 			 $(DEPXTOOLLIB)

        DEPXAWLIB = $(AWIDGETSRC)/libXaw.a
           XAWLIB = 			 $(DEPXAWLIB)

        DEPXILIB = $(XILIBSRC)/libXi.a
           XILIB = 			 $(DEPXILIB)

       DEPPEXLIB = $(PEXLIBSRC)/libPEX5.a
          PEXLIB = 			 $(DEPPEXLIB)

        DEPPHIGSLIB = $(PHIGSLIBSRC)/libphigs.a
           PHIGSLIB = 			 $(DEPPHIGSLIB)

       DEPXBSDLIB = $(LIBSRC)/Berk/libXbsd.a
          XBSDLIB = 			 $(DEPXBSDLIB)

 LINTEXTENSIONLIB = $(EXTENSIONSRC)/lib/llib-lXext.ln
         LINTXLIB = $(XLIBSRC)/llib-lX11.ln
          LINTXMU = $(XMUSRC)/llib-lXmu.ln
        LINTXTOOL = $(TOOLKITSRC)/llib-lXt.ln
          LINTXAW = $(AWIDGETSRC)/llib-lXaw.ln
           LINTXI = $(XILIBSRC)/llib-lXi.ln
          LINTPEX = $(PEXLIBSRC)/llib-lPEX5.ln
        LINTPHIGS = $(PHIGSLIBSRC)/llib-lphigs.ln

          DEPLIBS = $(LOCAL_LIBRARIES)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $

# -------------------------------------------------------------------------
# start of Imakefile

# $XConsortium: Imakefile,v 1.31 91/07/18 11:51:41 gildea Exp $
OBJS = 5x7.pcf 5x8.pcf 6x9.pcf 6x10.pcf 6x12.pcf 	6x13.pcf 6x13B.pcf 7x13.pcf 7x13B.pcf 8x13.pcf 	8x13B.pcf 9x15.pcf 9x15B.pcf 10x20.pcf 	cursor.pcf deccurs.pcf decsess.pcf olcursor.pcf 	olgl10.pcf olgl12.pcf olgl14.pcf olgl19.pcf 	nil2.pcf clB6x10.pcf clB6x12.pcf clB8x10.pcf 	clB8x12.pcf clB8x13.pcf clB8x14.pcf clB8x16.pcf 	clB8x8.pcf clB9x15.pcf clI6x12.pcf clI8x8.pcf 	clR4x6.pcf clR5x10.pcf clR5x6.pcf clR5x8.pcf 	clR6x10.pcf clR6x12.pcf clR6x13.pcf clR6x6.pcf 	clR6x8.pcf clR7x10.pcf clR7x12.pcf clR7x14.pcf 	clR7x8.pcf clR8x10.pcf clR8x12.pcf clR8x13.pcf 	clR8x14.pcf clR8x16.pcf clR8x8.pcf clR9x15.pcf 	heb6x13.pcf heb8x13.pcf 	k14.pcf 7x14.pcf 7x14B.pcf 7x14rk.pcf 	12x24.pcf 12x24rk.pcf 8x16.pcf 8x16rk.pcf 	jiskan16.pcf jiskan24.pcf 	hanglg16.pcf hanglm16.pcf hanglm24.pcf

FONTINSTDIR = $(FONTDIR)/misc

all::  $(OBJS)

all:: fonts.dir

fonts.dir:  $(OBJS)
	$(MKFONTDIR) .

clean::
	$(RM) fonts.dir

clean::
	$(RM) *.snf *.snf.Z *.pcf *.pcf.Z

5x7.pcf:  5x7.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

5x8.pcf:  5x8.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

6x9.pcf:  6x9.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

6x10.pcf:  6x10.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

6x12.pcf:  6x12.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

6x13.pcf:  6x13.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

6x13B.pcf:  6x13B.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

7x13.pcf:  7x13.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

7x13B.pcf:  7x13B.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

8x13.pcf:  8x13.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

8x13B.pcf:  8x13B.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

9x15.pcf:  9x15.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

9x15B.pcf:  9x15B.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

10x20.pcf:  10x20.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

cursor.pcf:  cursor.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

deccurs.pcf:  deccurs.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

decsess.pcf:  decsess.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

olcursor.pcf:  olcursor.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

olgl10.pcf:  olgl10.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

olgl12.pcf:  olgl12.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

olgl14.pcf:  olgl14.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

olgl19.pcf:  olgl19.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

nil2.pcf:  nil2.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clB6x10.pcf:  clB6x10.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clB6x12.pcf:  clB6x12.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clB8x10.pcf:  clB8x10.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clB8x12.pcf:  clB8x12.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clB8x13.pcf:  clB8x13.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clB8x14.pcf:  clB8x14.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clB8x16.pcf:  clB8x16.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clB8x8.pcf:  clB8x8.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clB9x15.pcf:  clB9x15.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clI6x12.pcf:  clI6x12.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clI8x8.pcf:  clI8x8.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR4x6.pcf:  clR4x6.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR5x10.pcf:  clR5x10.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR5x6.pcf:  clR5x6.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR5x8.pcf:  clR5x8.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR6x10.pcf:  clR6x10.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR6x12.pcf:  clR6x12.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR6x13.pcf:  clR6x13.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR6x6.pcf:  clR6x6.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR6x8.pcf:  clR6x8.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR7x10.pcf:  clR7x10.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR7x12.pcf:  clR7x12.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR7x14.pcf:  clR7x14.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR7x8.pcf:  clR7x8.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR8x10.pcf:  clR8x10.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR8x12.pcf:  clR8x12.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR8x13.pcf:  clR8x13.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR8x14.pcf:  clR8x14.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR8x16.pcf:  clR8x16.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR8x8.pcf:  clR8x8.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

clR9x15.pcf:  clR9x15.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

heb6x13.pcf:  heb6x13.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

heb8x13.pcf:  heb8x13.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

k14.pcf:  k14.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

7x14.pcf:  7x14.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

7x14B.pcf:  7x14B.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

7x14rk.pcf:  7x14rk.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

12x24.pcf:  12x24.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

12x24rk.pcf:  12x24rk.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

8x16.pcf:  8x16.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

8x16rk.pcf:  8x16rk.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

jiskan16.pcf:  jiskan16.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

jiskan24.pcf:  jiskan24.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

hanglg16.pcf:  hanglg16.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

hanglm16.pcf:  hanglm16.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

hanglm24.pcf:  hanglm24.bdf
	$(FONTC) $(FONTCFLAGS) $? -o $@

install:: $(OBJS)
	-@if [ -d $(DESTDIR)$(FONTINSTDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(FONTINSTDIR)); fi
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(OBJS); do \
	(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i $(DESTDIR)$(FONTINSTDIR)); \
	done

install::  fonts.dir
	-@if [ -d $(DESTDIR)$(FONTINSTDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(FONTINSTDIR)); fi
	$(INSTALL) -c $(INSTDATFLAGS) fonts.dir $(DESTDIR)$(FONTINSTDIR)

install::  fonts.alias
	-@if [ -d $(DESTDIR)$(FONTINSTDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(FONTINSTDIR)); fi
	$(INSTALL) -c $(INSTDATFLAGS) fonts.alias $(DESTDIR)$(FONTINSTDIR)

depend::

# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) "#"*

Makefile:: $(IMAKE)

$(IMAKE):
	@(cd $(IMAKESRC); if [ -f Makefile ]; then \
	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS="$(BOOTSTRAPCFLAGS)"; fi; \
	echo "okay, continuing in $(CURRENT_DIR)")

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

saber:
	# load $(ALLDEFINES) $(SRCS)

osaber:
	# load $(ALLDEFINES) $(OBJS)

# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

# -------------------------------------------------------------------------
# dependencies generated by makedepend

