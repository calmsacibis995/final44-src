# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.51 89/12/12 12:37:30 jim Exp $

# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and <Imakefile>
# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#

# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit hpbsd.cf to change

# platform:  $XConsortium: hpbsd.cf,v 1.1 91/09/27 12:10:52 mark Exp $

# operating system:             BSD 4.4Alpha

# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

            SHELL = 	/bin/sh

              TOP = ../../.
      CURRENT_DIR = ./man/Xlib

               AR = ar clq
  BOOTSTRAPCFLAGS =
               CC = gcc
               AS = as

         COMPRESS = compress
              CPP = /usr/libexec/gcc2/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = gcc -E $(STD_CPP_DEFINES)
          INSTALL = install
               LD = ld
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
     STD_INCLUDES =
  STD_CPP_DEFINES = -traditional
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES =
             TAGS = ctags

    PROTO_DEFINES =

     INSTPGMFLAGS =

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -g kmem -m 2755

     TOP_INCLUDES = -I$(TOP)

      CDEBUGFLAGS = -O
        CCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
           CFLAGS = $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)

           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        LDOPTIONS = $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS)

   LDCOMBINEFLAGS = -X -r
      DEPENDFLAGS =

        MACROFILE = hpbsd.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGSRC)
        IMAKE_CMD = $(NEWTOP)$(IMAKE) -I$(NEWTOP)$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules 			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def 			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

# -------------------------------------------------------------------------
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.138.1.1 92/11/11 09:49:19 rws Exp $

# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules

          PATHSEP = /
        USRLIBDIR = /usr/lib
           BINDIR = /usr/bin/X11
          INCROOT = /usr/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = /usr/man
    MANSOURCEPATH = $(MANPATH)/man
        MANSUFFIX = n
     LIBMANSUFFIX = 3
           MANDIR = $(MANSOURCEPATH)$(MANSUFFIX)
        LIBMANDIR = $(MANSOURCEPATH)$(LIBMANSUFFIX)
           NLSDIR = $(LIBDIR)/nls
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = $(IMAKESRC)/imake
           DEPEND = $(DEPENDSRC)/makedepend
              RGB = $(RGBSRC)/rgb

            FONTC = $(BDFTOPCFSRC)/bdftopcf

        MKFONTDIR = $(MKFONTDIRSRC)/mkfontdir
        MKDIRHIER = 	/bin/sh $(SCRIPTSRC)/mkdirhier.sh

        CONFIGSRC = $(TOP)/config
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
         FSLIBSRC = $(FONTSRC)/lib/fs
    FONTSERVERSRC = $(FONTSRC)/server
     EXTENSIONSRC = $(TOP)/extensions
         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
        PEXLIBSRC = $(EXTENSIONSRC)/lib/PEXlib
      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX

  DEPEXTENSIONLIB = $(EXTENSIONSRC)/lib/libXext.a
     EXTENSIONLIB = 			  $(DEPEXTENSIONLIB)

          DEPXLIB = $(DEPEXTENSIONLIB) $(XLIBSRC)/libX11.a
             XLIB = $(EXTENSIONLIB) 			 $(XLIBSRC)/libX11.a

      DEPXAUTHLIB = $(XAUTHSRC)/libXau.a
         XAUTHLIB = 			 $(DEPXAUTHLIB)
      DEPXDMCPLIB = $(XDMCPLIBSRC)/libXdmcp.a
         XDMCPLIB = 			 $(DEPXDMCPLIB)

        DEPXMULIB = $(XMUSRC)/libXmu.a
           XMULIB = 			 $(DEPXMULIB)

       DEPOLDXLIB = $(OLDXLIBSRC)/liboldX.a
          OLDXLIB = 			 $(DEPOLDXLIB)

      DEPXTOOLLIB = $(TOOLKITSRC)/libXt.a
         XTOOLLIB = 			 $(DEPXTOOLLIB)

        DEPXAWLIB = $(AWIDGETSRC)/libXaw.a
           XAWLIB = 			 $(DEPXAWLIB)

        DEPXILIB = $(XILIBSRC)/libXi.a
           XILIB = 			 $(DEPXILIB)

       DEPPEXLIB = $(PEXLIBSRC)/libPEX5.a
          PEXLIB = 			 $(DEPPEXLIB)

        DEPPHIGSLIB = $(PHIGSLIBSRC)/libphigs.a
           PHIGSLIB = 			 $(DEPPHIGSLIB)

       DEPXBSDLIB = $(LIBSRC)/Berk/libXbsd.a
          XBSDLIB = 			 $(DEPXBSDLIB)

 LINTEXTENSIONLIB = $(EXTENSIONSRC)/lib/llib-lXext.ln
         LINTXLIB = $(XLIBSRC)/llib-lX11.ln
          LINTXMU = $(XMUSRC)/llib-lXmu.ln
        LINTXTOOL = $(TOOLKITSRC)/llib-lXt.ln
          LINTXAW = $(AWIDGETSRC)/llib-lXaw.ln
           LINTXI = $(XILIBSRC)/llib-lXi.ln
          LINTPEX = $(PEXLIBSRC)/llib-lPEX5.ln
        LINTPHIGS = $(PHIGSLIBSRC)/llib-lphigs.ln

          DEPLIBS = $(LOCAL_LIBRARIES)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $

# -------------------------------------------------------------------------
# start of Imakefile

MANDIR = $(LIBMANDIR)
MANSUFFIX = $(LIBMANSUFFIX)

all::

depend:

install.man:: AllPlanes.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) AllPlanes.man $(DESTDIR)$(MANDIR)/AllPlanes.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/AllPlanes.$(MANSUFFIX) > $${TMP}; \
	for i in BlackPixel WhitePixel ConnectionNumber DefaultColormap DefaultDepth XListDepths DefaultGC DefaultRootWindow DefaultScreenOfDisplay DefaultScreen DefaultVisual DisplayCells DisplayPlanes DisplayString XMaxRequestSize LastKnownRequestProcessed NextRequest ProtocolVersion ProtocolRevision QLength RootWindow ScreenCount ScreenOfDisplay ServerVendor VendorRelease; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: BlkPScrn.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) BlkPScrn.man $(DESTDIR)$(MANDIR)/BlackPixelOfScreen.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/BlackPixelOfScreen.$(MANSUFFIX) > $${TMP}; \
	for i in WhitePixelOfScreen CellsOfScreen DefaultColormapOfScreen DefaultDepthOfScreen DefaultGCOfScreen DefaultVisualOfScreen DoesBackingStore DoesSaveUnders DisplayOfScreen XScreenNumberOfScreen EventMaskOfScreen HeightOfScreen HeightMMOfScreen MaxCmapsOfScreen MinCmapsOfScreen PlanesOfScreen RootWindowOfScreen WidthOfScreen WidthMMOfScreen; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: Dis3C.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) Dis3C.man $(DESTDIR)$(MANDIR)/DisplayOfCCC.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/DisplayOfCCC.$(MANSUFFIX) > $${TMP}; \
	for i in VisualOfCCC ScreenNumberOfCCC ScreenWhitePointOfCCC ClientWhitePointOfCCC; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: ImageOrd.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) ImageOrd.man $(DESTDIR)$(MANDIR)/ImageByteOrder.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/ImageByteOrder.$(MANSUFFIX) > $${TMP}; \
	for i in BitmapBitOrder BitmapPad BitmapUnit DisplayHeight DisplayHeightMM DisplayWidth DisplayWidthMM XListPixmapFormats XPixmapFormatValues; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: IsCKey.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) IsCKey.man $(DESTDIR)$(MANDIR)/IsCursorKey.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/IsCursorKey.$(MANSUFFIX) > $${TMP}; \
	for i in IsFunctionKey IsKeypadKey IsMiscFunctionKey IsModiferKey IsPFKey; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XACHints.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XACHints.man $(DESTDIR)$(MANDIR)/XAllocClassHint.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XAllocClassHint.$(MANSUFFIX) > $${TMP}; \
	for i in XSetClassHint XGetClassHint XClassHint; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XAIcSize.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XAIcSize.man $(DESTDIR)$(MANDIR)/XAllocIconSize.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XAllocIconSize.$(MANSUFFIX) > $${TMP}; \
	for i in XSetIconSizes XGetIconSizes XIconSize; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XASCmap.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XASCmap.man $(DESTDIR)$(MANDIR)/XAllocStandardColormap.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XAllocStandardColormap.$(MANSUFFIX) > $${TMP}; \
	for i in XSetRGBColormaps XGetRGBColormaps XStandardColormap; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XASHints.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XASHints.man $(DESTDIR)$(MANDIR)/XAllocSizeHints.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XAllocSizeHints.$(MANSUFFIX) > $${TMP}; \
	for i in XSetWMNormalHints XGetWMNormalHints XSetWMSizeHints XGetWMSizeHints XSizeHints; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XAWMHints.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XAWMHints.man $(DESTDIR)$(MANDIR)/XAllocWMHints.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XAllocWMHints.$(MANSUFFIX) > $${TMP}; \
	for i in XSetWMHints XGetWMHints XWMHints; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XAddHost.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XAddHost.man $(DESTDIR)$(MANDIR)/XAddHost.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XAddHost.$(MANSUFFIX) > $${TMP}; \
	for i in XAddHosts XListHosts XRemoveHost XRemoveHosts XSetAccessControl XEnableAccessControl XDisableAccessControl XHostAddress; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XAllColor.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XAllColor.man $(DESTDIR)$(MANDIR)/XAllocColor.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XAllocColor.$(MANSUFFIX) > $${TMP}; \
	for i in XAllocNamedColor XAllocColorCells XAllocColorPlanes XFreeColors; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XAllEvnt.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XAllEvnt.man $(DESTDIR)$(MANDIR)/XAllowEvents.$(MANSUFFIX)

install.man:: XAnyEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XAnyEvent.man $(DESTDIR)$(MANDIR)/XAnyEvent.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XAnyEvent.$(MANSUFFIX) > $${TMP}; \
	for i in XEvent; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XButEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XButEvent.man $(DESTDIR)$(MANDIR)/XButtonEvent.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XButtonEvent.$(MANSUFFIX) > $${TMP}; \
	for i in XKeyEvent XMotionEvent; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCKCntrl.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCKCntrl.man $(DESTDIR)$(MANDIR)/XChangeKeyboardControl.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XChangeKeyboardControl.$(MANSUFFIX) > $${TMP}; \
	for i in XGetKeyboardControl XAutoRepeatOn XAutoRepeatOff XBell XQueryKeymap XKeyboardControl; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCKMping.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCKMping.man $(DESTDIR)$(MANDIR)/XChangeKeyboardMapping.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XChangeKeyboardMapping.$(MANSUFFIX) > $${TMP}; \
	for i in XGetKeyboardMapping XDisplayKeycodes XSetModifierMapping XGetModifierMapping XNewModifiermap XInsertModifiermapEntry XDeleteModifiermapEntry XFreeModifierMap XModifierKeymap; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCMEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCMEvent.man $(DESTDIR)$(MANDIR)/XClientMessageEvent.$(MANSUFFIX)

install.man:: XCPCntrl.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCPCntrl.man $(DESTDIR)$(MANDIR)/XChangePointerControl.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XChangePointerControl.$(MANSUFFIX) > $${TMP}; \
	for i in XGetPointerControl; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCSSet.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCSSet.man $(DESTDIR)$(MANDIR)/XChangeSaveSet.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XChangeSaveSet.$(MANSUFFIX) > $${TMP}; \
	for i in XAddToSaveSet XRemoveFromSaveSet; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCWAttrib.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCWAttrib.man $(DESTDIR)$(MANDIR)/XChangeWindowAttributes.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XChangeWindowAttributes.$(MANSUFFIX) > $${TMP}; \
	for i in XSetWindowBackground XSetWindowBackgroundPixmap XSetWindowBorder XSetWindowBorderPixmap XSetWindowColormap; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCWEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCWEvent.man $(DESTDIR)$(MANDIR)/XCreateWindowEvent.$(MANSUFFIX)

install.man:: XCirEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCirEvent.man $(DESTDIR)$(MANDIR)/XCirculateEvent.$(MANSUFFIX)

install.man:: XCirREven.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCirREven.man $(DESTDIR)$(MANDIR)/XCirculateRequestEvent.$(MANSUFFIX)

install.man:: XClrArea.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XClrArea.man $(DESTDIR)$(MANDIR)/XClearArea.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XClearArea.$(MANSUFFIX) > $${TMP}; \
	for i in XClearWindow; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCmpEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCmpEvent.man $(DESTDIR)$(MANDIR)/XColormapEvent.$(MANSUFFIX)

install.man:: XConEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XConEvent.man $(DESTDIR)$(MANDIR)/XConfigureEvent.$(MANSUFFIX)

install.man:: XConREven.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XConREven.man $(DESTDIR)$(MANDIR)/XConfigureRequestEvent.$(MANSUFFIX)

install.man:: XConfWin.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XConfWin.man $(DESTDIR)$(MANDIR)/XConfigureWindow.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XConfigureWindow.$(MANSUFFIX) > $${TMP}; \
	for i in XMoveWindow XResizeWindow XMoveResizeWindow XSetWindowBorderWidth XWindowChanges; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCopyArea.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCopyArea.man $(DESTDIR)$(MANDIR)/XCopyArea.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XCopyArea.$(MANSUFFIX) > $${TMP}; \
	for i in XCopyPlane; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCreCmap.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCreCmap.man $(DESTDIR)$(MANDIR)/XCreateColormap.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XCreateColormap.$(MANSUFFIX) > $${TMP}; \
	for i in XCopyColormapAndFree XFreeColormap XColor; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCreFCur.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCreFCur.man $(DESTDIR)$(MANDIR)/XCreateFontCursor.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XCreateFontCursor.$(MANSUFFIX) > $${TMP}; \
	for i in XCreatePixmapCursor XCreateGlyphCursor; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCreFSet.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCreFSet.man $(DESTDIR)$(MANDIR)/XCreateFontSet.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XCreateFontSet.$(MANSUFFIX) > $${TMP}; \
	for i in XFreeFontSet; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCreGC.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCreGC.man $(DESTDIR)$(MANDIR)/XCreateGC.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XCreateGC.$(MANSUFFIX) > $${TMP}; \
	for i in XCopyGC XChangeGC XGetGCValues XFreeGC XGContextFromGC XGCValues; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCreIC.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCreIC.man $(DESTDIR)$(MANDIR)/XCreateIC.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XCreateIC.$(MANSUFFIX) > $${TMP}; \
	for i in XDestroyIC XIMOfIC; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCreImage.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCreImage.man $(DESTDIR)$(MANDIR)/XCreateImage.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XCreateImage.$(MANSUFFIX) > $${TMP}; \
	for i in XGetPixel XPutPixel XSubImage XAddPixel XDestroyImage; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCrePmap.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCrePmap.man $(DESTDIR)$(MANDIR)/XCreatePixmap.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XCreatePixmap.$(MANSUFFIX) > $${TMP}; \
	for i in XFreePixmap; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCreReg.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCreReg.man $(DESTDIR)$(MANDIR)/XCreateRegion.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XCreateRegion.$(MANSUFFIX) > $${TMP}; \
	for i in XSetRegion XDestroyRegion; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCreWin.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCreWin.man $(DESTDIR)$(MANDIR)/XCreateWindow.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XCreateWindow.$(MANSUFFIX) > $${TMP}; \
	for i in XCreateSimpleWindow XSetWindowAttributes; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XCroEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XCroEvent.man $(DESTDIR)$(MANDIR)/XCrossingEvent.$(MANSUFFIX)

install.man:: XDWEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XDWEvent.man $(DESTDIR)$(MANDIR)/XDestroyWindowEvent.$(MANSUFFIX)

install.man:: XDefCur.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XDefCur.man $(DESTDIR)$(MANDIR)/XDefineCursor.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XDefineCursor.$(MANSUFFIX) > $${TMP}; \
	for i in XUndefineCursor; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XDesWin.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XDesWin.man $(DESTDIR)$(MANDIR)/XDestroyWindow.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XDestroyWindow.$(MANSUFFIX) > $${TMP}; \
	for i in XDestroySubwindows; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XDrArc.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XDrArc.man $(DESTDIR)$(MANDIR)/XDrawArc.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XDrawArc.$(MANSUFFIX) > $${TMP}; \
	for i in XDrawArcs XArc; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XDrIStr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XDrIStr.man $(DESTDIR)$(MANDIR)/XDrawImageString.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XDrawImageString.$(MANSUFFIX) > $${TMP}; \
	for i in XDrawImageString16; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XDrLine.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XDrLine.man $(DESTDIR)$(MANDIR)/XDrawLine.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XDrawLine.$(MANSUFFIX) > $${TMP}; \
	for i in XDrawLines XDrawSegments XSegment; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XDrPoint.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XDrPoint.man $(DESTDIR)$(MANDIR)/XDrawPoint.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XDrawPoint.$(MANSUFFIX) > $${TMP}; \
	for i in XDrawPoints XPoint; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XDrRect.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XDrRect.man $(DESTDIR)$(MANDIR)/XDrawRectangle.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XDrawRectangle.$(MANSUFFIX) > $${TMP}; \
	for i in XDrawRectangles XRectangle; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XDrString.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XDrString.man $(DESTDIR)$(MANDIR)/XDrawString.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XDrawString.$(MANSUFFIX) > $${TMP}; \
	for i in XDrawString16; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XDrText.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XDrText.man $(DESTDIR)$(MANDIR)/XDrawText.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XDrawText.$(MANSUFFIX) > $${TMP}; \
	for i in XDrawText16 XTextItem XTextItem16; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XERegion.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XERegion.man $(DESTDIR)$(MANDIR)/XEmptyRegion.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XEmptyRegion.$(MANSUFFIX) > $${TMP}; \
	for i in XEqualRegion XPointInRegion XRectInRegion; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XEnumDB.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XEnumDB.man $(DESTDIR)$(MANDIR)/XrmEnumerateDatabase.$(MANSUFFIX)

install.man:: XEofFSet.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XEofFSet.man $(DESTDIR)$(MANDIR)/XExtentsOfFontSet.$(MANSUFFIX)

install.man:: XErrEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XErrEvent.man $(DESTDIR)$(MANDIR)/XErrorEvent.$(MANSUFFIX)

install.man:: XExpEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XExpEvent.man $(DESTDIR)$(MANDIR)/XExposeEvent.$(MANSUFFIX)

install.man:: XFCEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XFCEvent.man $(DESTDIR)$(MANDIR)/XFocusChangeEvent.$(MANSUFFIX)

install.man:: XFEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XFEvent.man $(DESTDIR)$(MANDIR)/XFilterEvent.$(MANSUFFIX)

install.man:: XFSExt.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XFSExt.man $(DESTDIR)$(MANDIR)/XFontSetExtents.$(MANSUFFIX)

install.man:: XFillRect.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XFillRect.man $(DESTDIR)$(MANDIR)/XFillRectangle.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XFillRectangle.$(MANSUFFIX) > $${TMP}; \
	for i in XFillRectangles XFillPolygon XFillArc XFillArcs; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XFlush.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XFlush.man $(DESTDIR)$(MANDIR)/XFlush.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XFlush.$(MANSUFFIX) > $${TMP}; \
	for i in XSync XEventsQueued XPending; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XFofFSet.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XFofFSet.man $(DESTDIR)$(MANDIR)/XFontsOfFontSet.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XFontsOfFontSet.$(MANSUFFIX) > $${TMP}; \
	for i in XBaseFontNameListOfFontSet XLocaleOfFontSet XContextDependentDrawing; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XFree.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XFree.man $(DESTDIR)$(MANDIR)/XFree.$(MANSUFFIX)

install.man:: XGEEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGEEvent.man $(DESTDIR)$(MANDIR)/XGraphicsExposeEvent.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XGraphicsExposeEvent.$(MANSUFFIX) > $${TMP}; \
	for i in XNoExposeEvent; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XGEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGEvent.man $(DESTDIR)$(MANDIR)/XGravityEvent.$(MANSUFFIX)

install.man:: XGFDBase.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGFDBase.man $(DESTDIR)$(MANDIR)/XrmGetFileDatabase.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XrmGetFileDatabase.$(MANSUFFIX) > $${TMP}; \
	for i in XrmPutFileDatabase XrmGetStringDatabase XrmLocaleOfDatabase XrmGetDatabase XrmSetDatabase XrmDestroyDatabase; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XGetRes.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGetRes.man $(DESTDIR)$(MANDIR)/XrmGetResource.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XrmGetResource.$(MANSUFFIX) > $${TMP}; \
	for i in XrmQGetResource XrmQGetSearchList XrmQGetSearchResource; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XGetVInfo.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGetVInfo.man $(DESTDIR)$(MANDIR)/XGetVisualInfo.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XGetVisualInfo.$(MANSUFFIX) > $${TMP}; \
	for i in XMatchVisualInfo XVisualIDFromVisual XVisualInfo; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XGetWAttr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGetWAttr.man $(DESTDIR)$(MANDIR)/XGetWindowAttributes.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XGetWindowAttributes.$(MANSUFFIX) > $${TMP}; \
	for i in XGetGeometry XWindowAttributes; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XGetWProp.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGetWProp.man $(DESTDIR)$(MANDIR)/XGetWindowProperty.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XGetWindowProperty.$(MANSUFFIX) > $${TMP}; \
	for i in XListProperties XChangeProperty XRotateWindowProperties XDeleteProperty; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XGrButton.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGrButton.man $(DESTDIR)$(MANDIR)/XGrabButton.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XGrabButton.$(MANSUFFIX) > $${TMP}; \
	for i in XUngrabButton; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XGrKey.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGrKey.man $(DESTDIR)$(MANDIR)/XGrabKey.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XGrabKey.$(MANSUFFIX) > $${TMP}; \
	for i in XUngrabKey; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XGrKeybrd.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGrKeybrd.man $(DESTDIR)$(MANDIR)/XGrabKeyboard.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XGrabKeyboard.$(MANSUFFIX) > $${TMP}; \
	for i in XUngrabKeyboard; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XGrPntr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGrPntr.man $(DESTDIR)$(MANDIR)/XGrabPointer.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XGrabPointer.$(MANSUFFIX) > $${TMP}; \
	for i in XUngrabPointer XChangeActivePointerGrab; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XGrServer.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XGrServer.man $(DESTDIR)$(MANDIR)/XGrabServer.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XGrabServer.$(MANSUFFIX) > $${TMP}; \
	for i in XUngrabServer; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XIcWin.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XIcWin.man $(DESTDIR)$(MANDIR)/XIconifyWindow.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XIconifyWindow.$(MANSUFFIX) > $${TMP}; \
	for i in XWithdrawWindow XReconfigureWMWindow; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XIfEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XIfEvent.man $(DESTDIR)$(MANDIR)/XIfEvent.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XIfEvent.$(MANSUFFIX) > $${TMP}; \
	for i in XCheckIfEvent XPeekIfEvent; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XInitial.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XInitial.man $(DESTDIR)$(MANDIR)/XrmInitialize.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XrmInitialize.$(MANSUFFIX) > $${TMP}; \
	for i in XrmParseCommand XrmValue XrmOptionKind XrmOptionDescRec; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XInstCmap.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XInstCmap.man $(DESTDIR)$(MANDIR)/XInstallColormap.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XInstallColormap.$(MANSUFFIX) > $${TMP}; \
	for i in XUninstallColormap XListInstalledColormaps; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XInterReg.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XInterReg.man $(DESTDIR)$(MANDIR)/XIntersectRegion.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XIntersectRegion.$(MANSUFFIX) > $${TMP}; \
	for i in XUnionRegion XUnionRectWithRegion XSubtractRegion XXorRegion XOffsetRegion XShrinkRegion; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XInternA.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XInternA.man $(DESTDIR)$(MANDIR)/XInternAtom.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XInternAtom.$(MANSUFFIX) > $${TMP}; \
	for i in XGetAtomName; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XKMapEven.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XKMapEven.man $(DESTDIR)$(MANDIR)/XKeymapEvent.$(MANSUFFIX)

install.man:: XListFont.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XListFont.man $(DESTDIR)$(MANDIR)/XListFonts.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XListFonts.$(MANSUFFIX) > $${TMP}; \
	for i in XFreeFontNames XListFontsWithInfo XFreeFontInfo; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XLoadFont.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XLoadFont.man $(DESTDIR)$(MANDIR)/XLoadFont.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XLoadFont.$(MANSUFFIX) > $${TMP}; \
	for i in XQueryFont XLoadQueryFont XFreeFont XGetFontProperty XUnloadFont XCharStruct XFontProp XChar2b XFontStruct; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XLookKsym.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XLookKsym.man $(DESTDIR)$(MANDIR)/XLookupKeysym.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XLookupKeysym.$(MANSUFFIX) > $${TMP}; \
	for i in XRefreshKeyboardMapping XLookupString XRebindKeySym; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XMDBases.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XMDBases.man $(DESTDIR)$(MANDIR)/XrmMergeDatabases.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XrmMergeDatabases.$(MANSUFFIX) > $${TMP}; \
	for i in XrmCombineDatabase XrmCombineFileDatabase; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XMEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XMEvent.man $(DESTDIR)$(MANDIR)/XMapEvent.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XMapEvent.$(MANSUFFIX) > $${TMP}; \
	for i in XMappingEvent; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XMREvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XMREvent.man $(DESTDIR)$(MANDIR)/XMapRequestEvent.$(MANSUFFIX)

install.man:: XMapWin.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XMapWin.man $(DESTDIR)$(MANDIR)/XMapWindow.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XMapWindow.$(MANSUFFIX) > $${TMP}; \
	for i in XMapRaised XMapSubwindows; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XNEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XNEvent.man $(DESTDIR)$(MANDIR)/XNextEvent.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XNextEvent.$(MANSUFFIX) > $${TMP}; \
	for i in XPeekEvent XWindowEvent XCheckWindowEvent XMaskEvent XCheckMaskEvent XCheckTypedEvent XCheckTypedWindowEvent; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XNoOp.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XNoOp.man $(DESTDIR)$(MANDIR)/XNoOp.$(MANSUFFIX)

install.man:: XOpDsply.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XOpDsply.man $(DESTDIR)$(MANDIR)/XOpenDisplay.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XOpenDisplay.$(MANSUFFIX) > $${TMP}; \
	for i in XCloseDisplay; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XOpenIM.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XOpenIM.man $(DESTDIR)$(MANDIR)/XOpenIM.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XOpenIM.$(MANSUFFIX) > $${TMP}; \
	for i in XCloseIM XGetIMValues XDisplayOfIM XLocaleOfIM; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XPEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XPEvent.man $(DESTDIR)$(MANDIR)/XPropertyEvent.$(MANSUFFIX)

install.man:: XParGeom.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XParGeom.man $(DESTDIR)$(MANDIR)/XParseGeometry.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XParseGeometry.$(MANSUFFIX) > $${TMP}; \
	for i in XWMGeometry; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XPolyReg.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XPolyReg.man $(DESTDIR)$(MANDIR)/XPolygonRegion.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XPolygonRegion.$(MANSUFFIX) > $${TMP}; \
	for i in XClipBox; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XPutBEvnt.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XPutBEvnt.man $(DESTDIR)$(MANDIR)/XPutBackEvent.$(MANSUFFIX)

install.man:: XPutImage.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XPutImage.man $(DESTDIR)$(MANDIR)/XPutImage.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XPutImage.$(MANSUFFIX) > $${TMP}; \
	for i in XGetImage XGetSubImage; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XPutRes.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XPutRes.man $(DESTDIR)$(MANDIR)/XrmPutResource.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XrmPutResource.$(MANSUFFIX) > $${TMP}; \
	for i in XrmQPutResource XrmPutStringResource XrmQPutStringResource XrmPutLineResource; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XQBSize.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XQBSize.man $(DESTDIR)$(MANDIR)/XQueryBestSize.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XQueryBestSize.$(MANSUFFIX) > $${TMP}; \
	for i in XQueryBestTile XQueryBestStipple; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XQColor.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XQColor.man $(DESTDIR)$(MANDIR)/XQueryColor.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XQueryColor.$(MANSUFFIX) > $${TMP}; \
	for i in XQueryColors XLookupColor XParseColor; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XQPointer.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XQPointer.man $(DESTDIR)$(MANDIR)/XQueryPointer.$(MANSUFFIX)

install.man:: XQTree.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XQTree.man $(DESTDIR)$(MANDIR)/XQueryTree.$(MANSUFFIX)

install.man:: XREvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XREvent.man $(DESTDIR)$(MANDIR)/XReparentEvent.$(MANSUFFIX)

install.man:: XRMStr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XRMStr.man $(DESTDIR)$(MANDIR)/XResourceManagerString.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XResourceManagerString.$(MANSUFFIX) > $${TMP}; \
	for i in XScreenResourceString; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XRREvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XRREvent.man $(DESTDIR)$(MANDIR)/XResizeRequestEvent.$(MANSUFFIX)

install.man:: XRaiseWin.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XRaiseWin.man $(DESTDIR)$(MANDIR)/XRaiseWindow.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XRaiseWindow.$(MANSUFFIX) > $${TMP}; \
	for i in XLowerWindow XCirculateSubwindows XCirculateSubwindowsUp XCirculateSubwindowsDown XRestackWindows; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XReadBF.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XReadBF.man $(DESTDIR)$(MANDIR)/XReadBitmapFile.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XReadBitmapFile.$(MANSUFFIX) > $${TMP}; \
	for i in XWriteBitmapFile XCreatePixmapFromBitmapData XCreateBitmapFromData; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XRecCur.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XRecCur.man $(DESTDIR)$(MANDIR)/XRecolorCursor.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XRecolorCursor.$(MANSUFFIX) > $${TMP}; \
	for i in XFreeCursor XQueryBestCursor; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XReparWin.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XReparWin.man $(DESTDIR)$(MANDIR)/XReparentWindow.$(MANSUFFIX)

install.man:: XSCEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSCEvent.man $(DESTDIR)$(MANDIR)/XSelectionClearEvent.$(MANSUFFIX)

install.man:: XSContext.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSContext.man $(DESTDIR)$(MANDIR)/XSaveContext.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSaveContext.$(MANSUFFIX) > $${TMP}; \
	for i in XFindContext XDeleteContext XUniqueContext; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSEvent.man $(DESTDIR)$(MANDIR)/XSelectionEvent.$(MANSUFFIX)

install.man:: XSICFoc.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSICFoc.man $(DESTDIR)$(MANDIR)/XSetICFocus.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetICFocus.$(MANSUFFIX) > $${TMP}; \
	for i in XUnsetICFocus; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSICVals.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSICVals.man $(DESTDIR)$(MANDIR)/XSetICValues.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetICValues.$(MANSUFFIX) > $${TMP}; \
	for i in XGetICValues; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSInput.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSInput.man $(DESTDIR)$(MANDIR)/XSelectInput.$(MANSUFFIX)

install.man:: XSLTTProp.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSLTTProp.man $(DESTDIR)$(MANDIR)/XStringListToTextProperty.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XStringListToTextProperty.$(MANSUFFIX) > $${TMP}; \
	for i in XTextPropertyToStringList XFreeStringList XTextProperty; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSREvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSREvent.man $(DESTDIR)$(MANDIR)/XSelectionRequestEvent.$(MANSUFFIX)

install.man:: XSeArcMod.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeArcMod.man $(DESTDIR)$(MANDIR)/XSetArcMode.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetArcMode.$(MANSUFFIX) > $${TMP}; \
	for i in XSetSubwindowMode XSetGraphicsExposure; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeClipO.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeClipO.man $(DESTDIR)$(MANDIR)/XSetClipOrigin.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetClipOrigin.$(MANSUFFIX) > $${TMP}; \
	for i in XSetClipMask XSetClipRectangles; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeClosDM.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeClosDM.man $(DESTDIR)$(MANDIR)/XSetCloseDownMode.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetCloseDownMode.$(MANSUFFIX) > $${TMP}; \
	for i in XKillClient; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeCmd.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeCmd.man $(DESTDIR)$(MANDIR)/XSetCommand.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetCommand.$(MANSUFFIX) > $${TMP}; \
	for i in XGetCommand; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeErrHan.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeErrHan.man $(DESTDIR)$(MANDIR)/XSetErrorHandler.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetErrorHandler.$(MANSUFFIX) > $${TMP}; \
	for i in XGetErrorText XDisplayName XSetIOErrorHandler XGetErrorDatabaseText; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeEvent.man $(DESTDIR)$(MANDIR)/XSendEvent.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSendEvent.$(MANSUFFIX) > $${TMP}; \
	for i in XDisplayMotionBufferSize XGetMotionEvents XTimeCoord; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeFillS.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeFillS.man $(DESTDIR)$(MANDIR)/XSetFillStyle.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetFillStyle.$(MANSUFFIX) > $${TMP}; \
	for i in XSetFillRule; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeFont.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeFont.man $(DESTDIR)$(MANDIR)/XSetFont.$(MANSUFFIX)

install.man:: XSeFontP.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeFontP.man $(DESTDIR)$(MANDIR)/XSetFontPath.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetFontPath.$(MANSUFFIX) > $${TMP}; \
	for i in XGetFontPath XFreeFontPath; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeInFoc.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeInFoc.man $(DESTDIR)$(MANDIR)/XSetInputFocus.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetInputFocus.$(MANSUFFIX) > $${TMP}; \
	for i in XGetInputFocus; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeLAttr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeLAttr.man $(DESTDIR)$(MANDIR)/XSetLineAttributes.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetLineAttributes.$(MANSUFFIX) > $${TMP}; \
	for i in XSetDashes; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSePMap.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSePMap.man $(DESTDIR)$(MANDIR)/XSetPointerMapping.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetPointerMapping.$(MANSUFFIX) > $${TMP}; \
	for i in XGetPointerMapping; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeScSav.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeScSav.man $(DESTDIR)$(MANDIR)/XSetScreenSaver.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetScreenSaver.$(MANSUFFIX) > $${TMP}; \
	for i in XForceScreenSaver XActivateScreenSaver XResetScreenSaver XGetScreenSaver; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeSelOwn.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeSelOwn.man $(DESTDIR)$(MANDIR)/XSetSelectionOwner.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetSelectionOwner.$(MANSUFFIX) > $${TMP}; \
	for i in XGetSelectionOwner XConvertSelection; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeState.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeState.man $(DESTDIR)$(MANDIR)/XSetState.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetState.$(MANSUFFIX) > $${TMP}; \
	for i in XSetFunction XSetPlanemask XSetForeground XSetBackground; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeTFHint.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeTFHint.man $(DESTDIR)$(MANDIR)/XSetTransientForHint.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetTransientForHint.$(MANSUFFIX) > $${TMP}; \
	for i in XGetTransientForHint; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeTProp.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeTProp.man $(DESTDIR)$(MANDIR)/XSetTextProperty.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetTextProperty.$(MANSUFFIX) > $${TMP}; \
	for i in XGetTextProperty; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeTile.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeTile.man $(DESTDIR)$(MANDIR)/XSetTile.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetTile.$(MANSUFFIX) > $${TMP}; \
	for i in XSetStipple XSetTSOrigin; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeWMCMac.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeWMCMac.man $(DESTDIR)$(MANDIR)/XSetWMClientMachine.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetWMClientMachine.$(MANSUFFIX) > $${TMP}; \
	for i in XGetWMClientMachine; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeWMCWin.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeWMCWin.man $(DESTDIR)$(MANDIR)/XSetWMColormapWindows.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetWMColormapWindows.$(MANSUFFIX) > $${TMP}; \
	for i in XGetWMColormapWindows; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeWMINam.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeWMINam.man $(DESTDIR)$(MANDIR)/XSetWMIconName.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetWMIconName.$(MANSUFFIX) > $${TMP}; \
	for i in XGetWMIconName XSetIconName XGetIconName; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeWMName.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeWMName.man $(DESTDIR)$(MANDIR)/XSetWMName.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetWMName.$(MANSUFFIX) > $${TMP}; \
	for i in XGetWMName XStoreName XFetchName; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeWMProp.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeWMProp.man $(DESTDIR)$(MANDIR)/XSetWMProperties.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetWMProperties.$(MANSUFFIX) > $${TMP}; \
	for i in XmbSetWMProperties; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSeWMProt.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSeWMProt.man $(DESTDIR)$(MANDIR)/XSetWMProtocols.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSetWMProtocols.$(MANSUFFIX) > $${TMP}; \
	for i in XGetWMProtocols; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XStBytes.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XStBytes.man $(DESTDIR)$(MANDIR)/XStoreBytes.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XStoreBytes.$(MANSUFFIX) > $${TMP}; \
	for i in XStoreBuffer XFetchBytes XFetchBuffer XRotateBuffers; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XStColors.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XStColors.man $(DESTDIR)$(MANDIR)/XStoreColors.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XStoreColors.$(MANSUFFIX) > $${TMP}; \
	for i in XStoreColor XStoreNamedColor; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XStTKsym.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XStTKsym.man $(DESTDIR)$(MANDIR)/XStringToKeysym.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XStringToKeysym.$(MANSUFFIX) > $${TMP}; \
	for i in XKeysymToString XKeycodeToKeysym XKeysymToKeycode; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSupLoc.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSupLoc.man $(DESTDIR)$(MANDIR)/XSupportsLocale.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSupportsLocale.$(MANSUFFIX) > $${TMP}; \
	for i in XSetLocaleModifiers; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XSync.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XSync.man $(DESTDIR)$(MANDIR)/XSynchronize.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XSynchronize.$(MANSUFFIX) > $${TMP}; \
	for i in XSetAfterFunction; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XTLTTProp.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XTLTTProp.man $(DESTDIR)$(MANDIR)/XmbTextListToTextProperty.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XmbTextListToTextProperty.$(MANSUFFIX) > $${TMP}; \
	for i in XwcTextListToTextProperty XmbTextPropertyToTextList XwcTextPropertyToTextList XwcFreeStringList XDefaultString; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XTextExt.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XTextExt.man $(DESTDIR)$(MANDIR)/XTextExtents.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XTextExtents.$(MANSUFFIX) > $${TMP}; \
	for i in XTextExtents16 XQueryTextExtents XQueryTextExtents16; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XTextWid.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XTextWid.man $(DESTDIR)$(MANDIR)/XTextWidth.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XTextWidth.$(MANSUFFIX) > $${TMP}; \
	for i in XTextWidth16; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XTranWCo.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XTranWCo.man $(DESTDIR)$(MANDIR)/XTranslateCoordinates.$(MANSUFFIX)

install.man:: XUQuark.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XUQuark.man $(DESTDIR)$(MANDIR)/XrmUniqueQuark.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XrmUniqueQuark.$(MANSUFFIX) > $${TMP}; \
	for i in XrmStringToQuark XrmPermStringToQuark XrmQuarkToString XrmStringToQuarkList XrmStringToBindingQuarkList; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XUmapEven.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XUmapEven.man $(DESTDIR)$(MANDIR)/XUnmapEvent.$(MANSUFFIX)

install.man:: XUnmapWin.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XUnmapWin.man $(DESTDIR)$(MANDIR)/XUnmapWindow.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XUnmapWindow.$(MANSUFFIX) > $${TMP}; \
	for i in XUnmapSubwindows; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XVCNList.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XVCNList.man $(DESTDIR)$(MANDIR)/XVaCreateNestedList.$(MANSUFFIX)

install.man:: XVEvent.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XVEvent.man $(DESTDIR)$(MANDIR)/XVisibilityNotifyEvent.$(MANSUFFIX)

install.man:: XWarpPntr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XWarpPntr.man $(DESTDIR)$(MANDIR)/XWarpPointer.$(MANSUFFIX)

install.man:: Xcms3CoC.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) Xcms3CoC.man $(DESTDIR)$(MANDIR)/XcmsCCCofColormap.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsCCCofColormap.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsSetCCCOfColormap; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XcmsAClr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsAClr.man $(DESTDIR)$(MANDIR)/XcmsAllocColor.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsAllocColor.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsAllocNamedColor; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XcmsCClrs.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsCClrs.man $(DESTDIR)$(MANDIR)/XcmsConvertColors.$(MANSUFFIX)

install.man:: XcmsClr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsClr.man $(DESTDIR)$(MANDIR)/XcmsColor.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsColor.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsRGB XcmsRGBi XcmsCIEXYZ XcmsCIEuvY XcmsCIExyY XcmsCIELab XcmsCIELuv XcmsTekHVC XcmsPad; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XcmsCre3C.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsCre3C.man $(DESTDIR)$(MANDIR)/XcmsCreateCCC.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsCreateCCC.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsFreeCCC; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XcmsD3C.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsD3C.man $(DESTDIR)$(MANDIR)/XcmsDefaultCCC.$(MANSUFFIX)

install.man:: XcmsLaQMC.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsLaQMC.man $(DESTDIR)$(MANDIR)/XcmsCIELabQueryMaxC.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsCIELabQueryMaxC.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsCIELabQueryMaxL XcmsCIELabQueryMaxLC XcmsCIELabQueryMinL; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XcmsLuQMC.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsLuQMC.man $(DESTDIR)$(MANDIR)/XcmsCIELuvQueryMaxC.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsCIELuvQueryMaxC.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsCIELuvQueryMaxL XcmsCIELuvQueryMaxLC XcmsCIELuvQueryMinL; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XcmsQBlk.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsQBlk.man $(DESTDIR)$(MANDIR)/XcmsQueryBlack.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsQueryBlack.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsQueryBlue XcmsQueryGreen XcmsQueryRed XcmsQueryWhite; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XcmsQClr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsQClr.man $(DESTDIR)$(MANDIR)/XcmsQueryColor.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsQueryColor.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsQueryColors XcmsLookupColor; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XcmsSClr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsSClr.man $(DESTDIR)$(MANDIR)/XcmsStoreColor.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsStoreColor.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsStoreColors; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XcmsSWP.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsSWP.man $(DESTDIR)$(MANDIR)/XcmsSetWhitePoint.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsSetWhitePoint.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsSetWhiteAdjustProc; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XcmsTQMC.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XcmsTQMC.man $(DESTDIR)$(MANDIR)/XcmsTekHVCQueryMaxC.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XcmsTekHVCQueryMaxC.$(MANSUFFIX) > $${TMP}; \
	for i in XcmsTekHVCQueryMaxV XcmsTekHVCQueryMaxVC XcmsTekHVCQueryMaxVSamples XcmsTekHVCQueryMinV; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XmbDIStr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XmbDIStr.man $(DESTDIR)$(MANDIR)/XmbDrawImageString.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XmbDrawImageString.$(MANSUFFIX) > $${TMP}; \
	for i in XwcDrawImageString; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XmbDStr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XmbDStr.man $(DESTDIR)$(MANDIR)/XmbDrawString.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XmbDrawString.$(MANSUFFIX) > $${TMP}; \
	for i in XwcDrawString; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XmbDTxt.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XmbDTxt.man $(DESTDIR)$(MANDIR)/XmbDrawText.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XmbDrawText.$(MANSUFFIX) > $${TMP}; \
	for i in XwcDrawText; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XmbLStr.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XmbLStr.man $(DESTDIR)$(MANDIR)/XmbLookupString.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XmbLookupString.$(MANSUFFIX) > $${TMP}; \
	for i in XwcLookupString; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XmbRIC.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XmbRIC.man $(DESTDIR)$(MANDIR)/XmbResetIC.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XmbResetIC.$(MANSUFFIX) > $${TMP}; \
	for i in XwcResetIC; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XmbTEsc.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XmbTEsc.man $(DESTDIR)$(MANDIR)/XmbTextEscapement.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XmbTextEscapement.$(MANSUFFIX) > $${TMP}; \
	for i in XwcTextEscapement; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XmbTExt.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XmbTExt.man $(DESTDIR)$(MANDIR)/XmbTextExtents.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XmbTextExtents.$(MANSUFFIX) > $${TMP}; \
	for i in XwcTextExtents; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

install.man:: XmbTPCEx.man
	-@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(INSTALL) -c $(INSTMANFLAGS) XmbTPCEx.man $(DESTDIR)$(MANDIR)/XmbTextPerCharExtents.$(MANSUFFIX)

install.man::
	@(TMP=/tmp/tmp.$$$$; \
	$(RM) $${TMP}; \
	echo .so `basename $(MANDIR)`/XmbTextPerCharExtents.$(MANSUFFIX) > $${TMP}; \
	for i in XwcTextPerCharExtents; do (set -x; \
	$(INSTALL) -c $(INSTMANFLAGS) $${TMP} $(DESTDIR)$(MANDIR)/$$i.$(MANSUFFIX)); \
	done; \
	$(RM) $${TMP})

# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) "#"*

Makefile:: $(IMAKE)

$(IMAKE):
	@(cd $(IMAKESRC); if [ -f Makefile ]; then \
	echo "checking $@ in $(IMAKESRC) first..."; $(MAKE) all; else \
	echo "bootstrapping $@ from Makefile.ini in $(IMAKESRC) first..."; \
	$(MAKE) -f Makefile.ini BOOTSTRAPCFLAGS="$(BOOTSTRAPCFLAGS)"; fi; \
	echo "okay, continuing in $(CURRENT_DIR)")

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

saber:
	# load $(ALLDEFINES) $(SRCS)

osaber:
	# load $(ALLDEFINES) $(OBJS)

# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

Makefiles::

includes::

# -------------------------------------------------------------------------
# dependencies generated by makedepend

