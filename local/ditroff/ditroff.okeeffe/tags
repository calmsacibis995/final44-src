C	ni.c	/^#define	C(a,b)	{a, 0, b, 0}$/
EMPTS	tdef.h	/^#define	EMPTS(pts)	(((long) INCH * (pts) + 36) \/ /
MHASH	n3.c	/^#define	MHASH(x)	((x>>6)^x)&0177$/
Mn1	n1.c	/^main(argc, argv)$/
NHASH	n4.c	/^#define	NHASH(i)	((i>>6)^i)&0177$/
PAIR	tdef.h	/^#define	PAIR(A,B)	(A|(B<<BYTE))$/
SPACETEST	n3.c	/^#define SPACETEST(base, size) while ((enda - (size/
abc	n4.c	/^abc(i, f)$/
abc0	n4.c	/^abc0(i, f)$/
absbits	tdef.h	/^#define	absbits(n)	(cbits(n) & ~ABSCHAR)$/
abscw	t6.c	/^abscw(n)	\/* return index of abs char n in fontab[/
absmot	tdef.h	/^#define	absmot(n)	(unsigned)(0177777 & (n) & ~MOT)/
alloc	n3.c	/^filep alloc()$/
alph	n8.c	/^alph(i)$/
atoi	tdef.h	/^#define	atoi(i)		((int) atoi0(i))$/
atoi0	n4.c	/^long	atoi0()$/
atoi1	n4.c	/^long	atoi1(ii)$/
bestsplit1	n8.c	/^bestsplit1( tosplit , aend )$/
blisti	n3.c	/^#define	blisti(i)	(((i)-NEV*(int)sizeof(env))\/BLK/
callsp	n7.c	/^callsp()$/
caseab	n5.c	/^caseab()$/
casead	n5.c	/^casead()$/
caseaf	n4.c	/^caseaf()$/
caseam	n3.c	/^caseam()$/
caseas	n3.c	/^caseas()$/
casebd	n6.c	/^casebd()$/
casebp	n5.c	/^casebp()$/
casec2	n5.c	/^casec2()$/
casecc	n5.c	/^casecc()$/
casece	n5.c	/^casece()$/
casecf	n1.c	/^casecf()$/
casech	n5.c	/^casech()$/
casecs	n6.c	/^casecs()$/
casecu	n5.c	/^casecu()$/
caseda	n3.c	/^caseda()$/
casede	n3.c	/^casede()$/
casedi	n3.c	/^casedi()$/
caseds	n3.c	/^caseds()$/
casedt	n3.c	/^casedt()$/
caseec	n5.c	/^caseec()$/
caseel	n5.c	/^caseel()$/
caseem	n5.c	/^caseem()$/
caseeo	n5.c	/^caseeo()$/
caseev	n5.c	/^caseev()$/
casefc	n9.c	/^casefc()$/
casefi	n5.c	/^casefi()$/
casefl	n5.c	/^casefl()$/
casefp	n6.c	/^casefp()$/
caseft	n6.c	/^caseft()$/
caseha	n8.c	/^caseha()$/
casehc	n5.c	/^casehc()$/
caseht	n8.c	/^caseht()$/
casehw	n8.c	/^casehw()$/
casehy	n5.c	/^casehy()$/
caseie	n5.c	/^caseie()$/
caseif	n5.c	/^caseif(x)$/
caseig	n3.c	/^caseig()$/
casein	n5.c	/^casein()$/
caseit	n5.c	/^caseit()$/
caselc	n5.c	/^caselc()$/
caself	n1.c	/^caself()	\/* set line number and file *\/$/
caselg	n6.c	/^caselg()$/
casell	n5.c	/^casell()$/
casels	n5.c	/^casels()$/
caselt	n5.c	/^caselt()$/
casemc	n5.c	/^casemc()$/
casemk	n5.c	/^casemk()$/
casena	n5.c	/^casena()$/
casene	n5.c	/^casene()$/
casenf	n5.c	/^casenf()$/
casenh	n5.c	/^casenh()$/
casenm	n5.c	/^casenm()$/
casenn	n5.c	/^casenn()$/
casenr	n4.c	/^casenr()$/
casens	n5.c	/^casens()$/
casenx	n1.c	/^casenx()$/
caseos	n5.c	/^caseos()$/
casepc	n3.c	/^casepc()$/
casepi	n2.c	/^casepi()$/
casepl	n5.c	/^casepl()$/
casepm	n3.c	/^casepm()$/
casepn	n5.c	/^casepn()$/
casepo	n5.c	/^casepo()$/
caseps	n6.c	/^caseps()$/
caserd	n5.c	/^caserd()$/
caserm	n3.c	/^caserm()$/
casern	n3.c	/^casern()$/
caserr	n4.c	/^caserr()$/
casers	n5.c	/^casers()$/
casert	n5.c	/^casert()$/
caseso	n1.c	/^caseso()$/
casesp	n5.c	/^casesp(a)$/
casess	n6.c	/^casess()$/
casesv	n5.c	/^casesv()$/
casesy	n1.c	/^casesy()	\/* call system *\/$/
caseta	n5.c	/^caseta()$/
casetc	n5.c	/^casetc()$/
caseti	n5.c	/^caseti()$/
casetl	n3.c	/^casetl()$/
casetm	n5.c	/^casetm(ab) $/
casetr	n5.c	/^casetr()$/
caseuf	n5.c	/^caseuf()$/
caseul	n5.c	/^caseul()$/
casevs	n6.c	/^casevs()$/
casewh	n5.c	/^casewh()$/
casps1	t6.c	/^casps1(i)$/
catch	n1.c	/^catch()$/
cbits	tdef.h	/^#define	cbits(n)	(unsigned)(0177777 & (n))	\/* iso/
chget	n5.c	/^chget(c)$/
chkpn	n7.c	/^chkpn()$/
chkvow	n8.c	/^tchar *chkvow(w)$/
ckph	n4.c	/^long	ckph()$/
ckul	n7.c	/^ckul()$/
clrmn	n3.c	/^clrmn(i)$/
cmpstr	n5.c	/^cmpstr(c)$/
collect	n3.c	/^collect()$/
control	n1.c	/^control(a, b)$/
copyb	n3.c	/^copyb()$/
copys	n3.c	/^copys()$/
cpushback	n1.c	/^cpushback(b)$/
ctoi	n1.c	/^ctoi(s)$/
cvtime	n1.c	/^cvtime() {$/
decml	n4.c	/^decml(i, f)$/
digram	n8.c	/^digram() $/
dilook	n8.c	/^dilook(a, b, t)$/
done	n2.c	/^done(x) $/
done1	n2.c	/^done1(x) $/
done2	n2.c	/^done2(x) $/
done3	n2.c	/^done3(x) $/
donum	n7.c	/^donum()$/
dostop	n10.c	/^dostop()$/
eat	n9.c	/^eat(c)$/
eatblk	n5.c	/^eatblk(inblk)$/
edone	n2.c	/^edone(x) $/
eject	n7.c	/^eject(a)$/
errprint	n1.c	/^errprint(s, s1, s2, s3, s4, s5)	\/* error message /
exword	n8.c	/^exword()$/
fbits	tdef.h	/^#define	fbits(n)	(((n) >> 16) & 0377)$/
fdprintf	n1.c	/^fdprintf(fd, fmt, x1)$/
ffree	n3.c	/^ffree(i)$/
findch	n10.c	/^findch(s)	\/* find char s in chname *\/$/
findft	n6.c	/^findft(i)$/
findmn	n3.c	/^findmn(i)$/
findn	n5.c	/^findn(i)$/
findn1	n7.c	/^findn1(a)$/
findps	t6.c	/^findps(i)$/
findr	n4.c	/^findr(i)$/
finds	n3.c	/^filep finds(mn)$/
findt	n7.c	/^findt(a)$/
findt1	n7.c	/^findt1()$/
flushi	n1.c	/^flushi()$/
flusho	n2.c	/^flusho()$/
fnumb	n4.c	/^fnumb(i, f)$/
getach	n1.c	/^getach()$/
getch	n1.c	/^getch()$/
getch0	n1.c	/^tchar getch0()$/
getcw	t6.c	/^getcw(i)$/
getint	n10.c	/^char *getint(s, pn)	\/* find integer at s *\/$/
getlg	n6.c	/^tchar getlg(i)$/
getname	n1.c	/^getname()$/
getnm	n5.c	/^getnm(p, min)$/
getpn	n1.c	/^getpn(a)$/
getrq	n1.c	/^getrq()$/
getsn	n3.c	/^getsn()$/
getstr	n10.c	/^char *getstr(s, t)	\/* find next string in s, copy/
gettch	n7.c	/^tchar gettch()$/
getword	n7.c	/^getword(x)$/
hmot	n6.c	/^tchar hmot()$/
hnumb	n4.c	/^hnumb(i)$/
horiz	n7.c	/^horiz(i)$/
hyphen	n8.c	/^hyphen(wp)$/
incoff	n3.c	/^filep incoff(p)$/
init0	n1.c	/^init0()$/
init1	n1.c	/^init1(a)$/
init2	n1.c	/^init2()$/
inumb	n4.c	/^inumb(n)$/
iscontrol	tdef.h	/^#define	iscontrol(n)	(n==035 || n==036)	\/* used t/
ismot	tdef.h	/^#define	ismot(n)	((n) & MOT)$/
isnmot	tdef.h	/^#define	isnmot(n)	((n) & NMOT)	\/* ditto *\/$/
isvmot	tdef.h	/^#define	isvmot(n)	((n) & VMOT)	\/* must have teste/
iszbit	tdef.h	/^#define	iszbit(n)	((n) & ZBIT)$/
kcatch	n1.c	/^kcatch()$/
maddhash	n3.c	/^maddhash(rp)$/
makem	n6.c	/^tchar makem(i)$/
maplow	n8.c	/^maplow(i)$/
max	n5.c	/^max(aa, bb)$/
mchbits	n6.c	/^mchbits()$/
mesg	n1.c	/^mesg(f)$/
mot	n6.c	/^tchar mot()$/
move	n10.c	/^move()$/
movword	n7.c	/^movword()$/
mrehash	n3.c	/^mrehash()$/
munhash	n3.c	/^munhash(mp)$/
newline	n7.c	/^newline(a)$/
newpage	n10.c	/^newpage(){;}$/
nextfile	n1.c	/^nextfile()$/
nofill	n7.c	/^nofill()$/
nrehash	n4.c	/^nrehash()$/
nunhash	n4.c	/^nunhash(rp)$/
oldsetps	n6.c	/^oldsetps()$/
oput	tdef.h	/^#define	oput(c)	if ((*obufp++ = (c)), obufp >= &ob/
oputs	n2.c	/^oputs(i)$/
outascii	n2.c	/^outascii(i)	\/* print i in best-guess ascii *\/$/
pchar	n2.c	/^pchar(i)$/
pchar1	n2.c	/^pchar1(i)$/
plot	n10.c	/^char	*plot(x)$/
popf	n1.c	/^popf()$/
popi	n3.c	/^tchar popi()$/
printn	n1.c	/^static printn(n, b)$/
ptesc	t10.c	/^ptesc()$/
ptfont	t10.c	/^ptfont()$/
ptfpcmd	t10.c	/^ptfpcmd(f, s)$/
ptinit	n10.c	/^ptinit()$/
ptlead	n10.c	/^ptlead()$/
ptout	n10.c	/^ptout(i)$/
ptout0	t10.c	/^ptout0(pi)$/
ptout1	n10.c	/^ptout1()$/
ptps	t10.c	/^ptps()$/
ptstop	t10.c	/^ptstop()$/
pttrailer	n10.c	/^pttrailer(){;}$/
punct	n8.c	/^punct(i)$/
pushback	n1.c	/^pushback(b)$/
pushi	n3.c	/^pushi(newip, mname)$/
putchar	n1.c	/^#define	putchar(n)	(*pfbp++ = (n))	\/* NO CHECKING/
quant	n4.c	/^quant(n, m)$/
rbf	n3.c	/^tchar rbf()$/
rbf0	n3.c	/^tchar rbf0(p)$/
rdtty	n5.c	/^rdtty()$/
roman	n4.c	/^roman(i, f)$/
roman0	n4.c	/^roman0(i, f, onesp, fivesp)$/
sbits	tdef.h	/^#define	sbits(n)	(((n) >> 24) & 0177)$/
seta	n3.c	/^seta()$/
setabs	n6.c	/^tchar setabs()		\/* set absolute char from \\C'.../
setaf	n4.c	/^setaf()	\/* return format of number register *\/$/
setbra	n9.c	/^setbra()$/
setbrk	n3.c	/^char	*setbrk(x)$/
setcbits	tdef.h	/^#define	setcbits(n,c)	n = (n & ~077777L | (c))	\/*/
setch	n6.c	/^tchar setch()$/
setdraw	n9.c	/^setdraw()	\/* generate internal cookies for a draw/
setfbits	tdef.h	/^#define	setfbits(n,f)	n = (n & ~FMASK) | (tchar)(f/
setfield	n9.c	/^setfield(x)$/
setfont	n6.c	/^setfont(a)$/
setfp	t6.c	/^setfp(pos, f, truename)	\/* mount font f at positi/
sethl	n6.c	/^tchar sethl(k)$/
setht	n6.c	/^tchar setht()		\/* set character height from \\H'./
setline	n9.c	/^setline()$/
setn	n4.c	/^setn()$/
setn1	n4.c	/^setn1(i, form, bits)$/
setnel	n7.c	/^setnel()$/
setov	n9.c	/^setov()$/
setps	n6.c	/^setps()$/
setrpt	n1.c	/^setrpt()$/
setsbits	tdef.h	/^#define	setsbits(n,s)	n = (n & ~SMASK) | (tchar)(s/
setsfbits	tdef.h	/^#define	setsfbits(n,sf)	n = (n & ~SFMASK) | (tchar/
setslant	n6.c	/^tchar setslant()		\/* set slant from \\S'...' *\/$/
setstr	n3.c	/^setstr()$/
setvline	n9.c	/^setvline()$/
setwd	n6.c	/^setwd()$/
setxon	n1.c	/^setxon()	\/* \\X'...' for copy through *\/$/
setz	n9.c	/^tchar setz()$/
sfbits	tdef.h	/^#define	sfbits(n)	(unsigned)(0177777 & (((n) & SFM/
skip	n3.c	/^skip()$/
skipstr	n10.c	/^char *skipstr(s)	\/* skip over leading space plus /
specnames	n10.c	/^specnames()$/
split	n8.c	/^split( aword, anend ) register tchar *aword, *anen/
sprintf	n1.c	/^char *sprintf(str, fmt, x1)$/
sprintn	n1.c	/^static char *sprintn(s, n, b)$/
stackdump	n3.c	/^stackdump()	\/* dumps stack of macros in process */
storeline	n7.c	/^storeline(c, w)$/
storeword	n7.c	/^storeword(c, w)$/
suffix	n8.c	/^suffix()$/
tbreak	n7.c	/^tbreak()$/
text	n7.c	/^text()$/
twdone	n10.c	/^twdone()$/
unpair	t6.c	/^unpair(i)$/
usedr	n4.c	/^usedr(i)	\/* returns -1 if nr i has never been use/
vmot	n6.c	/^tchar vmot()$/
vnumb	n4.c	/^vnumb(i)$/
vowel	n8.c	/^vowel(i)$/
wbf	n3.c	/^wbf(i)$/
wbfl	n3.c	/^wbfl()$/
wbt	n3.c	/^wbt(i)$/
width	n6.c	/^width(j)$/
wrc	n4.c	/^wrc(i)$/
xbits	t6.c	/^xbits(i, bitf)$/
xlss	n6.c	/^tchar xlss()$/
zapwcache	t6.c	/^zapwcache(s)$/
