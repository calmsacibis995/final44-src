.NH 1
Library Files
.PP
Library files are available to draw common figures and for special
figures like circles and arcs.
To include a library file as part of an \*(id program,
include the line
.P1
\&...libfile $name$
.P2
in your \*(id program (between the .IS and .IE lines that mark its
start and end.)
This section describes available library files that have been alluded
to up to now.
.NH 2
Rectangle
.PP
File
.IT rect
contains the definition of box
.IT rect ,
which looks like the definition in Section 3, with
five more variables:  $n$, $s$, $e$, $w$, and $c$,
which are the four compass points and the center,
respectively.
.P1
rect {
	var ne, nw, sw, se,
	n, e, w, s, c,
	ht, wd;
	ne = se + (0,1)*ht;
	nw = sw + (0,1)*ht;
	ne = nw + wd;
	n = (ne+nw)/2;
	s = (se+sw)/2;
	e = (ne+se)/2;
	w = (nw+sw)/2;
	c = (ne+sw)/2;
	ht ~ 1;
	wd ~ 1.5;
	bdlist = ne, nw, sw, se;
	conn ne to nw to sw to se to ne;
}
.P2
.NH 2
Arrow
.PP
File
.IT arrow
contains the definition of box
.IT arrow
as given in Section 3.
.P1
arrow {
	var tl, hd, head, perp, headang;
	conn tl to hd;
	perp = head*(tl-hd)/abs(tl-hd);
	conn hd + cis(headang)*perp to hd to hd + cis(-headang)*perp;
	head ~ 0.1;
	headang ~ 25;
}
.P2
.NH 2
Wavy
.PP
Library file
.IT wavy
contains the definition for the familiar
.IT wavy .
.P1
wavy {
	var start, end, perp, pt1, pt2, ht;
	perp = (0,1)*(start - end)/abs(start - end);
	pt1 = 0.25[start,end] + perp*ht;
	pt2 = 0.75[start,end] - perp*ht;
	conn start to pt1 to pt2 to end;
}
.P2
.NH 2
Dash
.PP
Library file
.IT dash
contains the definition of box
.IT dash ,
which may be useful for drawing dashed lines:
.P1
dash {
	var start, end;
	conn start to 0.25[start,end];
	conn 0.75[start,end] to end;
}
.P2
.NH 2
Circles
.PP
Box
.IT circle
resides in a library file of the same name, and
has the local variables described in Section 3:
$center$, $radius$, $z1$, $z2$, and $z3$.
.Ts
Box
.IT circle
actually consists of variable declarations
and a put of box
.IT CIRCLE .
So, if you will have many circles of a particular radius,
it might be easier for you to define your own, say, $circle3$:
.P1
...libfile CIRCLE
circle {
	var center, radius, z1, z2, z3;
	put CIRCLE {
		radius = 3;
	}
}
.P2
.Te
.NH 2
Arcs
.PP
Box
.IT arc
is contained in a library file of the same name,
with local variables as described in Section 3:
$center$, $radius$, $start$, $midway$, $end$,
$startang$, $midang$, and $endang$.
.Ts
As above,
.IT arc
calls on
a box called
.IT ARC .
.Te
