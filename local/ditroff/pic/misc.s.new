.data
.text
LL0:.align	1
.globl	_setdir
.set	L91,0x0
.data
.text
_setdir:.word	L91
movl	4(fp),r0
casel	r0,$286,$3
.align 1
L2000000:
.word	L99-L2000000
.word	L100-L2000000
.word	L97-L2000000
.word	L98-L2000000
L95:movl	_hvmode,r0
ret#1
L97:movl	$1,_hvmode
jbr	L95
L98:movl	$3,_hvmode
jbr	L95
L99:movl	$2,_hvmode
jbr	L95
L100:clrl	_hvmode
jbr	L95
.align	1
.globl	_curdir
.data	1
L117:.ascii	"can't happen curdir\0"
.text
.set	L104,0x0
.data
.text
_curdir:.word	L104
movl	_hvmode,r0
casel	r0,$0,$3
.align 1
L2000001:
.word	L110-L2000001
.word	L112-L2000001
.word	L111-L2000001
.word	L113-L2000001
pushl	$L117
callf	$8,_yyerror
ret#1
L110:movl	$287,r0
ret#1
L111:movl	$286,r0
ret#1
L112:movl	$288,r0
ret#1
L113:movl	$289,r0
ret#1
.align	1
.globl	_getcomp
.data
.align	2
L134:.long	0x41000000 # .float 2
.text
.data
.align	2
L147:.long	0x41000000 # .float 2
.text
.data	1
L159:.ascii	"can't happen getcomp\0"
.text
.set	L118,0x0
.data
.comm	_exprlist,400
.align	2
.globl	_nexpr
_nexpr:.long	0
.text
_getcomp:.word	L118
movl	8(fp),r0
casel	r0,$322,$4
.align 1
L2000008:
.word	L124-L2000008
.word	L125-L2000008
.word	L139-L2000008
.word	L126-L2000008
.word	L152-L2000008
L122:pushl	$L159
callf	$8,_yyerror
ret#2
L124:movl	4(fp),r0
clrl	r1
movl	16(r0),r0
ret#2
L125:movl	4(fp),r0
clrl	r1
movl	20(r0),r0
ret#2
L126:movl	*4(fp),r0
casel	r0,$1,$8
.align 1
L2000009:
.word	L131-L2000009
.word	L136-L2000009
.word	L136-L2000009
.word	L133-L2000009
.word	L133-L2000009
.word	L139-L2000009
.word	L139-L2000009
.word	L131-L2000009
.word	L131-L2000009
L139:movl	*4(fp),r0
casel	r0,$1,$8
.align 1
L2000010:
.word	L144-L2000010
.word	L149-L2000010
.word	L149-L2000010
.word	L146-L2000010
.word	L146-L2000010
.word	L152-L2000010
.word	L152-L2000010
.word	L144-L2000010
.word	L144-L2000010
L152:movl	*4(fp),r0
cmpl	r0,$4
jeql	L131
cmpl	r0,$5
jneq	L122
L131:movl	4(fp),r0
clrl	r1
movl	52(r0),r0
ret#2
L133:movl	4(fp),r0
ldf	52(r0)
mulf	L134
L2000005:stf	r0
clrl	r1
ret#2
L136:movl	4(fp),r0
movl	r0,r1
ldf	52(r0)
subf	16(r1)
jbr	L2000005
L144:movl	4(fp),r0
clrl	r1
movl	56(r0),r0
ret#2
L146:movl	4(fp),r0
ldf	56(r0)
mulf	L147
jbr	L2000005
L149:movl	4(fp),r0
movl	r0,r1
ldf	56(r0)
subf	20(r1)
jbr	L2000005
.align	1
.globl	_exprsave
.set	L163,0x0
.data
.text
_exprsave:.word	L163
movl	_nexpr,r0
ldd	4(fp)
cvdf
stf	_exprlist[r0]
incl	_nexpr
ret#2
.align	1
.globl	_sprintgen
.set	L167,0x0
.data
.text
_sprintgen:.word	L167
subl3	$1052,fp,sp
pushl	$0
pushl	_exprlist+16
pushl	$0
pushl	_exprlist+12
pushl	$0
pushl	_exprlist+8
pushl	$0
pushl	_exprlist+4
pushl	$0
pushl	_exprlist
pushl	4(fp)
subl3	$1052,fp,-(sp)
callf	$52,_sprintf
clrl	_nexpr
pushl	4(fp)
callf	$8,_free
subl3	$1052,fp,-(sp)
callf	$8,_tostring
ret#1
.align	1
.globl	_makefattr
.set	L173,0x0
.data
.text
_makefattr:.word	L173
subl3	$56,fp,sp
ldd	12(fp)
cvdf
stf	-56(fp)
movab	-4(sp),sp
movl	-56(fp),(sp)
pushl	8(fp)
pushl	4(fp)
callf	$16,_makeattr
ret#2
.align	1
.globl	_makeoattr
.set	L179,0x0
.data
.text
_makeoattr:.word	L179
subl3	$56,fp,sp
movl	8(fp),-56(fp)
movab	-4(sp),sp
movl	-56(fp),(sp)
pushl	$0
pushl	4(fp)
callf	$16,_makeattr
ret#2
.align	1
.globl	_makeiattr
.set	L184,0x0
.data
.text
_makeiattr:.word	L184
subl3	$56,fp,sp
movl	8(fp),-56(fp)
movab	-4(sp),sp
movl	-56(fp),(sp)
pushl	$0
pushl	4(fp)
callf	$16,_makeattr
ret#2
.align	1
.globl	_maketattr
.set	L189,0x0
.data
.text
_maketattr:.word	L189
subl3	$56,fp,sp
movl	8(fp),-56(fp)
movab	-4(sp),sp
movl	-56(fp),(sp)
pushl	4(fp)
pushl	$285
callf	$16,_makeattr
ret#2
.align	1
.globl	_addtattr
.set	L194,0x0
.data
.text
_addtattr:.word	L194
subl3	$1,_nattr,r0
mull2	$12,r0
addl2	_attr,r0
orl2	4(fp),4(r0)
ret#2
.align	1
.globl	_makevattr
.set	L199,0x0
.data
.text
_makevattr:.word	L199
subl3	$56,fp,sp
movl	4(fp),-56(fp)
movab	-4(sp),sp
movl	-56(fp),(sp)
pushl	$0
pushl	$282
callf	$16,_makeattr
ret#2
.align	1
.globl	_makeattr
.data	1
L209:.ascii	"attr\0"
.text
.data	1
L212:.ascii	"attr %d:  %d %d %d\12\0"
.text
.set	L203,0x0
.data
.text
_makeattr:.word	L203
tstl	4(fp)
jneq	L207
tstl	12(fp)
jneq	L207
clrl	_nattr
ret#2
L207:cmpl	_nattr,_nattrlist
jlss	L208
pushl	$12
addl2	$100,_nattrlist
pushl	_nattrlist
pushl	$L209
pushl	_attr
callf	$20,_grow
movl	r0,_attr
L208:tstl	_dbg
jeql	L210
pushl	12(fp)
pushl	8(fp)
pushl	4(fp)
pushl	_nattr
pushl	$L212
callf	$24,_printf
L210:mull3	$12,_nattr,r0
addl2	_attr,r0
movl	4(fp),(r0)
mull3	$12,_nattr,r0
addl2	_attr,r0
movl	8(fp),4(r0)
addl3	$12,fp,r0
mull3	$12,_nattr,r1
addl2	_attr,r1
addl2	$8,r1
movl	(r0),(r1)
incl	_nattr
ret#2
.align	1
.globl	_printexpr
.data	1
L218:.ascii	"%g\12\0"
.text
.set	L214,0x0
.data
.text
_printexpr:.word	L214
pushl	8(fp)
pushl	4(fp)
pushl	$L218
callf	$16,_printf
ret#2
.align	1
.globl	_printpos
.data	1
L224:.ascii	"%g, %g\12\0"
.text
.set	L220,0x0
.data
.text
_printpos:.word	L220
movl	4(fp),r0
pushl	$0
pushl	20(r0)
pushl	$0
pushl	16(r0)
pushl	$L224
callf	$24,_printf
ret#2
.align	1
.globl	_tostring
.data	1
L231:.ascii	"out of space in tostring on %s\0"
.text
.set	L225,0x1800
.data
.text
_tostring:.word	L225
movl	4(fp),r12
pushl	r12
callf	$8,_strlen
addl3	$1,r0,-(sp)
callf	$8,_malloc
movl	r0,r11
jneq	L230
pushl	r12
pushl	$L231
callf	$12,_yyerror
pushl	$1
callf	$8,_exit
L230:pushl	r12
pushl	r11
callf	$12,_strcpy
movl	r11,r0
ret#1
.align	1
.globl	_makepos
.set	L234,0x0
.data
.text
_makepos:.word	L234
subl3	$56,fp,sp
pushl	$0
pushl	$269
callf	$12,_makenode
movl	r0,-56(fp)
ldd	4(fp)
cvdf
stf	16(r0)
movl	-56(fp),r0
ldd	12(fp)
cvdf
stf	20(r0)
movl	-56(fp),r0
ret#1
.align	1
.globl	_makebetween
.data	1
L243:.ascii	"fraction = %.2f\12\0"
.text
.set	L238,0x0
.data
.text
_makebetween:.word	L238
subl3	$56,fp,sp
tstl	_dbg
jeql	L242
pushl	8(fp)
pushl	4(fp)
pushl	$L243
callf	$16,_printf
L242:pushl	$0
pushl	$269
callf	$12,_makenode
movl	r0,-56(fp)
movl	16(fp),r0
movl	12(fp),r1
ldf	16(r0)
subf	16(r1)
movl	12(fp),r2
stf	r0
ldfd	r0
muld	4(fp)
std	r0
ldfd	16(r2)
addd	r0
movl	-56(fp),r2
cvdf
stf	16(r2)
movl	16(fp),r0
movl	12(fp),r1
ldf	20(r0)
subf	20(r1)
movl	12(fp),r2
stf	r0
ldfd	r0
muld	4(fp)
std	r0
ldfd	20(r2)
addd	r0
movl	-56(fp),r2
cvdf
stf	20(r2)
movl	-56(fp),r0
ret#1
.align	1
.globl	_getpos
.set	L244,0x0
.data
.text
_getpos:.word	L244
subl3	$60,fp,sp
subl3	$60,fp,-(sp)
subl3	$56,fp,-(sp)
pushl	8(fp)
pushl	4(fp)
callf	$20,_whatpos
pushl	$0
pushl	-60(fp)
pushl	$0
pushl	-56(fp)
callf	$20,_makepos
ret#1
.align	1
.globl	_whatpos
.data	1
L255:.ascii	"whatpos %o %d %d\12\0"
.text
.data
.align	2
L266:.long	0x41000000 # .float 2
.text
.data
.align	2
L268:.long	0x41000000 # .float 2
.text
.data
.align	2
L270:.long	0x41000000 # .float 2
.text
.data
.align	2
L272:.long	0x41000000 # .float 2
.text
.data
.align	2
L274:.long	0x41000000 # .float 2
.text
.data
.align	2
L275:.long	0x41000000 # .float 2
.text
.data
.align	2
L277:.long	0x41000000 # .float 2
.text
.data
.align	2
L278:.long	0x41000000 # .float 2
.text
.data
.align	2
L280:.long	0x41000000 # .float 2
.text
.data
.align	2
L281:.long	0x41000000 # .float 2
.text
.data
.align	2
L283:.long	0x41000000 # .float 2
.text
.data
.align	2
L284:.long	0x41000000 # .float 2
.text
.data
.align	2
L310:.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
.text
.data
.align	2
L311:.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
.text
.data
.align	2
L313:.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
.text
.data
.align	2
L314:.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
.text
.data
.align	2
L316:.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
.text
.data
.align	2
L317:.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
.text
.data
.align	2
L319:.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
.text
.data
.align	2
L320:.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
.text
.data
.align	2
L332:.long	0x41000000 # .float 2
.text
.data
.align	2
L333:.long	0x41000000 # .float 2
.text
.data	1
L350:.ascii	"whatpos returns %g %g\12\0"
.text
.set	L249,0x0
.data
.text
_whatpos:.word	L249
subl3	$68,fp,sp
tstl	_dbg
jeql	L254
pushl	8(fp)
pushl	*4(fp)
pushl	4(fp)
pushl	$L255
callf	$20,_printf
L254:movl	4(fp),r0
movl	16(r0),-56(fp)
movl	20(r0),-60(fp)
cmpl	*4(fp),$269
jeql	L256
movl	52(r0),-64(fp)
movl	56(r0),-68(fp)
L256:movl	*4(fp),r0
cmpl	r0,$8
jeql	L262
jgtr	L344
cmpl	r0,$4
jeql	L302
jgtr	L345
cmpl	r0,$2
jeql	L325
jgtr	L346
cmpl	r0,$1
jeql	L262
L257:tstl	_dbg
jeql	L349
pushl	$0
pushl	-60(fp)
pushl	$0
pushl	-56(fp)
pushl	$L350
callf	$24,_printf
L349:movl	-56(fp),*12(fp)
movl	-60(fp),*16(fp)
movl	$1,r0
ret#1
L262:movl	8(fp),r0
casel	r0,$312,$9
.align 1
L2000042:
.word	L269-L2000042
.word	L271-L2000042
.word	L265-L2000042
.word	L267-L2000042
.word	L273-L2000042
.word	L282-L2000042
.word	L279-L2000042
.word	L276-L2000042
.word	L285-L2000042
.word	L287-L2000042
jbr	L257
L265:ldf	-68(fp)
divf	L266
L2000019:addf	-60(fp)
L2000018:stf	-60(fp)
jbr	L257
L267:ldf	-68(fp)
divf	L268
L2000022:stf	r0
ldf	-60(fp)
subf	r0
jbr	L2000018
L269:ldf	-64(fp)
divf	L270
addf	-56(fp)
L2000025:stf	-56(fp)
jbr	L257
L271:ldf	-64(fp)
divf	L272
stf	r0
ldf	-56(fp)
subf	r0
jbr	L2000025
L273:ldf	-64(fp)
divf	L274
addf	-56(fp)
stf	-56(fp)
ldf	-68(fp)
divf	L275
jbr	L2000019
L276:ldf	-64(fp)
divf	L277
stf	r0
ldf	-56(fp)
subf	r0
stf	-56(fp)
ldf	-68(fp)
divf	L278
jbr	L2000022
L279:ldf	-64(fp)
divf	L280
addf	-56(fp)
stf	-56(fp)
ldf	-68(fp)
divf	L281
jbr	L2000022
L282:ldf	-64(fp)
divf	L283
stf	r0
ldf	-56(fp)
subf	r0
stf	-56(fp)
ldf	-68(fp)
divf	L284
jbr	L2000019
L285:cmpl	*4(fp),$8
jneq	L287
pushl	16(fp)
pushl	12(fp)
pushl	$320
movl	4(fp),r0
ldf	60(r0)
L2000028:cvfl	r0
pushl	*_objlist[r0]
callf	$20,_whatpos
ret#1
L287:cmpl	*4(fp),$8
jneq	L257
pushl	16(fp)
pushl	12(fp)
pushl	$321
movl	4(fp),r0
ldf	64(r0)
jbr	L2000028
L291:movl	8(fp),r0
cmpl	r0,$320
jeql	L294
cmpl	r0,$321
jeql	L297
L292:cmpl	8(fp),$320
jeql	L257
cmpl	8(fp),$321
jeql	L257
ldf	-64(fp)
subf	-56(fp)
pushl	$0
stf	r0
ldf	-64(fp)
subf	-56(fp)
mulf	r0
stf	r0
ldf	-68(fp)
subf	-60(fp)
stf	r1
ldf	-68(fp)
subf	-60(fp)
mulf	r1
addf	r0
stf	-(sp)
callf	$12,_sqrt
ldd	r0
cvdf
stf	-68(fp)
movl	-68(fp),-64(fp)
L302:movl	8(fp),r0
casel	r0,$312,$7
.align 1
L2000043:
.word	L307-L2000043
.word	L308-L2000043
.word	L305-L2000043
.word	L306-L2000043
.word	L309-L2000043
.word	L315-L2000043
.word	L312-L2000043
.word	L318-L2000043
jbr	L257
L294:movl	4(fp),r0
bitl	$8,32(r0)
jneq	L2000012
L2000030:movl	-64(fp),-56(fp)
movl	-68(fp),-60(fp)
jbr	L292
L297:movl	4(fp),r0
bitl	$8,32(r0)
jneq	L2000030
L2000012:movl	4(fp),r0
movl	60(r0),-56(fp)
movl	64(r0),-60(fp)
jbr	L292
L305:ldf	-60(fp)
addf	-68(fp)
jbr	L2000018
L306:ldf	-60(fp)
subf	-68(fp)
jbr	L2000018
L307:ldf	-56(fp)
addf	-64(fp)
jbr	L2000025
L308:ldf	-56(fp)
subf	-64(fp)
jbr	L2000025
L309:ldfd	-64(fp)
muld	L310
std	r0
ldfd	-56(fp)
addd	r0
cvdf
stf	-56(fp)
ldfd	-68(fp)
muld	L311
L2000034:std	r0
ldfd	-60(fp)
addd	r0
L2000031:cvdf
jbr	L2000018
L312:ldfd	-64(fp)
muld	L313
std	r0
ldfd	-56(fp)
addd	r0
cvdf
stf	-56(fp)
ldfd	-68(fp)
muld	L314
L2000037:std	r0
ldfd	-60(fp)
subd	r0
jbr	L2000031
L315:ldfd	-64(fp)
muld	L316
std	r0
ldfd	-56(fp)
subd	r0
cvdf
stf	-56(fp)
ldfd	-68(fp)
muld	L317
jbr	L2000034
L318:ldfd	-64(fp)
muld	L319
std	r0
ldfd	-56(fp)
subd	r0
cvdf
stf	-56(fp)
ldfd	-68(fp)
muld	L320
jbr	L2000037
L325:movl	8(fp),r0
cmpl	r0,$1
jeql	L331
cmpl	r0,$312
jeql	L338
cmpl	r0,$313
jeql	L340
cmpl	r0,$314
jeql	L334
cmpl	r0,$315
jeql	L336
cmpl	r0,$320
jeql	L257
cmpl	r0,$321
jeql	L329
L331:ldf	-56(fp)
addf	-64(fp)
divf	L332
stf	-56(fp)
ldf	-60(fp)
addf	-68(fp)
divf	L333
jbr	L2000018
L334:cmpf2	-68(fp),-60(fp)
jleq	L257
L329:movl	-64(fp),-56(fp)
movl	-68(fp),-60(fp)
jbr	L257
L336:cmpf2	-68(fp),-60(fp)
jlss	L329
jbr	L257
L338:cmpf2	-64(fp),-56(fp)
jgtr	L329
jbr	L257
L340:cmpf2	-64(fp),-56(fp)
jlss	L329
jbr	L257
L346:cmpl	r0,$3
jeql	L325
jbr	L257
L345:cmpl	r0,$6
jeql	L291
jgtr	L347
cmpl	r0,$5
jeql	L302
jbr	L257
L347:cmpl	r0,$7
jeql	L325
jbr	L257
L344:cmpl	r0,$11
jeql	L257
jgtr	L348
cmpl	r0,$9
jeql	L262
jbr	L257
L348:cmpl	r0,$269
jeql	L257
jbr	L257
.align	1
.globl	_gethere
.data	1
L356:.ascii	"gethere %g %g\12\0"
.text
.set	L351,0x0
.data
.text
_gethere:.word	L351
tstl	_dbg
jeql	L355
pushl	$0
pushl	_cury
pushl	$0
pushl	_curx
pushl	$L356
callf	$24,_printf
L355:pushl	$0
pushl	_cury
pushl	$0
pushl	_curx
callf	$20,_makepos
ret#1
.align	1
.globl	_getlast
.data	1
L368:.ascii	"got a last of x,y= %g,%g\12\0"
.text
.data	1
L369:.ascii	"there is no %dth last\0"
.text
.set	L357,0x0
.data
.text
_getlast:.word	L357
subl3	$64,fp,sp
movl	4(fp),-60(fp)
subl3	$1,_nobj,-56(fp)
jbr	L363
L2000045:movl	-64(fp),r0
ldf	68(r0)
cvfl	-56(fp)
L361:decl	-56(fp)
L363:tstl	-56(fp)
jlss	L362
movl	-56(fp),r0
movl	*_objlist[r0],-64(fp)
cmpl	*-64(fp),$12
jeql	L2000045
cmpl	*-64(fp),8(fp)
jneq	L361
decl	-60(fp)
jgtr	L361
tstl	_dbg
jeql	L367
movl	-64(fp),r0
pushl	$0
pushl	20(r0)
pushl	$0
pushl	16(r0)
pushl	$L368
callf	$24,_printf
L367:movl	-64(fp),r0
ret#1
L362:pushl	4(fp)
pushl	$L369
callf	$12,_yyerror
clrl	r0
ret#1
.align	1
.globl	_getfirst
.data
.align	2
L378:.long	0x40800000 # .float 1
.text
.data	1
L382:.ascii	"got a first of x,y= %g,%g\12\0"
.text
.data	1
L383:.ascii	"there is no %dth \0"
.text
.set	L370,0x0
.data
.text
_getfirst:.word	L370
subl3	$64,fp,sp
movl	4(fp),-60(fp)
clrl	-56(fp)
jbr	L376
L2000047:cmpl	8(fp),$8
jeql	L377
movl	-64(fp),r0
ldf	72(r0)
addf	L378
cvfl	-56(fp)
L374:incl	-56(fp)
L376:cmpl	-56(fp),_nobj
jgeq	L375
movl	-56(fp),r0
movl	*_objlist[r0],-64(fp)
cmpl	*-64(fp),$8
jeql	L2000047
L377:cmpl	*-64(fp),8(fp)
jneq	L374
decl	-60(fp)
jgtr	L374
tstl	_dbg
jeql	L381
movl	-64(fp),r0
pushl	$0
pushl	20(r0)
pushl	$0
pushl	16(r0)
pushl	$L382
callf	$24,_printf
L381:movl	-64(fp),r0
ret#1
L375:pushl	4(fp)
pushl	$L383
callf	$12,_yyerror
clrl	r0
ret#1
.align	1
.globl	_getblkvar
.set	L384,0x0
.data
.text
_getblkvar:.word	L384
subl3	$56,fp,sp
pushl	8(fp)
pushl	4(fp)
callf	$12,_getblk
movl	(r0),-56(fp)
clrl	r1
movl	-56(fp),r0
ret#2
.align	1
.globl	_getblock
.set	L389,0x0
.data
.text
_getblock:.word	L389
subl3	$56,fp,sp
pushl	8(fp)
pushl	4(fp)
callf	$12,_getblk
movl	(r0),-56(fp)
movl	-56(fp),r0
ret#1
.align	1
.globl	_getblk
.lcomm	L397,4
.data	1
L399:.ascii	".%s is not in that block\0"
.text
.data	1
L406:.ascii	"getblk %s found x,y= %g,%g\12\0"
.text
.data	1
L407:.ascii	"there is no .%s in that []\0"
.text
.lcomm	L408,4
.set	L393,0x0
.data
.text
_getblk:.word	L393
subl3	$56,fp,sp
cmpl	*4(fp),$8
jeql	L398
pushl	8(fp)
pushl	$L399
L2000053:callf	$12,_yyerror
movl	$L397,r0
jbr	L394
L2000049:tstl	_dbg
jeql	L405
movl	-56(fp),r0
movl	8(r0),r0
pushl	$0
pushl	20(r0)
movl	-56(fp),r0
movl	8(r0),r0
pushl	$0
pushl	16(r0)
pushl	8(fp)
pushl	$L406
callf	$28,_printf
L405:addl3	$8,-56(fp),r0
L394:movab	L408,$0
movab	L408,r0
ret#1
L398:movl	4(fp),r0
movl	44(r0),-56(fp)
jbr	L402
L2000051:pushl	*-56(fp)
pushl	8(fp)
callf	$12,_strcmp
tstl	r0
jeql	L2000049
movl	-56(fp),r0
movl	12(r0),-56(fp)
L402:tstl	-56(fp)
jneq	L2000051
pushl	8(fp)
pushl	$L407
jbr	L2000053
.align	1
.globl	_fixpos
.data	1
L414:.ascii	"fixpos returns %g %g\12\0"
.text
.set	L409,0x0
.data
.text
_fixpos:.word	L409
tstl	_dbg
jeql	L413
movl	4(fp),r0
ldfd	20(r0)
addd	16(fp)
pushd
ldfd	16(r0)
addd	8(fp)
pushd
pushl	$L414
callf	$24,_printf
L413:movl	4(fp),r0
ldfd	20(r0)
addd	16(fp)
pushd
ldfd	16(r0)
addd	8(fp)
pushd
callf	$20,_makepos
ret#1
.align	1
.globl	_addpos
.data	1
L420:.ascii	"addpos returns %g %g\12\0"
.text
.set	L415,0x0
.data
.text
_addpos:.word	L415
tstl	_dbg
jeql	L419
movl	4(fp),r0
movl	8(fp),r1
ldf	20(r0)
addf	20(r1)
pushl	$0
stf	-(sp)
movl	4(fp),r0
movl	8(fp),r1
ldf	16(r0)
addf	16(r1)
pushl	$0
stf	-(sp)
pushl	$L420
callf	$24,_printf
L419:movl	4(fp),r0
movl	8(fp),r1
ldf	20(r0)
addf	20(r1)
pushl	$0
stf	-(sp)
movl	4(fp),r0
movl	8(fp),r1
ldf	16(r0)
addf	16(r1)
pushl	$0
stf	-(sp)
callf	$20,_makepos
ret#1
.align	1
.globl	_subpos
.data	1
L426:.ascii	"subpos returns %g %g\12\0"
.text
.set	L421,0x0
.data
.text
_subpos:.word	L421
tstl	_dbg
jeql	L425
movl	4(fp),r0
movl	8(fp),r1
ldf	20(r0)
subf	20(r1)
pushl	$0
stf	-(sp)
movl	4(fp),r0
movl	8(fp),r1
ldf	16(r0)
subf	16(r1)
pushl	$0
stf	-(sp)
pushl	$L426
callf	$24,_printf
L425:movl	4(fp),r0
movl	8(fp),r1
ldf	20(r0)
subf	20(r1)
pushl	$0
stf	-(sp)
movl	4(fp),r0
movl	8(fp),r1
ldf	16(r0)
subf	16(r1)
pushl	$0
stf	-(sp)
callf	$20,_makepos
ret#1
.align	1
.globl	_makenode
.data	1
L433:.ascii	"out of space in makenode\12\0"
.text
.data	1
L435:.ascii	"objlist\0"
.text
.set	L427,0x0
.data
.text
_makenode:.word	L427
subl3	$56,fp,sp
subl3	$1,8(fp),r0
shll	$2,r0,r0
addl3	$56,r0,-(sp)
pushl	$1
callf	$12,_calloc
movl	r0,-56(fp)
tstl	r0
jneq	L432
pushl	$L433
callf	$8,_yyerror
pushl	$1
callf	$8,_exit
L432:movl	4(fp),*-56(fp)
movl	-56(fp),r0
movl	8(fp),4(r0)
movl	-56(fp),r0
movl	_nobj,8(r0)
movl	-56(fp),r0
movl	_hvmode,12(r0)
movl	-56(fp),r0
movl	_curx,16(r0)
movl	-56(fp),r0
movl	_cury,20(r0)
movl	-56(fp),r0
movl	_ntext1,24(r0)
movl	-56(fp),r0
movl	_ntext,28(r0)
movl	_ntext,_ntext1
cmpl	_nobj,_nobjlist
jlss	L434
pushl	$4
addl2	$100,_nobjlist
pushl	_nobjlist
pushl	$L435
pushl	_objlist
callf	$20,_grow
movl	r0,_objlist
L434:movl	_nobj,r0
movl	-56(fp),*_objlist[r0]
incl	_nobj
movl	-56(fp),r0
ret#1
.align	1
.globl	_extreme
.set	L437,0x0
.data
.text
_extreme:.word	L437
ldfd	_xmax
cmpd	4(fp)
jgeq	L441
ldd	4(fp)
cvdf
stf	_xmax
L441:ldfd	_ymax
cmpd	12(fp)
jgeq	L442
ldd	12(fp)
cvdf
stf	_ymax
L442:ldfd	_xmin
cmpd	4(fp)
jleq	L443
ldd	4(fp)
cvdf
stf	_xmin
L443:clrl	r1
movl	_ymin,r0
cmpd2	12(fp),r0
jgeq	L444
ldd	12(fp)
cvdf
stf	_ymin
L444:ret#2

