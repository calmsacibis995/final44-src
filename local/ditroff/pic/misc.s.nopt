LL0:
	.data
	.text
	.align	1
	.globl	_setdir
_setdir:
	.word	L91
	jbr 	L93
L94:
	movl	4(fp),r0
	jbr 	L96
L97:
	movl	$1,_hvmode
	jbr 	L95
L98:
	movl	$3,_hvmode
	jbr 	L95
L99:
	movl	$2,_hvmode
	jbr 	L95
L100:
	clrl	_hvmode
	jbr 	L95
L96:
	casel	r0,$286,$3
	.align 1
L101:
	.word	L99-L101
	.word	L100-L101
	.word	L97-L101
	.word	L98-L101
L102:
L95:
	movl	_hvmode,r0
	ret#1
	ret#1
	.set	L91,0x0
L93:
	jbr 	L94
	.data
	.text
	.align	1
	.globl	_curdir
_curdir:
	.word	L104
	jbr 	L106
L107:
	movl	_hvmode,r0
	jbr 	L109
L110:
	movl	$287,r0
	ret#1
L111:
	movl	$286,r0
	ret#1
L112:
	movl	$288,r0
	ret#1
L113:
	movl	$289,r0
	ret#1
L109:
	casel	r0,$0,$3
	.align 1
L114:
	.word	L110-L114
	.word	L112-L114
	.word	L111-L114
	.word	L113-L114
L115:
L108:
	.data	1
L117:
	.ascii	"can't happen curdir\0"
	.text
	pushl	$L117
	callf	$8,_yyerror
	ret#1
	.set	L104,0x0
L106:
	jbr 	L107
	.data
	.text
	.align	1
	.globl	_getcomp
_getcomp:
	.word	L118
	jbr 	L120
L121:
	movl	8(fp),r0
	jbr 	L123
L124:
	movl	4(fp),r0
	ldfd	16(r0)
	std	r0
	ret#2
L125:
	movl	4(fp),r0
	ldfd	20(r0)
	std	r0
	ret#2
L126:
	movl	*4(fp),r0
	jbr 	L128
L129:
L130:
L131:
	movl	4(fp),r0
	ldfd	52(r0)
	std	r0
	ret#2
L132:
L133:
	.data
	.align	2
L134:
	.long	0x41000000 # .float 2
	.text
	movl	4(fp),r0
	ldf	52(r0)
	mulf	L134
	stf	r0
	ldfd	r0
	std	r0
	ret#2
L135:
L136:
	movl	4(fp),r0
	movl	4(fp),r1
	ldf	52(r0)
	subf	16(r1)
	stf	r0
	ldfd	r0
	std	r0
	ret#2
L128:
	casel	r0,$1,$8
	.align 1
L137:
	.word	L129-L137
	.word	L135-L137
	.word	L136-L137
	.word	L132-L137
	.word	L133-L137
	.word	L138-L137
	.word	L138-L137
	.word	L130-L137
	.word	L131-L137
L138:
L127:
L139:
	movl	*4(fp),r0
	jbr 	L141
L142:
L143:
L144:
	movl	4(fp),r0
	ldfd	56(r0)
	std	r0
	ret#2
L145:
L146:
	.data
	.align	2
L147:
	.long	0x41000000 # .float 2
	.text
	movl	4(fp),r0
	ldf	56(r0)
	mulf	L147
	stf	r0
	ldfd	r0
	std	r0
	ret#2
L148:
L149:
	movl	4(fp),r0
	movl	4(fp),r1
	ldf	56(r0)
	subf	20(r1)
	stf	r0
	ldfd	r0
	std	r0
	ret#2
L141:
	casel	r0,$1,$8
	.align 1
L150:
	.word	L142-L150
	.word	L148-L150
	.word	L149-L150
	.word	L145-L150
	.word	L146-L150
	.word	L151-L150
	.word	L151-L150
	.word	L143-L150
	.word	L144-L150
L151:
L140:
L152:
	movl	*4(fp),r0
	jbr 	L154
L155:
L156:
	movl	4(fp),r0
	ldfd	52(r0)
	std	r0
	ret#2
L154:
	cmpl	r0,$4
	jeql	L155
	cmpl	r0,$5
	jeql	L156
L153:
	jbr 	L122
L123:
	casel	r0,$322,$4
	.align 1
L157:
	.word	L124-L157
	.word	L125-L157
	.word	L139-L157
	.word	L126-L157
	.word	L152-L157
L158:
L122:
	.data	1
L159:
	.ascii	"can't happen getcomp\0"
	.text
	pushl	$L159
	callf	$8,_yyerror
	ret#2
	.set	L118,0x0
L120:
	jbr 	L121
	.data
	.comm	_exprlist,400
	.align	2
	.globl	_nexpr
_nexpr:
	.long	0
	.text
	.align	1
	.globl	_exprsave
_exprsave:
	.word	L163
	jbr 	L165
L166:
	movl	_nexpr,r0
	ldd	4(fp)
	cvdf
	stf	_exprlist[r0]
	incl	_nexpr
	ret#2
	.set	L163,0x0
L165:
	jbr 	L166
	.data
	.text
	.align	1
	.globl	_sprintgen
_sprintgen:
	.word	L167
	jbr 	L169
L170:
	pushl	$0
	pushl	_exprlist+16
	pushl	$0
	pushl	_exprlist+12
	pushl	$0
	pushl	_exprlist+8
	pushl	$0
	pushl	_exprlist+4
	pushl	$0
	pushl	_exprlist
	pushl	4(fp)
	subl3	$1052,fp,r0
	pushl	r0
	callf	$52,_sprintf
	clrl	_nexpr
	pushl	4(fp)
	callf	$8,_free
	subl3	$1052,fp,r0
	pushl	r0
	callf	$8,_tostring
	ret#1
	ret#1
	.set	L167,0x0
L169:
	subl3	$1052,fp,sp
	jbr 	L170
	.data
	.text
	.align	1
	.globl	_makefattr
_makefattr:
	.word	L173
	jbr 	L175
L176:
	ldd	12(fp)
	cvdf
	stf	-56(fp)
	movab	-4(sp),sp
	movl	-56(fp),(sp)
	pushl	8(fp)
	pushl	4(fp)
	callf	$16,_makeattr
	ret#2
	.set	L173,0x0
L175:
	subl3	$56,fp,sp
	jbr 	L176
	.data
	.text
	.align	1
	.globl	_makeoattr
_makeoattr:
	.word	L179
	jbr 	L181
L182:
	movl	8(fp),-56(fp)
	movab	-4(sp),sp
	movl	-56(fp),(sp)
	pushl	$0
	pushl	4(fp)
	callf	$16,_makeattr
	ret#2
	.set	L179,0x0
L181:
	subl3	$56,fp,sp
	jbr 	L182
	.data
	.text
	.align	1
	.globl	_makeiattr
_makeiattr:
	.word	L184
	jbr 	L186
L187:
	movl	8(fp),-56(fp)
	movab	-4(sp),sp
	movl	-56(fp),(sp)
	pushl	$0
	pushl	4(fp)
	callf	$16,_makeattr
	ret#2
	.set	L184,0x0
L186:
	subl3	$56,fp,sp
	jbr 	L187
	.data
	.text
	.align	1
	.globl	_maketattr
_maketattr:
	.word	L189
	jbr 	L191
L192:
	movl	8(fp),-56(fp)
	movab	-4(sp),sp
	movl	-56(fp),(sp)
	pushl	4(fp)
	pushl	$285
	callf	$16,_makeattr
	ret#2
	.set	L189,0x0
L191:
	subl3	$56,fp,sp
	jbr 	L192
	.data
	.text
	.align	1
	.globl	_addtattr
_addtattr:
	.word	L194
	jbr 	L196
L197:
	subl3	$1,_nattr,r0
	mull2	$12,r0
	addl2	_attr,r0
	orl2	4(fp),4(r0)
	ret#2
	.set	L194,0x0
L196:
	jbr 	L197
	.data
	.text
	.align	1
	.globl	_makevattr
_makevattr:
	.word	L199
	jbr 	L201
L202:
	movl	4(fp),-56(fp)
	movab	-4(sp),sp
	movl	-56(fp),(sp)
	pushl	$0
	pushl	$282
	callf	$16,_makeattr
	ret#2
	.set	L199,0x0
L201:
	subl3	$56,fp,sp
	jbr 	L202
	.data
	.text
	.align	1
	.globl	_makeattr
_makeattr:
	.word	L203
	jbr 	L205
L206:
	tstl	4(fp)
	jneq	L207
	tstl	12(fp)
	jneq	L207
	clrl	_nattr
	ret#2
L207:
	cmpl	_nattr,_nattrlist
	jlss	L208
	.data	1
L209:
	.ascii	"attr\0"
	.text
	pushl	$12
	addl2	$100,_nattrlist
	pushl	_nattrlist
	pushl	$L209
	pushl	_attr
	callf	$20,_grow
	movl	r0,_attr
L208:
	tstl	_dbg
	jeql	L210
	.data	1
L212:
	.ascii	"attr %d:  %d %d %d\12\0"
	.text
	pushl	12(fp)
	pushl	8(fp)
	pushl	4(fp)
	pushl	_nattr
	pushl	$L212
	callf	$24,_printf
L210:
	mull3	$12,_nattr,r0
	addl2	_attr,r0
	movl	4(fp),(r0)
	mull3	$12,_nattr,r0
	addl2	_attr,r0
	movl	8(fp),4(r0)
	addl3	$12,fp,r0
	mull3	$12,_nattr,r1
	addl2	_attr,r1
	addl2	$8,r1
	movl	(r0),(r1)
	incl	_nattr
	ret#2
	.set	L203,0x0
L205:
	jbr 	L206
	.data
	.text
	.align	1
	.globl	_printexpr
_printexpr:
	.word	L214
	jbr 	L216
L217:
	.data	1
L218:
	.ascii	"%g\12\0"
	.text
	pushl	8(fp)
	pushl	4(fp)
	pushl	$L218
	callf	$16,_printf
	ret#2
	.set	L214,0x0
L216:
	jbr 	L217
	.data
	.text
	.align	1
	.globl	_printpos
_printpos:
	.word	L220
	jbr 	L222
L223:
	.data	1
L224:
	.ascii	"%g, %g\12\0"
	.text
	movl	4(fp),r0
	pushl	$0
	pushl	20(r0)
	movl	4(fp),r0
	pushl	$0
	pushl	16(r0)
	pushl	$L224
	callf	$24,_printf
	ret#2
	.set	L220,0x0
L222:
	jbr 	L223
	.data
	.text
	.align	1
	.globl	_tostring
_tostring:
	.word	L225
	jbr 	L227
L228:
	movl	4(fp),r12
	pushl	r12
	callf	$8,_strlen
	incl	r0
	pushl	r0
	callf	$8,_malloc
	movl	r0,r11
	tstl	r11
	jneq	L230
	.data	1
L231:
	.ascii	"out of space in tostring on %s\0"
	.text
	pushl	r12
	pushl	$L231
	callf	$12,_yyerror
	pushl	$1
	callf	$8,_exit
L230:
	pushl	r12
	pushl	r11
	callf	$12,_strcpy
	movl	r11,r0
	ret#1
	ret#1
	.set	L225,0x1800
L227:
	jbr 	L228
	.data
	.text
	.align	1
	.globl	_makepos
_makepos:
	.word	L234
	jbr 	L236
L237:
	pushl	$0
	pushl	$269
	callf	$12,_makenode
	movl	r0,-56(fp)
	movl	-56(fp),r0
	ldd	4(fp)
	cvdf
	stf	16(r0)
	movl	-56(fp),r0
	ldd	12(fp)
	cvdf
	stf	20(r0)
	movl	-56(fp),r0
	ret#1
	ret#1
	.set	L234,0x0
L236:
	subl3	$56,fp,sp
	jbr 	L237
	.data
	.text
	.align	1
	.globl	_makebetween
_makebetween:
	.word	L238
	jbr 	L240
L241:
	tstl	_dbg
	jeql	L242
	.data	1
L243:
	.ascii	"fraction = %.2f\12\0"
	.text
	pushl	8(fp)
	pushl	4(fp)
	pushl	$L243
	callf	$16,_printf
L242:
	pushl	$0
	pushl	$269
	callf	$12,_makenode
	movl	r0,-56(fp)
	movl	16(fp),r0
	movl	12(fp),r1
	ldf	16(r0)
	subf	16(r1)
	stf	r0
	ldfd	r0
	std	r0
	ldd	r0
	muld	4(fp)
	std	r0
	movl	12(fp),r2
	ldfd	16(r2)
	std	r2
	ldd	r0
	addd	r2
	std	r0
	movl	-56(fp),r2
	ldd	r0
	cvdf
	stf	16(r2)
	movl	16(fp),r0
	movl	12(fp),r1
	ldf	20(r0)
	subf	20(r1)
	stf	r0
	ldfd	r0
	std	r0
	ldd	r0
	muld	4(fp)
	std	r0
	movl	12(fp),r2
	ldfd	20(r2)
	std	r2
	ldd	r0
	addd	r2
	std	r0
	movl	-56(fp),r2
	ldd	r0
	cvdf
	stf	20(r2)
	movl	-56(fp),r0
	ret#1
	ret#1
	.set	L238,0x0
L240:
	subl3	$56,fp,sp
	jbr 	L241
	.data
	.text
	.align	1
	.globl	_getpos
_getpos:
	.word	L244
	jbr 	L246
L247:
	subl3	$60,fp,r0
	pushl	r0
	subl3	$56,fp,r0
	pushl	r0
	pushl	8(fp)
	pushl	4(fp)
	callf	$20,_whatpos
	pushl	$0
	pushl	-60(fp)
	pushl	$0
	pushl	-56(fp)
	callf	$20,_makepos
	ret#1
	ret#1
	.set	L244,0x0
L246:
	subl3	$60,fp,sp
	jbr 	L247
	.data
	.text
	.align	1
	.globl	_whatpos
_whatpos:
	.word	L249
	jbr 	L251
L252:
	tstl	_dbg
	jeql	L254
	.data	1
L255:
	.ascii	"whatpos %o %d %d\12\0"
	.text
	pushl	8(fp)
	pushl	*4(fp)
	pushl	4(fp)
	pushl	$L255
	callf	$20,_printf
L254:
	movl	4(fp),r0
	movl	16(r0),-56(fp)
	movl	4(fp),r0
	movl	20(r0),-60(fp)
	cmpl	*4(fp),$269
	jeql	L256
	movl	4(fp),r0
	movl	52(r0),-64(fp)
	movl	4(fp),r0
	movl	56(r0),-68(fp)
L256:
	movl	*4(fp),r0
	jbr 	L258
L259:
	jbr 	L257
L260:
L261:
L262:
	movl	8(fp),r0
	jbr 	L264
L265:
	.data
	.align	2
L266:
	.long	0x41000000 # .float 2
	.text
	ldf	-68(fp)
	divf	L266
	stf	r0
	ldf	-60(fp)
	addf	r0
	stf	-60(fp)
	jbr 	L263
L267:
	.data
	.align	2
L268:
	.long	0x41000000 # .float 2
	.text
	ldf	-68(fp)
	divf	L268
	stf	r0
	ldf	-60(fp)
	subf	r0
	stf	-60(fp)
	jbr 	L263
L269:
	.data
	.align	2
L270:
	.long	0x41000000 # .float 2
	.text
	ldf	-64(fp)
	divf	L270
	stf	r0
	ldf	-56(fp)
	addf	r0
	stf	-56(fp)
	jbr 	L263
L271:
	.data
	.align	2
L272:
	.long	0x41000000 # .float 2
	.text
	ldf	-64(fp)
	divf	L272
	stf	r0
	ldf	-56(fp)
	subf	r0
	stf	-56(fp)
	jbr 	L263
L273:
	.data
	.align	2
L274:
	.long	0x41000000 # .float 2
	.text
	ldf	-64(fp)
	divf	L274
	stf	r0
	ldf	-56(fp)
	addf	r0
	stf	-56(fp)
	.data
	.align	2
L275:
	.long	0x41000000 # .float 2
	.text
	ldf	-68(fp)
	divf	L275
	stf	r0
	ldf	-60(fp)
	addf	r0
	stf	-60(fp)
	jbr 	L263
L276:
	.data
	.align	2
L277:
	.long	0x41000000 # .float 2
	.text
	ldf	-64(fp)
	divf	L277
	stf	r0
	ldf	-56(fp)
	subf	r0
	stf	-56(fp)
	.data
	.align	2
L278:
	.long	0x41000000 # .float 2
	.text
	ldf	-68(fp)
	divf	L278
	stf	r0
	ldf	-60(fp)
	subf	r0
	stf	-60(fp)
	jbr 	L263
L279:
	.data
	.align	2
L280:
	.long	0x41000000 # .float 2
	.text
	ldf	-64(fp)
	divf	L280
	stf	r0
	ldf	-56(fp)
	addf	r0
	stf	-56(fp)
	.data
	.align	2
L281:
	.long	0x41000000 # .float 2
	.text
	ldf	-68(fp)
	divf	L281
	stf	r0
	ldf	-60(fp)
	subf	r0
	stf	-60(fp)
	jbr 	L263
L282:
	.data
	.align	2
L283:
	.long	0x41000000 # .float 2
	.text
	ldf	-64(fp)
	divf	L283
	stf	r0
	ldf	-56(fp)
	subf	r0
	stf	-56(fp)
	.data
	.align	2
L284:
	.long	0x41000000 # .float 2
	.text
	ldf	-68(fp)
	divf	L284
	stf	r0
	ldf	-60(fp)
	addf	r0
	stf	-60(fp)
	jbr 	L263
L285:
	cmpl	*4(fp),$8
	jneq	L286
	pushl	16(fp)
	pushl	12(fp)
	pushl	$320
	movl	4(fp),r0
	ldf	60(r0)
	cvfl	r0
	pushl	*_objlist[r0]
	callf	$20,_whatpos
	ret#1
L286:
L287:
	cmpl	*4(fp),$8
	jneq	L288
	pushl	16(fp)
	pushl	12(fp)
	pushl	$321
	movl	4(fp),r0
	ldf	64(r0)
	cvfl	r0
	pushl	*_objlist[r0]
	callf	$20,_whatpos
	ret#1
L288:
	jbr 	L263
L264:
	casel	r0,$312,$9
	.align 1
L289:
	.word	L269-L289
	.word	L271-L289
	.word	L265-L289
	.word	L267-L289
	.word	L273-L289
	.word	L282-L289
	.word	L279-L289
	.word	L276-L289
	.word	L285-L289
	.word	L287-L289
L290:
L263:
	jbr 	L257
L291:
	movl	8(fp),r0
	jbr 	L293
L294:
	movl	4(fp),r0
	bitl	$8,32(r0)
	jeql	L295
	movl	4(fp),r0
	movl	60(r0),-56(fp)
	movl	4(fp),r0
	movl	64(r0),-60(fp)
	jbr 	L296
L295:
	movl	-64(fp),-56(fp)
	movl	-68(fp),-60(fp)
L296:
	jbr 	L292
L297:
	movl	4(fp),r0
	bitl	$8,32(r0)
	jeql	L298
	movl	-64(fp),-56(fp)
	movl	-68(fp),-60(fp)
	jbr 	L299
L298:
	movl	4(fp),r0
	movl	60(r0),-56(fp)
	movl	4(fp),r0
	movl	64(r0),-60(fp)
L299:
	jbr 	L292
L293:
	cmpl	r0,$320
	jeql	L294
	cmpl	r0,$321
	jeql	L297
L292:
	cmpl	8(fp),$320
	jeql	L99999
	cmpl	8(fp),$321
	jneq	L300
L99999:
	jbr 	L257
L300:
	ldf	-64(fp)
	subf	-56(fp)
	stf	r0
	ldf	-64(fp)
	subf	-56(fp)
	stf	r1
	ldf	r0
	mulf	r1
	stf	r0
	ldf	-68(fp)
	subf	-60(fp)
	stf	r1
	ldf	-68(fp)
	subf	-60(fp)
	stf	r2
	ldf	r1
	mulf	r2
	stf	r1
	ldf	r0
	addf	r1
	stf	r0
	pushl	$0
	pushl	r0
	callf	$12,_sqrt
	ldd	r0
	cvdf
	stf	-68(fp)
	movl	-68(fp),-64(fp)
L301:
L302:
	movl	8(fp),r0
	jbr 	L304
L305:
	ldf	-60(fp)
	addf	-68(fp)
	stf	-60(fp)
	jbr 	L303
L306:
	ldf	-60(fp)
	subf	-68(fp)
	stf	-60(fp)
	jbr 	L303
L307:
	ldf	-56(fp)
	addf	-64(fp)
	stf	-56(fp)
	jbr 	L303
L308:
	ldf	-56(fp)
	subf	-64(fp)
	stf	-56(fp)
	jbr 	L303
L309:
	.data
	.align	2
L310:
	.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
	.text
	ldfd	-64(fp)
	std	r0
	ldd	r0
	muld	L310
	std	r0
	ldfd	-56(fp)
	addd	r0
	cvdf
	stf	-56(fp)
	.data
	.align	2
L311:
	.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
	.text
	ldfd	-68(fp)
	std	r0
	ldd	r0
	muld	L311
	std	r0
	ldfd	-60(fp)
	addd	r0
	cvdf
	stf	-60(fp)
	jbr 	L303
L312:
	.data
	.align	2
L313:
	.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
	.text
	ldfd	-64(fp)
	std	r0
	ldd	r0
	muld	L313
	std	r0
	ldfd	-56(fp)
	addd	r0
	cvdf
	stf	-56(fp)
	.data
	.align	2
L314:
	.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
	.text
	ldfd	-68(fp)
	std	r0
	ldd	r0
	muld	L314
	std	r0
	ldfd	-60(fp)
	subd	r0
	cvdf
	stf	-60(fp)
	jbr 	L303
L315:
	.data
	.align	2
L316:
	.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
	.text
	ldfd	-64(fp)
	std	r0
	ldd	r0
	muld	L316
	std	r0
	ldfd	-56(fp)
	subd	r0
	cvdf
	stf	-56(fp)
	.data
	.align	2
L317:
	.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
	.text
	ldfd	-68(fp)
	std	r0
	ldd	r0
	muld	L317
	std	r0
	ldfd	-60(fp)
	addd	r0
	cvdf
	stf	-60(fp)
	jbr 	L303
L318:
	.data
	.align	2
L319:
	.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
	.text
	ldfd	-64(fp)
	std	r0
	ldd	r0
	muld	L319
	std	r0
	ldfd	-56(fp)
	subd	r0
	cvdf
	stf	-56(fp)
	.data
	.align	2
L320:
	.long	0x4034fdf3, 0xb645a1cb # .double 0.70700000000000001
	.text
	ldfd	-68(fp)
	std	r0
	ldd	r0
	muld	L320
	std	r0
	ldfd	-60(fp)
	subd	r0
	cvdf
	stf	-60(fp)
	jbr 	L303
L304:
	casel	r0,$312,$7
	.align 1
L321:
	.word	L307-L321
	.word	L308-L321
	.word	L305-L321
	.word	L306-L321
	.word	L309-L321
	.word	L315-L321
	.word	L312-L321
	.word	L318-L321
L322:
L303:
	jbr 	L257
L323:
L324:
L325:
	movl	8(fp),r0
	jbr 	L327
L328:
	jbr 	L326
L329:
	movl	-64(fp),-56(fp)
	movl	-68(fp),-60(fp)
	jbr 	L326
L330:
L331:
	.data
	.align	2
L332:
	.long	0x41000000 # .float 2
	.text
	ldf	-56(fp)
	addf	-64(fp)
	stf	r0
	ldf	r0
	divf	L332
	stf	r0
	movl	r0,-56(fp)
	.data
	.align	2
L333:
	.long	0x41000000 # .float 2
	.text
	ldf	-60(fp)
	addf	-68(fp)
	stf	r0
	ldf	r0
	divf	L333
	stf	r0
	movl	r0,-60(fp)
	jbr 	L326
L334:
	cmpf2	-68(fp),-60(fp)
	jleq	L335
	movl	-64(fp),-56(fp)
	movl	-68(fp),-60(fp)
L335:
	jbr 	L326
L336:
	cmpf2	-68(fp),-60(fp)
	jgeq	L337
	movl	-64(fp),-56(fp)
	movl	-68(fp),-60(fp)
L337:
	jbr 	L326
L338:
	cmpf2	-64(fp),-56(fp)
	jleq	L339
	movl	-64(fp),-56(fp)
	movl	-68(fp),-60(fp)
L339:
	jbr 	L326
L340:
	cmpf2	-64(fp),-56(fp)
	jgeq	L341
	movl	-64(fp),-56(fp)
	movl	-68(fp),-60(fp)
L341:
	jbr 	L326
L327:
	cmpl	r0,$1
	jeql	L331
	cmpl	r0,$312
	jeql	L338
	cmpl	r0,$313
	jeql	L340
	cmpl	r0,$314
	jeql	L334
	cmpl	r0,$315
	jeql	L336
	cmpl	r0,$320
	jeql	L328
	cmpl	r0,$321
	jeql	L329
	jbr 	L330
L326:
	jbr 	L257
L342:
	jbr 	L257
L258:
	cmpl	r0,$8
	jeql	L261
	jgtr	L344
	cmpl	r0,$4
	jeql	L301
	jgtr	L345
	cmpl	r0,$2
	jeql	L323
	jgtr	L346
	cmpl	r0,$1
	jeql	L260
	jbr 	L343
L346:
	cmpl	r0,$3
	jeql	L325
	jbr 	L343
L345:
	cmpl	r0,$6
	jeql	L291
	jgtr	L347
	cmpl	r0,$5
	jeql	L302
	jbr 	L343
L347:
	cmpl	r0,$7
	jeql	L324
	jbr 	L343
L344:
	cmpl	r0,$11
	jeql	L342
	jgtr	L348
	cmpl	r0,$9
	jeql	L262
	jbr 	L343
L348:
	cmpl	r0,$269
	jeql	L259
	jbr 	L343
L343:
L257:
	tstl	_dbg
	jeql	L349
	.data	1
L350:
	.ascii	"whatpos returns %g %g\12\0"
	.text
	pushl	$0
	pushl	-60(fp)
	pushl	$0
	pushl	-56(fp)
	pushl	$L350
	callf	$24,_printf
L349:
	movl	-56(fp),*12(fp)
	movl	-60(fp),*16(fp)
	movl	$1,r0
	ret#1
	ret#1
	.set	L249,0x0
L251:
	subl3	$68,fp,sp
	jbr 	L252
	.data
	.text
	.align	1
	.globl	_gethere
_gethere:
	.word	L351
	jbr 	L353
L354:
	tstl	_dbg
	jeql	L355
	.data	1
L356:
	.ascii	"gethere %g %g\12\0"
	.text
	pushl	$0
	pushl	_cury
	pushl	$0
	pushl	_curx
	pushl	$L356
	callf	$24,_printf
L355:
	pushl	$0
	pushl	_cury
	pushl	$0
	pushl	_curx
	callf	$20,_makepos
	ret#1
	ret#1
	.set	L351,0x0
L353:
	jbr 	L354
	.data
	.text
	.align	1
	.globl	_getlast
_getlast:
	.word	L357
	jbr 	L359
L360:
	movl	4(fp),-60(fp)
	subl3	$1,_nobj,r0
	movl	r0,-56(fp)
L363:
	tstl	-56(fp)
	jlss	L362
	movl	-56(fp),r0
	movl	*_objlist[r0],-64(fp)
	cmpl	*-64(fp),$12
	jneq	L364
	movl	-64(fp),r0
	ldf	68(r0)
	cvfl	-56(fp)
	jbr 	L361
L364:
	cmpl	*-64(fp),8(fp)
	jeql	L365
	jbr 	L361
L365:
	decl	-60(fp)
	jleq	L366
	jbr 	L361
L366:
	tstl	_dbg
	jeql	L367
	.data	1
L368:
	.ascii	"got a last of x,y= %g,%g\12\0"
	.text
	movl	-64(fp),r0
	pushl	$0
	pushl	20(r0)
	movl	-64(fp),r0
	pushl	$0
	pushl	16(r0)
	pushl	$L368
	callf	$24,_printf
L367:
	movl	-64(fp),r0
	ret#1
L361:
	decl	-56(fp)
	jbr 	L363
L362:
	.data	1
L369:
	.ascii	"there is no %dth last\0"
	.text
	pushl	4(fp)
	pushl	$L369
	callf	$12,_yyerror
	clrl	r0
	ret#1
	ret#1
	.set	L357,0x0
L359:
	subl3	$64,fp,sp
	jbr 	L360
	.data
	.text
	.align	1
	.globl	_getfirst
_getfirst:
	.word	L370
	jbr 	L372
L373:
	movl	4(fp),-60(fp)
	clrl	-56(fp)
L376:
	cmpl	-56(fp),_nobj
	jgeq	L375
	movl	-56(fp),r0
	movl	*_objlist[r0],-64(fp)
	cmpl	*-64(fp),$8
	jneq	L377
	cmpl	8(fp),$8
	jeql	L377
	.data
	.align	2
L378:
	.long	0x40800000 # .float 1
	.text
	movl	-64(fp),r0
	ldf	72(r0)
	addf	L378
	stf	r0
	ldf	r0
	cvfl	-56(fp)
	jbr 	L374
L377:
	cmpl	*-64(fp),8(fp)
	jeql	L379
	jbr 	L374
L379:
	decl	-60(fp)
	jleq	L380
	jbr 	L374
L380:
	tstl	_dbg
	jeql	L381
	.data	1
L382:
	.ascii	"got a first of x,y= %g,%g\12\0"
	.text
	movl	-64(fp),r0
	pushl	$0
	pushl	20(r0)
	movl	-64(fp),r0
	pushl	$0
	pushl	16(r0)
	pushl	$L382
	callf	$24,_printf
L381:
	movl	-64(fp),r0
	ret#1
L374:
	incl	-56(fp)
	jbr 	L376
L375:
	.data	1
L383:
	.ascii	"there is no %dth \0"
	.text
	pushl	4(fp)
	pushl	$L383
	callf	$12,_yyerror
	clrl	r0
	ret#1
	ret#1
	.set	L370,0x0
L372:
	subl3	$64,fp,sp
	jbr 	L373
	.data
	.text
	.align	1
	.globl	_getblkvar
_getblkvar:
	.word	L384
	jbr 	L386
L387:
	pushl	8(fp)
	pushl	4(fp)
	callf	$12,_getblk
	movl	(r0),-56(fp)
	ldfd	-56(fp)
	std	r0
	ret#2
	ret#2
	.set	L384,0x0
L386:
	subl3	$56,fp,sp
	jbr 	L387
	.data
	.text
	.align	1
	.globl	_getblock
_getblock:
	.word	L389
	jbr 	L391
L392:
	pushl	8(fp)
	pushl	4(fp)
	callf	$12,_getblk
	movl	(r0),-56(fp)
	movl	-56(fp),r0
	ret#1
	ret#1
	.set	L389,0x0
L391:
	subl3	$56,fp,sp
	jbr 	L392
	.data
	.text
	.align	1
	.globl	_getblk
_getblk:
	.word	L393
	jbr 	L395
L396:
	.lcomm	L397,4
	cmpl	*4(fp),$8
	jeql	L398
	.data	1
L399:
	.ascii	".%s is not in that block\0"
	.text
	pushl	8(fp)
	pushl	$L399
	callf	$12,_yyerror
	movl	$L397,r0
	jbr 	L394
L398:
	movl	4(fp),r0
	movl	44(r0),-56(fp)
L402:
	tstl	-56(fp)
	jeql	L401
	pushl	*-56(fp)
	pushl	8(fp)
	callf	$12,_strcmp
	tstl	r0
	jneq	L404
	tstl	_dbg
	jeql	L405
	.data	1
L406:
	.ascii	"getblk %s found x,y= %g,%g\12\0"
	.text
	movl	-56(fp),r0
	movl	8(r0),r0
	pushl	$0
	pushl	20(r0)
	movl	-56(fp),r0
	movl	8(r0),r0
	pushl	$0
	pushl	16(r0)
	pushl	8(fp)
	pushl	$L406
	callf	$28,_printf
L405:
	addl3	$8,-56(fp),r0
	jbr 	L394
L404:
L400:
	movl	-56(fp),r0
	movl	12(r0),-56(fp)
	jbr 	L402
L401:
	.data	1
L407:
	.ascii	"there is no .%s in that []\0"
	.text
	pushl	8(fp)
	pushl	$L407
	callf	$12,_yyerror
	movl	$L397,r0
	jbr 	L394
L394:
	.lcomm	L408,4
	movab	L408,r1
	movl	(r0),(r1)
	movab	L408,r0
	ret#1
	.set	L393,0x0
L395:
	subl3	$56,fp,sp
	jbr 	L396
	.data
	.text
	.align	1
	.globl	_fixpos
_fixpos:
	.word	L409
	jbr 	L411
L412:
	tstl	_dbg
	jeql	L413
	.data	1
L414:
	.ascii	"fixpos returns %g %g\12\0"
	.text
	movl	4(fp),r0
	ldfd	20(r0)
	std	r0
	ldd	r0
	addd	16(fp)
	std	r0
	pushl	r1
	pushl	r0
	movl	4(fp),r0
	ldfd	16(r0)
	std	r0
	ldd	r0
	addd	8(fp)
	std	r0
	pushl	r1
	pushl	r0
	pushl	$L414
	callf	$24,_printf
L413:
	movl	4(fp),r0
	ldfd	20(r0)
	std	r0
	ldd	r0
	addd	16(fp)
	std	r0
	pushl	r1
	pushl	r0
	movl	4(fp),r0
	ldfd	16(r0)
	std	r0
	ldd	r0
	addd	8(fp)
	std	r0
	pushl	r1
	pushl	r0
	callf	$20,_makepos
	ret#1
	ret#1
	.set	L409,0x0
L411:
	jbr 	L412
	.data
	.text
	.align	1
	.globl	_addpos
_addpos:
	.word	L415
	jbr 	L417
L418:
	tstl	_dbg
	jeql	L419
	.data	1
L420:
	.ascii	"addpos returns %g %g\12\0"
	.text
	movl	4(fp),r0
	movl	8(fp),r1
	ldf	20(r0)
	addf	20(r1)
	stf	r0
	pushl	$0
	pushl	r0
	movl	4(fp),r0
	movl	8(fp),r1
	ldf	16(r0)
	addf	16(r1)
	stf	r0
	pushl	$0
	pushl	r0
	pushl	$L420
	callf	$24,_printf
L419:
	movl	4(fp),r0
	movl	8(fp),r1
	ldf	20(r0)
	addf	20(r1)
	stf	r0
	pushl	$0
	pushl	r0
	movl	4(fp),r0
	movl	8(fp),r1
	ldf	16(r0)
	addf	16(r1)
	stf	r0
	pushl	$0
	pushl	r0
	callf	$20,_makepos
	ret#1
	ret#1
	.set	L415,0x0
L417:
	jbr 	L418
	.data
	.text
	.align	1
	.globl	_subpos
_subpos:
	.word	L421
	jbr 	L423
L424:
	tstl	_dbg
	jeql	L425
	.data	1
L426:
	.ascii	"subpos returns %g %g\12\0"
	.text
	movl	4(fp),r0
	movl	8(fp),r1
	ldf	20(r0)
	subf	20(r1)
	stf	r0
	pushl	$0
	pushl	r0
	movl	4(fp),r0
	movl	8(fp),r1
	ldf	16(r0)
	subf	16(r1)
	stf	r0
	pushl	$0
	pushl	r0
	pushl	$L426
	callf	$24,_printf
L425:
	movl	4(fp),r0
	movl	8(fp),r1
	ldf	20(r0)
	subf	20(r1)
	stf	r0
	pushl	$0
	pushl	r0
	movl	4(fp),r0
	movl	8(fp),r1
	ldf	16(r0)
	subf	16(r1)
	stf	r0
	pushl	$0
	pushl	r0
	callf	$20,_makepos
	ret#1
	ret#1
	.set	L421,0x0
L423:
	jbr 	L424
	.data
	.text
	.align	1
	.globl	_makenode
_makenode:
	.word	L427
	jbr 	L429
L430:
	subl3	$1,8(fp),r0
	shll	$2,r0,r0
	addl2	$56,r0
	pushl	r0
	pushl	$1
	callf	$12,_calloc
	movl	r0,-56(fp)
	tstl	-56(fp)
	jneq	L432
	.data	1
L433:
	.ascii	"out of space in makenode\12\0"
	.text
	pushl	$L433
	callf	$8,_yyerror
	pushl	$1
	callf	$8,_exit
L432:
	movl	4(fp),*-56(fp)
	movl	-56(fp),r0
	movl	8(fp),4(r0)
	movl	-56(fp),r0
	movl	_nobj,8(r0)
	movl	-56(fp),r0
	movl	_hvmode,12(r0)
	movl	-56(fp),r0
	movl	_curx,16(r0)
	movl	-56(fp),r0
	movl	_cury,20(r0)
	movl	-56(fp),r0
	movl	_ntext1,24(r0)
	movl	-56(fp),r0
	movl	_ntext,28(r0)
	movl	_ntext,_ntext1
	cmpl	_nobj,_nobjlist
	jlss	L434
	.data	1
L435:
	.ascii	"objlist\0"
	.text
	pushl	$4
	addl2	$100,_nobjlist
	pushl	_nobjlist
	pushl	$L435
	pushl	_objlist
	callf	$20,_grow
	movl	r0,_objlist
L434:
	movl	_nobj,r0
	movl	-56(fp),*_objlist[r0]
	incl	_nobj
	movl	-56(fp),r0
	ret#1
	ret#1
	.set	L427,0x0
L429:
	subl3	$56,fp,sp
	jbr 	L430
	.data
	.text
	.align	1
	.globl	_extreme
_extreme:
	.word	L437
	jbr 	L439
L440:
	ldfd	_xmax
	std	r0
	cmpd2	4(fp),r0
	jleq	L441
	ldd	4(fp)
	cvdf
	stf	_xmax
L441:
	ldfd	_ymax
	std	r0
	cmpd2	12(fp),r0
	jleq	L442
	ldd	12(fp)
	cvdf
	stf	_ymax
L442:
	ldfd	_xmin
	std	r0
	cmpd2	4(fp),r0
	jgeq	L443
	ldd	4(fp)
	cvdf
	stf	_xmin
L443:
	ldfd	_ymin
	std	r0
	cmpd2	12(fp),r0
	jgeq	L444
	ldd	12(fp)
	cvdf
	stf	_ymin
L444:
	ret#2
	.set	L437,0x0
L439:
	jbr 	L440
	.data
