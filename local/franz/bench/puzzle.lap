
;;; H 176 Maclisp 2077
	#(VERSION (H /176) (HFILE /30))
;;; VAX Lisp compiler LAP file for RLB;PUZZLE 11

	#(FILE "RLB;PUZZLE 11")
;;Function |ZEROP MACRO|
	#(ENTRY |ZEROP MACRO| (1. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..647|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..647| 
	#(MOVAL #(LREL PC |POLL..647|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 4.) #(REG AP 0.))
	#(BEQL |OK..646|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..646| 
	#(DEFLINK |QUOTE..648| QUOTE COMMENT)
	#(MOVL #(REG FLP |QUOTE..648|) AR1)
	#(DEFLINK |SFLI..650| SFLI MACROFETCH)
	#(CLRQ #(-REG SP NIL))	;Start to call MACROFETCH
	#(PUSHL #(REG FLP |SFLI..650|))	;slink index for MACROFETCH
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 4.)))
	#(ADDL3 SLP #(REG FLP |SFLI..650|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG AP 16.) AR1)	;ZEROP-MACROARG
	#(MOVL AR1 #(REG SP 12.))	;first arg to MACROFETCH
	#(CALLS #(LIT NIL 4.) #(@REG SP 8.))	;Call MACROFETCH
	#(CMPL AR1 #(REG SLP 0.))
	#(JNEQ |END-OR..649|)
	#(DEFLINK |SFLI..651| SFLI MACROMEMO)
	#(CLRQ #(-REG SP NIL))	;Start to call MACROMEMO
	#(CLRQ #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..651|))	;slink index for MACROMEMO
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 12.)))
	#(ADDL3 SLP #(REG FLP |SFLI..651|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG AP 16.) AR1)	;ZEROP-MACROARG
	#(MOVL AR1 #(REG SP 12.))	;first arg to MACROMEMO
	#(MOVL #(REG AP 16.) AR1)	;ZEROP-MACROARG
	#(JSB #(@REG SLP CL$MS_LENGTH))
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 8.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BNEQ |FAIL..655|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..656|)
|FAIL..655| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..656| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..653|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..654|)
|IFALT..653| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..654| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..652|)
	#(DEFLINK |SFLI..657| SFLI ERROR)
	#(CLRQ #(-REG SP NIL))	;Start to call ERROR
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..657|))	;slink index for ERROR
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..657|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |QUOTE..658| QUOTE |Wrong number args for macro|)
	#(MOVL #(REG FLP |QUOTE..658|) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to ERROR
	#(MOVL #(REG AP 16.) AR1)	;ZEROP-MACROARG
	#(MOVL AR1 #(REG SP 16.))	;second arg to ERROR
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call ERROR
|END-AND..652| 
	#(MOVL #(REG AP 16.) AR1)	;ZEROP-MACROARG
	#(JSB #(@REG SLP CL$MS_CDR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(JSB #(@REG SLP CL$MS_CAR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(PUSHL AR1)	;bind X
	#(MOVL #(REG SLP 0.) AR1)
	#(PUSHL AR1)	;bind NIL
	#(DEFLINK |QUOTE..659| QUOTE =)
	#(MOVL #(REG FLP |QUOTE..659|) AR1)
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -32.) AR1)	;X
	#(PUSHL AR1)
	#(MOVL #(REG SLP 0.) AR1)
	#(PUSHL AR1)
	#(JSB #(@REG SLP |CL$MS_LIST.|))
	#(BYTE 4.)
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL AR1 #(REG SP 16.))	;second arg to MACROMEMO
	#(DEFLINK |QUOTE..660| QUOTE ZEROP)
	#(MOVL #(REG FLP |QUOTE..660|) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to MACROMEMO
	#(CALLS #(LIT NIL 6.) #(@REG SP 8.))	;Call MACROMEMO
|END-OR..649| 
	#(RET)
	#(END)
;;Function VARRAY
	#(ENTRY VARRAY (0. 0. 1.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..661|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..661| 
	#(MOVAL #(LREL PC |POLL..661|) FLP)
	#(JSB #(@REG SLP CL$MS_HNDL_RS))
	#(BYTE 3.)	;0 req args
	#(DEFLINK |SFLI..662| SFLI TO-LIST)
	#(CLRQ #(-REG SP NIL))	;Start to call TO-LIST
	#(PUSHL #(REG FLP |SFLI..662|))	;slink index for TO-LIST
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 4.)))
	#(ADDL3 SLP #(REG FLP |SFLI..662|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG FP -8.) AR1)	;DIMS
	#(MOVL AR1 #(REG SP 12.))	;first arg to TO-LIST
	#(CALLS #(LIT NIL 4.) #(@REG SP 8.))	;Call TO-LIST
	#(MOVL AR1 #(REG FP -8.))	;DIMS
	#(MOVL #(REG FP -8.) AR1)	;DIMS
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..665|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..666|)
|IFALT..665| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..666| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |NEXTCOND..664|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |ENDCOND..663|)
|NEXTCOND..664| 
	#(MOVL #(REG FP -8.) AR1)	;DIMS
	#(JSB #(@REG SLP CL$MS_CDR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..668|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..669|)
|IFALT..668| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..669| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |NEXTCOND..667|)
	#(MOVL #(REG FP -8.) AR1)	;DIMS
	#(JSB #(@REG SLP CL$MS_CAR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(PUSHL AR1)
	#(MOVL #(REG SLP 0.) AR1)
	#(MOVL AR1 AR2)
	#(MOVL #(REG+ SP NIL) AR1)
	#(JSB #(@REG SLP CL$MS_VECT_CONS))
	#(JUMP |ENDCOND..663|)
|NEXTCOND..667| 
	#(MOVL #(REG FP -8.) AR1)	;DIMS
	#(JSB #(@REG SLP CL$MS_CAR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(PUSHL AR1)
	#(MOVL #(REG SLP 0.) AR1)
	#(MOVL AR1 AR2)
	#(MOVL #(REG+ SP NIL) AR1)
	#(JSB #(@REG SLP CL$MS_VECT_CONS))
	#(PUSHL AR1)	;bind V
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind I
	#(MOVL #(REG FP -8.) AR1)	;DIMS
	#(JSB #(@REG SLP CL$MS_CAR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(PUSHL AR1)	;bind |T..670|
	#(DEFLINK |QUOTE..676| QUOTE DECLARE)
	#(MOVL #(REG FLP |QUOTE..676|) AR1)
	#(JUMP |PROGTAG..674|)
|PROGTAG..673| 
	#(MOVL #(REG FP -12.) AR1)	;V
	#(PUSHL AR1)
	#(MOVL #(REG FP -16.) AR1)	;I
	#(PUSHL AR1)
	#(DEFLINK |SFLI..677| SFLI APPLY)
	#(CLRQ #(-REG SP NIL))	;Start to call APPLY
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..677|))	;slink index for APPLY
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..677|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |SFLI..678| SFLI VARRAY)
	#(ADDL3 #(REG FLP |SFLI..678|) SLP R0)
	#(BISL3 #(LIT NIL TC$K_SUBR) #(@REG R0 0.) AR1)	;special cell for VARRAY
	#(MOVL AR1 #(REG SP 12.))	;first arg to APPLY
	#(MOVL #(REG FP -8.) AR1)	;DIMS
	#(JSB #(@REG SLP CL$MS_CDR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(MOVL AR1 #(REG SP 16.))	;second arg to APPLY
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call APPLY
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG FP -16.) AR1)	;I
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -16.))	;I
|PROGTAG..674| 
	#(MOVL #(REG FP -16.) AR1)	;I
	#(PUSHL AR1)
	#(MOVL #(REG FP -20.) AR1)	;T..670
	#(CMPL #(REG+ SP NIL) AR1)
	#(BGEQ |FAIL..686|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..687|)
|FAIL..686| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..687| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..684|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..685|)
|IFALT..684| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..685| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..682|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..683|)
|IFALT..682| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..683| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..681|)
	#(JUMP |PROGTAG..673|)
|END-AND..681| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..675|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..675| 
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG FP -12.) AR1)	;V
	#(ADDL2 #(LIT NIL 4.) SP)
	#(JUMP |ENDCOND..663|)
	#(MOVL #(REG SLP 0.) AR1)
|ENDCOND..663| 
	#(RET)
	#(END)
;;Function |AREFF MACRO|
	#(ENTRY |AREFF MACRO| (1. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..689|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..689| 
	#(MOVAL #(LREL PC |POLL..689|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 4.) #(REG AP 0.))
	#(BEQL |OK..688|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..688| 
	#(DEFLINK |QUOTE..690| QUOTE COMMENT)
	#(MOVL #(REG FLP |QUOTE..690|) AR1)
	#(DEFLINK |SFLI..692| SFLI MACROFETCH)
	#(CLRQ #(-REG SP NIL))	;Start to call MACROFETCH
	#(PUSHL #(REG FLP |SFLI..692|))	;slink index for MACROFETCH
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 4.)))
	#(ADDL3 SLP #(REG FLP |SFLI..692|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG AP 16.) AR1)	;AREFF-MACROARG
	#(MOVL AR1 #(REG SP 12.))	;first arg to MACROFETCH
	#(CALLS #(LIT NIL 4.) #(@REG SP 8.))	;Call MACROFETCH
	#(CMPL AR1 #(REG SLP 0.))
	#(JNEQ |END-OR..691|)
	#(DEFLINK |SFLI..693| SFLI MACROMEMO)
	#(CLRQ #(-REG SP NIL))	;Start to call MACROMEMO
	#(CLRQ #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..693|))	;slink index for MACROMEMO
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 12.)))
	#(ADDL3 SLP #(REG FLP |SFLI..693|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG AP 16.) AR1)	;AREFF-MACROARG
	#(MOVL AR1 #(REG SP 12.))	;first arg to MACROMEMO
	#(MOVL #(REG AP 16.) AR1)	;AREFF-MACROARG
	#(JSB #(@REG SLP CL$MS_LENGTH))
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 8.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BGEQ |FAIL..699|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..700|)
|FAIL..699| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..700| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..697|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..698|)
|IFALT..697| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..698| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..695|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..696|)
|IFALT..695| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..696| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..694|)
	#(DEFLINK |SFLI..701| SFLI ERROR)
	#(CLRQ #(-REG SP NIL))	;Start to call ERROR
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..701|))	;slink index for ERROR
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..701|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |QUOTE..702| QUOTE |Wrong number args for macro|)
	#(MOVL #(REG FLP |QUOTE..702|) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to ERROR
	#(MOVL #(REG AP 16.) AR1)	;AREFF-MACROARG
	#(MOVL AR1 #(REG SP 16.))	;second arg to ERROR
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call ERROR
|END-AND..694| 
	#(MOVL #(REG AP 16.) AR1)	;AREFF-MACROARG
	#(JSB #(@REG SLP CL$MS_CDR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(PUSHL AR1)	;bind F0108
	#(MOVL #(REG SLP 0.) AR1)
	#(PUSHL AR1)	;bind INDICES
	#(MOVL #(REG SLP 0.) AR1)
	#(PUSHL AR1)	;bind ARRAY
	#(MOVL #(REG FP -32.) AR1)	;F0108
	#(JSB #(@REG SLP CL$MS_CAR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(MOVL AR1 #(REG FP -40.))	;ARRAY
	#(MOVL #(REG FP -32.) AR1)	;F0108
	#(JSB #(@REG SLP CL$MS_CDR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(MOVL AR1 #(REG FP -36.))	;INDICES
	#(MOVL #(REG FP -40.) AR1)	;ARRAY
	#(PUSHL AR1)	;bind FORM
	#(MOVL #(REG FP -36.) AR1)	;INDICES
	#(PUSHL AR1)	;bind IND
	#(JUMP |PROGTAG..706|)
|PROGTAG..705| 
	#(DEFLINK |QUOTE..711| QUOTE VREF)
	#(MOVL #(REG FLP |QUOTE..711|) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -44.) AR1)	;FORM
	#(PUSHL AR1)
	#(MOVL #(REG FP -48.) AR1)	;IND
	#(JSB #(@REG SLP CL$MS_CAR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(PUSHL AR1)
	#(MOVL #(REG SLP 0.) AR1)
	#(PUSHL AR1)
	#(JSB #(@REG SLP |CL$MS_LIST.|))
	#(BYTE 4.)
	#(PUSHL AR1)	;bind |PSETQ..708|
	#(MOVL #(REG FP -48.) AR1)	;IND
	#(JSB #(@REG SLP CL$MS_CDR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(PUSHL AR1)	;bind |PSETQ..709|
	#(MOVL #(REG FP -52.) AR1)	;PSETQ..708
	#(MOVL AR1 #(REG FP -44.))	;FORM
	#(MOVL #(REG FP -56.) AR1)	;PSETQ..709
	#(MOVL AR1 #(REG FP -48.))	;IND
	#(ADDL2 #(LIT NIL 8.) SP)
|PROGTAG..706| 
	#(MOVL #(REG FP -48.) AR1)	;IND
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..715|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..716|)
|IFALT..715| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..716| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..713|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..714|)
|IFALT..713| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..714| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..712|)
	#(JUMP |PROGTAG..705|)
|END-AND..712| 
	#(MOVL #(REG FP -44.) AR1)	;FORM
	#(JUMP |PROGRETURN..707|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..707| 
	#(ADDL2 #(LIT NIL 8.) SP)
	#(ADDL2 #(LIT NIL 12.) SP)
	#(MOVL AR1 #(REG SP 16.))	;second arg to MACROMEMO
	#(DEFLINK |QUOTE..717| QUOTE AREFF)
	#(MOVL #(REG FLP |QUOTE..717|) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to MACROMEMO
	#(CALLS #(LIT NIL 6.) #(@REG SP 8.))	;Call MACROMEMO
|END-OR..691| 
	#(RET)
	#(END)
;;Function |AREF MACRO|
	#(ENTRY |AREF MACRO| (1. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..719|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..719| 
	#(MOVAL #(LREL PC |POLL..719|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 4.) #(REG AP 0.))
	#(BEQL |OK..718|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..718| 
	#(DEFLINK |QUOTE..720| QUOTE COMMENT)
	#(MOVL #(REG FLP |QUOTE..720|) AR1)
	#(DEFLINK |SFLI..722| SFLI MACROFETCH)
	#(CLRQ #(-REG SP NIL))	;Start to call MACROFETCH
	#(PUSHL #(REG FLP |SFLI..722|))	;slink index for MACROFETCH
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 4.)))
	#(ADDL3 SLP #(REG FLP |SFLI..722|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG AP 16.) AR1)	;AREF-MACROARG
	#(MOVL AR1 #(REG SP 12.))	;first arg to MACROFETCH
	#(CALLS #(LIT NIL 4.) #(@REG SP 8.))	;Call MACROFETCH
	#(CMPL AR1 #(REG SLP 0.))
	#(JNEQ |END-OR..721|)
	#(DEFLINK |SFLI..723| SFLI MACROMEMO)
	#(CLRQ #(-REG SP NIL))	;Start to call MACROMEMO
	#(CLRQ #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..723|))	;slink index for MACROMEMO
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 12.)))
	#(ADDL3 SLP #(REG FLP |SFLI..723|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG AP 16.) AR1)	;AREF-MACROARG
	#(MOVL AR1 #(REG SP 12.))	;first arg to MACROMEMO
	#(MOVL #(REG AP 16.) AR1)	;AREF-MACROARG
	#(JSB #(@REG SLP CL$MS_LENGTH))
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 8.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BGEQ |FAIL..729|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..730|)
|FAIL..729| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..730| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..727|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..728|)
|IFALT..727| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..728| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..725|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..726|)
|IFALT..725| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..726| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..724|)
	#(DEFLINK |SFLI..731| SFLI ERROR)
	#(CLRQ #(-REG SP NIL))	;Start to call ERROR
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..731|))	;slink index for ERROR
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..731|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |QUOTE..732| QUOTE |Wrong number args for macro|)
	#(MOVL #(REG FLP |QUOTE..732|) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to ERROR
	#(MOVL #(REG AP 16.) AR1)	;AREF-MACROARG
	#(MOVL AR1 #(REG SP 16.))	;second arg to ERROR
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call ERROR
|END-AND..724| 
	#(MOVL #(REG AP 16.) AR1)	;AREF-MACROARG
	#(JSB #(@REG SLP CL$MS_CDR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(PUSHL AR1)	;bind F0109
	#(MOVL #(REG SLP 0.) AR1)
	#(PUSHL AR1)	;bind INDICES
	#(MOVL #(REG SLP 0.) AR1)
	#(PUSHL AR1)	;bind ARRAY
	#(MOVL #(REG FP -32.) AR1)	;F0109
	#(JSB #(@REG SLP CL$MS_CAR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(MOVL AR1 #(REG FP -40.))	;ARRAY
	#(MOVL #(REG FP -32.) AR1)	;F0109
	#(JSB #(@REG SLP CL$MS_CDR))
	#(BYTE 6.)
	#(BYTE 6.)
	#(MOVL AR1 #(REG FP -36.))	;INDICES
	#(DEFLINK |QUOTE..733| QUOTE AREFF)
	#(MOVL #(REG FLP |QUOTE..733|) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -40.) AR1)	;ARRAY
	#(PUSHL AR1)
	#(MOVL #(REG FP -36.) AR1)	;INDICES
	#(PUSHL AR1)
	#(JSB #(@REG SLP |CL$MS_LIST.|))
	#(BYTE 3.)
	#(ADDL2 #(LIT NIL 12.) SP)
	#(MOVL AR1 #(REG SP 16.))	;second arg to MACROMEMO
	#(DEFLINK |QUOTE..734| QUOTE AREF)
	#(MOVL #(REG FLP |QUOTE..734|) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to MACROMEMO
	#(CALLS #(LIT NIL 6.) #(@REG SP 8.))	;Call MACROMEMO
|END-OR..721| 
	#(RET)
	#(END)
;;Function FIT
	#(ENTRY FIT (2. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..736|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..736| 
	#(MOVAL #(LREL PC |POLL..736|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 5.) #(REG AP 0.))
	#(BEQL |OK..735|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..735| 
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind K
	#(DEFLINK |SVLI..739| SVLI PIECEMAX)
	#(ADDL3 #(REG FLP |SVLI..739|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECEMAX
	#(PUSHL AR1)
	#(MOVL #(REG AP 16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(PUSHL AR1)	;bind LIM
	#(JUMP |PROGTAG..741|)
|PROGTAG..740| 
	#(DEFLINK |SVLI..746| SVLI P)
	#(ADDL3 #(REG FLP |SVLI..746|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for P
	#(PUSHL AR1)
	#(MOVL #(REG AP 16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;K
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..745|)
	#(DEFLINK |SVLI..747| SVLI PUZZLE)
	#(ADDL3 #(REG FLP |SVLI..747|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PUZZLE
	#(PUSHL AR1)
	#(MOVL #(REG AP 20.) AR1)	;J
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;K
	#(ADDL2 #(REG+ SP NIL) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
|END-AND..745| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..743|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..742|)
	#(JUMP |JOIN..744|)
|IFALT..743| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..744| 
	#(MOVL #(REG FP -8.) AR1)	;K
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -8.))	;K
|PROGTAG..741| 
	#(MOVL #(REG FP -8.) AR1)	;K
	#(PUSHL AR1)
	#(MOVL #(REG FP -12.) AR1)	;LIM
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..753|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..754|)
|FAIL..753| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..754| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..751|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..752|)
|IFALT..751| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..752| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..750|)
	#(JUMP |PROGTAG..740|)
|END-AND..750| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(JUMP |PROGRETURN..742|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..742| 
	#(ADDL2 #(LIT NIL 8.) SP)
	#(RET)
	#(END)
;;Function PLACE
	#(ENTRY PLACE (2. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..756|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..756| 
	#(MOVAL #(LREL PC |POLL..756|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 5.) #(REG AP 0.))
	#(BEQL |OK..755|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..755| 
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind K
	#(DEFLINK |SVLI..759| SVLI PIECEMAX)
	#(ADDL3 #(REG FLP |SVLI..759|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECEMAX
	#(PUSHL AR1)
	#(MOVL #(REG AP 16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(PUSHL AR1)	;bind LIM
	#(JUMP |PROGTAG..761|)
|PROGTAG..760| 
	#(DEFLINK |SVLI..765| SVLI P)
	#(ADDL3 #(REG FLP |SVLI..765|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for P
	#(PUSHL AR1)
	#(MOVL #(REG AP 16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;K
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..763|)
	#(MOVL #(REG AP 20.) AR1)	;J
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;K
	#(ADDL2 #(REG+ SP NIL) AR1)
	#(PUSHL AR1)	;bind F0111
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(PUSHL AR1)	;bind F0112
	#(DEFLINK |SVLI..766| SVLI PUZZLE)
	#(ADDL3 #(REG FLP |SVLI..766|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PUZZLE
	#(PUSHL AR1)
	#(MOVL #(REG FP -16.) AR1)	;F0111
	#(PUSHL AR1)
	#(MOVL #(REG FP -20.) AR1)	;F0112
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG FP -20.) AR1)	;F0112
	#(ADDL2 #(LIT NIL 8.) SP)
	#(JUMP |JOIN..764|)
|IFALT..763| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..764| 
	#(MOVL #(REG FP -8.) AR1)	;K
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -8.))	;K
|PROGTAG..761| 
	#(MOVL #(REG FP -8.) AR1)	;K
	#(PUSHL AR1)
	#(MOVL #(REG FP -12.) AR1)	;LIM
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..772|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..773|)
|FAIL..772| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..773| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..770|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..771|)
|IFALT..770| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..771| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..769|)
	#(JUMP |PROGTAG..760|)
|END-AND..769| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..762|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..762| 
	#(ADDL2 #(LIT NIL 8.) SP)
	#(DEFLINK |SVLI..774| SVLI CLASS)
	#(ADDL3 #(REG FLP |SVLI..774|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(PUSHL AR1)
	#(MOVL #(REG AP 16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(PUSHL AR1)	;bind F0113
	#(DEFLINK |SVLI..775| SVLI PIECECOUNT)
	#(ADDL3 #(REG FLP |SVLI..775|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECECOUNT
	#(PUSHL AR1)
	#(ADDL3 #(REG FLP |SVLI..774|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(PUSHL AR1)
	#(MOVL #(REG AP 16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(SUBL2 #(LIT NIL 4.) AR1)
	#(PUSHL AR1)	;bind F0114
	#(ADDL3 #(REG FLP |SVLI..775|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECECOUNT
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;F0113
	#(PUSHL AR1)
	#(MOVL #(REG FP -12.) AR1)	;F0114
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG FP -12.) AR1)	;F0114
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG AP 20.) AR1)	;J
	#(PUSHL AR1)	;bind K
	#(JUMP |PROGTAG..779|)
|PROGTAG..778| 
	#(ADDL3 #(REG FLP |SVLI..766|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PUZZLE
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;K
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..783|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..784|)
|IFALT..783| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..784| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..781|)
	#(MOVL #(REG FP -8.) AR1)	;K
	#(JUMP |PROGRETURN..780|)
	#(JUMP |JOIN..782|)
|IFALT..781| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..782| 
	#(MOVL #(REG FP -8.) AR1)	;K
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -8.))	;K
|PROGTAG..779| 
	#(MOVL #(REG FP -8.) AR1)	;K
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 2044.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..790|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..791|)
|FAIL..790| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..791| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..788|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..789|)
|IFALT..788| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..789| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..787|)
	#(JUMP |PROGTAG..778|)
|END-AND..787| 
	#(DEFLINK |SFLI..792| SFLI FORMAT)
	#(CLRQ #(-REG SP NIL))	;Start to call FORMAT
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..792|))	;slink index for FORMAT
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..792|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |SVLI..793| SVLI TYO)
	#(ADDL3 #(REG FLP |SVLI..793|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for TYO
	#(MOVL AR1 #(REG SP 12.))	;first arg to FORMAT
	#(DEFLINK |QUOTE..794| QUOTE |puzzle filled~%|)
	#(MOVL #(REG FLP |QUOTE..794|) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FORMAT
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call FORMAT
	#(MOVL #(LIT NIL 0.) AR1)
	#(JUMP |PROGRETURN..780|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..780| 
	#(ADDL2 #(LIT NIL 4.) SP)
	#(RET)
	#(END)
;;Function REMOVE
	#(ENTRY REMOVE (2. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..796|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..796| 
	#(MOVAL #(LREL PC |POLL..796|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 5.) #(REG AP 0.))
	#(BEQL |OK..795|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..795| 
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind K
	#(DEFLINK |SVLI..799| SVLI PIECEMAX)
	#(ADDL3 #(REG FLP |SVLI..799|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECEMAX
	#(PUSHL AR1)
	#(MOVL #(REG AP 16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(PUSHL AR1)	;bind LIM
	#(JUMP |PROGTAG..801|)
|PROGTAG..800| 
	#(DEFLINK |SVLI..805| SVLI P)
	#(ADDL3 #(REG FLP |SVLI..805|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for P
	#(PUSHL AR1)
	#(MOVL #(REG AP 16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;K
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..803|)
	#(DEFLINK |SVLI..806| SVLI PUZZLE)
	#(ADDL3 #(REG FLP |SVLI..806|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PUZZLE
	#(PUSHL AR1)
	#(MOVL #(REG AP 20.) AR1)	;J
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;K
	#(ADDL2 #(REG+ SP NIL) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG SLP 0.) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..804|)
|IFALT..803| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..804| 
	#(MOVL #(REG FP -8.) AR1)	;K
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -8.))	;K
|PROGTAG..801| 
	#(MOVL #(REG FP -8.) AR1)	;K
	#(PUSHL AR1)
	#(MOVL #(REG FP -12.) AR1)	;LIM
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..812|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..813|)
|FAIL..812| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..813| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..810|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..811|)
|IFALT..810| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..811| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..809|)
	#(JUMP |PROGTAG..800|)
|END-AND..809| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..802|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..802| 
	#(ADDL2 #(LIT NIL 8.) SP)
	#(DEFLINK |SVLI..814| SVLI CLASS)
	#(ADDL3 #(REG FLP |SVLI..814|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(PUSHL AR1)
	#(MOVL #(REG AP 16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(PUSHL AR1)	;bind F0115
	#(DEFLINK |SVLI..815| SVLI PIECECOUNT)
	#(ADDL3 #(REG FLP |SVLI..815|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECECOUNT
	#(PUSHL AR1)
	#(ADDL3 #(REG FLP |SVLI..814|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(PUSHL AR1)
	#(MOVL #(REG AP 16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(PUSHL AR1)	;bind F0116
	#(ADDL3 #(REG FLP |SVLI..815|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECECOUNT
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;F0115
	#(PUSHL AR1)
	#(MOVL #(REG FP -12.) AR1)	;F0116
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG FP -12.) AR1)	;F0116
	#(ADDL2 #(LIT NIL 8.) SP)
	#(RET)
	#(END)
;;Function TRIAL
	#(ENTRY TRIAL (1. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..817|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..817| 
	#(MOVAL #(LREL PC |POLL..817|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 4.) #(REG AP 0.))
	#(BEQL |OK..816|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..816| 
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind I
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind K
	#(JUMP |PROGTAG..821|)
|PROGTAG..820| 
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)
	#(DEFLINK |SVLI..829| SVLI PIECECOUNT)
	#(ADDL3 #(REG FLP |SVLI..829|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECECOUNT
	#(PUSHL AR1)
	#(DEFLINK |SVLI..830| SVLI CLASS)
	#(ADDL3 #(REG FLP |SVLI..830|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BNEQ |FAIL..827|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..828|)
|FAIL..827| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..828| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..825|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..826|)
|IFALT..825| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..826| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..823|)
	#(DEFLINK |SFLI..833| SFLI FIT)
	#(CLRQ #(-REG SP NIL))	;Start to call FIT
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..833|))	;slink index for FIT
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..833|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG FP -8.) AR1)	;I
	#(MOVL AR1 #(REG SP 12.))	;first arg to FIT
	#(MOVL #(REG AP 16.) AR1)	;J
	#(MOVL AR1 #(REG SP 16.))	;second arg to FIT
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call FIT
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |NEXTCOND..832|)
	#(DEFLINK |SFLI..834| SFLI PLACE)
	#(CLRQ #(-REG SP NIL))	;Start to call PLACE
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..834|))	;slink index for PLACE
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..834|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG FP -8.) AR1)	;I
	#(MOVL AR1 #(REG SP 12.))	;first arg to PLACE
	#(MOVL #(REG AP 16.) AR1)	;J
	#(MOVL AR1 #(REG SP 16.))	;second arg to PLACE
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call PLACE
	#(MOVL AR1 #(REG FP -12.))	;K
	#(DEFLINK |SFLI..838| SFLI TRIAL)
	#(CLRQ #(-REG SP NIL))	;Start to call TRIAL
	#(PUSHL #(REG FLP |SFLI..838|))	;slink index for TRIAL
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 4.)))
	#(ADDL3 SLP #(REG FLP |SFLI..838|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG FP -12.) AR1)	;K
	#(MOVL AR1 #(REG SP 12.))	;first arg to TRIAL
	#(CALLS #(LIT NIL 4.) #(@REG SP 8.))	;Call TRIAL
	#(CMPL AR1 #(REG SLP 0.))
	#(JNEQ |END-OR..837|)
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -12.) AR1)	;K
	#(CMPL #(REG+ SP NIL) AR1)
	#(BNEQ |FAIL..839|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..840|)
|FAIL..839| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..840| 
|END-OR..837| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |NEXTCOND..836|)
	#(DEFLINK |SFLI..841| SFLI FORMAT)
	#(CLRQ #(-REG SP NIL))	;Start to call FORMAT
	#(CLRQ #(-REG SP NIL))
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..841|))	;slink index for FORMAT
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 16.)))
	#(ADDL3 SLP #(REG FLP |SFLI..841|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |SVLI..842| SVLI TYO)
	#(ADDL3 #(REG FLP |SVLI..842|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for TYO
	#(MOVL AR1 #(REG SP 12.))	;first arg to FORMAT
	#(DEFLINK |QUOTE..843| QUOTE |piece ~d at ~d ~%|)
	#(MOVL #(REG FLP |QUOTE..843|) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FORMAT
	#(MOVL #(REG FP -8.) AR1)	;I
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FORMAT
	#(MOVL #(REG FP -12.) AR1)	;K
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FORMAT
	#(CALLS #(LIT NIL 7.) #(@REG SP 8.))	;Call FORMAT
	#(DEFLINK |SVLI..844| SVLI KOUNT)
	#(ADDL3 #(REG FLP |SVLI..844|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for KOUNT
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(ADDL3 #(REG FLP |SVLI..844|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;KOUNT
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(JUMP |PROGRETURN..822|)
	#(JUMP |ENDCOND..835|)
|NEXTCOND..836| 
	#(DEFLINK |SFLI..845| SFLI REMOVE)
	#(CLRQ #(-REG SP NIL))	;Start to call REMOVE
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..845|))	;slink index for REMOVE
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..845|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG FP -8.) AR1)	;I
	#(MOVL AR1 #(REG SP 12.))	;first arg to REMOVE
	#(MOVL #(REG AP 16.) AR1)	;J
	#(MOVL AR1 #(REG SP 16.))	;second arg to REMOVE
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call REMOVE
	#(JUMP |ENDCOND..835|)
	#(MOVL #(REG SLP 0.) AR1)
|ENDCOND..835| 
	#(JUMP |ENDCOND..831|)
|NEXTCOND..832| 
	#(MOVL #(REG SLP 0.) AR1)
|ENDCOND..831| 
	#(JUMP |JOIN..824|)
|IFALT..823| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..824| 
	#(MOVL #(REG FP -8.) AR1)	;I
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -8.))	;I
|PROGTAG..821| 
	#(MOVL #(REG FP -8.) AR1)	;I
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 48.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..851|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..852|)
|FAIL..851| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..852| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..849|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..850|)
|IFALT..849| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..850| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..848|)
	#(JUMP |PROGTAG..820|)
|END-AND..848| 
	#(ADDL3 #(REG FLP |SVLI..844|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for KOUNT
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(ADDL3 #(REG FLP |SVLI..844|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;KOUNT
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..822|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..822| 
	#(ADDL2 #(LIT NIL 8.) SP)
	#(RET)
	#(END)
;;Function FILL-PIECEMAX
	#(ENTRY FILL-PIECEMAX (6. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..854|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..854| 
	#(MOVAL #(LREL PC |POLL..854|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 9.) #(REG AP 0.))
	#(BEQL |OK..853|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..853| 
	#(JSB #(@REG SLP CL$MS_SPECBIND))
	#(DEFLINK |SVLI..855| SVLI CLASS)
	#(LONG (+ (* |SVLI..855| 1024.) (+ 1024. 4.)))	;16(AP)
	#(WORD 1023.)
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind I
	#(JUMP |PROGTAG..859|)
|PROGTAG..858| 
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind J
	#(JUMP |PROGTAG..864|)
|PROGTAG..863| 
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind K
	#(JUMP |PROGTAG..869|)
|PROGTAG..868| 
	#(DEFLINK |SVLI..871| SVLI P)
	#(ADDL3 #(REG FLP |SVLI..871|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for P
	#(PUSHL AR1)
	#(MOVL #(REG AP 20.) AR1)	;NN
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(PUSHL AR1)	;bind F0117
	#(MOVL #(REG FP -8.) AR1)	;I
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 32.) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -12.) AR1)	;J
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 32.) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -16.) AR1)	;K
	#(ASHL #(LIT NIL -2.) AR1 R0)
	#(MULL2 R0 #(REG SP 0.))
	#(MOVL #(REG+ SP NIL) AR1)
	#(ADDL2 #(REG+ SP NIL) AR1)
	#(ASHL #(LIT NIL -2.) AR1 R0)
	#(MULL2 R0 #(REG SP 0.))
	#(MOVL #(REG+ SP NIL) AR1)
	#(ADDL2 #(REG+ SP NIL) AR1)
	#(PUSHL AR1)	;bind F0118
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(PUSHL AR1)	;bind F0119
	#(MOVL #(REG FP -20.) AR1)	;F0117
	#(PUSHL AR1)
	#(MOVL #(REG FP -24.) AR1)	;F0118
	#(PUSHL AR1)
	#(MOVL #(REG FP -28.) AR1)	;F0119
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG FP -28.) AR1)	;F0119
	#(ADDL2 #(LIT NIL 12.) SP)
	#(MOVL #(REG FP -16.) AR1)	;K
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -16.))	;K
|PROGTAG..869| 
	#(MOVL #(REG FP -16.) AR1)	;K
	#(PUSHL AR1)
	#(MOVL #(REG AP 32.) AR1)	;C
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..877|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..878|)
|FAIL..877| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..878| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..875|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..876|)
|IFALT..875| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..876| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..874|)
	#(JUMP |PROGTAG..868|)
|END-AND..874| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..870|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..870| 
	#(ADDL2 #(LIT NIL 4.) SP)
	#(MOVL #(REG FP -12.) AR1)	;J
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -12.))	;J
|PROGTAG..864| 
	#(MOVL #(REG FP -12.) AR1)	;J
	#(PUSHL AR1)
	#(MOVL #(REG AP 28.) AR1)	;B
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..884|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..885|)
|FAIL..884| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..885| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..882|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..883|)
|IFALT..882| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..883| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..881|)
	#(JUMP |PROGTAG..863|)
|END-AND..881| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..865|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..865| 
	#(ADDL2 #(LIT NIL 4.) SP)
	#(MOVL #(REG FP -8.) AR1)	;I
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -8.))	;I
|PROGTAG..859| 
	#(MOVL #(REG FP -8.) AR1)	;I
	#(PUSHL AR1)
	#(MOVL #(REG AP 24.) AR1)	;A
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..891|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..892|)
|FAIL..891| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..892| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..889|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..890|)
|IFALT..889| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..890| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..888|)
	#(JUMP |PROGTAG..858|)
|END-AND..888| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..860|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..860| 
	#(ADDL2 #(LIT NIL 4.) SP)
	#(ADDL3 #(REG FLP |SVLI..855|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(PUSHL AR1)
	#(MOVL #(REG AP 20.) AR1)	;NN
	#(PUSHL AR1)
	#(MOVL #(REG AP 36.) AR1)	;ICLASS
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG AP 36.) AR1)	;ICLASS
	#(MOVL #(REG AP 24.) AR1)	;A
	#(PUSHL AR1)
	#(MOVL #(REG AP 28.) AR1)	;B
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 32.) AR1)
	#(ASHL #(LIT NIL -2.) AR1 R0)
	#(MULL2 R0 #(REG SP 0.))
	#(MOVL #(REG+ SP NIL) AR1)
	#(ADDL2 AR1 #(REG SP NIL))
	#(MOVL #(REG AP 32.) AR1)	;C
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 32.) AR1)
	#(ASHL #(LIT NIL -2.) AR1 R0)
	#(MULL2 R0 #(REG SP 0.))
	#(MOVL #(LIT NIL 32.) AR1)
	#(ASHL #(LIT NIL -2.) AR1 R0)
	#(MULL2 R0 #(REG SP 0.))
	#(MOVL #(REG+ SP NIL) AR1)
	#(ADDL2 #(REG+ SP NIL) AR1)
	#(PUSHL AR1)	;bind F0120
	#(DEFLINK |SVLI..893| SVLI PIECEMAX)
	#(ADDL3 #(REG FLP |SVLI..893|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECEMAX
	#(PUSHL AR1)
	#(MOVL #(REG AP 20.) AR1)	;NN
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;F0120
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG FP -8.) AR1)	;F0120
	#(ADDL2 #(LIT NIL 4.) SP)
	#(JSB #(@REG SLP CL$MS_UNBIND))
	#(RET)
	#(END)
;;Function MAIN
	#(ENTRY MAIN (0. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..895|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..895| 
	#(MOVAL #(LREL PC |POLL..895|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 3.) #(REG AP 0.))
	#(BEQL |OK..894|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..894| 
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind M
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind N
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind M
	#(JUMP |PROGTAG..899|)
|PROGTAG..898| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(PUSHL AR1)	;bind F0121
	#(DEFLINK |SVLI..901| SVLI PUZZLE)
	#(ADDL3 #(REG FLP |SVLI..901|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PUZZLE
	#(PUSHL AR1)
	#(MOVL #(REG FP -16.) AR1)	;M
	#(PUSHL AR1)
	#(MOVL #(REG FP -20.) AR1)	;F0121
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG FP -20.) AR1)	;F0121
	#(ADDL2 #(LIT NIL 4.) SP)
	#(MOVL #(REG FP -16.) AR1)	;M
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -16.))	;M
|PROGTAG..899| 
	#(MOVL #(REG FP -16.) AR1)	;M
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 2044.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..907|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..908|)
|FAIL..907| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..908| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..905|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..906|)
|IFALT..905| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..906| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..904|)
	#(JUMP |PROGTAG..898|)
|END-AND..904| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..900|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..900| 
	#(ADDL2 #(LIT NIL 4.) SP)
	#(MOVL #(LIT NIL 4.) AR1)
	#(PUSHL AR1)	;bind I
	#(JUMP |PROGTAG..912|)
|PROGTAG..911| 
	#(MOVL #(LIT NIL 4.) AR1)
	#(PUSHL AR1)	;bind J
	#(JUMP |PROGTAG..917|)
|PROGTAG..916| 
	#(MOVL #(LIT NIL 4.) AR1)
	#(PUSHL AR1)	;bind K
	#(JUMP |PROGTAG..922|)
|PROGTAG..921| 
	#(ADDL3 #(REG FLP |SVLI..901|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PUZZLE
	#(PUSHL AR1)
	#(MOVL #(REG FP -16.) AR1)	;I
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 32.) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -20.) AR1)	;J
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 32.) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -24.) AR1)	;K
	#(ASHL #(LIT NIL -2.) AR1 R0)
	#(MULL2 R0 #(REG SP 0.))
	#(MOVL #(REG+ SP NIL) AR1)
	#(ADDL2 #(REG+ SP NIL) AR1)
	#(ASHL #(LIT NIL -2.) AR1 R0)
	#(MULL2 R0 #(REG SP 0.))
	#(MOVL #(REG+ SP NIL) AR1)
	#(ADDL2 #(REG+ SP NIL) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG SLP 0.) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG SLP 0.) AR1)
	#(MOVL #(REG FP -24.) AR1)	;K
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -24.))	;K
|PROGTAG..922| 
	#(MOVL #(REG FP -24.) AR1)	;K
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 20.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..929|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..930|)
|FAIL..929| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..930| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..927|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..928|)
|IFALT..927| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..928| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..926|)
	#(JUMP |PROGTAG..921|)
|END-AND..926| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..923|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..923| 
	#(ADDL2 #(LIT NIL 4.) SP)
	#(MOVL #(REG FP -20.) AR1)	;J
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -20.))	;J
|PROGTAG..917| 
	#(MOVL #(REG FP -20.) AR1)	;J
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 20.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..936|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..937|)
|FAIL..936| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..937| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..934|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..935|)
|IFALT..934| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..935| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..933|)
	#(JUMP |PROGTAG..916|)
|END-AND..933| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..918|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..918| 
	#(ADDL2 #(LIT NIL 4.) SP)
	#(MOVL #(REG FP -16.) AR1)	;I
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -16.))	;I
|PROGTAG..912| 
	#(MOVL #(REG FP -16.) AR1)	;I
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 20.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..943|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..944|)
|FAIL..943| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..944| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..941|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..942|)
|IFALT..941| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..942| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..940|)
	#(JUMP |PROGTAG..911|)
|END-AND..940| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..913|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..913| 
	#(ADDL2 #(LIT NIL 4.) SP)
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind I
	#(JUMP |PROGTAG..948|)
|PROGTAG..947| 
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)	;bind M
	#(JUMP |PROGTAG..953|)
|PROGTAG..952| 
	#(DEFLINK |SVLI..955| SVLI P)
	#(ADDL3 #(REG FLP |SVLI..955|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for P
	#(PUSHL AR1)
	#(MOVL #(REG FP -16.) AR1)	;I
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG+ SP NIL) R0)
	#(ADDL2 AR1 R0)
	#(MOVL #(REG R0 NIL) AR1)
	#(PUSHL AR1)
	#(MOVL #(REG FP -20.) AR1)	;M
	#(PUSHL AR1)
	#(MOVL #(REG SLP 0.) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(REG SLP 0.) AR1)
	#(MOVL #(REG FP -20.) AR1)	;M
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -20.))	;M
|PROGTAG..953| 
	#(MOVL #(REG FP -20.) AR1)	;M
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 2044.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..961|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..962|)
|FAIL..961| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..962| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..959|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..960|)
|IFALT..959| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..960| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..958|)
	#(JUMP |PROGTAG..952|)
|END-AND..958| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..954|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..954| 
	#(ADDL2 #(LIT NIL 4.) SP)
	#(MOVL #(REG FP -16.) AR1)	;I
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG FP -16.))	;I
|PROGTAG..948| 
	#(MOVL #(REG FP -16.) AR1)	;I
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 48.) AR1)
	#(CMPL #(REG+ SP NIL) AR1)
	#(BLEQ |FAIL..968|)
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(BRB |JOIN..969|)
|FAIL..968| 
	#(MOVL #(REG SLP 0.) AR1)
|JOIN..969| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..966|)
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |JOIN..967|)
|IFALT..966| 
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
|JOIN..967| 
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |END-AND..965|)
	#(JUMP |PROGTAG..947|)
|END-AND..965| 
	#(MOVL #(REG SLP 0.) AR1)
	#(JUMP |PROGRETURN..949|)
	#(MOVL #(REG SLP 0.) AR1)
|PROGRETURN..949| 
	#(ADDL2 #(LIT NIL 4.) SP)
	#(DEFLINK |SFLI..970| SFLI FILL-PIECEMAX)
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |SVLI..971| SVLI CLASS)
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 12.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 12.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 8.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 12.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 12.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 12.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 16.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 12.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 20.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 12.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 24.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 8.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 28.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 8.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 32.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 8.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 36.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 8.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 40.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 8.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 44.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 8.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(MOVAL #(REG SP -28.) SP)	;Start to call FILL-PIECEMAX
	#(MOVC5 #(SHORTLIT NIL 0.) #(REG SP NIL) #(SHORTLIT NIL 0.) #(LIT NIL 28.) #(REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..970|))	;slink index for FILL-PIECEMAX
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 24.)))
	#(ADDL3 SLP #(REG FLP |SFLI..970|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..971|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for CLASS
	#(MOVL AR1 #(REG SP 12.))	;first arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 48.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 20.))	;third arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 24.))	;fourth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 28.))	;fifth arg to FILL-PIECEMAX
	#(MOVL #(LIT NIL 12.) AR1)
	#(MOVL AR1 #(REG SP 32.))	;sixth arg to FILL-PIECEMAX
	#(CALLS #(LIT NIL 9.) #(@REG SP 8.))	;Call FILL-PIECEMAX
	#(DEFLINK |SVLI..972| SVLI PIECECOUNT)
	#(ADDL3 #(REG FLP |SVLI..972|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECECOUNT
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 0.) AR1)
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 52.) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(LIT NIL 52.) AR1)
	#(ADDL3 #(REG FLP |SVLI..972|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECECOUNT
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 4.) AR1)
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 12.) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(LIT NIL 12.) AR1)
	#(ADDL3 #(REG FLP |SVLI..972|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECECOUNT
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 8.) AR1)
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 4.) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(LIT NIL 4.) AR1)
	#(ADDL3 #(REG FLP |SVLI..972|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for PIECECOUNT
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 12.) AR1)
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 4.) AR1)
	#(BICL3 #(REG SLP CL$TCM_VECT_ADR) #(REG SP 4.) R0)
	#(ADDL2 #(REG SP NIL) R0)
	#(MOVL AR1 #(REG R0 NIL))
	#(ADDL2 #(LIT NIL 8.) SP)
	#(MOVL #(LIT NIL 4.) AR1)
	#(MOVL #(LIT NIL 4.) AR1)
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 32.) AR1)
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 4.) AR1)
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 32.) AR1)
	#(PUSHL AR1)
	#(MOVL #(LIT NIL 4.) AR1)
	#(ASHL #(LIT NIL -2.) AR1 R0)
	#(MULL2 R0 #(REG SP 0.))
	#(MOVL #(REG+ SP NIL) AR1)
	#(ADDL2 #(REG+ SP NIL) AR1)
	#(ASHL #(LIT NIL -2.) AR1 R0)
	#(MULL2 R0 #(REG SP 0.))
	#(MOVL #(REG+ SP NIL) AR1)
	#(ADDL2 #(REG+ SP NIL) AR1)
	#(MOVL AR1 #(REG FP -8.))	;M
	#(MOVL #(LIT NIL 0.) AR1)
	#(DEFLINK |SVLI..973| SVLI KOUNT)
	#(ADDL3 #(REG FLP |SVLI..973|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;KOUNT
	#(DEFLINK |SFLI..976| SFLI FIT)
	#(CLRQ #(-REG SP NIL))	;Start to call FIT
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..976|))	;slink index for FIT
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..976|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to FIT
	#(MOVL #(REG FP -8.) AR1)	;M
	#(MOVL AR1 #(REG SP 16.))	;second arg to FIT
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call FIT
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..974|)
	#(DEFLINK |SFLI..977| SFLI PLACE)
	#(CLRQ #(-REG SP NIL))	;Start to call PLACE
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..977|))	;slink index for PLACE
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..977|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(LIT NIL 0.) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to PLACE
	#(MOVL #(REG FP -8.) AR1)	;M
	#(MOVL AR1 #(REG SP 16.))	;second arg to PLACE
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call PLACE
	#(MOVL AR1 #(REG FP -12.))	;N
	#(JUMP |JOIN..975|)
|IFALT..974| 
	#(DEFLINK |SFLI..978| SFLI FORMAT)
	#(CLRQ #(-REG SP NIL))	;Start to call FORMAT
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..978|))	;slink index for FORMAT
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..978|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |SVLI..979| SVLI TYO)
	#(ADDL3 #(REG FLP |SVLI..979|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for TYO
	#(MOVL AR1 #(REG SP 12.))	;first arg to FORMAT
	#(DEFLINK |QUOTE..980| QUOTE |error 1~%|)
	#(MOVL #(REG FLP |QUOTE..980|) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FORMAT
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call FORMAT
|JOIN..975| 
	#(DEFLINK |SFLI..983| SFLI TRIAL)
	#(CLRQ #(-REG SP NIL))	;Start to call TRIAL
	#(PUSHL #(REG FLP |SFLI..983|))	;slink index for TRIAL
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 4.)))
	#(ADDL3 SLP #(REG FLP |SFLI..983|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG FP -12.) AR1)	;N
	#(MOVL AR1 #(REG SP 12.))	;first arg to TRIAL
	#(CALLS #(LIT NIL 4.) #(@REG SP 8.))	;Call TRIAL
	#(CMPL AR1 #(REG SLP 0.))
	#(JEQL |IFALT..981|)
	#(CLRQ #(-REG SP NIL))	;Start to call FORMAT
	#(CLRQ #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..978|))	;slink index for FORMAT
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 12.)))
	#(ADDL3 SLP #(REG FLP |SFLI..978|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..979|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for TYO
	#(MOVL AR1 #(REG SP 12.))	;first arg to FORMAT
	#(DEFLINK |QUOTE..984| QUOTE |success in ~d~%|)
	#(MOVL #(REG FLP |QUOTE..984|) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FORMAT
	#(ADDL3 #(REG FLP |SVLI..973|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for KOUNT
	#(MOVL AR1 #(REG SP 20.))	;third arg to FORMAT
	#(CALLS #(LIT NIL 6.) #(@REG SP 8.))	;Call FORMAT
	#(JUMP |JOIN..982|)
|IFALT..981| 
	#(CLRQ #(-REG SP NIL))	;Start to call FORMAT
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..978|))	;slink index for FORMAT
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..978|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(ADDL3 #(REG FLP |SVLI..979|) SLP R0)
	#(MOVL #(@REG R0 0.) AR1)	;special cell for TYO
	#(MOVL AR1 #(REG SP 12.))	;first arg to FORMAT
	#(DEFLINK |QUOTE..985| QUOTE |failure~%|)
	#(MOVL #(REG FLP |QUOTE..985|) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FORMAT
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call FORMAT
|JOIN..982| 
	#(ADDL2 #(LIT NIL 8.) SP)
	#(RET)
	#(END)
;;Function TIMAIN
	#(ENTRY TIMAIN (0. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..987|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..987| 
	#(MOVAL #(LREL PC |POLL..987|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 3.) #(REG AP 0.))
	#(BEQL |OK..986|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..986| 
	#(DEFLINK |SFLI..988| SFLI RUNTIME)
	#(CLRL #(-REG SP NIL))	;Start to call RUNTIME
	#(PUSHL #(REG FLP |SFLI..988|))	;slink index for RUNTIME
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 0.)))
	#(ADDL3 SLP #(REG FLP |SFLI..988|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(CALLS #(LIT NIL 3.) #(@REG SP 8.))	;Call RUNTIME
	#(PUSHL AR1)	;bind OLD
	#(DEFLINK |SFLI..989| SFLI MAIN)
	#(CLRL #(-REG SP NIL))	;Start to call MAIN
	#(PUSHL #(REG FLP |SFLI..989|))	;slink index for MAIN
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 0.)))
	#(ADDL3 SLP #(REG FLP |SFLI..989|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(CALLS #(LIT NIL 3.) #(@REG SP 8.))	;Call MAIN
	#(CLRL #(-REG SP NIL))	;Start to call RUNTIME
	#(PUSHL #(REG FLP |SFLI..988|))	;slink index for RUNTIME
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 0.)))
	#(ADDL3 SLP #(REG FLP |SFLI..988|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(CALLS #(LIT NIL 3.) #(@REG SP 8.))	;Call RUNTIME
	#(PUSHL AR1)
	#(MOVL #(REG FP -8.) AR1)	;OLD
	#(SUBL2 AR1 #(REG SP 0.))
	#(MOVL #(REG+ SP NIL) AR1)
	#(ADDL2 #(LIT NIL 4.) SP)
	#(RET)
	#(END)
;;Function |RLB;PUZZLE 11..990|
	#(LOADRUN |RLB;PUZZLE 11..990| (0. 0. 0.) NIL #T)
	#(WORD 1024.)
	#(BLBC #(REG SLP CL$TM_POLLP) |POLL..992|)
	#(JSB #(@REG SLP CL$MS_INTERRUPT))
|POLL..992| 
	#(MOVAL #(LREL PC |POLL..992|) FLP)
	#(PUSHL #(REG SLP CL$QC_CCFRAME))
	#(CMPB #(LIT NIL 3.) #(REG AP 0.))
	#(BEQL |OK..991|)
	#(JSB #(@REG SLP CL$MS_WNA_ERR))
|OK..991| 
	#(MOVL #(LIT NIL 2044.) AR1)
	#(DEFLINK |SVLI..993| SVLI SIZE)
	#(ADDL3 #(REG FLP |SVLI..993|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;SIZE
	#(MOVL #(LIT NIL 12.) AR1)
	#(DEFLINK |SVLI..994| SVLI CLASSMAX)
	#(ADDL3 #(REG FLP |SVLI..994|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;CLASSMAX
	#(MOVL #(LIT NIL 48.) AR1)
	#(DEFLINK |SVLI..995| SVLI TYPEMAX)
	#(ADDL3 #(REG FLP |SVLI..995|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;TYPEMAX
	#(MOVL #(LIT NIL 32.) AR1)
	#(DEFLINK |SVLI..996| SVLI D)
	#(ADDL3 #(REG FLP |SVLI..996|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;D
	#(MOVL #(REG SLP CL$QC_TRUTH) AR1)
	#(DEFLINK |SVLI..997| SVLI TRUE)
	#(ADDL3 #(REG FLP |SVLI..997|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;TRUE
	#(MOVL #(REG SLP 0.) AR1)
	#(DEFLINK |SVLI..998| SVLI FALSE)
	#(ADDL3 #(REG FLP |SVLI..998|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;FALSE
	#(DEFLINK |SFLI..999| SFLI FLUSH-MACROMEMOS)
	#(CLRQ #(-REG SP NIL))	;Start to call FLUSH-MACROMEMOS
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..999|))	;slink index for FLUSH-MACROMEMOS
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..999|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |QUOTE..1000| QUOTE ZEROP)
	#(MOVL #(REG FLP |QUOTE..1000|) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to FLUSH-MACROMEMOS
	#(DEFLINK |QUOTE..1001| QUOTE FLUSH-MACROMEMOS)
	#(MOVL #(REG FLP |QUOTE..1001|) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FLUSH-MACROMEMOS
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call FLUSH-MACROMEMOS
	#(DEFLINK |SFLI..1002| SFLI ADD-MACRO-DEFINITION)
	#(CLRQ #(-REG SP NIL))	;Start to call ADD-MACRO-DEFINITION
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..1002|))	;slink index for ADD-MACRO-DEFINITION
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..1002|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG FLP |QUOTE..1000|) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to ADD-MACRO-DEFINITION
	#(DEFLINK |SFLI..1003| SFLI |ZEROP MACRO|)
	#(ADDL3 #(REG FLP |SFLI..1003|) SLP R0)
	#(BISL3 #(LIT NIL TC$K_SUBR) #(@REG R0 0.) AR1)	;special cell for |ZEROP MACRO|
	#(MOVL AR1 #(REG SP 16.))	;second arg to ADD-MACRO-DEFINITION
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call ADD-MACRO-DEFINITION
	#(CLRQ #(-REG SP NIL))	;Start to call FLUSH-MACROMEMOS
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..999|))	;slink index for FLUSH-MACROMEMOS
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..999|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |QUOTE..1004| QUOTE AREFF)
	#(MOVL #(REG FLP |QUOTE..1004|) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to FLUSH-MACROMEMOS
	#(MOVL #(REG FLP |QUOTE..1001|) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FLUSH-MACROMEMOS
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call FLUSH-MACROMEMOS
	#(CLRQ #(-REG SP NIL))	;Start to call ADD-MACRO-DEFINITION
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..1002|))	;slink index for ADD-MACRO-DEFINITION
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..1002|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG FLP |QUOTE..1004|) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to ADD-MACRO-DEFINITION
	#(DEFLINK |SFLI..1005| SFLI |AREFF MACRO|)
	#(ADDL3 #(REG FLP |SFLI..1005|) SLP R0)
	#(BISL3 #(LIT NIL TC$K_SUBR) #(@REG R0 0.) AR1)	;special cell for |AREFF MACRO|
	#(MOVL AR1 #(REG SP 16.))	;second arg to ADD-MACRO-DEFINITION
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call ADD-MACRO-DEFINITION
	#(CLRQ #(-REG SP NIL))	;Start to call FLUSH-MACROMEMOS
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..999|))	;slink index for FLUSH-MACROMEMOS
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..999|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(DEFLINK |QUOTE..1006| QUOTE AREF)
	#(MOVL #(REG FLP |QUOTE..1006|) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to FLUSH-MACROMEMOS
	#(MOVL #(REG FLP |QUOTE..1001|) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to FLUSH-MACROMEMOS
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call FLUSH-MACROMEMOS
	#(CLRQ #(-REG SP NIL))	;Start to call ADD-MACRO-DEFINITION
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..1002|))	;slink index for ADD-MACRO-DEFINITION
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..1002|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(REG FLP |QUOTE..1006|) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to ADD-MACRO-DEFINITION
	#(DEFLINK |SFLI..1007| SFLI |AREF MACRO|)
	#(ADDL3 #(REG FLP |SFLI..1007|) SLP R0)
	#(BISL3 #(LIT NIL TC$K_SUBR) #(@REG R0 0.) AR1)	;special cell for |AREF MACRO|
	#(MOVL AR1 #(REG SP 16.))	;second arg to ADD-MACRO-DEFINITION
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call ADD-MACRO-DEFINITION
	#(DEFLINK |SFLI..1008| SFLI VARRAY)
	#(CLRQ #(-REG SP NIL))	;Start to call VARRAY
	#(PUSHL #(REG FLP |SFLI..1008|))	;slink index for VARRAY
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 4.)))
	#(ADDL3 SLP #(REG FLP |SFLI..1008|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(LIT NIL 12.) AR1)
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to VARRAY
	#(CALLS #(LIT NIL 4.) #(@REG SP 8.))	;Call VARRAY
	#(DEFLINK |SVLI..1009| SVLI PIECECOUNT)
	#(ADDL3 #(REG FLP |SVLI..1009|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;PIECECOUNT
	#(CLRQ #(-REG SP NIL))	;Start to call VARRAY
	#(PUSHL #(REG FLP |SFLI..1008|))	;slink index for VARRAY
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 4.)))
	#(ADDL3 SLP #(REG FLP |SFLI..1008|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(LIT NIL 48.) AR1)
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to VARRAY
	#(CALLS #(LIT NIL 4.) #(@REG SP 8.))	;Call VARRAY
	#(DEFLINK |SVLI..1010| SVLI CLASS)
	#(ADDL3 #(REG FLP |SVLI..1010|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;CLASS
	#(CLRQ #(-REG SP NIL))	;Start to call VARRAY
	#(PUSHL #(REG FLP |SFLI..1008|))	;slink index for VARRAY
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 4.)))
	#(ADDL3 SLP #(REG FLP |SFLI..1008|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(LIT NIL 48.) AR1)
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to VARRAY
	#(CALLS #(LIT NIL 4.) #(@REG SP 8.))	;Call VARRAY
	#(DEFLINK |SVLI..1011| SVLI PIECEMAX)
	#(ADDL3 #(REG FLP |SVLI..1011|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;PIECEMAX
	#(CLRQ #(-REG SP NIL))	;Start to call VARRAY
	#(PUSHL #(REG FLP |SFLI..1008|))	;slink index for VARRAY
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 4.)))
	#(ADDL3 SLP #(REG FLP |SFLI..1008|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(LIT NIL 2044.) AR1)
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to VARRAY
	#(CALLS #(LIT NIL 4.) #(@REG SP 8.))	;Call VARRAY
	#(DEFLINK |SVLI..1012| SVLI PUZZLE)
	#(ADDL3 #(REG FLP |SVLI..1012|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;PUZZLE
	#(CLRQ #(-REG SP NIL))	;Start to call VARRAY
	#(CLRL #(-REG SP NIL))
	#(PUSHL #(REG FLP |SFLI..1008|))	;slink index for VARRAY
	#(PUSHL #(SHORTLIT NIL (+ QC$K_AFM_MARK 8.)))
	#(ADDL3 SLP #(REG FLP |SFLI..1008|) R0)	;function addr
	#(MOVL #(@REG R0 0.) #(REG SP 8.))
	#(MOVL #(LIT NIL 48.) AR1)
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 12.))	;first arg to VARRAY
	#(MOVL #(LIT NIL 2044.) AR1)
	#(ADDL2 #(LIT NIL 4.) AR1)
	#(MOVL AR1 #(REG SP 16.))	;second arg to VARRAY
	#(CALLS #(LIT NIL 5.) #(@REG SP 8.))	;Call VARRAY
	#(DEFLINK |SVLI..1013| SVLI P)
	#(ADDL3 #(REG FLP |SVLI..1013|) SLP R0)
	#(MOVL AR1 #(@REG R0 0.))	;P
	#(RET)
	#(END)
;;; Functions referenced but not defined:
;;; (ADD-MACRO-DEFINITION FLUSH-MACROMEMOS RUNTIME FORMAT APPLY TO-LIST ERROR MACROMEMO MACROFETCH)
;;; Compile time 30.846 seconds
;;; GC time 3.447 seconds
;;; Net 27.399 seconds
