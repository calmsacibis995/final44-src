head     1.2;
access   ;
symbols  ;
locks    jkf:1.2; strict;
comment  @ * @;


1.2
date     83.07.23.12.39.37;  author layer;  state Exp;
branches ;
next     1.1;

1.1
date     83.01.31.07.11.54;  author jkf;  state Exp;
branches ;
next     ;


desc
@@


1.2
log
@doc -e option
@
text
@." $Header: liszt.1 1.1 83/01/31 07:11:54 jkf Exp $
.TH LISZT 1 10/1/80
.UC 4
.SH NAME
liszt \- compile a Franz Lisp program
.SH SYNOPSIS
.B liszt
[
.B \-mpqruwxCQST
] [
.B \-e
form
] [
.B \-o
objfile
]  [ name ]
.SH DESCRIPTION
.I Liszt
takes a file whose names ends in `.l' and compiles the F\s-2RANZ\s0 L\s-2ISP\s0
code there leaving an object program on the file whose name is that of the
source with `.o' substituted for `.l'.
.PP
The following options are interpreted by
.I liszt.
.TP
.B \-e
Evaluate the given form before compilation begins.
.TP
.B \-m
Compile a M\s-2ACLISP\s0 file, by changing the readtable to conform to
\s-2MACLISP\s0 syntax and including a macro-defined compatibility package.
.TP
.B \-o
Put the object code in the specified file, rather than the default `.o' file.
.TP
.B \-p
places profiling code at the beginning of each non-local function.
If the lisp system is also created with profiling in it, this allows
function calling frequency to be determined (see
.IR prof (1).)
.TP
.B \-q
Only print warning and error messages.
Compilation statistics and notes on correct but unusual constructs
will not be printed.
.TP
.B \-r
place bootstrap code at the beginning of the object file, which when
the object file is executed will cause a lisp system to be invoked
and the object file fasl'ed in.
.TP
.B \-u
Compile a UCI-lispfile, by changing the readtable to conform to
UCI-Lisp syntax and including a macro-defined compatibility package.
.TP
.B \-w
Suppress warning diagnostics.
.TP
.B \-x
Create a lisp cross reference file with the same name as the source
file but with  `.x' appended.
The program 
.IR lxref (1) 
reads this file and creates a human readable cross
reference listing.
.TP
.B \-C
put comments in the assembler output of the compiler. Useful
for debugging the compiler.
.TP
.B -Q
Print compilation statistics and warn of strange constructs.
This is the default. 
.TP
.B \-S
Compile the named program and leave the assembler-language output on
the corresponding file suffixed `.s'.
This will also prevent the assembler language file from being assembled.
.TP
.B \-T
send the assembler output to standard output.
.PP
If 
no source file is specified, then the compiler will run interactively.
You will find yourself talking to the 
.IR lisp (1)
top-level command interpreter.
You can compile a file by using the
function
.I liszt 
(an nlambda) with the same arguments as you use on the command line.
For example to compile `foo', a M\s-2ACLISP\s0 file, you would use:
.IP
(liszt \-m foo)
.PP
Note that
.I liszt
supplies the ``.l'' extension for you.
.SH FILES
.ta 2.4i
.nf
/usr/lib/lisp/machacks.l	M\s-2ACLISP\s0 compatibility package
/usr/lib/lisp/syscall.l	macro definitions of Unix system calls 
/usr/lib/lisp/ucifnc.l	UCI Lisp compatibility package
.fi
.SH AUTHOR
John Foderaro
.SH SEE ALSO
lisp(1), lxref(1)
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
." $Header$
d11 3
d25 3
@
