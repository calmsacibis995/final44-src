.In 3 1 add "['n_arg1 ...]"
.In 3 1 plus "['n_arg1 ...]"
.In 3 1 sum "['n_arg1 ...]"
.In 3 1 \(pl "['x_arg1 ...]"
.In 3 1 add1 "'n_arg"
.In 3 1 1+ "'x_arg"
.In 3 1 diff "['n_arg1 ... ]"
.In 3 1 difference "['n_arg1 ... ]"
.In 3 1 \(mi "['x_arg1 ... ]"
.In 3 2 sub1 "'n_arg"
.In 3 2 1\(mi "'x_arg"
.In 3 2 minus "'n_arg"
.In 3 2 product "['n_arg1 ... ]"
.In 3 2 times "['n_arg1 ... ]"
.In 3 2 \(** "['x_arg1 ... ]"
.In 3 2 quotient "['n_arg1 ...]"
.In 3 2 / "['x_arg1 ...]"
.In 3 2 *quo "'i_x 'i_y"
.In 3 2 Divide "'i_dividend 'i_divisor"
.In 3 2 Emuldiv "'x_fact1 'x_fact2 'x_addn 'x_divisor"
.In 3 3 numberp "'g_arg"
.In 3 3 numbp "'g_arg"
.In 3 3 fixp "'g_arg"
.In 3 3 floatp "'g_arg"
.In 3 3 evenp "'x_arg"
.In 3 3 oddp "'x_arg"
.In 3 3 zerop "'g_arg"
.In 3 3 onep "'g_arg"
.In 3 3 plusp "'n_arg"
.In 3 3 minusp "'g_arg"
.In 3 3 greaterp "['n_arg1 ...]"
.In 3 3 > "'fx_arg1 'fx_arg2"
.In 3 3 >& "'x_arg1 'x_arg2"
.In 3 3 lessp "['n_arg1 ...]"
.In 3 3 < "'fx_arg1 'fx_arg2"
.In 3 3 <& "'x_arg1 'x_arg2"
.In 3 4 \(eq "'fx_arg1 'fx_arg2"
.In 3 4 \(eq& "'x_arg1 'x_arg2"
.In 3 4 cos "'fx_angle"
.In 3 4 sin "'fx_angle"
.In 3 4 acos "'fx_arg"
.In 3 4 asin "'fx_arg"
.In 3 4 atan "'fx_arg1 'fx_arg2"
.In 3 4 haipart "bx_number x_bits"
.In 3 4 haulong "bx_number"
.In 3 4 bignum-leftshift "bx_arg x_amount"
.In 3 5 sticky-bignum-leftshift "'bx_arg 'x_amount"
.In 3 5 boole "'x_key 'x_v1 'x_v2 ..."
.In 3 5 lsh "'x_val 'x_amt"
.In 3 6 rot "'x_val 'x_amt"
.In 3 6 abs "'n_arg"
.In 3 6 absval "'n_arg"
.In 3 6 exp "'fx_arg"
.In 3 6 expt "'n_base 'n_power"
.In 3 6 fact "'x_arg"
.In 3 6 fix "'n_arg"
.In 3 6 float "'n_arg"
.In 3 6 log "'fx_arg"
.In 3 6 max "'n_arg1 ... "
.In 3 6 min "'n_arg1 ... "
.In 3 7 mod "'i_dividend 'i_divisor"
.In 3 7 remainder "'i_dividend 'i_divisor"
.In 3 7 *mod "'x_dividend 'x_divisor"
.In 3 7 random "['x_limit]"
.In 3 7 sqrt "'fx_arg"
