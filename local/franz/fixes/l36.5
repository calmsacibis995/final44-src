Bug fix for Lisp V37 (and possibly V36)
Fix #: l36.5
Files affected: lam6.c lam8.c

Symptom:
  Unwind protects would fail and error message produced by the 'err'
function would not work correctly.

The call to errorh in the Lerr function was incorrect, here is what the
end of the Lerr function should look like:

--- file lam6.c ---
	if ((np >= lbot + 2) && ((lbot+1)->val != nil))
		error("Second arg to err must be nil",FALSE);
	if ((lbot->val != nil) && (TYPE(lbot->val) == ATOM))
	    mesg = lbot->val->a.pname;		/* new message if atom */
				
	return(errorh(Vererr,mesg,lbot->val,FALSE,1));
}


The variable handy in Lctcherr was not initialize correctly in the later
versions of Franz Lisp, the initialization was inadvertanly removed 
when the routine was modified.  If your version of Lctcherr doesn't
look at all like what is shown below, then just ignore this error report:
 
--- file lam8.c ---

lispval
Lctcherr()
{
	register lispval handy;
	lispval type,messg,valret,contuab,uniqid,datum1,datum2;

	chkarg(1,"I-throw-err");

	handy = lbot->val;
	
	if(handy->d.car == tatom)
	{	/* continuing a throw */




