head     1.3;
access   ;
symbols  ;
locks    ; strict;
comment  @ * @;


1.3
date     83.04.09.00.20.46;  author sklower;  state Exp;
branches ;
next     1.2;

1.2
date     83.04.04.15.46.35;  author sklower;  state Exp;
branches ;
next     1.1;

1.1
date     83.03.03.13.42.48;  author layer;  state Exp;
branches ;
next     ;


desc
@@


1.3
log
@one makefile now works.  This is just being filed for reference.
@
text
@# 
#$Header: /na/franz/franz/68k/RCS/Makefile,v 1.4 83/04/04 15:04:12 sklower Exp $
#
#  Franz Lisp C coded kernel 
#
#-- Default Paths:
#  see ../../ReadMe for a explaination of what LibDir and CopyTo mean
#  D is the directory used for holding intermediate files during 
#    compilation
#-- Options:
#  there is one compile time options which can be set in this file
#  * do profiling (ala the unix prof(1) command)
#
#  The selection of this options is made below
#  Other options can be selected by editing h/config.h or via
#  ../../lispconf
#
LibDir = /a/franz/lisplib
ObjDir = /usr/ucb
CopyTo = /dev/null
Liszt = liszt
Lisp = lisp
# if you change this you must recompile rlc.c 
# (and change the value in ../Makefile)
#
HOLE=	2097152 

.DEFAULT: nlisp

MipSrc1= ../low.c
MipSrc2= ../alloc.c ../data.c
MipSrc3= ../rlc.c
MipSrc4= ../lisp.c ../eval.c ../eval2.c ../inits.c ../io.c ../error.c \
	 ../sysat.c ../lam1.c ../lam2.c ../lam3.c ../lam4.c ../lam5.c\
	 ../lam6.c  ../lam7.c ../lam8.c ../lam9.c ../lamr.c ../lamp.c \
	 ../fex1.c ../fex2.c ../fex3.c ../fex4.c ../fexr.c\
	 ../fpipe.c \
	 ../subbig.c ../pbignum.c ../divbig.c \
	 ../ffasl.c ../fasl.c \
	 ../trace.c ../evalf.c ../frame.c ../lamgc.c

MipSrc = ${MipSrc1} ${MipSrc2} ${MipSrc3} ${MipSrc4}

MipObj1= ../low.o
MipObj2= ../alloc.o ../data.o
HoleMipObj2 = ../Salloc.o ../Sdata.o
HoleMipObj3 = ../rlc.o
MipObj4= ../lisp.o ../eval.o ../eval2.o ../inits.o ../io.o ../error.o \
	 ../sysat.o ../lam1.o ../lam2.o ../lam3.o ../lam4.o ../lam5.o\
	 ../lam6.o  ../lam7.o ../lam8.o ../lam9.o ../lamr.o ../lamp.o \
	 ../fex1.o ../fex2.o ../fex3.o ../fex4.o ../fexr.o\
	 ../fpipe.o \
	 ../subbig.o ../pbignum.o ../divbig.o \
	 ../ffasl.o ../fasl.o \
	 ../trace.o ../evalf.o ../frame.o ../lamgc.o


# The order of loading of certain files is important.
# low.o must be first and lowaux second.
# 
BottomObj = ${MipObj1} lowaux.o 

# Different objects are required depending on whether there is to be
# a hole between text and data space.
#
NoHoleObj = /lib/crt0.o ${MipObj2}
HoleObj   = /lib/hcrt0.o ${HoleMipObj2} ${HoleMipObj3}

M68kSrc = 68k.c adbig.c alloca.s callg.s calqhat.c dmlad.s dodiv.c dsmult.c \
	ediv.s emul.s exarith.c fixbits.c hack.s inewint.c lowaux.s \
	mlsb.c mulbig.c nargs.c pushframe.s qfuncl.c realread.sun.s realread.s

M68kObj = 68k.o adbig.o alloca.o callg.o calqhat.o dmlad.o dodiv.o dsmult.o \
	ediv.o emul.o exarith.o fixbits.o hack.o inewint.o \
	mlsb.o mulbig.o nargs.o pushframe.o qfuncl.o

AllSrc = $(M68kSrc) Makefile first8.c low.s

#ifdef unisoft
#OsObjs = realread.o
#CFLAGS = -I../h
#else
OsObjs = realread.sun.o
CFLAGS = -f -I../h
#endif

# on non-ucb systems it might be more
# polite to use temporary files rather than pipes
#
#ifdef unisoft
#.SUFFIXES : .c.l.s
#.s.o:
#	first8.out < $< > $*.t; as -o $*.o $*.t; rm $*.t
#else
.SUFFIXES : .c.l
#endif
.c.o :
	cc -c $(CFLAGS) $*.c;\
	mv `basename $*.o` x; mv x $*.o

.l.o :
	liszt $< > #resc
	@@echo liszt $< done


../rlc.o: ../rlc.c 
	cc -c $(CFLAGS) -DHOLE=${HOLE} ../rlc.c 
	mv rlc.o .. < /dev/null

../Salloc.o: ../alloc.c
	(echo "# define HOLE"; cat ../alloc.c) > Salloc.c;\
	make Salloc.o; mv Salloc.o .. < /dev/null ; rm Salloc.c
	
../Sdata.o: ../data.c
	(echo "# define HOLE"; cat ../data.c) > Sdata.c;\
	make Sdata.o; mv Sdata.o .. < /dev/null  ; rm Sdata.c

#ifdef unisoft
#../low.o: ../low.c first8.out
##	: cc -S $(CFLAGS) ../low.c;\
##	: sed s/data/text/ < low.s > low.t;\
##	: as -o low.o low.t;\
##	: rm low.s low.t
#	as -o ../low.o low.s
#
#qfuncl.o: qfuncl.c first8.out
#	cc -E $(CFLAGS) ${ProfFlag2} qfuncl.c |\
#	first8.out | sed 's/^#/|/' > qfuncl.s
#	as -o qfuncl.o qfuncl.s
#	rm qfuncl.s
#
#else
../low.o: ../low.c
	cc -c $(CFLAGS) -R ../low.c  
	mv low.o .. < /dev/null

qfuncl.o: qfuncl.c
	cc -I../h -E ${ProfFlag2} qfuncl.c > x.s; as -o qfuncl.o x.s; rm x.s
#endif

# rawlisp is the standard raw lisp system.

rawlisp: ${BottomObj} ${NoHoleObj} ${MipObj4} ${M68kObj} ${OsObjs}
	rm -f rawlisp
	ld -n -x -o rawlisp -e start ${BottomObj} ${NoHoleObj} \
				${OsObjs} ${M68kObj} ${MipObj4}  -lMm -lMc -ltermcap
	ls -l rawlisp


# hlisp is a raw lisp system with a hole between text and data

rawhlisp: ${BottomObj} ${HoleObj} ${MipObj4} ${M68kObj} ${OsObjs}
	rm -f rawhlisp
	ld -x -H ${HOLE} -o rawhlisp -e hstart ${BottomObj}  ${HoleObj} \
				${OsObjs} ${M68kObj}  ${MipObj4} -lm -lc -ltermcap
	ls -l rawhlisp


clean:
	rm -f *.o

lint:
	lint h/*.h *.c

install: nlisp 
	-rm -f ${ObjDir}/lisp
	mv nlisp ${ObjDir}/lisp
	@@echo lisp installed

nlisp: rawlisp ${LibDir}
	-rm -f nlisp
	(cd ${LibDir} ; make Liszt=${Liszt} required)
	echo "(progn (setq build:map 'map \
			   build:lisp-type 'franz \
		           lisp-library-directory '${LibDir} \
			   build:dir '${LibDir} \
			   lisp-object-directory '${ObjDir}) \
		     (load '${LibDir}/buildlisp)\
	             (dumplisp nlisp))" | ./rawlisp
	${LibDir}/tackon map nlisp
	@@echo nlisp built


donlisp:
	-rm -f nlisp
	make LibDir=${LibDir} Liszt=${Liszt} ObjDir=${ObjDir} nlisp

firsttime: rawlisp
	rm -f nlisp
	echo "(progn (setq build:map 'map \
			   build:lisp-type 'franz \
		           lisp-library-directory '${LibDir} \
			   build:dir '${LibDir} \
			   lisp-object-directory '${ObjDir}) \
		     (load '${LibDir}/buildlisp)\
	             (dumplisp nlisp))" | ./rawlisp

#--- snlisp: create a totally interpreted lisp.
#	dump as snlisp
snlisp: rawlisp
	echo "(progn (setq build:load t		\
			   build:lisp-type 'franz \
			   build:dir '${LibDir} \
			   lisp-object-directory '${ObjDir}\
			   lisp-library-directory '${LibDir})\
		     (load '${LibDir}/buildlisp)\
		     (dumplisp snlisp))" | rawlisp


tags:  
	ctags $(M68kSrc) ${MipSrc}

#--- copysource : copy source files to another directory
#  called via   make CopyTo=/xx/yyy/zz copysource
# 
copysource: ${AllSrc}
	(tar cf - ${AllSrc} | (cd ${CopyTo} ; tar xf -))

copyobjects: ${AllObj}
	(tar cf - ${AllObj} | (cd ${CopyTo} ; tar xf -))

scriptcatall: ${AllSrc}
	@@../../scriptcat . franz/68k ${AllSrc}
@


1.2
log
@What we have here works.  Try to join with Make.sun via ifdefs.
@
text
@a0 1
#
d2 1
a2 1
# $Header: /na/franz/franz/68k/RCS/Make.sun,v 1.3 83/03/30 00:57:57 sklower Exp $
d18 1
a18 1
LibDir = /usr/lib/lisp
a22 1
CFLAGS= -I../h
d71 1
a71 1
	mlsb.c mulbig.c nargs.c pushframe.s qfuncl.c realread.s
d75 1
a75 1
	mlsb.o mulbig.o nargs.o pushframe.o qfuncl.o realread.o
d77 1
a77 1
AllSrc = $(M68kSrc) realread.sun.s Make.sun Makefile Make.dual first8.out low.s
d79 8
a86 1
.SUFFIXES : .c.l.s
d90 7
a104 2
.s.o:
	first8.out < $< > $*.t; as -o $*.o $*.t; rm $*.t
a105 6
qfuncl.o: qfuncl.c first8.out
	cc -E $(CFLAGS) ${ProfFlag2} qfuncl.c |\
	first8.out | sed 's/^#/|/' > qfuncl.s
	as -o qfuncl.o qfuncl.s
	rm qfuncl.s

a109 7
../low.o: ../low.c
#	cc -S $(CFLAGS) ../low.c;\
#	sed s/data/text/ < low.s > low.t;\
#	as -o low.o low.t;\
#	rm low.s low.t
	as -o ../low.o low.s

d118 23
d143 1
a143 1
rawlisp: first8.out ${BottomObj} ${NoHoleObj} ${MipObj4} ${M68kObj} 
d145 2
a146 2
	ld -x -o rawlisp -e start ${BottomObj} ${NoHoleObj} \
				${M68kObj} ${MipObj4}  -lM -lc -ltermcap
d152 1
a152 1
rawhlisp: ${BottomObj} ${HoleObj} ${MipObj4} ${M68kObj} 
d155 1
a155 1
				${M68kObj}  ${MipObj4} -lm -lc -ltermlib
d179 1
a179 1
	             (dumplisp nlisp))" | rawlisp
d187 10
@


1.1
log
@Initial revision
@
text
@d2 27
a28 1
#makefile for 68k franz
d30 1
a30 3
Lisp = /a/franz/franz/lisp
LispLib = /a/franz/lisplib
ObjDir = /a/franz
d32 11
a42 3
INCLUDES = h/68kframe.h h/catchfram.h h/chars.h h/chkrtab.h h/config.h\
	   h/dfuncs.h h/frame.h h/gc.h h/global.h h/gtabs.h h/lfuncs.h\
	   h/naout.h h/pagsiz.h h/sigtab.h h/structs.h h/types.h h/daout.h
d44 1
a44 1
OTHER = h/vadvise.h h/pagsiz.h h/sys/vtimes.h
d46 12
a57 6
CSRC = 68k.c alloc.c data.c divbig.c dvadvise.c error.c eval.c\
eval2.c evalf.c divbig.c fex1.c fex2.c fex3.dual.c fex4.c\
fexr.c ffasl.dual.c first8.c fpipe.c frame.c inits.c io.c lam1.c\
lam2.c lam3.c lam4.c lam5.c lam6.c lam7.c lam8.c lam9.c lamgc.c\
lamnop.c lamr.c lint.c lisp.c fasl.c pbignum.c subbig.c\
sysat.c trace.c
a58 4
MSRC =  m/adbig.c m/alloca.s m/callg.s m/calqhat.c\
	m/dmlad.s m/dodiv.c m/dsmult.c m/ediv.s m/emul.s m/exarith.c\
	m/fixbits.c m/hack.s m/inewint.c m/mlsb.c m/mulbig.c\
	m/nargs.c m/pushframe.s m/realread.s
d60 4
a63 6
COBJS = alloc.o data.o divbig.o dvadvise.o error.o eval.o eval2.o \
	evalf.o fex1.o fex2.o fex3.dual.o fex4.o fexr.o ffasl.dual.o fpipe.o \
	frame.o inits.o io.o lam1.o lam2.o lam3.o lam4.o  \
	lam5.o lam6.o lam7.o lam8.o lam9.o lamgc.o lamnop.o  \
	lamr.o lisp.o fasl.o pbignum.o qfuncl.o subbig.o sysat.o \
	trace.o 68k.o
d65 5
a69 1
CFLAGS = -Ih -Uvax -Dunisoft
d71 3
a73 6
tlisp:	${INCLUDES} ${OTHER} $(COBJS) m/machlib low.o lowaux.o
	rm -f tlisp
	ld -Xd -n  low.o lowaux.o /lib/crt0.o $(COBJS) m/machlib \
	-lm -lc  -e start -o tlisp
	chmod 775 tlisp
	ls -l tlisp
d75 21
d97 2
a98 1
	cc -E $(CFLAGS) qfuncl.c | ./first8.out| sed 's/^#/|/' > qfuncl.s
d102 6
a107 2
low.o: low.c
#	cc -S $(CFLAGS) low.c;\
d111 1
a111 1
	as -o low.o low.s
d113 7
a119 2
m/machlib: $(MSRC)
	cd m; make machlib
d121 1
a121 2
tags:
	ctags ${CSRC}
d123 5
a127 2
echo:
	@@echo $(CSRC)
d129 45
a173 3
ilisp: tlisp
	echo "(progn (setq build:load t\
			   build:dir '${LispLib}\
d175 3
a177 3
			   lisp-library-directory '${LispLib})\
		     (load '${LispLib}/buildlisp.l)\
		     (dumplisp ilisp))" | tlisp
d179 15
a193 7
lisp: tlisp
	echo "(progn (setq build:map 'map\
			   build:dir '${LispLib}\
			   lisp-object-directory '${ObjDir}\
			   lisp-library-directory '${LispLib})\
		     (load '${LispLib}/buildlisp.l)\
		     (dumplisp ${Lisp}))" | tlisp
@
