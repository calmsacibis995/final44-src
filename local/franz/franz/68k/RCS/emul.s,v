head     1.2;
access   ;
symbols  ;
locks    ; strict;
comment  @# @;


1.2
date     83.11.26.12.13.45;  author sklower;  state Exp;
branches ;
next     1.1;

1.1
date     83.11.21.15.13.00;  author sklower;  state Exp;
branches ;
next     ;


desc
@Routine to multiply two 32 bit numbers and add a 64 bit sign extended
one two them.  This is a single instruction on the vax but must be
written as a subroutine for the 68k.  It is used in  bignum multiplication
and division.  The routine originally also included a routine for double-
longword subtraction which was moved to qfuncl.c so we could pre-process
around a bug in the SUN microsystems assembler.
@


1.2
log
@move definition of double-long subtraction to a file where it
can be ifdef'd to get around a bug in some assemblers.
@
text
@| /* Copyright (c) 1982, Regents, University of California */
|
| $Header: $
| $Locker: $
|
	.text
	.globl	_emul
_emul:
	link	a6,#-_F1
	moveml	#_S1,a6@@(-_F1)
	movl	a6@@(20),a5
| A1 = 24
	clrb	a6@@(-9)
	clrb	a6@@(-13)
	clrl	d7
	tstl	a6@@(8)
	bge	.L13
	eorb	#1,a6@@(-9)
	negl	a6@@(8)
.L13:
	tstl	a6@@(12)
	bge	.L14
	eorb	#1,a6@@(-9)
	negl	a6@@(12)
.L14:
	movw	a6@@(10),d1
	mulu	a6@@(14),d1
	movl	d1,a6@@(-4)
	movw	a6@@(8),d1
	mulu	a6@@(12),d1
	movl	d1,a6@@(-8)
	movw	a6@@(8),d1
	mulu	a6@@(14),d1
	addl	d1,a6@@(-6)
	bcc	.L16
	addqw	#1,a6@@(-8)
.L16:
	movw	a6@@(10),d1
	mulu	a6@@(12),d1
	addl	d1,a6@@(-6)
	bcc	.L17
	addqw	#1,a6@@(-8)
.L17:
	tstb	a6@@(-9)
	beq	.L18
	negl	a6@@(-4)
	negxl	a6@@(-8)
.L18:
	tstl	a6@@(16)
	bge	.L20
	moveq	#-1,d7
.L20:
	movl	a6@@(-8),d1
	movl	a6@@(16),d0
	addl	a6@@(-4),d0
	addxl	d1,d7
	movl	d0,a5@@(4)
	movl	d7,a5@@
.L12:	moveml	a6@@(-_F1),#8320
	unlk	a6
	rts
_F1 = 24
_S1 = 8320
| M1 = 0
@


1.1
log
@Initial revision
@
text
@d2 4
a5 1
	.data
a64 9
	.globl	_vlsub
_vlsub:
	movl	sp@@(4),a0
	addql	#8,a0
	movl	sp@@(8),a1
	addql	#8,a1	| this should clear the carry bit.
	subxl	a1@@-,a0@@-
	subxl	a1@@-,a0@@-
	rts
@
