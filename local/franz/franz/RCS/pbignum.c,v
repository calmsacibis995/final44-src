head     1.3;
access   jkf sklower layer;
symbols  ;
locks    ; strict;
comment  @ * @;


1.3
date     83.09.12.14.17.59;  author sklower;  state Exp;
branches ;
next     1.2;

1.2
date     83.06.24.10.59.01;  author sklower;  state Exp;
branches ;
next     1.1;

1.1
date     83.01.29.13.33.25;  author jkf;  state Exp;
branches ;
next     ;


desc
@print bignums
@


1.3
log
@Changes to allow alloca and ``stack'' to happen on a separate stack from
the C run-time stack.  This is also under the compilation flag SPISFP,
although, in principle, there might be systems that have separate stack
and frame pointer, but the stack grows upwards that would want to use
this set of changes, but not necessarily using preallocated buffers
for non-local returns.  The overhead for the prealllocated stuff
is small.
@
text
@#ifndef lint
static char *rcsid =
   "$Header: pbignum.c,v 1.2 83/06/24 10:59:01 sklower Exp $";
#endif

/*					-[Sat Jan 29 13:30:47 1983 by jkf]-
 * 	pbignum.c			$Locker: sklower $
 * print a bignum
 *
 * (c) copyright 1982, Regents of the University of California
 */

#include "global.h"

pbignum(current, useport)
register lispval current;
register FILE *useport;
{
	long  *top, *bot, *work, negflag = 0;
	char *alloca();
	register int *digitp;
	Keepxs();

	/* copy bignum onto stack */
	top = (sp()) - 1;
	do {
		stack(current->s.I);
	} while(current = current->s.CDR);

	bot = sp();
	if (top==bot) {
		fprintf(useport,"%d",*bot);
		Freexs();
		return;
	}

	/* save space for printed digits*/
	work = (int *)alloca((top-bot)*2*sizeof(int));
	if( *bot < 0) {
		negflag = 1;
		dsneg(top,bot);
	}

	/* figure out nine digits at a time by destructive division*/
	for(digitp = work; bot <= top; digitp++) {
		*digitp = dodiv(top,bot);
		if(*bot==0) bot += 1;
	}
	
	/* print them out */

	if(negflag) putc('-',useport);
	fprintf(useport,"%d",*--digitp);
	while ( digitp > work) fprintf(useport,"%.09d",*--digitp);
	Freexs();
}
@


1.2
log
@change printf format for leading zeroes to work with unix_ts as well
@
text
@d3 1
a3 1
   "$Header: pbignum.c 1.1 83/01/29 13:33:25 jkf Exp $";
d19 2
a20 2
	int  *top, *bot, *work, negflag = 0;
	char *sp(), *alloca();
d22 1
d25 1
a25 1
	top = ((int *)sp()) - 1;
d30 1
a30 1
	bot = (int *)sp();
d33 1
d55 1
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
   "$Header: /na/franz/franz/RCS/eval.c,v 1.1 83/01/29 12:14:54 jkf Exp $";
d7 1
a7 1
 * 	pbignum.c			$Locker: jkf $
d52 1
a52 1
	while ( digitp > work) fprintf(useport,"%09d",*--digitp);
@
