(File |dhl/cmatch.l|)
(match lambda bind-to match atom not cdr cons append car eq dtpr and is-var or equal cond list quote let)
(lbind-to (lambda . local) lbind-to cons return caar null cdr do assq let car eq dtpr and is-var atom cond)
(bind-to lambda lbind-to cond)
(match-frames-1 lambda nreverse atom car cons setq fdata liszt-internal-do mapcar findicators1 fdata-only fvalues-only inspect-datum fvalue-only countvalues |1-| cdr / float lessp putprop concat frame? cxr getd null or get cond |1+| do newsym quote list eval newframe frame-compare let)
(match-frames lambda nreverse atom car cons setq quote fdata liszt-internal-do mapcar findicators1 fdata-only fvalues-only inspect-datum fvalue-only countvalues cdr / float lessp null cond compare let)
(countvalues (lambda . local) nreverse atom cons quote car fdata liszt-internal-do mapcar findicators1 fdata-only fvalues-only length cdr + setq do fslots let null cond)
