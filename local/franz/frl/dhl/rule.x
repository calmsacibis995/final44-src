(File |dhl/rule.l|)
(newframe macro quote list cadr)
(newsym macro cons quote list cadr)
(changedomain lambda basicprove let nreverse cdr atom car cons setq null rdata liszt-internal-do mapcar findicators1 rdata-only rvalues-only inspect-datum rvalue-only quote eq cond)
(ruledomain-throw lambda *throw)
(runrules lambda *throw fdata fdata-only fvalues-only fvalue-only exittrace |1+| entertrace caar rule:getrule applyrule caddar level:getrule cadar goal:getrule list append apply let succeed or nreverse cdr atom cond car cons setq null quote rdata liszt-internal-do mapcar findicators1 rdata-only rvalues-only inspect-datum rvalue-only funcall getrule do)
(prove0 lambda fail runrules *catch newgoal apply nreverse cdr atom car cons setq null quote rdata liszt-internal-do mapcar findicators1 rdata-only rvalues-only inspect-datum rvalue-only let initialtest cond)
(basicprove lambda |1+| setuprules prove0)
(applyrule macro list quote cons cadddr caddr cadr)
(fail macro cons quote list caddr cadr)
(succeed macro cons quote list cadddr caddr cadr)
(newgoal macro cons quote list caddr cadr)
(initialtest macro cons quote list caddr cadr)
(exittrace macro quote list cadddr caddr cadr)
(entertrace macro quote list cadddr caddr cadr)
(setuprules lambda list funcall putrule nreverse cdr atom cond car cons setq null quote rdata liszt-internal-do mapcar findicators1 rdata-only rvalues-only inspect-datum rvalue-only apply gather do)
(level:getrule macro quote list cadr)
(goal:getrule macro quote list cadr)
(rule:getrule macro quote list cadr)
(putrule macro quote list cadddddr caddddr cadddr caddr cadr)
(getrule macro quote list cadr)
(is-var macro cons quote list cadr)
(makvar lambda read quote cons)
(rule-domain macro and cadddr nreverse cdr car setq null cdddddr liszt-internal-do mapcar append caddr cadr caddddr atom cond cons quote list)
(rule macro cadddr atom cond nreverse cdr car setq null cddddr liszt-internal-do mapcar append caddr cadr cons quote list)
