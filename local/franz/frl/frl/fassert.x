(File |frl/fassert.l|)
(fdestroy1 lambda funcall and if quote remprop)
(fdestroy lambda fdestroy1 ftrace-destroy cond fname for)
(finstantiate1 lambda cdr quote fput-datum fput-value car null setq liszt-internal-do mapc)
(finstantiate lexpr finstantiate1 ftrace-instantiate > fcreate quote error cdr return frame? not car null do select1 memq or and if list arg atom cond setq prog)
(fcreate1 lambda funcall and if quote cons ncons putprop)
(fcreate lexpr return fcreate1 ftrace-create fgename setq frame? and if quote error arg atom or ifnot > cond prog)
(ferase lambda fdestroy fremove-datum fremove-value cadr not run-if-removed-methods nreverse cons mapcar findicators findicator car null list cdr atom cond frame fbucket delq nconc liszt-internal-do mapc quote flistget setq return frame? or ifnot prog)
(fadd-slot-str lambda return run-if-added-methods flistget fname quote list cadr frame+ fput-datum or fput-msg for eq not null cdr fbucket liszt-internal-do mapc fbuild car atom cond findicator setq prog)
(fadd-frame-str lambda fname fadd-slot-str delq cons eq null setq liszt-internal-do mapc quote flistget cdr fbucket car atom cond findicator frame+ for)
(default-frame-destroy-fnc lambda delq setq memq and if)
(default-frame-create-fnc lambda cons setq setf push memq or ifnot)
(deframe nlambda funcall if putprop quote princ print car frame? and null not cond)
(fassert nlambda fadd-frame-str quote princ print car frame? and null not cond)
