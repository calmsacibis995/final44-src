(File |frllib/fauxfns.l|)
(#print macro cdr append quote cons)
(squash lambda cdr car squash append list atom null cond)
(speak lambda return go cdr quote car princ cond terpri squash setq prog)
(#princ lambda princ)
(rule-load lambda quote loadfiles)
(talk-load lambda talk quote loadfiles)
(oil-load lambda quote loadfiles)
(dhl-load lambda quote loadfiles)
(dhl-macro-load lambda quote loadfiles)
(frl-basic-macro-load lambda quote loadfiles)
(frl-basic-load lambda quote loadfiles)
(frl-utility-macro-load lambda quote loadfiles)
(frl-utility-load lambda quote loadfiles)
(loadlisplibrary lambda quote loadfiles)
(frl-define-switches lambda quote comment setq)
(&-readmacro lambda read quote list)
(!-readmacro lambda read quote list)
(%-readmacro lambda read quote list)
(@-readmacro lambda read quote list)
(readbracketlist lambda list typep cadr car atom not and cond setq nreverse quote cons eq read do)
(charpos lambda nwritn)
(linel lambda)
(macro macro cdddr nconc cons caddr cadr quote list)
(frl-syntax lambda quote setsyntax)
(initial-syntax lambda quote setsyntax)
(loadfiles lexpr concat load terpri quote patom car null cons |1-| + cdr < arg do minusp eq cond let listify setq liszt-internal-do mapc)
(defmvar macro cdr append quote cons)
