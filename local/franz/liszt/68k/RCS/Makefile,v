head     1.18;
access   ;
symbols  ;
locks    ; strict;
comment  @@;


1.18
date     83.09.12.15.27.18;  author layer;  state Exp;
branches ;
next     1.17;

1.17
date     83.08.15.19.29.22;  author layer;  state Exp;
branches ;
next     1.16;

1.16
date     83.06.27.10.45.10;  author layer;  state Exp;
branches ;
next     1.15;

1.15
date     83.06.21.05.29.57;  author layer;  state Exp;
branches ;
next     1.14;

1.14
date     83.06.09.01.33.03;  author sklower;  state Exp;
branches ;
next     1.13;

1.13
date     83.04.22.16.37.54;  author sklower;  state Exp;
branches ;
next     1.12;

1.12
date     83.04.08.23.09.01;  author layer;  state Exp;
branches ;
next     1.11;

1.11
date     83.04.08.21.10.40;  author layer;  state Exp;
branches ;
next     1.10;

1.10
date     83.04.08.17.39.35;  author layer;  state Exp;
branches ;
next     1.9;

1.9
date     83.04.06.16.48.36;  author layer;  state Exp;
branches ;
next     1.8;

1.8
date     83.04.04.19.28.15;  author layer;  state Exp;
branches ;
next     1.7;

1.7
date     83.04.04.19.15.03;  author layer;  state Exp;
branches ;
next     1.6;

1.6
date     83.03.30.01.54.29;  author layer;  state Exp;
branches ;
next     1.5;

1.5
date     83.03.30.01.25.19;  author layer;  state Exp;
branches ;
next     1.4;

1.4
date     83.03.30.00.36.09;  author layer;  state Exp;
branches ;
next     1.3;

1.3
date     83.03.23.23.31.19;  author layer;  state Exp;
branches ;
next     1.2;

1.2
date     83.03.23.20.57.10;  author layer;  state Exp;
branches ;
next     1.1;

1.1
date     83.03.23.08.19.59;  author jkf;  state Exp;
branches ;
next     ;


desc
@makefile for 68k liszt
@


1.18
log
@added cleanobj entry (for make clean in ../../)
@
text
@#$Header: /na/franz/liszt/68k/RCS/Makefile,v 1.17 83/08/15 19:29:22 layer Exp $
#
#				-[Sat Jul 30 15:47:44 PDT 1983 by layer]-
#
#	Makefile for liszt 
#
# Copyright (c) 1980, 1982,  The Regents of the University of California.
# the Copyright applies to all files referenced in this Makefile.
# All rights reserved.  
# Authors: John Foderaro (jkf@@berkeley.ARPA)
#	   Kevin Layer (layer@@berkeley.ARPA)
#
# this makefile creates these things:
#   liszt - the interface to the lisp compiler.  This is used only for
#	    non virtual memory systems, because the overhead for forking
#	    the assembler is too great.
#   nliszt - the lisp compiler. This is the default.
#   snliszt - the lisp compiler, but interpreted.
#   fromasm - used to build the compiler usually for the first
#		time from only .s files.  These files are assembled
#		and loaded into a lisp.
#   install - install the new version created
#   clean - remove all .o files and *nliszt's
#   tags - a tags file for use by ex/vi
#
# CTE refers to compile time enviroment 
#
#--- Default Paths and programs
#
.DEFAULT:nliszt
.SUFFIXES:
.SUFFIXES: .l.o

# DESTDIR is the relative offset of where the compiler goes
# (when making new distributions, the `root' is often at /nbsd).
# RootDir is the root directory of the franz lisp system
# (this is changed when the system is configured by ../../lispconf).
DESTDIR =

LibDir = ${DESTDIR}/usr/lib/lisp
ObjDir = ${DESTDIR}/usr/ucb
Liszt = ${ObjDir}/liszt
Lisp = ${ObjDir}/lisp
#ifdef swapper
#XLiszt = ${ObjDir}/xliszt
#endif

CFLAGS = -O # -Ddebug
Flg =  -xqa

CTESrc = ../chead.l ../cmacros.l ../const.l

CTEObj= cmacros.o

Src =  ../array.l ../datab.l ../decl.l ../expr.l ../fixnum.l ../funa.l\
       ../instr.l ../vector.l ../funb.l ../func.l ../io.l\
       ../tlev.l ../util.l ../lversion.l

SharedSrc = ${CTESrc} ${Src} ../ChangeLog ../cmake.l

AllSrc =  Makefile Makefile2 lisprc.l lisztrc.l liszt.c

Obj = array.o vector.o datab.o decl.o expr.o fixnum.o\
      instr.o funa.o funb.o func.o io.o tlev.o util.o lversion.o

AllObj =  ${CTEObj} ${Obj}

#liszt :: the user interface to xliszt
# (only for swapped based systems, right now dual/unisoft)
#ifdef swapper
#liszt:	liszt.c
#	cc $(CFLAGS) -DLISZT='"${XLiszt}"' -DAS='"${LibDir}/as"'\
#	   -o liszt liszt.c
#else
liszt:
#endif

donliszt:
	rm -f nliszt
	make Liszt=${Liszt} Lisp=${Lisp} nliszt

nliszt: ${CTEObj} ${Obj} liszt ${Lisp}
	rm -f nliszt
	echo "(load '../cmake.l)(genl nliszt)" | ${Lisp} 

#--- generate an interpreted version
snliszt: ${Src} ${Lisp}
	rm -f snliszt
	echo "(load '../cmake.l)(genl snliszt slow)" | ${Lisp}

# 'fromasm' is for making the compiler from
# .s files.  On 68k systems this is much faster than
# doing a 'make slow', then a 'make fast'.
fromasm:	assit load liszt
assit:
	for i in *.s; do echo $$i; as $$i; done

#--- load .o files into a lisp
load:
	rm -f nliszt
	echo "(load '../cmake.l)(genl nliszt)" | ${Lisp} 

# install nliszt, and if we are on a swap based system, then
#install nliszt as xliszt, and liszt (from liszt.c) as liszt.
install:
#ifdef swapper
#	mv nliszt ${XLiszt}
#	cp liszt ${Liszt}
#else
	mv nliszt ${Liszt}
#endif

clean:	cleanobj
	rm -f \#* *nliszt *.s

cleanobj:
	rm -f *.[ox]

#--- rules for each lisp file:
cmacros.o: ../cmacros.l
	${Liszt} ${Flg} ../cmacros.l -o cmacros.o

array.o: ../array.l
	${Liszt} ${Flg} ../array.l -o array.o

instr.o: ../instr.l
	${Liszt} ${Flg} ../instr.l -o instr.o

vector.o: ../vector.l
	${Liszt} ${Flg} ../vector.l -o vector.o

datab.o: ../datab.l
	${Liszt} ${Flg} ../datab.l -o datab.o

decl.o: ../decl.l
	${Liszt} ${Flg} ../decl.l -o decl.o

expr.o: ../expr.l
	${Liszt} ${Flg} ../expr.l -o expr.o

fixnum.o: ../fixnum.l
	${Liszt} ${Flg} ../fixnum.l -o fixnum.o

funa.o: ../funa.l
	${Liszt} ${Flg} ../funa.l -o funa.o

funb.o: ../funb.l
	${Liszt} ${Flg} ../funb.l -o funb.o

func.o: ../func.l
	${Liszt} ${Flg} ../func.l -o func.o

io.o: ../io.l
	${Liszt} ${Flg} ../io.l -o io.o

tlev.o: ../tlev.l
	${Liszt} ${Flg} ../tlev.l -o tlev.o

util.o: ../util.l
	${Liszt} ${Flg} ../util.l -o util.o

lversion.o: ../lversion.l
	${Liszt} ${Flg} ../lversion.l -o lversion.o

tags:	../tags ${Src} ${CTESrc}
	awk -f ../ltags ${Src} ${CTESrc} | sort > ../tags

print:
#	@@pr README
	@@ls -l | pr 
	@@pr TODO Makefile* ../cmake.l lisztrc.l lisprc.l
	@@pr -h "Liszt.c (for non-VMUNIX systems only)" liszt.c
	@@/usr/local/slp -l ../lversion.l ../chead.l ../cmacros.l\
	   ../datab.l ../decl.l ../expr.l\
	   ../funa.l ../funb.l ../func.l\
	   ../fixnum.l ../array.l ../io.l ../tlev.l ../util.l

iprint:
	igrind -lsh Makefile*
	igrind -lc -h "Liszt.c (for non-VMUNIX systems only)" liszt.c
	vlp -p 10 ../lversion.l\
	   ../chead.l ../cmacros.l\
	   ../datab.l ../decl.l ../expr.l\
	   ../funa.l ../funb.l ../func.l\
	   ../fixnum.l ../array.l ../io.l ../tlev.l ../util.l\
	   ../cmake.l lisztrc.l lisprc.l > vlp.out
	itroff vlp.out
	rm vlp.out

scriptcatall: ${AllSrc}
	@@../../scriptcat . liszt/68k ${AllSrc}

copysource: ${AllSrc}
	(tar cf - ${AllSrc} | (cd ${CopyTo} ; tar xf -))

copyobjects: ${AllObj}
	(tar cf - ${AllObj} | (cd ${CopyTo} ; tar xf -))
@


1.17
log
@added files vector.l, const.l, and instr.l.  Also, put back the 
entry for 'donliszt' which is used by 'make fast' in /na/franz.
@
text
@d1 1
a1 1
#$Header: Makefile 1.16 83/06/27 10:45:10 layer Exp $
d113 5
a117 2
clean:
	rm -f #* *nliszt *.[sxo]
@


1.16
log
@throw away changes of 1.15
@
text
@d1 1
a1 1
#$Header: Makefile 1.14 83/06/09 01:33:03 sklower Exp $
d3 1
a3 1
#				-[Fri Apr  8 21:04:43 1983 by layer]-
d51 1
a51 1
CTESrc = ../chead.l ../cmacros.l
d56 2
a57 1
	../funb.l ../func.l ../io.l ../tlev.l ../util.l ../lversion.l
d63 2
a64 2
Obj = array.o datab.o decl.o expr.o fixnum.o\
      funa.o funb.o func.o io.o tlev.o util.o lversion.o
d78 4
a85 1

d122 6
@


1.15
log
@new version with new make
@
text
@d1 29
a29 30
/*
 * $Header: $
 * 
 *			-[Tue Jun 21 03:31:23 PDT 1983 by layer]-
 * 
 * Makefile for liszt 
 * 
 *  Copyright (c) 1980, 1982,  The Regents of the University of California.
 *  the Copyright applies to all files referenced in this Makefile.
 *  All rights reserved.  
 *
 *  Authors: John Foderaro (jkf@@berkeley.ARPA)
 *	     Kevin Layer (layer@@berkeley.ARPA)
 * 
 *  this makefile creates these things:
 *    liszt - the interface to the lisp compiler.  This is used only for
 * 	    non virtual memory systems, because the overhead for forking
 * 	    the assembler is too great.
 *    nliszt - the lisp compiler. This is the default.
 *    snliszt - the lisp compiler, but interpreted.
 *    fromasm - used to build the compiler usually for the first
 * 		time from only .s files.  These files are assembled
 * 		and loaded into a lisp.
 *    install - install the new version created
 *    clean - remove all .o files and *nliszt's
 *    tags - a tags file for use by ex/vi
 * 
 * --- Default Paths and programs
 * 
 */
d34 4
d45 1
a45 1
XLiszt = ${ObjDir}/xliszt
d49 1
a49 2
/* output files (.o's and .x's) go in this directory */
COMP = ${Liszt} -xqa -o $@@
d51 1
a51 20
%%
!../chead.l	../chead.l	0
!../cmacros.l	@@cmacros.o	10
../lversion.l	lversion.o	20
../decl.l	decl.o		30
../datab.l	datab.o		40
../tlev.l	tlev.o		50
../expr.l	expr.o		60
../funa.l	funa.o		70
../funb.l	funb.o		80
../func.l	func.o		90
../fixnum.l	fixnum.o	100
../io.l		io.o		110
../array.l	array.o		120
../util.l	util.o		130
!../cmake.l	../cmake.l	@@999
#ifdef swapper
liszt.c		liszt.o		140
#endif
%%
d53 1
a53 1
DEPEND = cmacros.o
d55 2
a56 1
SharedSrc = ${LSRC} ../ChangeLog
d58 1
a58 1
AllSrc =  Makefile Makefile2 lisprc.l lisztrc.l ${CSRC}
d60 1
a60 1
AllObj =  ${OBJS}
d62 7
a68 4
/*
 * liszt :: the user interface to xliszt
 * (only for swapped based systems, right now dual/unisoft)
 */
d70 3
a72 3
liszt:	liszt.c
	cc $(CFLAGS) -DLISZT='"${XLiszt}"' -DAS='"${LibDir}/as"'\
	   -o liszt liszt.c
d77 1
a77 1
nliszt: ${OBJS} liszt ${Lisp}
d81 3
a83 2
/* --- generate an interpreted version */
snliszt: ${LSRC} ${Lisp}
d87 3
a89 5
/* all .l files depend on this one... */
cmacros.o: ../cmacros.l
	${COMP} ../cmacros.l

/* 'fromasm' is for making the compiler from .s files. */
a90 1

d92 1
a92 1
	for i in *.s; do echo $$i; ${LibDir}/as $$i; done
d94 1
a94 1
/* --- load .o files into a lisp */
d99 2
a100 4
/*
 * install nliszt, and if we are on a swap based system, then
 * install nliszt as xliszt, and liszt (from liszt.c) as liszt.
 */
d103 2
a104 2
	mv nliszt ${XLiszt}
	cp liszt ${Liszt}
d112 40
d156 1
d160 4
a163 1
	@@/usr/local/slp -l ${PRINTS}
d168 6
a173 1
	vlp -p 10  ${PRINTS} > vlp.out
@


1.14
log
@distribute Makefile2 so people can cross-compile compiler
@
text
@d1 30
a30 29
#$Header: Makefile 1.13 83/04/22 16:37:54 sklower Exp $
#
#				-[Fri Apr  8 21:04:43 1983 by layer]-
#
#	Makefile for liszt 
#
# Copyright (c) 1980, 1982,  The Regents of the University of California.
# the Copyright applies to all files referenced in this Makefile.
# All rights reserved.  
# Authors: John Foderaro (jkf@@berkeley.ARPA)
#	   Kevin Layer (layer@@berkeley.ARPA)
#
# this makefile creates these things:
#   liszt - the interface to the lisp compiler.  This is used only for
#	    non virtual memory systems, because the overhead for forking
#	    the assembler is too great.
#   nliszt - the lisp compiler. This is the default.
#   snliszt - the lisp compiler, but interpreted.
#   fromasm - used to build the compiler usually for the first
#		time from only .s files.  These files are assembled
#		and loaded into a lisp.
#   install - install the new version created
#   clean - remove all .o files and *nliszt's
#   tags - a tags file for use by ex/vi
#
# CTE refers to compile time enviroment 
#
#--- Default Paths and programs
#
a34 4
# DESTDIR is the relative offset of where the compiler goes
# (when making new distributions, the `root' is often at /nbsd).
# RootDir is the root directory of the franz lisp system
# (this is changed when the system is configured by ../../lispconf).
d42 1
a42 1
#XLiszt = ${ObjDir}/xliszt
d46 2
a47 1
Flg =  -xqa
d49 20
a68 1
CTESrc = ../chead.l ../cmacros.l
d70 1
a70 1
CTEObj= cmacros.o
d72 1
a72 2
Src =  ../array.l ../datab.l ../decl.l ../expr.l ../fixnum.l ../funa.l\
	../funb.l ../func.l ../io.l ../tlev.l ../util.l ../lversion.l
d74 1
a74 1
SharedSrc = ${CTESrc} ${Src} ../ChangeLog ../cmake.l
d76 1
a76 1
AllSrc =  Makefile Makefile2 lisprc.l lisztrc.l liszt.c
d78 4
a81 7
Obj = array.o datab.o decl.o expr.o fixnum.o\
      funa.o funb.o func.o io.o tlev.o util.o lversion.o

AllObj =  ${CTEObj} ${Obj}

#liszt :: the user interface to xliszt
# (only for swapped based systems, right now dual/unisoft)
d83 3
a85 3
#liszt:	liszt.c
#	cc $(CFLAGS) -DLISZT='"${XLiszt}"' -DAS='"${LibDir}/as"'\
#	   -o liszt liszt.c
d90 1
a90 1
nliszt: ${CTEObj} ${Obj} liszt ${Lisp}
d94 2
a95 3

#--- generate an interpreted version
snliszt: ${Src} ${Lisp}
d99 5
a103 3
# 'fromasm' is for making the compiler from
# .s files.  On 68k systems this is much faster than
# doing a 'make slow', then a 'make fast'.
d105 1
d107 1
a107 1
	for i in *.s; do echo $$i; as $$i; done
d109 1
a109 1
#--- load .o files into a lisp
d114 4
a117 2
# install nliszt, and if we are on a swap based system, then
#install nliszt as xliszt, and liszt (from liszt.c) as liszt.
d120 2
a121 2
#	mv nliszt ${XLiszt}
#	cp liszt ${Liszt}
a128 40
#--- rules for each lisp file:
cmacros.o: ../cmacros.l
	${Liszt} ${Flg} ../cmacros.l -o cmacros.o

array.o: ../array.l
	${Liszt} ${Flg} ../array.l -o array.o

datab.o: ../datab.l
	${Liszt} ${Flg} ../datab.l -o datab.o

decl.o: ../decl.l
	${Liszt} ${Flg} ../decl.l -o decl.o

expr.o: ../expr.l
	${Liszt} ${Flg} ../expr.l -o expr.o

fixnum.o: ../fixnum.l
	${Liszt} ${Flg} ../fixnum.l -o fixnum.o

funa.o: ../funa.l
	${Liszt} ${Flg} ../funa.l -o funa.o

funb.o: ../funb.l
	${Liszt} ${Flg} ../funb.l -o funb.o

func.o: ../func.l
	${Liszt} ${Flg} ../func.l -o func.o

io.o: ../io.l
	${Liszt} ${Flg} ../io.l -o io.o

tlev.o: ../tlev.l
	${Liszt} ${Flg} ../tlev.l -o tlev.o

util.o: ../util.l
	${Liszt} ${Flg} ../util.l -o util.o

lversion.o: ../lversion.l
	${Liszt} ${Flg} ../lversion.l -o lversion.o

a132 1
#	@@pr README
d136 1
a136 4
	@@/usr/local/slp -l ../lversion.l ../chead.l ../cmacros.l\
	   ../datab.l ../decl.l ../expr.l\
	   ../funa.l ../funb.l ../func.l\
	   ../fixnum.l ../array.l ../io.l ../tlev.l ../util.l
d141 1
a141 6
	vlp -p 10 ../lversion.l\
	   ../chead.l ../cmacros.l\
	   ../datab.l ../decl.l ../expr.l\
	   ../funa.l ../funb.l ../func.l\
	   ../fixnum.l ../array.l ../io.l ../tlev.l ../util.l\
	   ../cmake.l lisztrc.l lisprc.l > vlp.out
@


1.13
log
@firsttime --> fromasm
@
text
@d1 1
a1 1
#$Header: Makefile 1.12 83/04/08 23:09:01 layer Exp $
d60 1
a60 1
AllSrc =  Makefile lisprc.l lisztrc.l liszt.c
@


1.12
log
@minor changes
@
text
@d1 1
a1 1
#$Header: /na/franz/liszt/68k/RCS/Makefile,v 1.11 83/04/08 21:10:40 layer Exp $
d19 1
a19 1
#   firsttime - used to build the compiler usually for the first
d87 1
a87 1
# 'firsttime' is for making the compiler from
d90 1
a90 1
firsttime:	assit load liszt
@


1.11
log
@xtra stuff added
@
text
@d1 1
a1 1
#$Header: /na/franz/liszt/68k/RCS/Makefile,v 1.10 83/04/08 17:39:35 layer Exp $
d166 2
a167 2
	igrind -lsh Makefile
	vgrind -lc -h "Liszt.c (for non-VMUNIX systems only)" liszt.c
@


1.10
log
@minor changes
@
text
@d1 1
a1 1
#$Header: /na/franz/liszt/68k/RCS/Makefile,v 1.9 83/04/06 16:48:36 layer Exp $
d3 1
a3 1
#				-[Fri Apr  8 17:32:19 1983 by layer]-
a178 5

scriptcatspecial68k:
	@@../../scriptcat . liszt/68k array.s cmacros.s\
		datab.s decl.s expr.s fixnum.s funa.s funb.s\
		func.s io.s lversion.s tlev.s util.s
@


1.9
log
@still merge and lispscriptdist problems
@
text
@d1 1
a1 1
#$Header: /na/franz/liszt/68k/RCS/Makefile,v 1.8 83/04/04 19:28:15 layer Exp $
d3 1
a3 1
#				-[Wed Apr  6 00:13:25 1983 by layer]-
a92 1
#	rm -f *.s
a101 1
	-mkdir ${ObjDir}
d104 1
a104 1
#	mv liszt ${Liszt}
d164 12
@


1.8
log
@autorun header now like vax (in io.l) instead of in ./autorun.dual
@
text
@d1 1
a1 1
#$Header: /na/franz/liszt/68k/RCS/Makefile,v 1.6 83/03/30 01:54:29 layer Exp $
d3 1
a3 1
#				-[Mon Apr  4 19:28:06 1983 by layer]-
d60 1
a60 1
AllSrc =  Makefile lisprc.l lisztrc.l ${SharedSrc}
d90 1
a90 1
firsttime:	assit load liszt install
d92 1
a92 1
	for i in *.s; do echo $i; as $i; done
d155 1
a155 1
	(cd ..; make tags)
d167 2
a168 3
# DistSrc is a temporary name.  Most of the distribution source is copied
# when the vax scriptcat is done.
DistSrc = Makefile Make.68k lisprc.l lisztrc.l liszt.c
d170 10
a179 2
scripcatall: ${DistSrc}
	@@../../scriptcat . liszt/68k ${DistSrc}
@


1.7
log
@random changes
@
text
@d3 1
a3 1
#				-[Mon Apr  4 19:13:54 1983 by layer]-
d160 1
a160 1
	@@pr TODO Makefile* ../cmake.l lisztrc.l lisprc.l autorun.dual
d162 4
a165 4
#	@@/usr/local/slp -l ../lversion.l ../chead.l ../cmacros.l\
#	   ../datab.l ../decl.l ../expr.l\
#	   ../funa.l ../funb.l ../func.l\
#	   ../fixnum.l ../array.l ../io.l ../tlev.l ../util.l
@


1.6
log
@minor change (typo)
@
text
@d1 4
a4 10
#ifndef cross
#.DEFAULT:firsttime
#firsttime:	assit load liszt install
#assit:
#	for i in *.s; do echo $i; as $i; done
#	cp Makefile Makefile.old
#	(echo "1,9d"; echo "wq") | ex - Makefile
#	rm -f *.s
#endif
# $Header: /na/franz/liszt/68k/RCS/Makefile,v 1.5 83/03/30 01:25:19 layer Exp $
d7 1
a7 1
# Copyright (c) 1980 ,  The Regents of the University of California.
d10 2
d14 4
a17 2
#   nliszt - the lisp compiler.  We call it nliszt so we can test it out
#	     without having to say ./liszt
d19 5
d34 8
a41 9
#ifdef cross
LibDir = /usr/lib/lisp
ObjDir = /usr/ucb
#else
#RootDir = ROOTDIR
#LibDir = ${RootDir}/lisplib
#ObjDir = ${RootDir}/bin
#endif
Flg =  -xqa
d43 1
a43 1

d48 2
a49 6
Lisp = ${ObjDir}/lisp
#ifdef unisoft
#CFLAGS = -Dunisoft # -O -Ddebug
#else
CFLAGS = # -O -Ddebug
#endif
a80 6
#--- load .o files into a lisp
#ifndef cross
#load:
#	rm -f nliszt
#	echo "(load '../cmake.l)(genl nliszt)" | ${Lisp} 
#endif
d87 15
a101 1
#install nliszt
d111 3
d162 4
a165 4
	@@/usr/local/slp -l ../lversion.l ../chead.l ../cmacros.l\
	   ../datab.l ../decl.l ../expr.l\
	   ../funa.l ../funb.l ../func.l\
	   ../fixnum.l ../array.l ../io.l ../tlev.l ../util.l
@


1.5
log
@*** empty log message ***
@
text
@d10 1
a10 1
# $Header: /na/franz/liszt/68k/RCS/Makefile,v 1.4 83/03/30 00:36:09 layer Exp $
d156 1
a156 1
	   ../fixnum.l ../array.l ../io.l ../tlev.l ../util.l\
@


1.4
log
@makefile now uses an awk script to make a configuration
for a specific type of 68k os.
the types ifdef'd in are:
unisoft
swapper (non virtual memory systems)
cross (to make the cross compiler makefile)
@
text
@d10 1
a10 1
# $Header: $
d60 1
a60 1
LxrefSrc = ../lxref.l
a61 4
LxrefObj = lxref

SharedSrc = ${CTESrc} ${Src} ${LxrefSrc} ../ChangeLog ../cmake.l

d67 1
a67 1
AllObj =  ${CTEObj} ${Obj} ${LxrefObj}
d145 2
a146 2
lxref: ../lxref.l
	${Liszt} -xrq ../lxref -o lxref
a147 3
tags:	../tags ${Src} ${CTESrc} ${LxrefSrc}
	awk -f ../ltags ${Src} ${CTESrc} ${LxrefSrc} | sort > ../tags

d151 7
a157 5
	@@pr TODO Makefile* *.m4 ../cmake.l lisztrc.l lisprc.l autorun.dual
	@@pr -h "Liszt.c (non VMUNIX systems only)" liszt.c
#	@@slp -l ../chead.l ../cmacros.l ../array.l ../datab.l\
#	../decl.l ../expr.l ../fixnum.l ../funa.l ../funb.l\
#	../func.l ../io.l ../lversion.l ../tlev.l ../util.l
@


1.3
log
@cross compiler determined from lisztrc.l
@
text
@d1 10
a10 2
# $Header: /na/franz/liszt/68k/RCS/Makefile,v 1.2 83/03/23 20:57:10 layer Exp $

d12 1
a12 1

d16 1
a16 1

d20 1
d28 2
d31 1
a32 2
CopyTo = /dev/null
CcodeDir = ../franz
d34 5
d40 6
a45 1
Liszt = liszt
d47 5
d57 1
a57 1
Src =  ../array.l ../datab.l ../decl.l 	../expr.l ../fixnum.l ../funa.l	 \
d73 12
a84 1
nliszt: ${CTEObj} ${Obj} ${Lisp}
d87 7
d96 1
d99 11
d155 8
d165 1
a165 1
DistSrc = Makefile lisprc.l lisztrc.l
@


1.2
log
@new dir structure
@
text
@d1 1
a1 1
# $Header: /na/franz/liszt/vax/RCS/Makefile,v 1.1 83/03/22 21:07:34 jkf Exp $
d24 1
a24 3
# 'Type' should be set to the type of cross compiler desired ('dual' or 'sun')
Type = sun
Flg =  -xqa -e '(sstatus feature portable)(sstatus feature ${Type})'
@


1.1
log
@Initial revision
@
text
@d1 2
a2 5
#$Header: /na/franz/68k/liszt/RCS/Makefile,v 1.5 83/02/27 02:50:02 layer Exp $
#
#				-[Mon Mar 21 00:15:45 1983 by layer]-
#				$Locker $
#
d4 2
a5 2
#
# Copyright (c) 1980, 1982,  The Regents of the University of California.
a7 1
# authors: j. foderaro (VAX version), k. layer (68000 version)
d10 3
a12 3
#   nliszt	- the lisp compiler (compiled version).
#   snliszt	- the lisp compiler (interpreted version).
#   tags	- a tags file for use by ex/vi
d20 7
d28 1
a28 2
Lisp = lisp
Type = sun
d30 1
a30 1
CTESrc = chead.l cmacros.l
d34 2
a35 2
Src =  array.l datab.l decl.l expr.l fixnum.l funa.l funb.l func.l io.l \
       tlev.l util.l lversion.l
d37 1
a37 1
LxrefSrc = lxref.l
d39 1
a39 1
LxrefObj = lxref.o
d41 1
a41 1
AllSrc =  Makefile ChangeLog scmake.l cmake.l ${CTESrc} ${Src} ${LxrefSrc}
d43 1
a43 2
Obj = array.o datab.o decl.o expr.o fixnum.o funa.o funb.o func.o io.o \
      tlev.o util.o lversion.o
d45 3
d50 2
a51 4
.SUFFIXES: .l
.l.o:
	@@echo $*.l;\
	${Liszt} -qa -e '(sstatus feature portable)(sstatus feature $Type)' $*
d53 3
a55 1
${Obj}: ${CTEObj}
d57 2
a58 2
${Src}:
	sccs get $@@
d60 2
a61 3
nliszt:	${Obj}
	rm -f nliszt
	echo "(load 'cmake.l)" | ${Lisp} 
d63 2
a64 4
#--- generate an interpreted version
snliszt: ${Src}
	rm -f snliszt
	echo "(load 'scmake.l)" | ${Lisp} 
d66 2
a67 2
lxref: lxref.o
	cp lxref.o lxref
d69 2
a70 2
lxref.o: lxref.l
	${Liszt} -xrq lxref
d72 2
a73 2
tags:	${CTESrc} ${Src}
	ctags ${CTESrc} ${Src}
d75 2
a76 2
clean:
	rm -f nliszt snliszt \#* *.o
d78 2
a79 8
#
#dual stuff
DotSFiles = array.s chead.s cmacros.s datab.s decl.s\
	    expr.s fixnum.s funa.s funb.s func.s io.s\
	    lversion.s tlev.s util.s
.l.s:
	@@xliszt -Sqa -e "(setq autorun-file '/na/franz/68k/liszt/autorun.s)" -o ../dist/liszt/$*.s $*
	@@echo xliszt -Sqa $*
d81 27
a107 1
comp:	${DotSFiles}
@
