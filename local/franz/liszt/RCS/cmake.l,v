head     1.7;
access   jkf layer sklower;
symbols  ;
locks    ; strict;
comment  @ * @;


1.7
date     87.12.15.16.57.01;  author sklower;  state Exp;
branches ;
next     1.6;

1.6
date     83.08.14.01.45.39;  author layer;  state Exp;
branches ;
next     1.5;

1.5
date     83.08.12.02.46.39;  author layer;  state Exp;
branches ;
next     1.4;

1.4
date     83.07.30.15.33.53;  author layer;  state Exp;
branches ;
next     1.3;

1.3
date     83.03.23.20.54.14;  author layer;  state Exp;
branches ;
next     1.2;

1.2
date     83.03.20.14.04.35;  author jkf;  state Exp;
branches ;
next     1.1;

1.1
date     83.01.26.12.13.03;  author jkf;  state Exp;
branches ;
next     ;


desc
@load in compiler files
@


1.7
log
@cci changes from purdue
@
text
@; file which loads in all the object files and dumps them

; $Header: /b/users/housel/lisp/liszt/RCS/cmake.l,v 1.2 86/10/20 09:48:14 housel Exp $

;				-[Sat Aug 13 18:03:38 1983 by layer]-

;--- genl :: generate liszt
; args are unevalated.  first arg is the name of the liszt to build
; other args [optional]:  slow		- build interpreted.
;
(defun genl fexpr (args)
   (let ((dumpname (car args))
	 (slowp (memq 'slow (cdr args))))
      (load 'fcninfo)	; in /usr/lib/lisp (not normally in lisp)
      (if slowp then (load '../cmacros.l))
      (mapc '(lambda (name)
		(if slowp
		   then ; lisp source is in ..
			(load (concat "../" name ".l"))
		   else ; objects are in .
			(load name)))
	    '(decl array vector datab expr io funa funb func tlev
		   instr fixnum util lversion))
      (allocate 'list 400)
      (allocate 'fixnum 10)
      (allocate 'symbol 50)
      (sstatus translink on)
      (if slowp then (setq displace-macros t))
      (sstatus nofeature for-vax) ; remove memory of what it was compiled for
      (sstatus nofeature for-tahoe)
      (sstatus nofeature for-68k)
      ;indicate type of compiler (np and lbot in global registers)
      (setq $global-reg$ (not (status feature no-global-reg)))
      (putprop 'chead nil 'version)  ; so the compiler can compile itself
      (setq ER%tpl 'break-err-handler) ; in case we are using another tpl
      ; this is a temporary measure
      (apply 'dumplisp (list dumpname))))
@


1.6
log
@added file const.l
@
text
@d3 1
a3 1
; $Header: /na/franz/liszt/RCS/cmake.l,v 1.5 83/08/12 02:46:39 layer Exp $
d30 1
@


1.5
log
@New lexpr stuff for both/reg for 68k
@
text
@d3 1
a3 1
; $Header: /na/franz/liszt/RCS/cmake.l,v 1.4 83/07/30 15:33:53 layer Exp $
d5 1
a5 1
;				-[Thu Aug 11 22:23:56 1983 by layer]-
@


1.4
log
@open code vset, and move things around
@
text
@a1 2
; $Header: cmake.l 1.3 83/03/23 20:54:14 layer Exp $
;				-[Wed Mar 23 12:07:17 1983 by jkf]-
d3 4
d23 1
a23 1
		   fixnum util lversion))
d31 2
@


1.3
log
@merged cmake.l and scmake.l
@
text
@d2 1
a2 1
; $Header: /na/franz/liszt/RCS/cmake.l,v 1.2 83/03/20 14:04:35 jkf Exp $
d20 1
a20 1
	    '(decl array datab expr io funa funb func tlev
@


1.2
log
@merge in 68k version
@
text
@d2 31
a32 26
; $Header: /na/franz/liszt/RCS/cmake.l,v 1.1 83/01/26 12:13:03 jkf Exp $
;				-[Sat Mar 19 17:31:17 1983 by jkf]-
(progn
   (load 'fcninfo)	; in /usr/lib/lisp (not normally in lisp)
   (load 'decl)
   (load 'array)
   (load 'datab)
   (load 'expr)
   (load 'io)
   (load 'funa)
   (load 'funb)
   (load 'func)
   (load 'tlev)
   (load 'fixnum)
   (load 'util)
   (load 'lversion)
   (allocate 'list 400)
   (allocate 'fixnum 10)
   (allocate 'symbol 50)
   (sstatus translink on)
   (sstatus nofeature for-vax)	; remove memory of what it was compiled for
   (sstatus nofeature for-68k)
   (putprop 'chead nil 'version)  ; so the compiler can compile itself
   (setq ER%tpl 'break-err-handler) ; in case we are using another tpl
   				; this is a temporary measure
   (dumplisp nliszt))
@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
; $Header$
;				-[Wed Jan 26 12:06:19 1983 by jkf]-
d22 2
@
