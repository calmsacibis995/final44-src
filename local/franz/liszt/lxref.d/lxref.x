(File |lxref.l|)
(typeit lambda car dtpr getdisc bcdp cond)
(terprchk lambda patom terpr + setq cdr > cond)
(process-Doc lambda cadr cons Push putprop get not cond If car setq close null read do)
(process-Chome lambda cdr cons Push putprop get not cond If car setq close null read do)
(process-File lambda cdr cddr cadr cons Push putprop get not cond If car setq close null read do)
(illegal-file lambda tyo princ progn msg)
(lxref nlambda return cdar flatc + terprchk memq print princ progn msg or liszt-internal-do mapcar typeit ncons cxr getd cadar caar sortcar length lessp get sort close illegal-file process-Doc process-Chome process-File dtpr read terpr concat infile errset portp cddr cons implode cadr explodec nreverse null do exit patom cdr readlist fixp not explode car quote eq and cond If gensym setq prog)
(xrefinit lambda terpr patom cons apply exit quote signal < |1-| do makereadtable setq eq argv cdr > and cond let)
