(File ../util.l)
(e-setup-np-lbot lambda quote e-move)
(d-inreg lambda cdr rplacd cond if assoc let)
(d-clearuse lambda cdr rplacd caddr eq cond if car null setq liszt-internal-do mapc)
(d-clearreg lexpr if arg assoc let rplacd rplaca car setq liszt-internal-do mapc bigp not cdr null and zerop cond)
(d-matchcnt lambda cdr |1+| setq incr return car eq not or null do cond if let)
(d-bestreg lambda d-matchcnt greaterp eq cddar and copy setq |1-| nthcdr rplacd >& > car list cadr |1+| cdr rplaca cond if null do)
(d-allocreg lambda setq lessp < null cadar car do cadr |1+| cdr rplaca assoc let cond if)
(d-typecmplx lambda d-noninvert concat e-write3 e-cvt e-write4 setq d-exp quote null cond if d-simple let)
(d-typesimp lambda d-invert e-write3 e-cvt e-write4 setq d-exp quote null cond if d-simple let)
(d-setqexpand lambda cddr append car d-fullmacroexpand cadr quote cons null reverse do *throw throw |1+| setq terpri niceprint patom comp-msg progn comp-err cdr length oddp cond if)
(d-fullmacroexpand lambda d-setqexpand nreverse d-fullmacroexpand null cdr liszt-internal-do mapcar append cons memq getdisc quote eq bcdp or cxr getd let car symbolp and d-macroexpand setq dtpr not cond if)
(d-macroexpand lambda return get go apply d-functyp quote eq car setq symbolp dtpr and cond if prog)
(d-noninvert lambda e-label e-goto quote d-move d-genlab let e-gotonil cdr e-gotot car null cond if)
(d-invert lambda e-label e-goto quote d-move d-genlab let e-gotot cdr e-gotonil car null cond if)
(d-handlecc lambda e-gotonil cdr e-gotot car cond if)
