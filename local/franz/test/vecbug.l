(def copy
   (lambda (l)
      (cond ((dtpr l) (cons (copy (car l)) (copy (cdr l))))
	    ((vectorp l)
	     (let ((size (vsize l)))
		(do ((newv (new-vector size))
		     (i 0 (1+ i)))
		    ((not (<& i size))
		     (vsetprop newv (copy (vprop l)))
		     newv)
		    (vset newv i (copy (vref l i))))))
	    ((vectorip l)
	     (let ((size (vsize-byte l)))
		(do ((newv (new-vectori-byte size))
		     (i 0 (1+ i)))
		    ((not (<& i size))
		     (vsetprop newv (copy (vprop l)))
		     newv)
		    (vseti-byte newv i (vrefi-byte l i)))))
	    (t l))))
