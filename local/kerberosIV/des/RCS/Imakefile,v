head     4.1;
branch   ;
access   ;
symbols  PATCH8:4.1 PATCH7:4.1 KPATCH6:4.1 ASRSNAP1001:4.1 PATCH5:4.1 ADAMS_NSA:4.1 KPATCH4:4.1 KPATCH3:4.1 KPATCH2:4.1 KREL1:4.1 BETA5/24/88:1.1;
locks    ; strict;
comment  @# @;


4.1
date     89.01.22.13.05.52;  author jtkohl;  state Exp;
branches ;
next     4.0;

4.0
date     88.12.01.10.53.51;  author jtkohl;  state Exp;
branches ;
next     1.2;

1.2
date     88.09.29.18.23.46;  author shanzer;  state Exp;
branches ;
next     1.1;

1.1
date     88.03.31.17.42.49;  author steiner;  state Exp;
branches ;
next     ;


desc
@Makefile generator for DES library.
Programmer: wesommer.
Auditor: raeburn.
@


4.1
log
@clean up #ifdef stuff, add in new modules
Programmer/Auditor: John Kohl
@
text
@# $Source: /mit/kerberos/src/lib/des/RCS/Imakefile,v $
# $Author: jtkohl $
# $Header: Imakefile,v 4.0 88/12/01 10:53:51 jtkohl Locked $
#
# Copyright 1987 by the Massachusetts Institute of Technology.
#
# For copying and distribution information,
# please see the file <mit-copyright.h>.
#
# Imakefile for DES library
#


#ifdef OLD_COMPAT
OLDSRCS= desglue.c
OLDOBJS= desglue.o
#else
OLDSRCS=
OLDOBJS=
#endif
DESSRCS= key_sched.c des.c cbc_encrypt.c pcbc_encrypt.c debug_decl.c \
	cksum.c quad_cksum.c random_key.c read_password.c \
	string_to_key.c weak_key.c key_parity.c new_rnd_key.c util.c $(OLDSRCS)

SRCS=   des_internal.h make_key_perm.c make_ip.c make_fp.c make_e.c make_p.c make_s.c \
	make_s_table.c make_p_table.c make_odd.c misc.c \
	key_test.c testit.c verify.c epc_encrypt.c \
	cbc_noop.c enc.c ${DESSRCS}

DESOBJS= key_sched.o des.o cbc_encrypt.o pcbc_encrypt.o debug_decl.o \
	cksum.o quad_cksum.o random_key.o read_password.o \
	string_to_key.o weak_key.o key_parity.o new_rnd_key.o util.o $(OLDOBJS)

SRCDIR=$(SRCTOP)/lib/des
CODE=$(SRCS) Imakefile tables.h des.vaxasm

library_obj_rule()

install_library_target(des,$(DESOBJS),$(DESSRCS),)

library_ro_object(dbg_prt)

/* add other assembler versions here, if you come up with them. */
#ifdef VAXASM
library_asm_object(des.o,des.vaxasm)
#else
library_ro_object(des)
library_ro_object(key_sched)
#endif
/*
 * misc.o is used by all of the header generators.
 */

host_simple_object(misc.o,misc.c)
/*
 * Generate include files for use by key_sched & friends.
 */

generate_depend(key_perm.h,make_key_perm,misc.o)
generate_depend(odd.h,make_odd,misc.o)
generate_depend(p_table.h,make_p_table,misc.o)
generate_depend(s_table.h,make_s_table,misc.o)
generate_depend(p.c,make_p,misc.o)
generate_depend(fp.c,make_fp,misc.o)
generate_depend(ip.c,make_ip,misc.o)

misc.o: des_internal.h
make_s_table: tables.h des_internal.h
make_p_table: tables.h des_internal.h
make_key_perm: des_internal.h
make_s: s_table.h des_internal.h


/*
 * verify that the library correctly implements the DES standard.  
 * Run this after any change to the source.
 */

test(verify,libdes.a,)
test(key_test,libdes.a,)
test(testit,libdes.a,)
@


4.0
log
@Programmer: Mike Shanzer
Auditor: John Kohl
changes:
add dependencies on des_internal.h
add conditionals so that OLD_COMPAT can be set to include desglue.c
@
text
@d2 2
a3 2
# $Author: shanzer $
# $Header: Imakefile,v 1.2 88/09/29 18:23:46 shanzer Exp $
d15 2
a16 3
DESSRCS= key_sched.c des.c cbc_encrypt.c pcbc_encrypt.c debug_decl.c \
	cksum.c quad_cksum.c random_key.c read_password.c \
	string_to_key.c desglue.c util.c 
d18 3
d23 1
a23 2
	string_to_key.c util.c 
#endif
a29 1
#ifdef OLD_COMPAT
d32 1
a32 6
	string_to_key.o desglue.o util.o 
#else
DESOBJS= key_sched.o des.o cbc_encrypt.o pcbc_encrypt.o debug_decl.o \
	cksum.o quad_cksum.o random_key.o read_password.o \
	string_to_key.o util.o 
#endif 
@


1.2
log
@Ne and improved Imakefiles
@
text
@d2 2
a3 2
# $Author: steiner $
# $Header: Imakefile,v 1.1 88/03/31 17:42:49 steiner Exp $
d14 1
d17 6
a22 1
	string_to_key.c util.c
d24 1
a24 1
SRCS= make_key_perm.c make_ip.c make_fp.c make_e.c make_p.c make_s.c \
d29 1
d32 6
a37 1
	string_to_key.o util.o
d72 5
a76 3
make_s_table: tables.h
make_p_table: tables.h
make_s: s_table.h
@


1.1
log
@Initial revision
@
text
@d1 3
a3 3
# $Source$
# $Author$
# $Header$
a53 2

#ifdef BIG
a54 1
#endif
@
