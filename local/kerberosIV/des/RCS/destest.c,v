head     4.0;
branch   ;
access   ;
symbols  PATCH8:4.0 PATCH7:4.0 KPATCH6:4.0 ASRSNAP1001:4.0 PATCH5:4.0 ADAMS_NSA:4.0 KPATCH4:4.0 KPATCH3:4.0 KPATCH2:4.0 KREL1:4.0 BETA5/24/88:1.2;
locks    ; strict;
comment  @ * @;


4.0
date     89.01.23.10.03.38;  author jtkohl;  state Exp;
branches ;
next     1.2;

1.2
date     88.02.24.14.20.56;  author steiner;  state Exp;
branches ;
next     1.1;

1.1
date     88.02.24.12.05.28;  author steiner;  state Exp;
branches ;
next     ;


desc
@This routine appears to test string_to_key, key_sched,
ecb_encrypt.
@


4.0
log
@No change, incrementing vno to 4.x
@
text
@/*
 * $Source: /mit/kerberos/src/lib/des/RCS/destest.c,v $
 * $Author: steiner $
 *
 * Copyright 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef	lint
static char rcsid_destest_c[] =
"$Header: destest.c,v 1.2 88/02/24 14:20:56 jtkohl Locked $";
#endif	lint

#include <mit-copyright.h>
#include <stdio.h>
#include <des.h>

char clear[] = "eight bytes";
char cipher[8];
char key[8];
Key_schedule schedule;

main()
{
    int i;
    string_to_key("good morning!", key);
    i = key_sched(key, schedule);
    if (i) {
	printf("bad schedule (%d)\n", i);
	exit(1);
    }
    for (i = 0; i < 10000; i++)
	ecb_encrypt(clear, cipher, i&1, schedule);
}

/*
 * gcc optimized, old e: 34.6
 * gcc optimized, new e: 23.9
 *
 * gcc unopt,     old e: 73.9
 * gcc unopt,     new e: 46.6
 *
 * pcc optimized, old e: 40.8
 * pcc optimized, asm e: 26.5
 * pcc optimized, new e: 31.1
 *
 * pcc unopt,     old e: 34.1
 * pcc unopt,     asm e: 21.3
 * pcc unopt,     new e: 25.8
 */
@


1.2
log
@Copyright notice, etc.
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/tools/RCS/prototype.c,v $
d13 1
a13 1
"$Header: prototype.c,v 1.2 88/02/22 18:54:06 steiner Locked $";
@


1.1
log
@Initial revision
@
text
@d1 16
@
