head     4.7;
branch   ;
access   ;
symbols  PATCH8:4.7 PATCH7:4.7 KPATCH6:4.7 ASRSNAP1001:4.7 PATCH5:4.7 ADAMS_NSA:4.7 KPATCH4:4.7 KPATCH3:4.7 KPATCH2:4.7 KREL1:4.7 BETA5/24/88:4.5 v1:1.2;
locks    ; strict;
comment  @ * @;


4.7
date     88.11.15.11.29.18;  author jtkohl;  state Exp;
branches ;
next     4.6;

4.6
date     88.06.09.16.41.53;  author steiner;  state Exp;
branches ;
next     4.5;

4.5
date     88.02.24.14.21.32;  author steiner;  state Exp;
branches ;
next     4.4;

4.4
date     88.01.14.18.44.38;  author steiner;  state Exp;
branches ;
next     4.3;

4.3
date     88.01.14.17.24.17;  author raeburn;  state Exp;
branches ;
next     4.2;

4.2
date     87.09.10.16.15.58;  author steiner;  state Exp;
branches ;
next     4.1;

4.1
date     87.09.01.15.41.09;  author steiner;  state Exp;
branches ;
next     1.4;

1.4
date     87.01.13.16.48.16;  author wesommer;  state Exp;
branches ;
next     1.3;

1.3
date     85.12.16.13.46.10;  author spm;  state Exp;
branches ;
next     1.2;

1.2
date     85.08.16.12.51.32;  author spm;  state Exp;
branches ;
next     1.1;

1.1
date     85.08.12.13.37.42;  author spm;  state Exp;
branches ;
next     ;


desc
@works
@


4.7
log
@Programmer: Bill Sommerfeld
Auditor: John Kohl
changes:
rename routines to des_xxx     
rename structures likewise
use local variables and static routines where appropriate
convert to des_internal.h       
make debug routines consistent
@
text
@/*
 * $Source: //ra/mit/wesommer/des/RCS/make_e.c,v $
 * $Author: steiner $
 *
 * Copyright 1987, 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information,
 * please see the file <mit-copyright.h>.
 *
 * This routine generates source code that implements the "E"
 * operations of the DES.
 */

#include <stdio.h>
#include "des_internal.h"
#include "tables.h"

void gen(stream)
    FILE *stream;
{
    register i;

    /* clear the output */
    fprintf(stream, "    L2 = 0; R2 = 0;\n");

    /* only take bits from R1, put into either L2 or R2 */
    /* first setup E */
    fprintf(stream, "/* E operations */\n/* right to left */\n");
    /* first list mapping from left to left */

    for (i = 0; i <= 31; i++)
	if (E[i] < 32)
	    fprintf(stream,
		    "    if (R1 & (1<<%2d)) L2 |= 1<<%2d;\n", E[i], i);

    fprintf(stream, "\n/* now from right to right */\n");
    /*  list mapping from left to right */
    for (i = 32; i <= 47; i++)
	if (E[i] <32)
	    fprintf(stream, "    if (R1 & (1<<%2d)) R2 |= 1<<%2d;\n",
		    E[i], i-32);
}
@


4.6
log
@Optimizations for vax, change in generating files.
Programmer: raeburn.
Auditor: jtkohl.
@
text
@d2 2
a3 2
 * $Source$
 * $Author$
d15 1
a15 1
#include "conf.h"
@


4.5
log
@Copyright notice, etc.
@
text
@d2 2
a3 2
 * $Source: /mit/kerberos/tools/RCS/prototype.c,v $
 * $Author: steiner $
d7 2
a8 2
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
d10 2
a11 2
 * Part of the MIT Project Athena Kerberos encryption system,
 * originally written 8/85 by Steve Miller.
a13 6
#ifndef	lint
static char rcsid_make_e_c[] =
"$Header: prototype.c,v 1.2 88/02/22 18:54:06 steiner Locked $";
#endif	lint

#include <mit-copyright.h>
d15 1
d18 2
a19 1
main()
d24 1
a24 1
    fprintf(stdout,"\n\tL2 = 0; R2 = 0;");
d28 1
a28 1
    fprintf(stdout,"\n/* E operations */\n/* right to left */\n");
d33 2
a34 2
	    fprintf(stdout,
		    "\n\tif (R1 & (1<<%d)) L2 |= 1<<%d;",E[i],i);
d36 1
a36 1
    fprintf(stdout,"\n\n/* now from right to right */\n");
d40 2
a41 4
	    fprintf(stdout,
		    "\n\tif (R1 & (1<<%d)) R2 |= 1<<%d;",E[i],i-32);

    fprintf(stdout,"\n");
@


4.4
log
@Formatted.
Programmer: raeburn.
@
text
@d2 2
a3 1
 * make_e.c
d5 5
a11 2
 *
 * Copyright 1987, Massachusetts Institute of Technology
d14 6
@


4.3
log
@Changed name of include file des_tables.h to tables.h.
@
text
@d1 2
a2 1
/* des_make_e.c
d4 2
a5 1
 * part of the Athena Kerberos encryption system
d7 1
a7 1
 *	spm	8/85
d10 2
a11 1
#include	<stdio.h>
a12 3
#include	"tables.h"


d15 1
a15 5
	register	i;
	
/* this generates much faster code than bit fields, which cause
 * insv and extv instructions on the vax.
 */
d17 2
a18 2
	/* clear the output													   */
	fprintf(stdout,"\n\tL2 = 0; R2 = 0;");
d20 4
a23 4
	/* only take bits from R1, put into either L2 or R2					   */
	/* first setup E													   */
	fprintf(stdout,"\n/* E operations */\n/* right to left */\n");
	/* first list mapping from left to left								   */
d25 4
a28 12
	for (i = 0; i <=31; i++)
		{
		if (E[i] < 32)	fprintf(stdout,
		"\n\tif (R1 & (1<<%d)) L2 |= 1<<%d;",E[i],i);
		}
	fprintf(stdout,"\n\n/* now from right to right */\n");
	/*  list mapping from left to right								   */
	for (i = 32; i <=47; i++)
		{
		if (E[i] <32)	fprintf(stdout,
		"\n\tif (R1 & (1<<%d)) R2 |= 1<<%d;",E[i],i-32);
		}
d30 9
a38 2
	fprintf(stdout,"\n");
}			
@


4.2
log
@Changed include files configuration and referencing.
@
text
@d10 1
a10 1
#include	"des_tables.h"
@


4.1
log
@No change; starting version 4.
@
text
@d10 1
a10 1
#include	"./des_tables.h"
@


1.4
log
@Added un-checked in changes; declaration fix for High C on the RT.
@
text
@@


1.3
log
@fix include
@
text
@a11 1
extern	char	E[];
d28 1
a28 1
#ifndef	VAX
a40 16

#else
	fprintf(stdout,"\n\t asm(\"rotl	$1,r10,r7\");"); /* first 6 bits	   */
	fprintf(stdout,"\n\t L2 &= 077;");
	fprintf(stdout,"\n\t L2 |= (R1 <<3) & 07700;");	/* get next six*/
	fprintf(stdout,"\n\t L2 |= (R1 <<5) & 0770000;"); /* get next six*/
	fprintf(stdout,"\n\t L2 |= (R1 <<7) & 077000000;");	/* get next six*/
	fprintf(stdout,"\n\t L2 |= (R1 <<9) & 07700000000;");	/* get next six*/
	fprintf(stdout,"\n\t L2 |= (R1 <<11) & 030000000000;");	/* get next six*/
	
	fprintf(stdout,"\n\t asm(\"rotl	$-1,r10,r8\");");	/* last 6 bits	   */
	fprintf(stdout,"\n\t R2 &= 0176000;");
	fprintf(stdout,"\n\t R2 |= (R1 >>21) & 017;");		/* get next four*/
	fprintf(stdout,"\n\t R2 |= (R1 >>19) & 01760;");	/* get next six*/

#endif
@


1.2
log
@ok v1
@
text
@d10 1
a10 1
#include	"des_tables.h"
@


1.1
log
@Initial revision
@
text
@@
