head     4.6;
branch   ;
access   ;
symbols  PATCH8:4.6 PATCH7:4.6 KPATCH6:4.6 ASRSNAP1001:4.6 PATCH5:4.6 ADAMS_NSA:4.6 KPATCH4:4.6 KPATCH3:4.6 KPATCH2:4.6 KREL1:4.6 BETA5/24/88:4.4 v1:1.2;
locks    ; strict;
comment  @ * @;


4.6
date     88.11.15.11.30.09;  author jtkohl;  state Exp;
branches ;
next     4.5;

4.5
date     88.06.09.16.43.44;  author steiner;  state Exp;
branches ;
next     4.4;

4.4
date     88.02.24.14.22.21;  author steiner;  state Exp;
branches ;
next     4.3;

4.3
date     88.01.14.18.45.45;  author steiner;  state Exp;
branches ;
next     4.2;

4.2
date     88.01.14.17.42.16;  author raeburn;  state Exp;
branches ;
next     4.1;

4.1
date     87.09.01.15.41.32;  author steiner;  state Exp;
branches ;
next     1.3;

1.3
date     85.12.16.13.47.58;  author spm;  state Exp;
branches ;
next     1.2;

1.2
date     85.08.16.12.52.20;  author spm;  state Exp;
branches ;
next     1.1;

1.1
date     85.08.11.14.15.55;  author spm;  state Exp;
branches ;
next     ;


desc
@works
@


4.6
log
@Programmer: Bill Sommerfeld
Auditor: John Kohl
changes:
rename routines to des_xxx     
rename structures likewise
use local variables and static routines where appropriate
convert to des_internal.h       
make debug routines consistent
@
text
@/*
 * $Source: //ra/mit/wesommer/des/RCS/make_s.c,v $
 * $Author: steiner $
 *
 * Copyright 1985, 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please
 * see the file <mit-copyright.h>.
 */

#include <mit-copyright.h>
#include <stdio.h>
#include "des_internal.h"
#include "s_table.h"

void gen(stream)
    FILE *stream;
{
    /* clear the output */
    fprintf(stream,"\n\tL2 = 0; R2 = 0;");

#ifdef notdef
    /* P permutes 32 bit input R1 into 32 bit output R2 */

    fprintf(stream,"\n/* P operations */\n/* first left to left */\n");
    /* first list mapping from left to left */
    for (i = 0; i <=31; i++)
	if (S[i] < 32)
	    fprintf(stream,
		    "\n\tif (R1 & (1<<%d)) R2 |= 1<<%d;",S[i],i);
#endif
    fprintf(stream,"\n");
}
@


4.5
log
@Optimizations for vax, change in generating files.
Programmer: raeburn.
Auditor: jtkohl.
@
text
@d2 2
a3 2
 * $Source$
 * $Author$
d13 1
a13 1
#include "conf.h"
@


4.4
log
@Copyright notice, etc.
@
text
@d2 2
a3 2
 * $Source: /mit/kerberos/tools/RCS/prototype.c,v $
 * $Author: steiner $
d5 1
a5 1
 * Copyright 1988 by the Massachusetts Institute of Technology.
d7 2
a8 6
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 *
 * part of the Athena Kerberos encryption system
 *
 * spm	8/85
a10 5
#ifndef	lint
static char rcsid_make_s_c[] =
"$Header: prototype.c,v 1.2 88/02/22 18:54:06 steiner Locked $";
#endif	lint

d13 1
a13 1

d16 2
a17 1
main()
a18 2
    register i;
	
d20 1
a20 1
    fprintf(stdout,"\n\tL2 = 0; R2 = 0;");
d25 1
a25 1
    fprintf(stdout,"\n/* P operations */\n/* first left to left */\n");
d29 1
a29 1
	    fprintf(stdout,
d32 1
a32 1
    fprintf(stdout,"\n");
@


4.3
log
@Formatted.
Programmer: raeburn.
@
text
@d2 2
a3 1
 * des_make_s.c
d5 5
d12 1
a12 1
 *	spm	8/85
d15 6
@


4.2
log
@Changed name des_s_table.h to s_table.h.
@
text
@d1 2
a2 1
/* des_make_s.c
d9 1
a9 1
#include	<stdio.h>
d11 1
a11 1
#include	"s_table.h"
d15 1
a15 1
	register	i;
d17 2
a18 3
/* this generates much faster code than bit fields, which cause
 * insv and extv instructions on the vax.
 */
a19 4
	
	/* clear the output													   */
	fprintf(stdout,"\n\tL2 = 0; R2 = 0;");

d21 1
a21 1
/* P permutes 32 bit input R1 into 32 bit output R2						   */
d23 6
a28 7
	fprintf(stdout,"\n/* P operations */\n/* first left to left */\n");
	/* first list mapping from left to left								   */
	for (i = 0; i <=31; i++)
		{
		if (S[i] < 32)	fprintf(stdout,
		"\n\tif (R1 & (1<<%d)) R2 |= 1<<%d;",S[i],i);
		}
d30 2
a31 2
	fprintf(stdout,"\n");
}			
@


4.1
log
@No change; starting version 4.
@
text
@d10 1
a10 1
#include	"./des_s_table.h"
@


1.3
log
@fix include
@
text
@@


1.2
log
@ok v1
@
text
@d10 1
a10 1
#include	"des_s_table.h"
@


1.1
log
@Initial revision
@
text
@@
