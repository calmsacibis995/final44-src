head     4.1;
branch   ;
access   ;
symbols  PATCH8:4.1 PATCH7:4.1 KPATCH6:4.1 ASRSNAP1001:4.1 PATCH5:4.1 ADAMS_NSA:4.1 KPATCH4:4.1 KPATCH3:4.1 KPATCH2:4.1 KREL1:4.1 BETA5/24/88:4.1;
locks    ; strict;
comment  @ * @;


4.1
date     87.09.01.15.42.35;  author steiner;  state Exp;
branches ;
next     1.1;

1.1
date     85.12.16.13.56.31;  author spm;  state Exp;
branches ;
next     ;


desc
@@


4.1
log
@No change; starting version 4.
@
text
@#include	<stdio.h>
test()
{
	register x,	/* r11 */
			 y, /* r10 */
			 i, /* r9  */
			 j;	/* r8													   */
	
/* this generates good code												   */
	for (i =0; i<10000; i++)
		y = x;

	for (i =0; i<=10000; i++)
		y = x;
		
/* bad code																   */
	i = 0;
	do 
		{
		y = x;
		}
	while (i++ <10000);


	i = 0;
	do 
		{
		y = x;
		}
	while (++i <=10000);

	i = 0;
	do 
		{
		y = x;
		}
	while (i++ <=10000);

	i = 0;

/* bad code*/
	while (i++ < 10000) 
		{
		y = x;
		}
	
	
/* good code															   */
	for (i =0; i<10000; ++i)
		y = x;
		
	i = 0;

/*good code*/
	do 
		{
		y = x;
		}
	while (++i <10000);


	i = 0;

/* good code															   */
	while (++i < 10000) 
		{
		y = x;
		}
	
	
/* bad code																   */
	i = 10000;
	do
		{
		y = x;
		}
	while (--i);

/* good code*/	
	i = 10000;
	do
		{
		y = x;
		}
	while (--i > 0);

	j = 10000;
	do
		{
		y = x;
		}
	while (--j > 0);

	y = 10000;
	do
		{
		i = j;
		}
	while (--y > 0);

	x = 10000;
	do
		{
		i = j;
		fprintf(stdout,"fubar lives %d",x);
		}
	while (--x > 0);

}
@


1.1
log
@Initial revision
@
text
@@
