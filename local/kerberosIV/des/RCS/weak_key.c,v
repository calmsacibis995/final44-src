head     4.3;
branch   ;
access   ;
symbols  PATCH8:4.3 PATCH7:4.3 KPATCH6:4.3 ASRSNAP1001:4.3 PATCH5:4.3 ADAMS_NSA:4.3 KPATCH4:4.3 KPATCH3:4.3 KPATCH2:4.3 KREL1:4.3;
locks    ; strict;
comment  @ * @;


4.3
date     89.01.22.12.16.41;  author jtkohl;  state Exp;
branches ;
next     4.2;

4.2
date     89.01.22.11.13.07;  author jtkohl;  state Exp;
branches ;
next     4.1;

4.1
date     89.01.21.21.39.53;  author jtkohl;  state Exp;
branches ;
next     4.0;

4.0
date     89.01.21.21.25.46;  author jtkohl;  state Exp;
branches ;
next     ;


desc
@Weak key checking routine
@


4.3
log
@fix name of RCS string
@
text
@/*
 * $Source: /mit/kerberos/src/lib/des/RCS/weak_key.c,v $
 * $Author: jtkohl $
 *
 * Copyright 1989 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 *
 * Under U.S. law, this software may not be exported outside the US
 * without license from the U.S. Commerce department.
 *
 * These routines form the library interface to the DES facilities.
 *
 * Originally written 8/85 by Steve Miller, MIT Project Athena.
 */

#ifndef	lint
static char rcsid_weak_key_c[] =
"$Header: weak_key.c,v 4.2 89/01/22 11:13:07 jtkohl Locked $";
#endif	lint

#include <des.h>
#include "des_internal.h"

/*
 * The following are the weak DES keys:
 */
static des_cblock weak[16] = {
    /* weak keys */
    {0x01,0x01,0x01,0x01,0x01,0x01,0x01,0x01},
    {0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe,0xfe},
    {0x1f,0x1f,0x1f,0x1f,0x0e,0x0e,0x0e,0x0e},
    {0xe0,0xe0,0xe0,0xe0,0xf1,0xf1,0xf1,0xf1},

    /* semi-weak */
    {0x01,0xfe,0x01,0xfe,0x01,0xfe,0x01,0xfe},
    {0xfe,0x01,0xfe,0x01,0xfe,0x01,0xfe,0x01},

    {0x1f,0xe0,0x1f,0xe0,0x0e,0xf1,0x0e,0xf1},
    {0xe0,0x1f,0xe0,0x1f,0xf1,0x0e,0xf1,0x0e},

    {0x01,0xe0,0x01,0xe0,0x01,0xf1,0x01,0xf1},
    {0xe0,0x01,0xe0,0x01,0xf1,0x01,0xf1,0x01},

    {0x1f,0xfe,0x1f,0xfe,0x0e,0xfe,0x0e,0xfe},
    {0xfe,0x1f,0xfe,0x1f,0xfe,0x0e,0xfe,0x0e},

    {0x01,0x1f,0x01,0x1f,0x01,0x0e,0x01,0x0e},
    {0x1f,0x01,0x1f,0x01,0x0e,0x01,0x0e,0x01},

    {0xe0,0xfe,0xe0,0xfe,0xf1,0xfe,0xf1,0xfe},
    {0xfe,0xe0,0xfe,0xe0,0xfe,0xf1,0xfe,0xf1}
};

/*
 * des_is_weak_key: returns true iff key is a [semi-]weak des key.
 *
 * Requires: key has correct odd parity.
 */
int
des_is_weak_key(key)
     des_cblock key;
{
    int i;
    des_cblock *weak_p = weak;

    for (i = 0; i < (sizeof(weak)/sizeof(des_cblock)); i++) {
	if (!bcmp((char *)weak_p++,(char *)key,sizeof(des_cblock)))
	    return 1;
    }

    return 0;
}
@


4.2
log
@add rcsid
@
text
@d19 2
a20 2
static char rcsid_string_to_key_c[] =
"$Header: string_to_key.c,v 4.8 89/01/21 16:50:53 jtkohl Locked $";
@


4.1
log
@add rcsid
really want to pass a des_cblock, not des_cblock *
@
text
@d18 5
@


4.0
log
@first revision
Programmer: Mark Lillibridge
Auditor: John Kohl
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/src/lib/des/RCS/cbc_encrypt.c,v $
d58 1
a58 1
     des_cblock *key;
@
