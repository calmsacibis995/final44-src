head     4.0;
branch   ;
access   ;
symbols  PATCH8:4.0 PATCH7:4.0 KPATCH6:4.0 ASRSNAP1001:4.0 PATCH5:4.0 ADAMS_NSA:4.0 KPATCH4:4.0 KPATCH3:4.0 KPATCH2:4.0 KREL1:4.0 BETA5/24/88:1.3;
locks    ; strict;
comment  @ * @;


4.0
date     89.01.23.09.59.15;  author jtkohl;  state Exp;
branches ;
next     1.3;

1.3
date     88.02.25.14.44.34;  author steiner;  state Exp;
branches ;
next     1.2;

1.2
date     88.02.23.18.25.40;  author steiner;  state Exp;
branches ;
next     1.1;

1.1
date     88.02.23.17.58.50;  author steiner;  state Exp;
branches ;
next     ;


desc
@Initial version.
@


4.0
log
@No change, incrementing vno to 4.x
@
text
@/*
 * $Source: /mit/kerberos/src/include/RCS/highc.h,v $
 * $Author: steiner $
 * $Header: highc.h,v 1.3 88/02/25 14:44:34 steiner Exp $
 *
 * Copyright 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 *
 * Known breakage in the version of Metaware's High C compiler that
 * we've got available....
 */

#include <mit-copyright.h>

#define const
/*#define volatile*/

/*
 * Some builtin functions we can take advantage of for inlining....
 */

#define abs			_abs
/* the _max and _min builtins accept any number of arguments */
#undef MAX
#define MAX(x,y)		_max(x,y)
#undef MIN
#define MIN(x,y)		_min(x,y)
/*
 * I'm not sure if 65535 is a limit for this builtin, but it's
 * reasonable for a string length.  Or is it?
 */
/*#define strlen(s)		_find_char(s,65535,0)*/
#define bzero(ptr,len)		_fill_char(ptr,len,'\0')
#define bcmp(b1,b2,len)		_compare(b1,b2,len)
@


1.3
log
@Added #include of <mit-copyright.h>.
@
text
@d4 1
a4 1
 * $Header: highc.h,v 1.2 88/02/23 18:25:40 steiner Locked $
@


1.2
log
@Copyright notice, etc.
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/tools/RCS/prototype.h,v $
d4 1
a4 1
 * $Header: prototype.h,v 1.2 88/02/22 18:54:23 steiner Locked $
d14 2
@


1.1
log
@Initial revision
@
text
@d2 9
@
