head	1.9;
access;
symbols;
locks
	dglo:1.9; strict;
comment	@ * @;


1.9
date	94.02.24.23.46.16;	author dglo;	state Exp;
branches;
next	1.8;

1.8
date	94.02.08.17.45.59;	author dglo;	state Exp;
branches;
next	1.7;

1.7
date	94.01.20.23.48.02;	author dglo;	state Exp;
branches;
next	1.6;

1.6
date	94.01.20.23.45.53;	author dglo;	state Exp;
branches;
next	1.5;

1.5
date	94.01.13.23.09.41;	author dglo;	state Exp;
branches;
next	1.4;

1.4
date	93.12.23.16.49.11;	author dglo;	state Exp;
branches;
next	1.3;

1.3
date	93.12.07.21.13.32;	author dglo;	state Exp;
branches;
next	1.2;

1.2
date	93.11.30.21.33.22;	author dglo;	state Exp;
branches;
next	1.1;

1.1
date	93.11.04.20.15.05;	author dglo;	state Exp;
branches;
next	;


desc
@System prototypes
@


1.9
log
@Add a bunch of prototypes for stuff used in telnet/telnetd
@
text
@#ifndef DGLO_PROTO_H
#define DGLO_PROTO_H

#include <sys/cdefs.h>
#include <sys/types.h>

#ifdef SOCK_STREAM
#define DGLO_PROTO_SOCKADDR_DEFINED
#endif

#if defined(S_ISUID) || defined(_SYS_STAT_H_)
#define DGLO_PROTO_STAT_DEFINED
#endif

#ifdef DST_NONE
#define DGLO_PROTO_TIMEVAL_DEFINED
#endif

#ifdef UIO_USERSPACE
#define DGLO_PROTO_IOVEC_DEFINED
#endif

#if defined(__time_h) || defined(_sys_time_h) || defined(_TIME_) || defined(_SYS_TIME_INCLUDED) || defined(_TIME_H_) || defined(_SYS_TIME_H_)
#define DGLO_PROTO_TM_DEFINED
#endif

#ifdef HOST_NOT_FOUND
#define DGLO_PROTO_NETDB_DEFINED
#endif

#ifdef IPPROTO_IP
#define DGLO_PROTO_NETINET_DEFINED
#endif

#ifdef RLIMIT_CPU
#define DGLO_PROTO_RLIMIT_DEFINED
#endif

#ifdef TCGETS
#define DGLO_PROTO_TERMIOS_DEFINED
#endif

#ifdef RUSAGE_SELF
#define DGLO_PROTO_RUSAGE_DEFINED
#endif

#ifdef WNOHANG
#define DGLO_PROTO_WAIT_DEFINED
#endif

#ifdef ITIMER_REAL
#define DGLO_PROTO_ITIMERVAL_DEFINED
#endif

#if defined(hpux) || (defined(__osf__) && defined(__GNUC__))
#define DGLO_PROTO_SSIZE_T_DEFINED
#endif

#if defined(sun) && defined(__stdlib_h) && !defined(__GNUC__)
#define DGLO_PROTO_SUN_MALLOC_HOSED
#endif

#if defined(sun) && defined(__sys_unistd_h)
#define DGLO_PROTO_SUN_UNISTD_HOSED
#endif

#if defined(sun) && defined(__string_h)
#define DGLO_PROTO_SUN_STRING_HOSED
#endif

#if defined(sun) && defined(_strings_h)
#define DGLO_PROTO_SUN_STRINGS_HOSED
#endif

#if defined(sun) && defined(__sys_fcntlcom_h)
#define DGLO_PROTO_SUN_SYS_FCNTLCOM_HOSED
#endif

#if defined(ultrix) && defined(_UNISTD_H_)
#define DGLO_PROTO_ULTRIX_UNISTD_HOSED
#endif

#if defined(ultrix) && defined(_FCNTL_H_)
#define DGLO_PROTO_ULTRIX_SYS_FILE_HOSED
#endif

#if defined(ultrix) && defined(_TIME_H_)
#define DGLO_PROTO_ULTRIX_SYS_TIME_HOSED
#endif

#if defined(__osf__) && defined(_STRING_H_)
#define DGLO_PROTO_OSF_STRING_HOSED
#endif

#if defined(sun) && defined(FILE)
int _filbuf __P((FILE *));
int _flsbuf __P((unsigned char, FILE *));
#endif
#ifdef hpux
int accept __P((int, void *, int *));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int accept __P((int, struct sockaddr *, int *));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
int access __P((const char *, int));
unsigned int alarm __P((unsigned int));
int atoi __P((const char *));
#ifdef hpux
int bcmp __P((const char *, const char *, int));
void bcopy __P((const char *, char *, int));
#else /* !hpux */
int bcmp __P((const void *, const void *, size_t));
void bcopy __P((const void *, void *, size_t));
#endif /* hpux */
#ifdef hpux
int bind __P((int, const void *, int));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int bind __P((int, const struct sockaddr *, int));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
#ifdef hpux
void bzero __P((char *, int));
#else /* !hpux */
void bzero __P((void *, size_t));
#endif /* hpux */
#ifndef DGLO_PROTO_SUN_MALLOC_HOSED
void *calloc __P((size_t, size_t));
#endif
#ifdef DGLO_PROTO_TERMIOS_DEFINED
void cfsetspeed __P((struct termios *, speed_t));
#endif /* DGLO_PROTO_TERMIOS_DEFINED */
int chdir __P((const char *));
int close __P((int));
void closelog __P((void));
#ifdef hpux
int connect __P((int, const void *, int));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int connect __P((int, const struct sockaddr *, int));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
char *crypt __P((const char *, const char *));
char *ctime __P((const time_t *));
int dup2 __P((int, int));
void endpwent __P((void));
#if !(defined(DGLO_PROTO_SUN_UNISTD_HOSED) || defined(DGLO_PROTO_ULTRIX_UNISTD_HOSED))
int execl __P((const char *, const char *, ...));
int execlp __P((const char *, const char *, ...));
int execv __P((const char *, char * const argv[]));
#endif /* !(DGLO_PROTO_SUN_UNISTD_HOSED || DGLO_PROTO_ULTRIX_UNISTD_HOSED) */
#ifdef FILE
int fclose __P((FILE *));
int fflush __P((FILE *));
int fgetc __P((FILE *));
char *fgets __P((char *, int, FILE *));
#endif /* FILE */
int flock __P((int, int));
pid_t fork __P((void));
#ifdef FILE
int fprintf __P((FILE *, const char *, ...));
int fputs __P((const char *, FILE *));
#endif /* FILE */
#ifndef DGLO_PROTO_SUN_MALLOC_HOSED
void free __P((void *));
#endif /* DGLO_PROTO_SUN_MALLOC_HOSED */
#ifdef FILE
int fscanf __P((FILE *, const char *, ...));
#endif /* FILE */
int fsync __P((int));
int ftruncate __P((int, off_t));
#ifdef FILE
int fwrite __P((const void *, size_t, size_t, FILE *));
#endif /* FILE */
char *getenv __P((const char *));
uid_t geteuid __P((void));
gid_t getgid __P((void));
#ifdef DGLO_PROTO_NETDB_DEFINED
#ifdef bsdi
struct hostent *gethostbyname __P((char *));
#else /* !bsdi */
struct hostent *gethostbyname __P((const char *));
#endif /* bsdi */
#endif /* DGLO_PROTO_NETDB_DEFINED */
#ifdef bsdi
long gethostid __P((void));
int gethostname __P((char *, int));
#else /* !bsdi */
int gethostid __P((void));
int gethostname __P((char *, size_t));
#endif /* bsdi */
#ifdef DGLO_PROTO_ITIMERVAL_DEFINED
int getitimer __P((int, struct itimerval *));
#endif /* DGLO_PROTO_ITIMERVAL_DEFINED */
#ifdef __osf__
int getopt __P((int, char * const[], const char *));
#else
int getopt __P((int, char * const *, const char *));
#endif
char *getpass __P((const char *));
pid_t getpid __P((void));
#ifdef hpux
int getpeername __P((int, void *, int *));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int getpeername __P((int, struct sockaddr *, int *));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
#if defined(hpux) || defined(__osf__) || defined(bsdi)
pid_t getpgrp __P((void));
#else /* !(hpux || __osf__) */
pid_t getpgrp __P((pid_t));
#endif /* hpux || __osf__ */
#ifdef hpux
int getsockname __P((int, void *, int *));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int getsockname __P((int, struct sockaddr *, int *));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
int getsockopt __P((int, int, int, void *, int *));
#ifdef DGLO_PROTO_TIMEVAL_DEFINED
int gettimeofday __P((struct timeval *, struct timezone *));
#endif /* DGLO_PROTO_TIMEVAL_DEFINED */
#ifdef DGLO_PROTO_TM_DEFINED
struct tm *gmtime __P((const time_t *));
#endif /* DGLO_PROTO_TM_DEFINED */
uid_t getuid __P((void));
void herror __P((const char *));
#ifndef htonl
#if defined(ultrix) || defined(bsdi)
unsigned long htonl __P((unsigned long));
#else /* !(ultrix || bsdi) */
unsigned int htonl __P((unsigned int));
#endif /* ultrix || bsdi */
#endif /* htonl */
#ifndef DGLO_PROTO_SUN_STRINGS_HOSED
#ifdef bsdi
char *index __P((const char *, int));
#else /* !bsdi */
char *index __P((const char *, char));
#endif
#endif /* DGLO_PROTO_SUN_STRINGS_HOSED */
#ifdef DGLO_PROTO_NETINET_DEFINED
char *inet_ntoa __P((struct in_addr));
#endif /* DGLO_PROTO_NETINET_DEFINED */
#ifdef __alpha
unsigned int inet_addr __P((const char *));
#else /* !__alpha */
unsigned long inet_addr __P((const char *));
#endif /* __alpha */
#ifdef bsdi
int initgroups __P((const char *, int));
#else /* !bsdi */
int initgroups __P((const char *, gid_t));
#endif /* bsdi */
#ifdef __osf__
int ioctl __P((int, unsigned long, char *));
#else
int ioctl __P((int, int, ...));
#endif
int isatty __P((int));
#ifndef islower
int islower __P((int));
#endif
int killpg __P((pid_t, int));
int listen __P((int, int));
#ifdef DGLO_PROTO_TM_DEFINED
struct tm *localtime __P((const time_t *));
#endif /* DGLO_PROTO_TM_DEFINED */
off_t lseek __P((int, off_t, int));
#ifdef DGLO_PROTO_STAT_DEFINED
int lstat __P((const char *, struct stat *));
#endif /* DGLO_PROTO_STAT_DEFINED */
#ifndef DGLO_PROTO_SUN_MALLOC_HOSED
void *malloc __P((size_t));
#endif /* DGLO_PROTO_SUN_MALLOC_HOSED */
void *memmove __P((void *, const void *, size_t));
void *memset __P((void *, int, size_t));
char *mktemp __P((char *));
#ifndef ntohl
#if defined(ultrix) || defined(bsdi)
unsigned long ntohl __P((unsigned long));
#else /* !(ultrix || bsdi) */
unsigned int ntohl __P((unsigned int));
#endif /* ultrix || bsdi */
#endif /* ntohl */
#if !(defined(DGLO_PROTO_SUN_SYS_FCNTLCOM_HOSED) || defined(DGLO_PROTO_ULTRIX_SYS_FILE_HOSED))
int open __P((const char *, int, ...));
#endif /* !(DGLO_PROTO_SUN_SYS_FCNTLCOM_HOSED || DGLO_PROTO_ULTRIX_SYS_FILE_HOSED) */
#ifdef ultrix
int openlog __P((const char *, int));
#else
#ifdef bsdi
void openlog __P((const char *, int, int));
#else /* !bsdi */
int openlog __P((const char *, int, int));
#endif /* bsdi */
#endif
int pause __P((void));
void perror __P((const char *));
int printf __P((const char *, ...));
long random __P((void));
#ifdef DGLO_PROTO_SSIZE_T_DEFINED
ssize_t read __P((int, void *, size_t));
#else /* !DGLO_PROTO_SSIZE_T_DEFINED */
#ifdef sun
int read __P((int, void *, unsigned int));
#else /* !sun */
int read __P((int, void *, size_t));
#endif /* sun */
#endif /* DGLO_PROTO_SSIZE_T_DEFINED */
#ifndef DGLO_PROTO_SUN_MALLOC_HOSED
void *realloc __P((void *, size_t));
#endif /* DGLO_PROTO_SUN_MALLOC_HOSED */
int recv __P((int, void *, int, int));
#ifdef hpux
int recvfrom __P((int, void *, int, int, void *, int *));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int recvfrom __P((int, void *, int, int, struct sockaddr *, int *));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
int rename __P((const char *, const char *));
#ifndef DGLO_PROTO_SUN_STRINGS_HOSED
#ifdef bsdi
char *rindex __P((const char *, int));
#else /* !bsdi */
char *rindex __P((const char *, char));
#endif /* bsdi */
#endif /* DGLO_PROTO_SUN_STRINGS_HOSED */
#ifdef FILE
int rewind __P((FILE *));
#endif /* FILE */
#ifdef DGLO_PROTO_TIMEVAL_DEFINED
#ifdef hpux
int select __P((size_t, int *, int *, int *, const struct timeval *));
#else /* !hpux */
#ifdef bsdi
int select __P((int, fd_set *, fd_set *, fd_set *, struct timeval *));
#else /* !bsdi */
int select __P((int, fd_set *, fd_set *, fd_set *, const struct timeval *));
#endif /* bsdi */
#endif /* hpux */
#endif /* DGLO_PROTO_TIMEVAL_DEFINED */
int send __P((int, const void *, int, int ));
#ifdef hpux
int sendto __P((int, const void *, int, int, const void *, int));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
#ifdef bsdi
int sendto __P((int, const void *, int, int, const struct sockaddr *, int));
#else /* !bsdi */
int sendto __P((int, const char *, int, int, const struct sockaddr *, int));
#endif /* bsdi */
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
int seteuid __P((uid_t));
#if !(defined(DGLO_PROTO_SUN_UNISTD_HOSED) || defined(DGLO_PROTO_ULTRIX_UNISTD_HOSED))
int setgid __P((gid_t));
#endif /* !(DGLO_PROTO_SUN_UNISTD_HOSED || DGLO_PROTO_ULTRIX_UNISTD_HOSED) */
#ifdef DGLO_PROTO_ITIMERVAL_DEFINED
#ifdef __osf__
int setitimer __P((int, struct itimerval *, struct itimerval *));
#else
int setitimer __P((int, const struct itimerval *, struct itimerval *));
#endif
#endif /* DGLO_PROTO_ITIMERVAL_DEFINED */
#ifdef hpux
pid_t setpgrp __P((void));
#else
#ifdef bsdi
int setpgrp __P((pid_t, pid_t));
#else /* !bsdi */
pid_t setpgrp __P((int, int));
#endif /* bsdi */
#endif
#ifdef bsdi
int setpwent __P((void));
#else /* !bsdi */
void setpwent __P((void));
#endif /* bsdi */
int setruid __P((uid_t));
#ifdef bsdi
int setreuid __P((int, int));
#else /* !bsdi */
int setreuid __P((uid_t, uid_t));
#endif /* bsdi */
#ifdef hpux
int setresuid __P((uid_t, gid_t, gid_t));
#endif /* hpux */
#ifdef DGLO_PROTO_RLIMIT_DEFINED
#ifdef __osf__
int setrlimit __P((int, struct rlimit *));
#else /* !__osf__ */
int setrlimit __P((int, const struct rlimit *));
#endif /* __osf__ */
#endif /* DGLO_PROTO_RLIMIT_DEFINED */
pid_t setsid __P((void));
int setsockopt __P((int, int, int, const void *, int));
#if !(defined(DGLO_PROTO_SUN_UNISTD_HOSED) || defined(DGLO_PROTO_ULTRIX_UNISTD_HOSED))
int setuid __P((uid_t));
#endif /* !(DGLO_PROTO_SUN_UNISTD_HOSED || DGLO_PROTO_ULTRIX_UNISTD_HOSED) */
int shutdown __P((int, int));
#ifdef hpux
long sigblock __P((long));
#else /* !hpux */
int sigblock __P((int));
#endif /* hpux */
void (*signal __P((int, void (*)(int)))) __P((int));
#ifdef hpux
long sigsetmask __P((long));
#else /* !hpux */
int sigsetmask __P((int));
#endif /* hpux */
unsigned int sleep __P((unsigned int));
int socket __P((int, int, int));
#if !(defined(sun) && defined(FILE))
int sprintf __P((char *, const char *, ...));
#endif /* !(sun && FILE) */
void srandom __P((unsigned));
#ifdef bsdi
int sscanf __P((char *, const char *, ...));
#else /* !bsdi */
int sscanf __P((const char *, const char *, ...));
#endif /* bsdi */
int strcasecmp __P((const char *, const char *));
char *strcat __P((char *, const char *));
char *strchr __P((const char *, int));
int strcmp __P((const char *, const char *));
char *strcpy __P((char *, const char *));
#ifndef DGLO_PROTO_OSF_STRING_HOSED
char *strdup __P((const char *));
#endif /* DGLO_PROTO_OSF_STRING_HOSED */
char *strerror __P((int));
#ifdef DGLO_PROTO_TM_DEFINED
#ifndef DGLO_PROTO_ULTRIX_SYS_TIME_HOSED
size_t strftime __P((char *, size_t, const char *, const struct tm *));
#endif /* DGLO_PROTO_ULTRIX_SYS_TIME_HOSED */
#endif /* DGLO_PROTO_TM_DEFINED */
#ifdef bsdi
size_t	 strlen __P((const char *));
#else /* !bsdi */
int strlen __P((const char *));
#endif /* bsdi */
int strncasecmp __P((const char *, const char *, size_t));
char *strncat __P((char *, const char *, size_t));
#ifndef DGLO_PROTO_SUN_STRING_HOSED
int strncmp __P((const char *, const char *, size_t));
#endif /* DGLO_PROTO_SUN_STRING_HOSED */
char *strncpy __P((char *, const char *, size_t));
char *strpbrk __P((const char *, const char *));
char *strrchr __P((const char *, int));
long strtol __P((const char *, char **, int));
#ifdef __osf__
void swab __P((const char *, char *, int));
#else /* !__osf__ */
#ifdef DGLO_PROTO_SSIZE_T_DEFINED
void swab __P((const void *, void *, ssize_t));
#else /* !DGLO_PROTO_SSIZE_T_DEFINED */
#ifdef bsdi
void swab __P((const void *, void *, size_t));
#else /* !bsdi */
void swab __P((const void *, void *, int));
#endif /* bsdi */
#endif /* DGLO_PROTO_SSIZE_T_DEFINED */
#endif /* __osf__ */
#ifdef bsdi
void syslog __P((int, const char *, ...));
#else /* !bsdi */
int syslog __P((int, const char *, ...));
#endif /* bsdi */
int tgetent __P((char *, const char *));
time_t time __P((time_t *));
#ifndef tolower
int tolower __P((int));
#endif /* tolower */
#ifndef toupper
int toupper __P((int));
#endif /* toupper */
int ttyslot __P((void));
#ifdef FILE
int ungetc __P((int, FILE *));
#endif /* FILE */
int unlink __P((const char *));
#ifdef DGLO_PROTO_TIMEVAL_DEFINED
#ifdef __osf__
int utimes __P((const char *, struct timeval *));
#else /* !__osf__ */
int utimes __P((const char *, const struct timeval *));
#endif /* __osf__ */
#endif /* DGLO_PROTO_TIMEVAL_DEFINED */
#ifdef bsdi
int vfork __P((void));
#else /* !bsdi */
pid_t vfork __P((void));
#endif /* bsdi */
int vhangup __P((void));
#ifdef FILE
int vfprintf __P((FILE *, const char *, ...));
#endif /* FILE */
#ifdef sun
char *vsprintf __P((char *, const char *, ...));
#else /* !sun */
#if defined(__GNUC__) && defined(__GNUC_VA_LIST)
int vsprintf __P((char *, const char *, __gnuc_va_list));
#else /* !__GNUC__ */
int vsprintf __P((char *, const char *, ...));
#endif /* __GNUC__ */
#endif /* sun */
#if defined(sun) || defined(ultrix)
pid_t wait __P((void *));
#else /* !(sun || ultrix) */
#if defined(__osf__) && defined(_BSD)
int wait __P((void *));
#else /* !(__osf__ && _BSD) */
pid_t wait __P((int *));
#endif /* __osf__ && _BSD */
#endif /* sun || ultrix */
#if defined(DGLO_PROTO_RUSAGE_DEFINED) && defined(DGLO_PROTO_WAIT_DEFINED) && \
	defined(__osf__) && defined(_BSD)
int wait3 __P((union wait *, int, struct rusage *));
#else
pid_t wait3 __P((int *, int, int *));
#endif
#ifdef DGLO_PROTO_SSIZE_T_DEFINED
ssize_t write __P((int, const void *, size_t));
#else /* !DGLO_PROTO_SSIZE_T_DEFINED */
#ifdef sun
int write __P((int, const void *, unsigned int));
#else /* !sun */
int write __P((int, const void *, size_t));
#endif /* sun */
#endif /* DGLO_PROTO_SSIZE_T_DEFINED */
#ifdef DGLO_PROTO_IOVEC_DEFINED
#ifdef DGLO_PROTO_SSIZE_T_DEFINED
ssize_t writev __P((int, struct iovec *, int));
#else /* !DGLO_PROTO_SSIZE_T_DEFINED */
int writev __P((int, struct iovec *, int));
#endif /* DGLO_PROTO_SSIZE_T_DEFINED */
#endif /* DGLO_PROTO_IOVEC_DEFINED */

/* variables */
extern int errno;
extern int sys_nerr;
extern char *sys_errlist[];
extern char **environ;
extern char *optarg;
extern int optind;
extern int opterr;
extern int optopt;

#endif /* DGLO_PROTO_H */
@


1.8
log
@Define some more prototypes
@
text
@d248 5
d263 1
d279 2
d503 6
a508 1
#if defined(ultrix) && !defined(__GNUC__)
d510 2
a511 1
#endif /* ultrix && !__GNUC__ */
@


1.7
log
@Tweaks for BSDI
@
text
@d273 1
d386 3
d390 1
d415 1
d417 3
d421 3
d440 1
d445 2
d480 3
d484 1
@


1.6
log
@Add strcpy() and strlen() prototypes
Tweak wait() prototype
@
text
@d180 3
d184 1
d186 4
d192 1
d210 1
a210 1
#if defined(hpux) || defined(__osf__)
d232 1
a232 1
#ifdef ultrix
d234 1
a234 1
#else /* !ultrix */
d236 1
a236 1
#endif /* ultrix */
d239 3
d243 1
d248 3
d252 1
d274 1
a274 1
#ifdef ultrix
d276 1
a276 1
#else /* !ultrix */
d278 1
a278 1
#endif /* ultrix */
d286 3
d290 1
d318 3
d322 1
d331 3
d335 1
d343 3
d347 1
d364 3
d368 1
d370 3
d374 1
d376 3
d380 1
d385 1
a385 1
int setrlimit __P((int, struct rlimit *));
d410 1
a410 1
int sscanf __P((const char *, const char *, ...));
d422 3
d426 1
d439 3
d443 1
d446 3
d450 1
d465 1
a465 1
int utimes __P((const char *, struct timeval *));
d467 3
d471 1
@


1.5
log
@Add rewind() prototype
Tweak a few things that changed due to GCC 2.5.7 upgrade
@
text
@d367 1
d377 1
d418 4
d423 4
@


1.4
log
@Tweak prototypes some more
@
text
@d278 3
d282 1
d299 3
a415 1
#if defined(__osf__) && defined(_BSD)
d417 2
a418 1
#if defined(DGLO_PROTO_RUSAGE_DEFINED) && defined(DGLO_PROTO_WAIT_DEFINED)
a419 1
#endif
a420 1
pid_t wait __P((int *));
d426 3
d430 1
@


1.3
log
@Tweak wait() & wait3() prototypes for OSF/1
@
text
@d51 4
d71 4
d109 4
d115 1
d123 3
d127 1
d184 3
d229 1
d231 1
d292 1
d294 1
d314 7
d327 2
a328 1
int setreuid __P((int, int));
d343 5
a349 1
int sigblock __P((int));
@


1.2
log
@Moved 'compat' library prototypes to 'compat/compat-proto.h'
Tweak all kinds of stuff to allow for clean SunOS/Ultrix/HPUX compile
@
text
@d43 8
d373 6
d381 1
@


1.1
log
@Initial revision
@
text
@d43 4
d59 20
d83 3
d89 1
d95 3
d99 1
a99 1
int bind __P((int, struct sockaddr *, int));
d101 1
d112 3
d116 1
a116 1
int connect __P((int, struct sockaddr *, int));
d118 2
a119 1
char *crypt __P((char *, char *));
d123 1
a123 1
#ifndef DGLO_PROTO_SUN_UNISTD_HOSED
d127 1
a127 1
#endif /* DGLO_PROTO_SUN_UNISTD_HOSED */
d158 4
a161 1
int gethostname __P((char *, int));
d163 1
d166 3
d171 11
d184 1
d195 3
d199 1
d201 1
a201 1
char *index __P((char *, char));
d206 1
d208 3
d227 3
d231 1
d233 6
a238 3
#if !(defined(sun) && defined(__sys_fcntlcom_h))
int open __P((const char *, int, mode_t));
#endif /* !(sun & __sys_fcntlcom_h) */
d240 1
d245 5
a249 1
int read __P((int, char *, size_t));
d254 3
d260 1
d262 1
a262 1
char *rindex __P((char *, char));
d264 5
a268 1
int select __P((int, fd_set *, fd_set *, fd_set *, struct timeval *));
d271 3
d277 1
d279 1
a279 1
#ifndef DGLO_PROTO_SUN_UNISTD_HOSED
d281 4
a284 1
#endif /* DGLO_PROTO_SUN_UNISTD_HOSED */
d286 1
d289 3
d297 1
a297 1
#ifndef DGLO_PROTO_SUN_UNISTD_HOSED
d299 1
a299 1
#endif /* DGLO_PROTO_SUN_UNISTD_HOSED */
d301 4
d307 1
d315 2
a316 1
char *strcasecmp __P((const char *, const char *));
d318 2
d321 3
a323 1
int strftime __P((char *, int, const char *, struct tm *));
d325 1
a325 1
char *strncasecmp __P((const char *, const char *, size_t));
d327 1
a327 1
char *strncmp __P((const char *, const char *, size_t));
d331 1
d333 7
d362 1
d364 1
d367 5
a371 5
#if defined(hpux)
ssize_t write __P((int, const char *, size_t));
#else /* !hpux */
int write __P((int, const char *, size_t));
#endif /* hpux */
d373 1
a373 1
#if defined(hpux)
d375 1
a375 1
#else /* !hpux */
d377 1
a377 1
#endif /* hpux */
a378 11

int iruserok __P((u_long raddr, int superuser, const char *ruser,
		  const char *luser));
int rcmd __P((char **ahost, u_short rport, const char *locuser,
	      const char *remuser, const char *cmd, int *));
int rresvport __P((int *));
int ruserok __P((const char *rhost, int superuser, const char *ruser,
		 const char *luser));
int setenv __P((const char *name, const char *value, int));
char *strerror __P((int num));
void unsetenv __P((const char *name));
@
