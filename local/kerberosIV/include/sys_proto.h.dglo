#ifndef DGLO_PROTO_H
#define DGLO_PROTO_H

#include <sys/cdefs.h>
#include <sys/types.h>

#ifdef SOCK_STREAM
#define DGLO_PROTO_SOCKADDR_DEFINED
#endif

#if defined(S_ISUID) || defined(_SYS_STAT_H_)
#define DGLO_PROTO_STAT_DEFINED
#endif

#ifdef DST_NONE
#define DGLO_PROTO_TIMEVAL_DEFINED
#endif

#ifdef UIO_USERSPACE
#define DGLO_PROTO_IOVEC_DEFINED
#endif

#if defined(__time_h) || defined(_sys_time_h) || defined(_TIME_) || defined(_SYS_TIME_INCLUDED) || defined(_TIME_H_) || defined(_SYS_TIME_H_)
#define DGLO_PROTO_TM_DEFINED
#endif

#ifdef HOST_NOT_FOUND
#define DGLO_PROTO_NETDB_DEFINED
#endif

#ifdef IPPROTO_IP
#define DGLO_PROTO_NETINET_DEFINED
#endif

#ifdef RLIMIT_CPU
#define DGLO_PROTO_RLIMIT_DEFINED
#endif

#ifdef TCGETS
#define DGLO_PROTO_TERMIOS_DEFINED
#endif

#ifdef RUSAGE_SELF
#define DGLO_PROTO_RUSAGE_DEFINED
#endif

#ifdef WNOHANG
#define DGLO_PROTO_WAIT_DEFINED
#endif

#ifdef ITIMER_REAL
#define DGLO_PROTO_ITIMERVAL_DEFINED
#endif

#if defined(hpux) || (defined(__osf__) && defined(__GNUC__))
#define DGLO_PROTO_SSIZE_T_DEFINED
#endif

#if defined(sun) && defined(__stdlib_h) && !defined(__GNUC__)
#define DGLO_PROTO_SUN_MALLOC_HOSED
#endif

#if defined(sun) && defined(__sys_unistd_h)
#define DGLO_PROTO_SUN_UNISTD_HOSED
#endif

#if defined(sun) && defined(__string_h)
#define DGLO_PROTO_SUN_STRING_HOSED
#endif

#if defined(sun) && defined(_strings_h)
#define DGLO_PROTO_SUN_STRINGS_HOSED
#endif

#if defined(sun) && defined(__sys_fcntlcom_h)
#define DGLO_PROTO_SUN_SYS_FCNTLCOM_HOSED
#endif

#if defined(ultrix) && defined(_UNISTD_H_)
#define DGLO_PROTO_ULTRIX_UNISTD_HOSED
#endif

#if defined(ultrix) && defined(_FCNTL_H_)
#define DGLO_PROTO_ULTRIX_SYS_FILE_HOSED
#endif

#if defined(ultrix) && defined(_TIME_H_)
#define DGLO_PROTO_ULTRIX_SYS_TIME_HOSED
#endif

#if defined(__osf__) && defined(_STRING_H_)
#define DGLO_PROTO_OSF_STRING_HOSED
#endif

#if defined(sun) && defined(FILE)
int _filbuf __P((FILE *));
int _flsbuf __P((unsigned char, FILE *));
#endif
#ifdef hpux
int accept __P((int, void *, int *));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int accept __P((int, struct sockaddr *, int *));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
int access __P((const char *, int));
unsigned int alarm __P((unsigned int));
int atoi __P((const char *));
#ifdef hpux
int bcmp __P((const char *, const char *, int));
void bcopy __P((const char *, char *, int));
#else /* !hpux */
int bcmp __P((const void *, const void *, size_t));
void bcopy __P((const void *, void *, size_t));
#endif /* hpux */
#ifdef hpux
int bind __P((int, const void *, int));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int bind __P((int, const struct sockaddr *, int));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
#ifdef hpux
void bzero __P((char *, int));
#else /* !hpux */
void bzero __P((void *, size_t));
#endif /* hpux */
#ifndef DGLO_PROTO_SUN_MALLOC_HOSED
void *calloc __P((size_t, size_t));
#endif
#ifdef DGLO_PROTO_TERMIOS_DEFINED
void cfsetspeed __P((struct termios *, speed_t));
#endif /* DGLO_PROTO_TERMIOS_DEFINED */
int chdir __P((const char *));
int close __P((int));
void closelog __P((void));
#ifdef hpux
int connect __P((int, const void *, int));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int connect __P((int, const struct sockaddr *, int));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
char *crypt __P((const char *, const char *));
char *ctime __P((const time_t *));
int dup2 __P((int, int));
void endpwent __P((void));
#if !(defined(DGLO_PROTO_SUN_UNISTD_HOSED) || defined(DGLO_PROTO_ULTRIX_UNISTD_HOSED))
int execl __P((const char *, const char *, ...));
int execlp __P((const char *, const char *, ...));
int execv __P((const char *, char * const argv[]));
#endif /* !(DGLO_PROTO_SUN_UNISTD_HOSED || DGLO_PROTO_ULTRIX_UNISTD_HOSED) */
#ifdef FILE
int fclose __P((FILE *));
int fflush __P((FILE *));
int fgetc __P((FILE *));
char *fgets __P((char *, int, FILE *));
#endif /* FILE */
int flock __P((int, int));
pid_t fork __P((void));
#ifdef FILE
int fprintf __P((FILE *, const char *, ...));
int fputs __P((const char *, FILE *));
#endif /* FILE */
#ifndef DGLO_PROTO_SUN_MALLOC_HOSED
void free __P((void *));
#endif /* DGLO_PROTO_SUN_MALLOC_HOSED */
#ifdef FILE
int fscanf __P((FILE *, const char *, ...));
#endif /* FILE */
int fsync __P((int));
int ftruncate __P((int, off_t));
#ifdef FILE
int fwrite __P((const void *, size_t, size_t, FILE *));
#endif /* FILE */
char *getenv __P((const char *));
uid_t geteuid __P((void));
gid_t getgid __P((void));
#ifdef DGLO_PROTO_NETDB_DEFINED
struct hostent *gethostbyname __P((const char *));
#endif /* DGLO_PROTO_NETDB_DEFINED */
#ifdef bsdi
long gethostid __P((void));
int gethostname __P((char *, int));
#else /* !bsdi */
int gethostid __P((void));
int gethostname __P((char *, size_t));
#endif /* bsdi */
#ifdef DGLO_PROTO_ITIMERVAL_DEFINED
int getitimer __P((int, struct itimerval *));
#endif /* DGLO_PROTO_ITIMERVAL_DEFINED */
#ifdef __osf__
int getopt __P((int, char * const[], const char *));
#else
int getopt __P((int, char * const *, const char *));
#endif
char *getpass __P((const char *));
pid_t getpid __P((void));
#ifdef hpux
int getpeername __P((int, void *, int *));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int getpeername __P((int, struct sockaddr *, int *));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
#if defined(hpux) || defined(__osf__) || defined(bsdi)
pid_t getpgrp __P((void));
#else /* !(hpux || __osf__) */
pid_t getpgrp __P((pid_t));
#endif /* hpux || __osf__ */
#ifdef hpux
int getsockname __P((int, void *, int *));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int getsockname __P((int, struct sockaddr *, int *));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
int getsockopt __P((int, int, int, void *, int *));
#ifdef DGLO_PROTO_TIMEVAL_DEFINED
int gettimeofday __P((struct timeval *, struct timezone *));
#endif /* DGLO_PROTO_TIMEVAL_DEFINED */
#ifdef DGLO_PROTO_TM_DEFINED
struct tm *gmtime __P((const time_t *));
#endif /* DGLO_PROTO_TM_DEFINED */
uid_t getuid __P((void));
void herror __P((const char *));
#ifndef htonl
#if defined(ultrix) || defined(bsdi)
unsigned long htonl __P((unsigned long));
#else /* !(ultrix || bsdi) */
unsigned int htonl __P((unsigned int));
#endif /* ultrix || bsdi */
#endif /* htonl */
#ifndef DGLO_PROTO_SUN_STRINGS_HOSED
#ifdef bsdi
char *index __P((const char *, int));
#else /* !bsdi */
char *index __P((const char *, char));
#endif
#endif /* DGLO_PROTO_SUN_STRINGS_HOSED */
#ifdef DGLO_PROTO_NETINET_DEFINED
char *inet_ntoa __P((struct in_addr));
#endif /* DGLO_PROTO_NETINET_DEFINED */
#ifdef __alpha
unsigned int inet_addr __P((const char *));
#else /* !__alpha */
unsigned long inet_addr __P((const char *));
#endif /* __alpha */
#ifdef bsdi
int initgroups __P((const char *, int));
#else /* !bsdi */
int initgroups __P((const char *, gid_t));
#endif /* bsdi */
#ifdef __osf__
int ioctl __P((int, unsigned long, char *));
#else /* !__osf__ */
#ifdef bsdi
#else /* !bsdi */
int ioctl __P((int, int, ...));
#endif /* bsdi */
#endif /* __osf__ */
int isatty __P((int));
#ifndef islower
int islower __P((int));
#endif
int killpg __P((pid_t, int));
int listen __P((int, int));
#ifdef DGLO_PROTO_TM_DEFINED
struct tm *localtime __P((const time_t *));
#endif /* DGLO_PROTO_TM_DEFINED */
off_t lseek __P((int, off_t, int));
#ifdef DGLO_PROTO_STAT_DEFINED
int lstat __P((const char *, struct stat *));
#endif /* DGLO_PROTO_STAT_DEFINED */
#ifndef DGLO_PROTO_SUN_MALLOC_HOSED
void *malloc __P((size_t));
#endif /* DGLO_PROTO_SUN_MALLOC_HOSED */
void *memmove __P((void *, const void *, size_t));
void *memset __P((void *, int, size_t));
char *mktemp __P((char *));
#ifndef ntohl
#if defined(ultrix) || defined(bsdi)
unsigned long ntohl __P((unsigned long));
#else /* !(ultrix || bsdi) */
unsigned int ntohl __P((unsigned int));
#endif /* ultrix || bsdi */
#endif /* ntohl */
#if !(defined(DGLO_PROTO_SUN_SYS_FCNTLCOM_HOSED) || defined(DGLO_PROTO_ULTRIX_SYS_FILE_HOSED))
int open __P((const char *, int, ...));
#endif /* !(DGLO_PROTO_SUN_SYS_FCNTLCOM_HOSED || DGLO_PROTO_ULTRIX_SYS_FILE_HOSED) */
#ifdef ultrix
int openlog __P((const char *, int));
#else
#ifdef bsdi
void openlog __P((const char *, int, int));
#else /* !bsdi */
int openlog __P((const char *, int, int));
#endif /* bsdi */
#endif
int pause __P((void));
void perror __P((const char *));
int printf __P((const char *, ...));
long random __P((void));
#ifdef DGLO_PROTO_SSIZE_T_DEFINED
ssize_t read __P((int, void *, size_t));
#else /* !DGLO_PROTO_SSIZE_T_DEFINED */
#ifdef sun
int read __P((int, void *, unsigned int));
#else /* !sun */
int read __P((int, void *, size_t));
#endif /* sun */
#endif /* DGLO_PROTO_SSIZE_T_DEFINED */
#ifndef DGLO_PROTO_SUN_MALLOC_HOSED
void *realloc __P((void *, size_t));
#endif /* DGLO_PROTO_SUN_MALLOC_HOSED */
int recv __P((int, void *, int, int));
#ifdef hpux
int recvfrom __P((int, void *, int, int, void *, int *));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
int recvfrom __P((int, void *, int, int, struct sockaddr *, int *));
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
int rename __P((const char *, const char *));
#ifndef DGLO_PROTO_SUN_STRINGS_HOSED
#ifdef bsdi
char *rindex __P((const char *, int));
#else /* !bsdi */
char *rindex __P((const char *, char));
#endif /* bsdi */
#endif /* DGLO_PROTO_SUN_STRINGS_HOSED */
#ifdef FILE
int rewind __P((FILE *));
#endif /* FILE */
#ifdef DGLO_PROTO_TIMEVAL_DEFINED
#ifdef hpux
int select __P((size_t, int *, int *, int *, const struct timeval *));
#else /* !hpux */
#ifdef bsdi
int select __P((int, fd_set *, fd_set *, fd_set *, struct timeval *));
#else /* !bsdi */
int select __P((int, fd_set *, fd_set *, fd_set *, const struct timeval *));
#endif /* bsdi */
#endif /* hpux */
#endif /* DGLO_PROTO_TIMEVAL_DEFINED */
int send __P((int, const void *, int, int ));
#ifdef hpux
int sendto __P((int, const void *, int, int, const void *, int));
#else /* !hpux */
#ifdef DGLO_PROTO_SOCKADDR_DEFINED
#ifdef bsdi
int sendto __P((int, const void *, int, int, const struct sockaddr *, int));
#else /* !bsdi */
int sendto __P((int, const char *, int, int, const struct sockaddr *, int));
#endif /* bsdi */
#endif /* DGLO_PROTO_SOCKADDR_DEFINED */
#endif /* hpux */
int seteuid __P((uid_t));
#if !(defined(DGLO_PROTO_SUN_UNISTD_HOSED) || defined(DGLO_PROTO_ULTRIX_UNISTD_HOSED))
int setgid __P((gid_t));
#endif /* !(DGLO_PROTO_SUN_UNISTD_HOSED || DGLO_PROTO_ULTRIX_UNISTD_HOSED) */
#ifdef DGLO_PROTO_ITIMERVAL_DEFINED
#ifdef __osf__
int setitimer __P((int, struct itimerval *, struct itimerval *));
#else
int setitimer __P((int, const struct itimerval *, struct itimerval *));
#endif
#endif /* DGLO_PROTO_ITIMERVAL_DEFINED */
#ifdef hpux
pid_t setpgrp __P((void));
#else
#ifdef bsdi
int setpgrp __P((pid_t, pid_t));
#else /* !bsdi */
pid_t setpgrp __P((int, int));
#endif /* bsdi */
#endif
#ifdef bsdi
int setpwent __P((void));
#else /* !bsdi */
void setpwent __P((void));
#endif /* bsdi */
int setruid __P((uid_t));
#ifdef bsdi
int setreuid __P((int, int));
#else /* !bsdi */
int setreuid __P((uid_t, uid_t));
#endif /* bsdi */
#ifdef hpux
int setresuid __P((uid_t, gid_t, gid_t));
#endif /* hpux */
#ifdef DGLO_PROTO_RLIMIT_DEFINED
#ifdef __osf__
int setrlimit __P((int, struct rlimit *));
#else /* !__osf__ */
int setrlimit __P((int, const struct rlimit *));
#endif /* __osf__ */
#endif /* DGLO_PROTO_RLIMIT_DEFINED */
pid_t setsid __P((void));
int setsockopt __P((int, int, int, const void *, int));
#if !(defined(DGLO_PROTO_SUN_UNISTD_HOSED) || defined(DGLO_PROTO_ULTRIX_UNISTD_HOSED))
int setuid __P((uid_t));
#endif /* !(DGLO_PROTO_SUN_UNISTD_HOSED || DGLO_PROTO_ULTRIX_UNISTD_HOSED) */
int shutdown __P((int, int));
#ifdef hpux
long sigblock __P((long));
#else /* !hpux */
int sigblock __P((int));
#endif /* hpux */
void (*signal __P((int, void (*)(int)))) __P((int));
#ifdef hpux
long sigsetmask __P((long));
#else /* !hpux */
int sigsetmask __P((int));
#endif /* hpux */
unsigned int sleep __P((unsigned int));
int socket __P((int, int, int));
#if !(defined(sun) && defined(FILE))
int sprintf __P((char *, const char *, ...));
#endif /* !(sun && FILE) */
void srandom __P((unsigned));
int sscanf __P((const char *, const char *, ...));
int strcasecmp __P((const char *, const char *));
char *strcat __P((char *, const char *));
char *strchr __P((const char *, int));
int strcmp __P((const char *, const char *));
char *strcpy __P((char *, const char *));
#ifndef DGLO_PROTO_OSF_STRING_HOSED
char *strdup __P((const char *));
#endif /* DGLO_PROTO_OSF_STRING_HOSED */
char *strerror __P((int));
#ifdef DGLO_PROTO_TM_DEFINED
#ifndef DGLO_PROTO_ULTRIX_SYS_TIME_HOSED
size_t strftime __P((char *, size_t, const char *, const struct tm *));
#endif /* DGLO_PROTO_ULTRIX_SYS_TIME_HOSED */
#endif /* DGLO_PROTO_TM_DEFINED */
#ifdef bsdi
size_t	 strlen __P((const char *));
#else /* !bsdi */
int strlen __P((const char *));
#endif /* bsdi */
int strncasecmp __P((const char *, const char *, size_t));
char *strncat __P((char *, const char *, size_t));
#ifndef DGLO_PROTO_SUN_STRING_HOSED
int strncmp __P((const char *, const char *, size_t));
#endif /* DGLO_PROTO_SUN_STRING_HOSED */
char *strncpy __P((char *, const char *, size_t));
char *strpbrk __P((const char *, const char *));
char *strrchr __P((const char *, int));
long strtol __P((const char *, char **, int));
#ifdef __osf__
void swab __P((const char *, char *, int));
#else /* !__osf__ */
#ifdef DGLO_PROTO_SSIZE_T_DEFINED
void swab __P((const void *, void *, ssize_t));
#else /* !DGLO_PROTO_SSIZE_T_DEFINED */
#ifdef bsdi
void swab __P((const void *, void *, size_t));
#else /* !bsdi */
void swab __P((const void *, void *, int));
#endif /* bsdi */
#endif /* DGLO_PROTO_SSIZE_T_DEFINED */
#endif /* __osf__ */
#ifdef bsdi
void syslog __P((int, const char *, ...));
#else /* !bsdi */
int syslog __P((int, const char *, ...));
#endif /* bsdi */
int tgetent __P((char *, const char *));
time_t time __P((time_t *));
#ifndef tolower
int tolower __P((int));
#endif /* tolower */
#ifndef toupper
int toupper __P((int));
#endif /* toupper */
int ttyslot __P((void));
#ifdef FILE
int ungetc __P((int, FILE *));
#endif /* FILE */
int unlink __P((const char *));
#ifdef DGLO_PROTO_TIMEVAL_DEFINED
#ifdef __osf__
int utimes __P((const char *, struct timeval *));
#else /* !__osf__ */
int utimes __P((const char *, const struct timeval *));
#endif /* __osf__ */
#endif /* DGLO_PROTO_TIMEVAL_DEFINED */
#ifdef bsdi
int vfork __P((void));
#else /* !bsdi */
pid_t vfork __P((void));
#endif /* bsdi */
int vhangup __P((void));
#ifdef FILE
int vfprintf __P((FILE *, const char *, ...));
#endif /* FILE */
#ifdef sun
char *vsprintf __P((char *, const char *, ...));
#else /* !sun */
#if defined(__GNUC__) && defined(__GNUC_VA_LIST)
int vsprintf __P((char *, const char *, __gnuc_va_list));
#else /* !__GNUC__ */
#ifdef bsdi
int vsprintf __P((char *, const char *, _VA_LIST_));
#else /* !bsdi */
int vsprintf __P((char *, const char *, ...));
#endif /* bsdi */
#endif /* __GNUC__ */
#endif /* sun */
#if defined(sun) || defined(ultrix)
pid_t wait __P((void *));
#else /* !(sun || ultrix) */
#if defined(__osf__) && defined(_BSD)
int wait __P((void *));
#else /* !(__osf__ && _BSD) */
pid_t wait __P((int *));
#endif /* __osf__ && _BSD */
#endif /* sun || ultrix */
#if defined(DGLO_PROTO_RUSAGE_DEFINED) && defined(DGLO_PROTO_WAIT_DEFINED) && \
	defined(__osf__) && defined(_BSD)
int wait3 __P((union wait *, int, struct rusage *));
#else
pid_t wait3 __P((int *, int, int *));
#endif
#ifdef DGLO_PROTO_SSIZE_T_DEFINED
ssize_t write __P((int, const void *, size_t));
#else /* !DGLO_PROTO_SSIZE_T_DEFINED */
#ifdef sun
int write __P((int, const void *, unsigned int));
#else /* !sun */
int write __P((int, const void *, size_t));
#endif /* sun */
#endif /* DGLO_PROTO_SSIZE_T_DEFINED */
#ifdef DGLO_PROTO_IOVEC_DEFINED
#ifdef DGLO_PROTO_SSIZE_T_DEFINED
ssize_t writev __P((int, struct iovec *, int));
#else /* !DGLO_PROTO_SSIZE_T_DEFINED */
int writev __P((int, struct iovec *, int));
#endif /* DGLO_PROTO_SSIZE_T_DEFINED */
#endif /* DGLO_PROTO_IOVEC_DEFINED */

/* variables */
extern int errno;
extern int sys_nerr;
extern char *sys_errlist[];
extern char **environ;
extern char *optarg;
extern int optind;
extern int opterr;
extern int optopt;

#endif /* DGLO_PROTO_H */
