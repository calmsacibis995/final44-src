head     4.1;
branch   ;
access   ;
symbols  PATCH8:4.0 PATCH7:4.0 KPATCH6:4.0 ASRSNAP1001:4.0 PATCH5:4.0 KPATCH4:4.0 KPATCH3:4.0 KPATCH2:4.0 KREL1:4.0 BETA5/24/88:1.5;
locks    ; strict;
comment  @ * @;


4.1
date     90.06.25.21.03.10;  author kfall;  state Exp;
branches ;
next     4.0;

4.0
date     89.01.24.21.49.02;  author jtkohl;  state Exp;
branches ;
next     1.5;

1.5
date     88.02.23.17.32.35;  author steiner;  state Exp;
branches ;
next     1.4;

1.4
date     88.01.13.19.00.05;  author steiner;  state Exp;
branches ;
next     1.3;

1.3
date     88.01.13.17.39.13;  author steiner;  state Exp;
branches ;
next     1.2;

1.2
date     87.12.05.16.25.05;  author steiner;  state Exp;
branches ;
next     1.1;

1.1
date     87.11.30.06.10.10;  author panda;  state Exp;
branches ;
next     ;


desc
@Initial checkin.
@


4.1
log
@include des.h
@
text
@/*
 * $Source: /usr/src/kerberosIV/src/admin/RCS/kdb_destroy.c,v $
 * $Author: jtkohl $
 *
 * Copyright 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 *
 * Description.
 */

#ifndef	lint
static char rcsid_kdb_destroy_c[] =
"$Header: /usr/src/kerberosIV/src/admin/RCS/kdb_destroy.c,v 4.0 89/01/24 21:49:02 jtkohl Exp Locker: kfall $";
#endif	lint

#include <mit-copyright.h>
#include <strings.h>
#include <stdio.h>
#include "des.h"
#include "krb.h"
#include "krb_db.h"

main()
{
    char    answer[10];		/* user input */
    char    dbm[256];		/* database path and name */
    char    dbm1[256];		/* database path and name */
    char   *file1, *file2;	/* database file names */

    strcpy(dbm, DBM_FILE);
    strcpy(dbm1, DBM_FILE);
    file1 = strcat(dbm, ".dir");
    file2 = strcat(dbm1, ".pag");

    printf("You are about to destroy the Kerberos database ");
    printf("on this machine.\n");
    printf("Are you sure you want to do this (y/n)? ");
    fgets(answer, sizeof(answer), stdin);

    if (answer[0] == 'y' || answer[0] == 'Y') {
	if (unlink(file1) == 0 && unlink(file2) == 0)
	    fprintf(stderr, "Database deleted at %s\n", DBM_FILE);
	else
	    fprintf(stderr, "Database cannot be deleted at %s\n",
		    DBM_FILE);
    } else
	fprintf(stderr, "Database not deleted.\n");
}
@


4.0
log
@Programmer: Bill Sommerfeld
Auditor: John Kohl
changes: clean up code
@
text
@d2 2
a3 2
 * $Source: /mit/wesommer/kslave/build/admin/RCS/kdb_destroy.c,v $
 * $Author: steiner $
d15 1
a15 1
"$Header: kdb_destroy.c,v 1.5 88/02/23 17:32:35 wesommer Locked $";
d21 1
@


1.5
log
@Copyright notice, etc.
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/tools/RCS/prototype.c,v $
d15 1
a15 1
"$Header: prototype.c,v 1.2 88/02/22 18:54:06 steiner Locked $";
d19 2
a22 2
#include "strings.h"
#include "stdio.h"
d28 1
d32 3
a34 2
    file1 = strcat(DBM_FILE, ".dir");
    file2 = strcat(DBM_FILE, ".pag");
d39 1
a39 1
    gets(answer);
@


1.4
log
@Formatted.
@
text
@d1 18
@


1.3
log
@Fixed a bug.
@
text
@d9 1
a9 1
    char    dbm[256];           /* database path and name */
d12 1
a12 1
    strcpy (dbm, DBM_FILE);
@


1.2
log
@Chris's changes.
@
text
@d9 1
a9 1
    char   *dbm;                /* database path and name */
@


1.1
log
@Initial revision
@
text
@d4 1
d8 3
a10 2
    char *answer;             /* holds the user reply */ 
    char *file1, *file2;      /* holds the database file names */
d12 3
a14 2
    file1 = strcat (DBM_FILE, ".dir");
    file2 = strcat (DBM_FILE, ".pag");
d16 4
a19 4
    printf ("You are about to destroy the Kerberos database on this ");
    printf ("machine.\n");
    printf ("Are you sure you want to do this (y/n)? ");
    scanf ("%s", &answer); 
d21 3
a23 3
    if (answer[1] == 'y' || answer[1] == 'Y') {
	if (unlink (file1) && unlink (file2))
	  printf ("Database deleted.\n");
d25 4
a28 4
	  printf ("Database cannot be deleted.\n");
    }
    else
      printf ("Database not deleted.\n");
@
