head     4.11;
branch   ;
access   ;
symbols  PATCH8:4.10 PATCH7:4.10 KPATCH6:4.10 ASRSNAP1001:4.10 PATCH5:4.10 KPATCH4:4.10 KPATCH3:4.10 KPATCH2:4.10 KREL1:4.10 BETA5/24/88:4.8;
locks    ; strict;
comment  @ * @;


4.11
date     90.06.25.20.55.11;  author kfall;  state Exp;
branches ;
next     4.10;

4.10
date     89.01.10.11.34.42;  author steiner;  state Exp;
branches ;
next     4.9;

4.9
date     88.10.07.06.07.02;  author shanzer;  state Exp;
branches ;
next     4.8;

4.8
date     88.02.24.18.10.24;  author steiner;  state Exp;
branches ;
next     4.7;

4.7
date     88.01.12.21.17.42;  author steiner;  state Exp;
branches ;
next     4.6;

4.6
date     87.10.29.09.46.32;  author jtkohl;  state Exp;
branches ;
next     4.5;

4.5
date     87.10.28.16.03.22;  author steiner;  state Exp;
branches ;
next     4.4;

4.4
date     87.10.28.15.38.25;  author steiner;  state Exp;
branches ;
next     4.3;

4.3
date     87.10.20.17.06.15;  author jtkohl;  state Exp;
branches ;
next     4.2;

4.2
date     87.09.10.16.20.07;  author steiner;  state Exp;
branches ;
next     4.1;

4.1
date     87.09.01.15.45.59;  author steiner;  state Exp;
branches ;
next     3.4;

3.4
date     86.09.05.16.17.45;  author bcn;  state Exp;
branches ;
next     3.3;

3.3
date     86.05.23.13.08.52;  author spm;  state Exp;
branches ;
next     3.2;

3.2
date     86.05.14.15.26.23;  author spm;  state Exp;
branches ;
next     3.1;

3.1
date     86.03.28.13.57.14;  author bcn;  state Exp;
branches ;
next     1.1;

1.1
date     86.03.14.15.35.11;  author spm;  state Exp;
branches ;
next     ;


desc
@new- error reply message type
@


4.11
log
@include des.h
@
text
@/*
 * $Source: /usr/src/kerberosIV/src/lib/krb/RCS/cr_err_reply.c,v $
 * $Author: steiner $
 *
 * Copyright 1985, 1986, 1987, 1988 by the Massachusetts Institute
 * of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef lint
static char *rcsid_cr_err_reply_c =
"$Header: /usr/src/kerberosIV/src/lib/krb/RCS/cr_err_reply.c,v 4.10 89/01/10 11:34:42 steiner Exp Locker: kfall $";
#endif /* lint */

#include <mit-copyright.h>
#include <sys/types.h>
#include <des.h>
#include <krb.h>
#include <prot.h>
#include <strings.h>

extern int req_act_vno;		/* this is defined in the kerberos
				 * server code */

/*
 * This routine is used by the Kerberos authentication server to
 * create an error reply packet to send back to its client.
 *
 * It takes a pointer to the packet to be built, the name, instance,
 * and realm of the principal, the client's timestamp, an error code
 * and an error string as arguments.  Its return value is undefined.
 *
 * The packet is built in the following format:
 * 
 * type			variable	   data
 *			or constant
 * ----			-----------	   ----
 *
 * unsigned char	req_ack_vno	   protocol version number
 * 
 * unsigned char	AUTH_MSG_ERR_REPLY protocol message type
 * 
 * [least significant	HOST_BYTE_ORDER	   sender's (server's) byte
 * bit of above field]			   order
 * 
 * string		pname		   principal's name
 * 
 * string		pinst		   principal's instance
 * 
 * string		prealm		   principal's realm
 * 
 * unsigned long	time_ws		   client's timestamp
 * 
 * unsigned long	e		   error code
 * 
 * string		e_string	   error text
 */

void
cr_err_reply(pkt,pname,pinst,prealm,time_ws,e,e_string)
    KTEXT pkt;
    char *pname;		/* Principal's name */
    char *pinst;		/* Principal's instance */
    char *prealm;		/* Principal's authentication domain */
    u_long time_ws;		/* Workstation time */
    u_long e;			/* Error code */
    char *e_string;		/* Text of error */
{
    u_char *v = (u_char *) pkt->dat; /* Prot vers number */
    u_char *t = (u_char *)(pkt->dat+1); /* Prot message type */

    /* Create fixed part of packet */
    *v = (unsigned char) req_act_vno; /* KRB_PROT_VERSION; */
    *t = (unsigned char) AUTH_MSG_ERR_REPLY;
    *t |= HOST_BYTE_ORDER;

    /* Add the basic info */
    (void) strcpy((char *) (pkt->dat+2),pname);
    pkt->length = 3 + strlen(pname);
    (void) strcpy((char *)(pkt->dat+pkt->length),pinst);
    pkt->length += 1 + strlen(pinst);
    (void) strcpy((char *)(pkt->dat+pkt->length),prealm);
    pkt->length += 1 + strlen(prealm);
    /* ws timestamp */
    bcopy((char *) &time_ws,(char *)(pkt->dat+pkt->length),4);
    pkt->length += 4;
    /* err code */
    bcopy((char *) &e,(char *)(pkt->dat+pkt->length),4);
    pkt->length += 4;
    /* err text */
    (void) strcpy((char *)(pkt->dat+pkt->length),e_string);
    pkt->length += 1 + strlen(e_string);

    /* And return */
    return;
}
@


4.10
log
@declare as "void".
programmer: jtkohl
auditor: steiner
@
text
@d2 2
a3 2
 * $Source: /mit/kerberos/src/lib/krb/RCS/cr_err_reply.c,v $
 * $Author: shanzer $
d14 1
a14 1
"$Header: cr_err_reply.c,v 4.9 88/10/07 06:07:02 jtkohl Locked $";
d19 1
@


4.9
log
@Added Wonderfull comments
Programer: steiner
Auditor: shanzer
@
text
@d3 1
a3 1
 * $Author: steiner $
d14 1
a14 1
"$Header: cr_err_reply.c,v 4.8 88/02/24 18:10:24 steiner Exp $";
d60 1
@


4.8
log
@Copyright notice, etc.
@
text
@d14 1
a14 1
"$Header: cr_err_reply.c,v 4.7 88/01/12 21:17:42 steiner Locked $";
d27 31
a57 1
 * This routine creates an error reply from Kerberos.
@


4.7
log
@Formatting changes.
Programmer: Ken.
Auditor: Jon.
@
text
@d2 2
a3 3
 *      $Source: /mit/kerberos/lib/krb/RCS/cr_err_reply.c,v $
 *      $Author: jtkohl $
 *      $Locker: steiner $
d5 2
a6 1
 * Copyright 1985,1986 by the Massachusetts Institute of Technology
d8 2
d14 1
a14 1
    "$Header: cr_err_reply.c,v 4.6 87/10/29 09:46:32 steiner Locked $";
d17 1
@


4.6
log
@cleanup; move mk_appl_err_msg to separate file
@
text
@d1 4
a4 4
/* 
 * 	$Source: /u3/kerberos.new/lib/krb/RCS/cr_err_reply.c,v $
 * 	$Author: steiner $
 * 	$Locker: jtkohl $
d12 2
a13 2
"$Header: cr_err_reply.c,v 4.5 87/10/28 16:03:22 jtkohl Locked $";
#endif	lint
d15 4
a18 4
#include	<sys/types.h>
#include        <krb.h>
#include	<prot.h>
#include	<strings.h>
d20 2
a21 2
extern int	req_act_vno;		/* this is defined in the kerberos
					   server code */
d23 1
a23 1
/* 
d28 7
a34 7
KTEXT	pkt;
char	*pname;				/* Principal's name */
char    *pinst;				/* Principal's instance */
char	*prealm;			/* Principal's authentication domain */
u_long	time_ws;			/* Workstation time */
u_long	e;				/* Error code */
char	*e_string;			/* Text of error */
d36 2
a37 2
	u_char *v = (u_char *) pkt->dat; /* Prot vers number */
	u_char *t = (u_char *)(pkt->dat+1); /* Prot message type */
d39 4
a42 4
	/* Create fixed part of packet */
	*v = (unsigned char) req_act_vno; /* KRB_PROT_VERSION;*/
	*t = (unsigned char) AUTH_MSG_ERR_REPLY;
	*t |= HOST_BYTE_ORDER;
d44 16
a59 16
	/* Add the basic info */
	(void) strcpy((char *) (pkt->dat+2),pname); 
	pkt->length = 3 + strlen(pname);
	(void) strcpy((char *)(pkt->dat+pkt->length),pinst); 
	pkt->length += 1 + strlen(pinst);
	(void) strcpy((char *)(pkt->dat+pkt->length),prealm); 
	pkt->length += 1 + strlen(prealm);
	/* ws timestamp*/
	bcopy((char *) &time_ws,(char *)(pkt->dat+pkt->length),4);
	pkt->length += 4;
	/* err code */
	bcopy((char *) &e,(char *)(pkt->dat+pkt->length),4);
	pkt->length += 4;
	/* err text */
	(void) strcpy((char *)(pkt->dat+pkt->length),e_string);
	pkt->length += 1 + strlen(e_string);
d61 2
a62 2
	/* And return  */
	return;
@


4.5
log
@Took out byteorder.h; that info is now in krb_conf.h.
@
text
@d4 1
a4 1
 * 	$Locker: steiner $
d12 1
a12 1
"$Header: cr_err_reply.c,v 4.4 87/10/28 15:38:25 steiner Locked $";
d20 2
a21 1
extern int	req_act_vno;
d29 6
a34 6
char	*pname;	        /* Principal's name								*/
char    *pinst;         /* Principal's instance                         */
char	*prealm;		/* Principal's authentication domain            */
u_long	time_ws;		/* Workstation time								*/
u_long	e;				/* Error code									*/
char	*e_string;				/* Text of error						   */
d36 2
a37 2
	u_char		*v =  (u_char *) pkt->dat;		/* Prot vers number	*/
	u_char		*t =  (u_char *)(pkt->dat+1);	/* Prot message type	*/
a63 33


/* This routine creates a general purpose error reply message
 * Doesn't use KTEXT because application protocol may have long messages,
 * and may want this part of buffer contiguous to other stuff.
 */

/* UNUSED ??? */
long
mk_appl_err_msg(p,e,e_string)
u_char	*p;
long	e;				/* Error code									*/
char	*e_string;				/* Text of error						   */
{
	u_char	*start;

	start = p;

	/* Create fixed part of packet */
	*p++ = (unsigned char) KRB_PROT_VERSION;
	*p = (unsigned char) AUTH_MSG_APPL_ERR;
	*p++ |= HOST_BYTE_ORDER;

	/* Add the basic info */
	bcopy((char *)&e,(char *)p,4);	/* err code */
	p += sizeof(e);
	(void) strcpy((char *)p,e_string); /* err text */
	p += strlen(e_string);

	/* And return the length */
	return p-start;
}

@


4.4
log
@jtkohl's changes.
@
text
@d2 3
a4 3
 * 	$Source: /paris/u3/kerberos.new/lib/krb/RCS/cr_err_reply.c,v $
 * 	$Author: jtkohl $
 * 	$Locker: jtkohl $
d11 2
a12 1
static char *rcsid_cr_err_reply_c = "$Header: cr_err_reply.c,v 4.3 87/10/20 17:06:15 jtkohl Locked $";
a17 1
#include	<byteorder.h>
@


4.3
log
@lint fixes
@
text
@d2 2
a3 2
 * 	$Source: /u3/kerberos.new/lib/krb/RCS/cr_err_reply.c,v $
 * 	$Author: steiner $
d11 1
a11 1
static char *rcsid_cr_err_reply_c = "$Header: cr_err_reply.c,v 4.2 87/09/10 16:20:07 jtkohl Locked $";
a19 1
extern	int	debug;
d70 1
@


4.2
log
@Changed include files configuration and referencing.
@
text
@d2 1
a2 1
 * 	$Source: /mit/s/t/steiner/kerberos/lib/krb/RCS/cr_err_reply.c,v $
d4 1
a4 1
 * 	$Locker: steiner $
d11 1
a11 1
static char *rcsid_cr_err_reply_c = "$Header: cr_err_reply.c,v 4.1 87/09/01 15:45:59 steiner Locked $";
d17 2
a37 2
	long		*tws;		/* Workstation time	*/
	int		offset;			/* Temporary		*/
d45 1
a45 1
	strcpy(pkt->dat+2,pname); 
d47 1
a47 1
	strcpy(pkt->dat+pkt->length,pinst); 
d49 1
a49 1
	strcpy(pkt->dat+pkt->length,prealm); 
d51 2
a52 1
	bcopy(&time_ws,pkt->dat+pkt->length,4);	/* ws timestamp*/
d54 2
a55 1
	bcopy(&e,pkt->dat+pkt->length,4);	/* err code */
d57 2
a58 1
	strcpy(pkt->dat+pkt->length,e_string);	/* err text					   */
d87 1
a87 1
	bcopy(&e,p,4);		/* err code */
d89 1
a89 1
	strcpy(p,e_string);	/* err text					   */
@


4.1
log
@No change; starting version 4.
@
text
@d3 1
a3 1
 * 	$Author: bcn $
d11 1
a11 1
static char *rcsid_cr_err_reply_c = "$Header: cr_err_reply.c,v 3.4 86/09/05 16:17:45 steiner Locked $";
d16 1
a16 1
#include	"prot.h"
@


3.4
log
@Contains hack for compatability with V3 protocol.
@
text
@d2 3
a4 3
 * 	$Source: /mit/projects/auth/src/lib/krb/RCS/cr_err_reply.c,v $
 * 	$Author: spm $
 * 	$Locker: bcn $
d11 1
a11 1
static char *rcsid_cr_err_reply_c = "$Header: cr_err_reply.c,v 3.3 86/05/23 13:08:52 spm Exp $";
@


3.3
log
@*** empty log message ***
@
text
@d4 1
a4 1
 * 	$Locker: spm $
d11 1
a11 1
static char *rcsid_cr_err_reply_c = "$Header: cr_err_reply.c,v 3.2 86/05/14 15:26:23 spm Exp $";
d19 1
d40 1
a40 1
	*v = (unsigned char) KRB_PROT_VERSION;
@


3.2
log
@*** empty log message ***
@
text
@d3 2
a4 2
 * 	$Author: bcn $
 * 	$Locker:  $
d11 1
a11 1
static char *rcsid_cr_err_reply_c = "$Header: cr_err_reply.c,v 3.1 86/03/28 13:57:14 bcn Exp $";
d68 1
a68 1
cr_appl_err_reply(p,e,e_string)
d70 1
a70 1
u_long	e;				/* Error code									*/
@


3.1
log
@struct packt <-> KTEXT
@
text
@d3 1
a3 1
 * 	$Author: spm $
d11 1
a11 1
static char *rcsid_cr_err_reply_c = "$Header: cr_err_reply.c,v 1.1 86/03/14 15:35:11 spm Exp $";
d21 1
a21 1
 * This routine creates a general purpose error reply from kerberos.
d59 31
@


1.1
log
@Initial revision
@
text
@d3 2
a4 3
 * 	$Author: bcn $
 * 	$Locker: bcn $
 *    	$Log:	cr_err_reply.c,v $
d11 1
a11 1
static char *rcsid_cr_err_reply_c = "$Header: cr_err_reply.c,v 1.10 85/11/20 13:51:20 bcn Exp $";
d25 1
a25 1
struct	packet	*pkt;
@
