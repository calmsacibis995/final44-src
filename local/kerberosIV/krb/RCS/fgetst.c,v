head     4.0;
branch   ;
access   ;
symbols  PATCH8:4.0 PATCH7:4.0 KPATCH6:4.0 ASRSNAP1001:4.0 PATCH5:4.0 KPATCH4:4.0 KPATCH3:4.0 KPATCH2:4.0 KREL1:4.0 BETA5/24/88:1.2;
locks    ; strict;
comment  @ * @;


4.0
date     89.01.23.10.08.31;  author jtkohl;  state Exp;
branches ;
next     1.3;

1.3
date     88.10.07.06.08.24;  author shanzer;  state Exp;
branches ;
next     1.2;

1.2
date     88.02.24.18.11.33;  author steiner;  state Exp;
branches ;
next     1.1;

1.1
date     88.02.01.18.56.39;  author steiner;  state Exp;
branches ;
next     ;


desc
@Written by Bill Sommerfeld.
Audited by John Kohl.
@


4.0
log
@No change, incrementing vno to 4.x
@
text
@/*
 * $Source: /mit/kerberos/src/lib/krb/RCS/fgetst.c,v $
 * $Author: shanzer $ 
 *
 * Copyright 1987, 1988 by the Massachusetts Institute of Technology. 
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>. 
 */

#ifndef lint
static char rcsid_fgetst_c[] =
"$Header: fgetst.c,v 1.3 88/10/07 06:08:24 shanzer Exp $";
#endif				/* lint */

#include <mit-copyright.h>
#include <stdio.h>

/*
 * fgetst takes a file descriptor, a character pointer, and a count.
 * It reads from the file it has either read "count" characters, or
 * until it reads a null byte.  When finished, what has been read exists
 * in "s". If "count" characters were actually read, the last is changed
 * to a null, so the returned string is always null-terminated.  fgetst
 * returns the number of characters read, including the null terminator. 
 */

fgetst(f, s, n)
    FILE   *f;
    register char *s;
    int     n;
{
    register count = n;
    int     ch;		/* NOT char; otherwise you don't see EOF */

    while ((ch = getc(f)) != EOF && ch && --count) {
	*s++ = ch;
    }
    *s = '\0';
    return (n - count);
}
@


1.3
log
@Added Wonderfull comments
Programer: steiner
Auditor: shanzer
@
text
@d3 1
a3 1
 * $Author: steiner $ 
d13 1
a13 1
"$Header: fgetst.c,v 1.2 88/02/24 18:11:33 steiner Exp $";
@


1.2
log
@Copyright notice, etc.
@
text
@a8 8
 *
 * fgetst takes a file descriptor, a string and a count.  It will read
 * from the file until either it has read count characters, or until it
 * reads a null byte.  When finished, what has been read exists in s. 
 * If count characters were actually read, the last is changed to a
 * null, so the returned string is always null-terminated.  fgetst
 * returns the number of characters read, including the null
 * terminator. 
d13 1
a13 1
"$Header: fgetst.c,v 1.1 88/02/01 18:56:39 steiner Locked $";
d18 9
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/src/lib/krb/RCS/getst.c,v $
d5 1
a5 1
 * Copyright 1987 by the Massachusetts Institute of Technology. 
d19 5
a25 5

#ifndef lint
static char rcsid_module_c[] =
"$Header: getst.c,v 4.3 88/01/12 21:20:45 steiner Exp $";
#endif				/* lint */
@
