head     4.10;
branch   ;
access   ;
symbols  PATCH8:4.9 PATCH7:4.9 KPATCH6:4.9 ASRSNAP1001:4.9 PATCH5:4.9 KPATCH4:4.8 KPATCH3:4.8 KPATCH2:4.8 KREL1:4.8 BETA5/24/88:4.5;
locks    ; strict;
comment  @ * @;


4.10
date     90.06.25.20.56.10;  author kfall;  state Exp;
branches ;
next     4.9;

4.9
date     89.07.18.16.33.34;  author jtkohl;  state Exp;
branches ;
next     4.8;

4.8
date     89.01.13.18.21.55;  author steiner;  state Exp;
branches ;
next     4.7;

4.7
date     88.12.01.14.01.03;  author jtkohl;  state Exp;
branches ;
next     4.6;

4.6
date     88.11.15.16.30.13;  author jtkohl;  state Exp;
branches ;
next     4.5;

4.5
date     88.02.24.18.12.39;  author steiner;  state Exp;
branches ;
next     4.4;

4.4
date     88.01.12.21.20.32;  author steiner;  state Exp;
branches ;
next     4.3;

4.3
date     87.10.20.17.12.53;  author jtkohl;  state Exp;
branches ;
next     4.2;

4.2
date     87.09.10.16.21.12;  author steiner;  state Exp;
branches ;
next     4.1;

4.1
date     87.09.01.15.47.47;  author steiner;  state Exp;
branches ;
next     1.1;

1.1
date     87.07.06.14.14.11;  author jis;  state Exp;
branches ;
next     ;


desc
@Fetch initial tickets using /etc/srvtab as the source of the private
key to use for decoding the received tickets.
@


4.10
log
@include des.h
@
text
@/*
 * $Source: /usr/src/kerberosIV/src/lib/krb/RCS/get_svc_in_tkt.c,v $
 * $Author: jtkohl $
 *
 * Copyright 1987, 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef lint
static char rcsid_get_svc_in_tkt_c[] =
"$Header: /usr/src/kerberosIV/src/lib/krb/RCS/get_svc_in_tkt.c,v 4.9 89/07/18 16:33:34 jtkohl Exp Locker: kfall $";
#endif /* lint */

#include <mit-copyright.h>
#include <des.h>
#include <krb.h>
#include <prot.h>

#ifndef NULL
#define NULL 0
#endif

/*
 * This file contains two routines: srvtab_to_key(), which gets
 * a server's key from a srvtab file, and krb_get_svc_in_tkt() which
 * gets an initial ticket for a server.
 */

/*
 * srvtab_to_key(): given a "srvtab" file (where the keys for the
 * service on a host are stored), return the private key of the
 * given service (user.instance@@realm).
 *
 * srvtab_to_key() passes its arguments on to read_service_key(),
 * plus one additional argument, the key version number.
 * (Currently, the key version number is always 0; this value
 * is treated as a wildcard by read_service_key().)
 *
 * If the "srvtab" argument is null, KEYFILE (defined in "krb.h")
 * is passed in its place.
 *
 * It returns the return value of the read_service_key() call.
 * The service key is placed in "key".
 */

static int srvtab_to_key(user, instance, realm, srvtab, key)
    char *user, *instance, *realm, *srvtab;
    C_Block key;
{
    if (!srvtab)
        srvtab = KEYFILE;

    return(read_service_key(user, instance, realm, 0, srvtab,
                            (char *)key));
}

/*
 * krb_get_svc_in_tkt() passes its arguments on to krb_get_in_tkt(),
 * plus two additional arguments: a pointer to the srvtab_to_key()
 * function to be used to get the key from the key file and a NULL
 * for the decryption procedure indicating that krb_get_in_tkt should 
 * use the default method of decrypting the response from the KDC.
 *
 * It returns the return value of the krb_get_in_tkt() call.
 */

krb_get_svc_in_tkt(user, instance, realm, service, sinstance, life, srvtab)
    char *user, *instance, *realm, *service, *sinstance;
    int life;
    char *srvtab;
{
    return(krb_get_in_tkt(user, instance, realm, service, sinstance,
                          life, srvtab_to_key, NULL, srvtab));
}
@


4.9
log
@changes to allow alternate decryption routine for ticket responses from
KDC.
Programmer: Jay Berkenbilt
Auditor: John Kohl
@
text
@d2 2
a3 2
 * $Source: /mit/kerberos/src/lib/krb/RCS/get_svc_in_tkt.c,v $
 * $Author: steiner $
d13 1
a13 1
"$Header: get_svc_in_tkt.c,v 4.8 89/01/13 18:21:55 qjb Locked $";
d17 1
@


4.8
log
@Programmer: jtkohl
Auditor: steiner
changes: function names.
@
text
@d3 1
a3 1
 * $Author: jtkohl $
d13 1
a13 1
"$Header: get_svc_in_tkt.c,v 4.7 88/12/01 14:01:03 jtkohl Locked $";
d20 4
d60 4
a63 2
 * plus one additional argument: a pointer to the srvtab_to_key()
 * function.
d74 1
a74 1
                          life, srvtab_to_key, srvtab));
@


4.7
log
@Programmer: Jennifer Steiner
Auditor: John Kohl
changes: improve documentation of code
@
text
@d13 1
a13 1
"$Header: get_svc_in_tkt.c,v 4.6 88/11/15 16:30:13 steiner Locked $";
d22 1
a22 1
 * a server's key from a srvtab file, and get_svc_in_tkt() which
d55 1
a55 1
 * get_svc_in_tkt() passes its arguments on to krb_get_in_tkt(),
d62 1
a62 1
get_svc_in_tkt(user, instance, realm, service, sinstance, life, srvtab)
@


4.6
log
@Documentor: Jennifer Steiner
Auditor: John Kohl
changes: document the code properly
@
text
@d3 1
a3 1
 * $Author: steiner $
d13 1
a13 1
"$Header: get_svc_in_tkt.c,v 4.5 88/02/24 18:12:39 steiner Locked $";
d21 9
a29 3
 * Given a "srvtab" file (where the keys for the service on a host
 * are stored), return the private key of the given service
 * (user.instance@@realm).
d32 4
a35 1
 * plus one additional argument (0, the key version number).
@


4.5
log
@Copyright notice, etc.
@
text
@d13 1
a13 1
"$Header: get_svc_in_tkt.c,v 4.4 88/01/12 21:20:32 steiner Locked $";
d20 14
d44 8
@


4.4
log
@Formatting changes.
Programmer: Ken.
Auditor: Jon.
@
text
@d2 2
d5 1
a5 3
 *  $Source: /mit/kerberos/lib/krb/RCS/get_svc_in_tkt.c,v $
 *  $Author: jtkohl $
 *  $Locker: steiner $
d7 2
a8 2
 * Copyright 1987 by the Massachusetts Institute of Technology
 *
d11 6
a18 5

#ifndef lint
static char rcsid_srvtab_in_tkt_c[] =
  "$Header: get_svc_in_tkt.c,v 4.3 87/10/20 17:12:53 steiner Locked $";
#endif /* lint */
@


4.3
log
@lint fixes.
@
text
@d3 3
a5 3
 *  $Source: /u3/kerberos.new/lib/krb/RCS/srvtab_in_tkt.c,v $
 *  $Author: steiner $
 *  $Locker: jtkohl $
d15 2
a16 1
static char rcsid_srvtab_in_tkt_c[] = "$Header: srvtab_in_tkt.c,v 4.2 87/09/10 16:21:12 jtkohl Locked $";
d19 3
a21 4
static int
srvtab_to_key(user,instance,realm,srvtab,key)
     char *user, *instance, *realm, *srvtab;
     C_Block key;
d23 2
a24 2
     if (!srvtab)
	  srvtab = KEYFILE;
d26 2
a27 1
     return(read_service_key(user, instance, realm, 0, srvtab, (char *)key));
d30 4
a33 4
get_svc_in_tkt(user,instance,realm,service,sinstance,life,srvtab)
     char *user, *instance, *realm, *service, *sinstance;
     int life;
     char *srvtab;
d35 2
a36 2
     return(krb_get_in_tkt(user,instance,realm,service,sinstance,life,
			   srvtab_to_key, srvtab));
@


4.2
log
@Changed include files configuration and referencing.
@
text
@d3 1
a3 1
 *  $Source: /mit/s/t/steiner/kerberos/lib/krb/RCS/srvtab_in_tkt.c,v $
d5 1
a5 1
 *  $Locker: steiner $
d15 1
a15 1
static char rcsid_srvtab_in_tkt_c[] = "$Header: srvtab_in_tkt.c,v 4.1 87/09/01 15:47:47 steiner Locked $";
d26 1
a26 1
     return(read_service_key(user, instance, realm, 0, srvtab, key));
@


4.1
log
@No change; starting version 4.
@
text
@d4 1
a4 1
 *  $Author: jis $
d12 1
a12 1
#include "prot.h"
d15 1
a15 1
static char rcsid_srvtab_in_tkt_c[] = "$Header: srvtab_in_tkt.c,v 1.1 87/07/06 14:14:11 steiner Locked $";
@


1.1
log
@Initial revision
@
text
@d3 3
a5 3
 *  $Source$
 *  $Author$
 *  $Locker$
d15 1
a15 1
static char rcsid_srvtab_in_tkt_c[] = "$Header$";
@
