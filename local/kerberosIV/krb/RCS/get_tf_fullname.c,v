head     4.2;
branch   ;
access   ;
symbols  PATCH8:4.1 PATCH7:4.0 KPATCH6:4.0 ASRSNAP1001:4.0 PATCH5:4.0;
locks    ; strict;
comment  @ * @;


4.2
date     90.06.25.20.56.14;  author kfall;  state Exp;
branches ;
next     4.1;

4.1
date     90.01.02.13.40.09;  author jtkohl;  state Exp;
branches ;
next     4.0;

4.0
date     89.07.25.16.52.28;  author jtkohl;  state Exp;
branches ;
next     ;


desc
@Retrieve the full kerberos name of the current user, by reading
the ticket cache
@


4.2
log
@include des.h
@
text
@/*
 * $Source: /usr/src/kerberosIV/src/lib/krb/RCS/get_tf_fullname.c,v $
 * $Author: jtkohl $
 *
 * Copyright 1987, 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef lint
static char rcsid_get_tf_fullname_c[] =
"$Id: get_tf_fullname.c,v 4.1 90/01/02 13:40:09 jtkohl Exp Locker: kfall $";
#endif /* lint */

#include <mit-copyright.h>
#include <des.h>
#include <krb.h>
#include <strings.h>

/*
 * This file contains a routine to extract the fullname of a user
 * from the ticket file.
 */

/*
 * krb_get_tf_fullname() takes four arguments: the name of the 
 * ticket file, and variables for name, instance, and realm to be
 * returned in.  Since the realm of a ticket file is not really fully 
 * supported, the realm used will be that of the the first ticket in 
 * the file as this is the one that was obtained with a password by
 * krb_get_in_tkt().
 */

krb_get_tf_fullname(ticket_file, name, instance, realm)
  char *ticket_file;
  char *name;
  char *instance;
  char *realm;
{
    int tf_status;
    CREDENTIALS c;

    if ((tf_status = tf_init(ticket_file, R_TKT_FIL)) != KSUCCESS)
	return(tf_status);

    if (((tf_status = tf_get_pname(c.pname)) != KSUCCESS) ||
	((tf_status = tf_get_pinst(c.pinst)) != KSUCCESS))
	return (tf_status);
    
    if (name)
	strcpy(name, c.pname);
    if (instance)
	strcpy(instance, c.pinst);
    if ((tf_status = tf_get_cred(&c)) == KSUCCESS) {
	if (realm)
	    strcpy(realm, c.realm);
    }
    else
	return(tf_status);
    
    (void) tf_close();
    
    return(tf_status);
}
@


4.1
log
@change $Header to $Id
@
text
@d2 1
a2 1
 * $Source: /afs/athena.mit.edu/astaff/project/kerberos/src/lib/krb/RCS/get_tf_fullname.c,v $
d13 1
a13 1
"$Id: /afs/athena.mit.edu/astaff/project/kerberos/src/lib/krb/RCS/get_tf_fullname.c,v 4.0 89/07/25 16:52:28 jtkohl Exp Locker: jtkohl $";
d17 1
@


4.0
log
@Programmer: Jay Berkenbilt
Auditor: John Kohl
initial check-in
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/src/lib/krb/RCS/get_tf_realm.c,v $
d13 1
a13 1
"$Header: get_tf_realm.c,v 4.0 89/07/07 15:13:09 jtkohl Exp $";
@
