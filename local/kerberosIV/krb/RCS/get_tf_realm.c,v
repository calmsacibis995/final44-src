head     4.3;
branch   ;
access   ;
symbols  PATCH8:4.2 PATCH7:4.1 KPATCH6:4.1 ASRSNAP1001:4.1 PATCH5:4.1;
locks    ; strict;
comment  @ * @;


4.3
date     90.06.25.20.56.18;  author kfall;  state Exp;
branches ;
next     4.2;

4.2
date     90.01.02.13.40.19;  author jtkohl;  state Exp;
branches ;
next     4.1;

4.1
date     89.07.25.16.54.24;  author jtkohl;  state Exp;
branches ;
next     4.0;

4.0
date     89.07.07.15.13.09;  author jtkohl;  state Exp;
branches ;
next     ;


desc
@Get ticket file realm--return realm of first ticket in ticket file
@


4.3
log
@include des.h
@
text
@/*
 * $Source: /usr/src/kerberosIV/src/lib/krb/RCS/get_tf_realm.c,v $
 * $Author: jtkohl $
 *
 * Copyright 1987, 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef lint
static char rcsid_get_tf_realm_c[] =
"$Id: get_tf_realm.c,v 4.2 90/01/02 13:40:19 jtkohl Exp Locker: kfall $";
#endif /* lint */

#include <mit-copyright.h>
#include <des.h>
#include <krb.h>
#include <strings.h>

/*
 * This file contains a routine to extract the realm of a kerberos
 * ticket file.
 */

/*
 * krb_get_tf_realm() takes two arguments: the name of a ticket 
 * and a variable to store the name of the realm in.
 * 
 */

krb_get_tf_realm(ticket_file, realm)
  char *ticket_file;
  char *realm;
{
    return(krb_get_tf_fullname(ticket_file, 0, 0, realm));
}
@


4.2
log
@change $Header to $Id
@
text
@d2 1
a2 1
 * $Source: /afs/athena.mit.edu/astaff/project/kerberos/src/lib/krb/RCS/get_tf_realm.c,v $
d13 1
a13 1
"$Id: /afs/athena.mit.edu/astaff/project/kerberos/src/lib/krb/RCS/get_tf_realm.c,v 4.1 89/07/25 16:54:24 jtkohl Exp Locker: jtkohl $";
d17 1
@


4.1
log
@Programmer: Jay Berkenbilt
Auditor: John Kohl
change to use new subroutine interface in get_tf_fullname
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/src/lib/krb/RCS/get_tf_realm.c,v $
d13 1
a13 1
"$Header: get_tf_realm.c,v 4.0 89/07/07 15:13:09 qjb Locked $";
@


4.0
log
@Programmer: Jay Berkenbilt
Auditor: John Kohl
initial check-in
@
text
@d2 2
a3 2
 * $Source:$
 * $Author:$
d13 1
a13 1
"$Header:$";
d26 3
a28 13
 * krb_get_tf_realm() takes as its one argument the name of a ticket
 * file and returns the realm of that file.  Since the realm of a 
 * ticket file is not really fully supported, the realm used will 
 * be that of the the first ticket in the file as this is the one
 * that was obtained with a password.
 *
 * One may think at first that the best place for this routine would
 * be in tf_util and that it should be called tf_get_prealm. The problem
 * with this is that the tf_* routines read things in order from the 
 * ticket file and as this is not in the principal part of the ticket
 * file, implementing there would involve saving file pointer information
 * and restoring it later; i.e., this is not really the same kind of
 * function as the other tf_* utilities.
d35 1
a35 15
    int tf_status;
    CREDENTIALS c;

    if ((tf_status = tf_init(ticket_file, R_TKT_FIL)) != KSUCCESS)
	return(tf_status);
    if ((tf_status = tf_get_pname(c.pname)) != KSUCCESS ||
	(tf_status = tf_get_pinst(c.pinst)) != KSUCCESS)
	return (tf_status);
    if ((tf_status = tf_get_cred(&c)) == KSUCCESS)
	strcpy(realm, c.realm);
    else
	return(tf_status);
    (void) tf_close();

    return(tf_status);
@
