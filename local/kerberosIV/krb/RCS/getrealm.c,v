head     4.8;
branch   ;
access   ;
symbols  PATCH8:4.6 PATCH7:4.4 KPATCH6:4.4 ASRSNAP1001:4.4 PATCH5:4.4 KPATCH4:4.4 KPATCH3:4.4 KPATCH2:4.4 KREL1:4.4 BETA5/24/88:1.1;
locks    ; strict;
comment  @ * @;


4.8
date     92.07.19.13.21.11;  author bostic;  state Exp;
branches ;
next     4.7;

4.7
date     90.06.25.20.56.21;  author kfall;  state Exp;
branches ;
next     4.6;

4.6
date     90.01.02.13.35.56;  author jtkohl;  state Exp;
branches ;
next     4.5;

4.5
date     89.12.30.19.48.23;  author qjb;  state Exp;
branches ;
next     4.4;

4.4
date     89.01.23.09.17.58;  author jtkohl;  state Exp;
branches ;
next     4.3;

4.3
date     89.01.21.17.21.54;  author jtkohl;  state Exp;
branches ;
next     4.2;

4.2
date     88.11.15.15.44.22;  author jtkohl;  state Exp;
branches ;
next     4.1;

4.1
date     88.11.15.14.32.55;  author jtkohl;  state Exp;
branches ;
next     1.3;

1.3
date     88.10.07.05.12.20;  author shanzer;  state Exp;
branches ;
next     1.2;

1.2
date     88.05.25.16.52.52;  author steiner;  state Exp;
branches ;
next     1.1;

1.1
date     88.04.25.14.11.00;  author steiner;  state Exp;
branches ;
next     ;


desc
@Routine to determine Kerberos realm, given host name
or domain name.
Programmer: jtkohl.
Auditor: steiner.
@


4.8
log
@check in for Kevin Fall by TK; change krb_get_lrealm call
@
text
@/*
 * $Source: /usr/src/kerberosIV/krb/RCS/getrealm.c,v $
 * $Author: kfall $
 *
 * Copyright 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 *
 * routine to convert hostname into realm name.
 */

#ifndef	lint
static char rcsid_getrealm_c[] =
"$Id: getrealm.c,v 4.7 90/06/25 20:56:21 kfall Exp Locker: kfall $";
#endif	lint

#include <mit-copyright.h>
#include <strings.h>
#include <stdio.h>
#include <ctype.h>
#include <des.h>
#include <krb.h>
#include <sys/param.h>

/* for Ultrix and friends ... */
#ifndef MAXHOSTNAMELEN
#define MAXHOSTNAMELEN 64
#endif

/*
 * krb_realmofhost.
 * Given a fully-qualified domain-style primary host name,
 * return the name of the Kerberos realm for the host.
 * If the hostname contains no discernable domain, or an error occurs,
 * return the local realm name, as supplied by get_krbrlm().
 * If the hostname contains a domain, but no translation is found,
 * the hostname's domain is converted to upper-case and returned.
 *
 * The format of each line of the translation file is:
 * domain_name kerberos_realm
 * -or-
 * host_name kerberos_realm
 *
 * domain_name should be of the form .XXX.YYY (e.g. .LCS.MIT.EDU)
 * host names should be in the usual form (e.g. FOO.BAR.BAZ)
 */

static char ret_realm[REALM_SZ+1];

char *
krb_realmofhost(host)
char *host;
{
	char *domain;
	FILE *trans_file;
	char trans_host[MAXHOSTNAMELEN+1];
	char trans_realm[REALM_SZ+1];
	int retval;

	domain = index(host, '.');

	/* prepare default */
	if (domain) {
		char *cp;

		strncpy(ret_realm, &domain[1], REALM_SZ);
		ret_realm[REALM_SZ] = '\0';
		/* Upper-case realm */
		for (cp = ret_realm; *cp; cp++)
			if (islower(*cp))
				*cp = toupper(*cp);
	} else {
		krb_get_lrealm(ret_realm, 0);
	}

	if ((trans_file = fopen(KRB_RLM_TRANS, "r")) == (FILE *) 0) {
		/* krb_errno = KRB_NO_TRANS */
		return(ret_realm);
	}
	while (1) {
		if ((retval = fscanf(trans_file, "%s %s",
				     trans_host, trans_realm)) != 2) {
			if (retval == EOF) {
				fclose(trans_file);
				return(ret_realm);
			}
			continue;	/* ignore broken lines */
		}
		trans_host[MAXHOSTNAMELEN] = '\0';
		trans_realm[REALM_SZ] = '\0';
		if (!strcasecmp(trans_host, host)) {
			/* exact match of hostname, so return the realm */
			(void) strcpy(ret_realm, trans_realm);
			fclose(trans_file);
			return(ret_realm);
		}
		if ((trans_host[0] == '.') && domain) { 
			/* this is a domain match */
			if (!strcasecmp(trans_host, domain)) {
				/* domain match, save for later */
				(void) strcpy(ret_realm, trans_realm);
				continue;
			}
		}
	}
}
@


4.7
log
@include des.h
@
text
@d2 2
a3 2
 * $Source: /usr/src/kerberosIV/src/lib/krb/RCS/getrealm.c,v $
 * $Author: jtkohl $
d15 1
a15 1
"$Id: getrealm.c,v 4.6 90/01/02 13:35:56 jtkohl Exp Locker: kfall $";
d74 1
a74 1
		krb_get_lrealm(ret_realm, 1);
@


4.6
log
@change $Header$ to $Id$
@
text
@d2 2
a3 2
 * $Source: /afs/athena.mit.edu/astaff/project/kerberos/src/lib/krb/RCS/getrealm.c,v $
 * $Author: qjb $
d15 1
a15 1
"$Id: /afs/athena.mit.edu/astaff/project/kerberos/src/lib/krb/RCS/getrealm.c,v 4.5 89/12/30 19:48:23 qjb Exp Locker: jtkohl $";
d22 1
@


4.5
log
@Changed an = to an ==
Author: jtkohl
Auditor: qjb
@
text
@d3 1
a3 1
 * $Author: jtkohl $
d15 1
a15 1
"$Header: /afs/athena.mit.edu/astaff/project/kerberos/src/lib/krb/RCS/getrealm.c,v 4.4 89/01/23 09:17:58 jtkohl Exp Locker: jtkohl $";
@


4.4
log
@Programmer/Auditor: John Kohl
changes: name changes to krb_xxx
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/src/lib/krb/RCS/getrealm.c,v $
d15 1
a15 1
"$Header: getrealm.c,v 4.3 89/01/21 17:21:54 jtkohl Locked $";
d97 1
a97 1
		if ((trans_host[0] = '.') && domain) { 
@


4.3
log
@lint cleanup
@
text
@d15 1
a15 1
"$Header: getrealm.c,v 4.2 88/11/15 15:44:22 jtkohl Locked $";
d31 1
a31 1
 * krb_getrealm.
d51 1
a51 1
krb_getrealm(host)
d73 1
a73 1
		get_krbrlm(ret_realm, 1);
@


4.2
log
@Programmer: Stan Zanarotti
Auditor: John Kohl
changes: upper-case the domain name for a realm.
@
text
@d3 1
a3 1
 * $Author: shanzer $
d15 1
a15 1
"$Header: getrealm.c,v 1.3 88/10/07 05:12:20 steiner Locked $";
d54 1
a54 1
	char *domain, *trans_idx;
@


4.1
log
@Documenter: Jennifer Steiner
Auditor: John Kohl
changes: make the comments match the code.
@
text
@d15 1
a15 1
"$Header: getrealm.c,v 1.3 88/10/07 05:12:20 shanzer Exp $";
d21 1
d37 1
a37 1
 * the hostname's domain is returned.
d64 2
d68 4
@


1.3
log
@Fixed file descriptor leak..
Programer: rfrench
Auditor: shanzer
@
text
@d3 1
a3 1
 * $Author: steiner $
d15 1
a15 1
"$Header: getrealm.c,v 1.2 88/05/25 16:52:52 steiner Exp $";
d34 3
a36 1
 * return the local realm name, as supplied by get_krbrlm()
@


1.2
log
@Ultrix changes.
Programmer: jon.
Auditor: jtkohl.
@
text
@d15 1
a15 1
"$Header: getrealm.c,v 1.1 88/04/25 14:11:00 steiner Exp $";
d74 2
a75 1
			if (retval == EOF)
d77 1
d85 1
@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
 * $Source: $
 * $Author: $
d15 1
a15 1
"$Header: $";
d23 5
@
