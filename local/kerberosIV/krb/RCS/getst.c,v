head     4.5;
branch   ;
access   ;
symbols  PATCH8:4.5 PATCH7:4.5 KPATCH6:4.5 ASRSNAP1001:4.5 PATCH5:4.5 KPATCH4:4.5 KPATCH3:4.5 KPATCH2:4.5 KREL1:4.5 BETA5/24/88:4.4;
locks    ; strict;
comment  @ * @;


4.5
date     88.11.15.16.31.39;  author jtkohl;  state Exp;
branches ;
next     4.4;

4.4
date     88.02.24.18.12.45;  author steiner;  state Exp;
branches ;
next     4.3;

4.3
date     88.01.12.21.20.45;  author steiner;  state Exp;
branches ;
next     4.2;

4.2
date     87.09.22.13.55.37;  author steiner;  state Exp;
branches ;
next     4.1;

4.1
date     87.09.01.15.46.41;  author steiner;  state Exp;
branches ;
next     3.1;

3.1
date     86.03.28.11.55.39;  author bcn;  state Exp;
branches ;
next     1.1;

1.1
date     85.12.06.14.29.42;  author bcn;  state Exp;
branches ;
next     ;


desc
@Get string from file.
@


4.5
log
@Documentor: Jennifer Steiner
Auditor: John Kohl
changes: document the code properly
@
text
@/*
 * $Source: /mit/kerberos/src/lib/krb/RCS/getst.c,v $
 * $Author: steiner $
 *
 * Copyright 1987, 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef lint
static char rcsid_getst_c[] =
"$Header: getst.c,v 4.4 88/02/24 18:12:45 steiner Locked $";
#endif /* lint */

#include <mit-copyright.h>

/*
 * getst() takes a file descriptor, a string and a count.  It reads
 * from the file until either it has read "count" characters, or until
 * it reads a null byte.  When finished, what has been read exists in
 * the given string "s".  If "count" characters were actually read, the
 * last is changed to a null, so the returned string is always null-
 * terminated.  getst() returns the number of characters read, including
 * the null terminator.
 */

getst(fd, s, n)
    int fd;
    register char *s;
{
    register count = n;
    while (read(fd, s, 1) > 0 && --count)
        if (*s++ == '\0')
            return (n - count);
    *s = '\0';
    return (n - count);
}
@


4.4
log
@Copyright notice, etc.
@
text
@a8 8
 *
 * getst takes a file descriptor, a string and a count.  It will read
 * from the file until either it has read count characters, or until
 * it reads a null byte.  When finished, what has been read exists in
 * s.  If count characters were actually read, the last is changed to
 * a null, so the returned string is always null-terminated.  getst
 * returns the number of characters read, including the null
 * terminator.
d13 1
a13 1
"$Header: getst.c,v 4.3 88/01/12 21:20:45 steiner Locked $";
d17 10
@


4.3
log
@Formatting changes.
Programmer: Ken.
Auditor: Jon.
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/lib/krb/RCS/getst.c,v $
d5 1
a5 1
 * Copyright 1987 by the Massachusetts Institute of Technology.
a18 2
#include <mit-copyright.h>

d20 2
a21 2
static char rcsid_module_c[] =
    "$Header: getst.c,v 4.2 87/09/22 13:55:37 steiner Locked $";
d23 2
@


4.2
log
@Revised user-level commands.
@
text
@d1 3
a3 3
/* 
 * $Source$
 * $Author$
d7 2
a8 2
 * For copying and distribution information,
 * please see the file <mit-copyright.h>.
d10 7
a16 8
 * getst takes a file descriptor, a string and a count.
 * It will read from the file until either it has read
 * count characters, or until it reads a null byte.
 * When finished, what has been read exists in s.  If count
 * characters were actually read, the last is changed to
 * a null, so the returned string is always null-terminated.
 * getst returns the number of characters read, including the
 * null terminator.
d19 1
a19 1
#include	<mit-copyright.h>
d21 1
a21 1
#ifndef	lint
d23 2
a24 2
"$Header$";
#endif	lint
d27 2
a28 2
int fd;
register char *s;
d30 6
a35 6
	register count = n;
	while (read(fd, s, 1) > 0 && --count)
		if (*s++ == '\0')
			return (n - count);
	*s = '\0';
	return (n - count);
@


4.1
log
@No change; starting version 4.
@
text
@d2 2
a3 3
 * 	$Source: /mit/s/t/steiner/kerberos/lib/krb/RCS/getst.c,v $
 * 	$Author: bcn $
 * 	$Locker: steiner $
d5 1
a5 1
 * Copyright 1985 by the Massachusetts Institute of Technology
d7 3
a9 7
 */

#ifndef lint
static char *rcsid_getst_c = "$Header: getst.c,v 3.1 86/03/28 11:55:39 steiner Locked $";
#endif	lint

/* 
d13 5
a17 2
 * When finished, what has been read exists in s.  It
 * returns the number of characters read.
d20 10
a29 3
getst(fd,s,n)
int     fd;
char    *s;
d31 6
a36 6
        int count = n;
        while (read(fd,s,1) && --count)
                {if (*(s++) == '\000') return(n - count);}
        *(s++) = '\000';
        return(n - count);

a37 2


@


3.1
log
@Rev changed from 1.1 to 3.1.  No other changes.
@
text
@d2 1
a2 1
 * 	$Source: /mit/projects/auth/src/lib/krb/RCS/getst.c,v $
d4 1
a4 1
 * 	$Locker: bcn $
d11 1
a11 1
static char *rcsid_getst_c = "$Header: getst.c,v 1.1 85/12/06 14:29:42 bcn Exp $";
@


1.1
log
@Initial revision
@
text
@d2 3
a4 4
 * 	$Source: $
 * 	$Author: $
 * 	$Locker: $
 *    	$Log:	 $
d11 1
a11 1
static char *rcsid_getst_c = "$Header: $";
@
