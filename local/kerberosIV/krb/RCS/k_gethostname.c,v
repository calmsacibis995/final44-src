head     4.2;
branch   ;
access   ;
symbols  PATCH8:4.1 PATCH7:4.1 KPATCH6:4.1 ASRSNAP1001:4.1 PATCH5:4.1 KPATCH4:4.1 KPATCH3:4.1 KPATCH2:4.1 KREL1:4.1 BETA5/24/88:1.5;
locks    ; strict;
comment  @ * @;


4.2
date     90.06.23.03.10.52;  author kfall;  state Exp;
branches ;
next     4.1;

4.1
date     88.12.01.14.04.42;  author jtkohl;  state Exp;
branches ;
next     1.5;

1.5
date     88.02.24.18.12.57;  author steiner;  state Exp;
branches ;
next     1.4;

1.4
date     88.01.12.21.20.57;  author steiner;  state Exp;
branches ;
next     1.3;

1.3
date     87.10.20.17.09.46;  author jtkohl;  state Exp;
branches ;
next     1.2;

1.2
date     87.09.22.13.55.50;  author steiner;  state Exp;
branches ;
next     1.1;

1.1
date     87.09.16.13.37.13;  author steiner;  state Exp;
branches ;
next     ;


desc
@Routine to get the host name for different machines.
@


4.2
log
@BSD-ify
@
text
@/*
 * $Source: /usr/src/kerberosIV/krb/RCS/k_gethostname.c,v $
 * $Author: jtkohl $
 *
 * Copyright 1987, 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef lint
static char rcsid_k_gethostname_c[] =
"$Header: /usr/src/kerberosIV/krb/RCS/k_gethostname.c,v 4.1 88/12/01 14:04:42 jtkohl Exp Locker: kfall $";
#endif /* lint */

#include <mit-copyright.h>

/*
 * Return the local host's name in "name", up to "namelen" characters.
 * "name" will be null-terminated if "namelen" is big enough.
 * The return code is 0 on success, -1 on failure.  (The calling
 * interface is identical to gethostname(2).)
 *
 * Currently defined for BSD 4.2 and PC.  The BSD version just calls
 * gethostname(); the PC code was taken from "kinit.c", and may or may
 * not work.
 */

k_gethostname(name, namelen)
    char *name;
    int namelen;
{
    return (gethostname(name, namelen));
}
@


4.1
log
@Programmer: Jennifer Steiner
Auditor: John Kohl
changes: improve documentation of code
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/src/lib/krb/RCS/k_gethostname.c,v $
d13 1
a13 1
"$Header: k_gethostname.c,v 1.6 88/12/01 14:04:17 jtkohl Exp $";
a17 14
#ifndef PC
#ifndef BSD42
teach me how to k_gethostname for your system here
#endif
#endif

#ifdef PC
#include <stdio.h>
typedef long in_name;
#include "custom.h"		/* where is this file? */
extern get_custom();
#define LEN 64			/* just a guess */
#endif /* PC */

d31 1
d33 1
a33 22
#ifdef BSD42
    return gethostname(name, namelen);
#endif

#ifdef PC
    char buf[LEN];
    char b1, b2, b3, b4;
    register char *ptr;

    get_custom();		/* should check for errors,
				 * return -1 on failure */
    ptr = (char *) &(custom.c_me);
    b1 = *ptr++;
    b2 = *ptr++;
    b3 = *ptr++;
    b4 = *ptr;
    (void) sprintf(buf,"PC address %d.%d.%d.%d",b1,b2,b3,b4);
    if (strlen(buf) > namelen)
        fprintf(stderr, "gethostname: namelen too small; truncating");
    strnpcy(name, buf, namelen);
    return 0;
#endif
@


1.5
log
@Copyright notice, etc.
@
text
@d3 1
a3 1
 * $Author: steiner $
a8 9
 *
 * Routine to get the host's name.
 * Currently defined for BSD 4.2 and PC.
 * The BSD version just calls gethostname; the PC version is code
 * taken from "kinit" and I don't know if it works.  -jgs
 *
 * Returns the host's name in "name", up to "namelen" characters.
 * Will be null-terminated if namelen is big enough.
 * The return code is 0 on success, -1 on failure.
d13 1
a13 1
"$Header: k_gethostname.c,v 1.4 88/01/12 21:20:57 steiner Locked $";
d31 11
@


1.4
log
@Formatting changes.
Programmer: Ken.
Auditor: Jon.
@
text
@d2 8
a17 9
 *
 * $Source: /mit/kerberos/lib/krb/RCS/k_gethostname.c,v $
 * $Author: jtkohl $
 *
 * Copyright 1987 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information,
 * please see the file <mit-copyright.h>.
 *
a19 2
#include <mit-copyright.h>

d21 2
a22 2
static char rcsid_module_c[] =
   "$Header: k_gethostname.c,v 1.3 87/10/20 17:09:46 steiner Locked $";
d24 2
@


1.3
log
@lint fixes
@
text
@d1 1
a1 1
/* 
d11 2
a12 2
 * $Source: /u3/kerberos.new/lib/krb/RCS/k_gethostname.c,v $
 * $Author: steiner $
d21 1
a21 1
#include	<mit-copyright.h>
d23 1
a23 1
#ifndef	lint
d25 2
a26 2
"$Header: k_gethostname.c,v 1.2 87/09/22 13:55:50 jtkohl Locked $";
#endif	lint
d34 2
a35 2
#ifdef  PC
#include	<stdio.h>
d37 4
a40 4
#include	"custom.h"	/* where is this file? */
extern  get_custom();	/* this should be in "custom.h", not here */
#define	LEN	64	/* just a guess */
#endif	PC
d43 1
a43 1
char *name;
d45 2
a46 2
#ifdef  BSD42
	return gethostname(name, namelen);
d49 4
a52 4
#ifdef  PC
	char buf[LEN];
	char b1, b2, b3, b4;
	register char *ptr;
d54 12
a65 11
	get_custom();	/* should check for errors, return -1 on failure */
	ptr = (char *) &(custom.c_me);
	b1 = *ptr++;
	b2 = *ptr++;
	b3 = *ptr++;
	b4 = *ptr;
	(void) sprintf(buf,"PC address %d.%d.%d.%d",b1,b2,b3,b4);
	if (strlen(buf) > namelen)
		fprintf(stderr, "gethostname: namelen too small; truncating");
	strnpcy(name, buf, namelen);
	return 0;
@


1.2
log
@Revised user-level commands.
@
text
@d11 1
a11 1
 * $Source: /mit/s/t/steiner/kerberos/lib/krb/RCS/k_gethostname.c,v $
d25 1
a25 1
"$Header: k_gethostname.c,v 1.1 87/09/16 13:37:13 steiner Locked $";
d60 1
a60 1
	sprintf(buf,"PC address %d.%d.%d.%d",b1,b2,b3,b4);
@


1.1
log
@Initial revision
@
text
@d11 2
a12 2
 * $Source$
 * $Author$
d25 1
a25 1
"$Header$";
d30 1
a30 1
don't know how to k_gethostname for this machine
d36 1
@
