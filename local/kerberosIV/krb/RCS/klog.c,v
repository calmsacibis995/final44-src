head     4.7;
branch   ;
access   ;
symbols  PATCH8:4.6 PATCH7:4.6 KPATCH6:4.6 ASRSNAP1001:4.6 PATCH5:4.6 KPATCH4:4.6 KPATCH3:4.6 KPATCH2:4.6 KREL1:4.6 BETA5/24/88:4.5;
locks    ; strict;
comment  @ * @;


4.7
date     90.06.25.20.56.31;  author kfall;  state Exp;
branches ;
next     4.6;

4.6
date     88.12.01.14.06.05;  author jtkohl;  state Exp;
branches ;
next     4.5;

4.5
date     88.02.24.18.13.03;  author steiner;  state Exp;
branches ;
next     4.4;

4.4
date     88.01.12.21.21.04;  author steiner;  state Exp;
branches ;
next     4.3;

4.3
date     87.10.20.17.09.51;  author jtkohl;  state Exp;
branches ;
next     4.2;

4.2
date     87.09.10.16.20.37;  author steiner;  state Exp;
branches ;
next     4.1;

4.1
date     87.09.01.15.46.45;  author steiner;  state Exp;
branches ;
next     3.4;

3.4
date     86.09.05.16.08.38;  author bcn;  state Exp;
branches ;
next     3.3;

3.3
date     86.08.13.15.51.19;  author bcn;  state Exp;
branches ;
next     3.2;

3.2
date     86.08.13.15.10.43;  author bcn;  state Exp;
branches ;
next     3.1;

3.1
date     86.08.12.12.26.28;  author bcn;  state Exp;
branches ;
next     ;


desc
@Routine to log messages fro the kerberos daemon.  Based on log.c,
but renamed, and arguments now take a message type.
@


4.7
log
@include des.h
@
text
@/*
 * $Source: /usr/src/kerberosIV/src/lib/krb/RCS/klog.c,v $
 * $Author: jtkohl $
 *
 * Copyright 1985, 1986, 1987, 1988 by the Massachusetts Institute
 * of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef lint
static char *rcsid_klog_c =
"$Header: /usr/src/kerberosIV/src/lib/krb/RCS/klog.c,v 4.6 88/12/01 14:06:05 jtkohl Exp Locker: kfall $";
#endif /* lint */

#include <mit-copyright.h>
#include <sys/time.h>
#include <stdio.h>

#include <des.h>
#include <krb.h>
#include <klog.h>

static char *log_name = KRBLOG;
static int is_open;
static char logtxt[1000];

/*
 * This file contains two logging routines: kset_logfile()
 * to determine the file to which log entries should be written;
 * and klog() to write log entries to the file.
 */

/*
 * klog() is used to add entries to the logfile (see kset_logfile()
 * below).  Note that it is probably not portable since it makes
 * assumptions about what the compiler will do when it is called
 * with less than the correct number of arguments which is the
 * way it is usually called.
 *
 * The log entry consists of a timestamp and the given arguments
 * printed according to the given "format" string.
 *
 * The log file is opened and closed for each log entry.
 *
 * If the given log type "type" is unknown, or if the log file
 * cannot be opened, no entry is made to the log file.
 *
 * The return value is always a pointer to the formatted log
 * text string "logtxt".
 */

char * klog(type,format,a1,a2,a3,a4,a5,a6,a7,a8,a9,a0)
    int type;
    char *format;
    int a1,a2,a3,a4,a5,a6,a7,a8,a9,a0;
{
    FILE *logfile, *fopen();
    long time(),now;
    char *month_sname();
    struct tm *tm;
    static int logtype_array[NLOGTYPE] = {0,0};
    static int array_initialized;

    if (!(array_initialized++)) {
        logtype_array[L_NET_ERR] = 1;
        logtype_array[L_KRB_PERR] = 1;
        logtype_array[L_KRB_PWARN] = 1;
        logtype_array[L_APPL_REQ] = 1;
        logtype_array[L_INI_REQ] = 1;
        logtype_array[L_DEATH_REQ] = 1;
        logtype_array[L_NTGT_INTK] = 1;
        logtype_array[L_ERR_SEXP] = 1;
        logtype_array[L_ERR_MKV] = 1;
        logtype_array[L_ERR_NKY] = 1;
        logtype_array[L_ERR_NUN] = 1;
        logtype_array[L_ERR_UNK] = 1;
    }

    (void) sprintf(logtxt,format,a1,a2,a3,a4,a5,a6,a7,a8,a9,a0);

    if (!logtype_array[type])
	return(logtxt);

    if ((logfile = fopen(log_name,"a")) == NULL)
        return(logtxt);

    (void) time(&now);
    tm = localtime(&now);

    fprintf(logfile,"%2d-%s-%02d %02d:%02d:%02d ",tm->tm_mday,
            month_sname(tm->tm_mon + 1),tm->tm_year,
            tm->tm_hour, tm->tm_min, tm->tm_sec);
    fprintf(logfile,"%s\n",logtxt);
    (void) fclose(logfile);
    return(logtxt);
}

/*
 * kset_logfile() changes the name of the file to which
 * messages are logged.  If kset_logfile() is not called,
 * the logfile defaults to KRBLOG, defined in "krb.h".
 */

kset_logfile(filename)
    char *filename;
{
    log_name = filename;
    is_open = 0;
}
@


4.6
log
@Programmer: Jennifer Steiner
Auditor: John Kohl
changes: improve documentation of code
@
text
@d2 2
a3 2
 * $Source: /mit/kerberos/src/lib/krb/RCS/klog.c,v $
 * $Author: steiner $
d14 1
a14 1
"$Header: klog.c,v 4.5 88/02/24 18:13:03 steiner Locked $";
d21 1
@


4.5
log
@Copyright notice, etc.
@
text
@d14 1
a14 1
"$Header: klog.c,v 4.4 88/01/12 21:21:04 steiner Locked $";
d29 10
a38 4
 * klog is used to add entries to the logfile.  Note that
 * it is probably not portable since is makes assumptions
 * about what the compiler will do when it is called with
 * less than the correct number of arguments which is the
d41 10
a50 1
 * Returns 0 on success, 1 on failure.
d100 3
a102 3
 * set_logfile changes the name of the file to which
 * messages are logged.  If set_logfile is not called,
 * the logfile defaults to KRBLOG.
@


4.4
log
@Formatting changes.
Programmer: Ken.
Auditor: Jon.
@
text
@d2 2
a3 3
 *      $Source: /u2/lockers/kerberos/lib/krb/RCS/klog.c,v $
 *      $Author: jtkohl $
 *      $Locker:  $
d5 2
a6 1
 * Copyright 1985,1986 by the Massachusetts Institute of Technology
d8 2
d14 1
a14 1
    "$Header: klog.c,v 4.3 87/10/20 17:09:51 jtkohl Exp $";
d17 1
a17 1

a26 1

@


4.3
log
@lint fixes
@
text
@d1 4
a4 4
/* 
 * 	$Source: /u3/kerberos.new/lib/krb/RCS/klog.c,v $
 * 	$Author: steiner $
 * 	$Locker: jtkohl $
d11 3
a13 2
static char *rcsid_klog_c = "$Header: klog.c,v 4.2 87/09/10 16:20:37 jtkohl Locked $";
#endif	lint
d16 2
a17 2
#include	<sys/time.h>
#include	<stdio.h>
d19 2
a20 2
#include	<krb.h>
#include	<klog.h>
d22 3
a24 3
static		char	*log_name = KRBLOG;
static		int	is_open;
static		char	logtxt[1000];
d30 1
a30 1
 * about what the compiler will do when it is called with  
d37 4
a40 5
char	*
klog(type,format,a1,a2,a3,a4,a5,a6,a7,a8,a9,a0)
int	type;
char	*format;
int	a1,a2,a3,a4,a5,a6,a7,a8,a9,a0;
d42 6
a47 21
	FILE	*logfile, *fopen();
	long	time(),now;
	char	*month_sname();
	struct	tm	*tm;
	static	int	logtype_array[NLOGTYPE] = {0,0};
	static	int	array_initialized;
	
	if(!(array_initialized++))
	  {
	    logtype_array[L_NET_ERR] = 1;
	    logtype_array[L_KRB_PERR] = 1;
	    logtype_array[L_KRB_PWARN] = 1;
	    logtype_array[L_APPL_REQ] = 1;
	    logtype_array[L_INI_REQ] = 1;
	    logtype_array[L_DEATH_REQ] = 1;
	    logtype_array[L_NTGT_INTK] = 1;
	    logtype_array[L_ERR_SEXP] = 1;
	    logtype_array[L_ERR_MKV] = 1;
	    logtype_array[L_ERR_NKY] = 1;
	    logtype_array[L_ERR_NUN] = 1;
	    logtype_array[L_ERR_UNK] = 1;
d49 14
a62 1
	  }
d64 1
a64 1
	(void) sprintf(logtxt,format,a1,a2,a3,a4,a5,a6,a7,a8,a9,a0);
d66 2
a67 1
	if(! logtype_array[type]) return(logtxt);
d69 2
a70 2
	if ((logfile = fopen(log_name,"a")) == NULL)
		return(logtxt);
d72 2
a73 2
	(void) time(&now);
	tm = localtime(&now);
d75 6
a80 7
	fprintf(logfile,"%2d-%s-%02d %02d:%02d:%02d ",tm->tm_mday, 
		month_sname(tm->tm_mon + 1),tm->tm_year,
		tm->tm_hour, tm->tm_min, tm->tm_sec);
	fprintf(logfile,"%s\n",logtxt);
	(void) fclose(logfile);
	return(logtxt);

d84 1
a84 1
 * set_logfile changes the name of the file to which 
d90 1
a90 1
char	*filename;
d92 2
a93 2
	log_name = filename;
	is_open = 0;
a94 1

@


4.2
log
@Changed include files configuration and referencing.
@
text
@d2 1
a2 1
 * 	$Source: /mit/s/t/steiner/kerberos/lib/krb/RCS/klog.c,v $
d4 1
a4 1
 * 	$Locker: steiner $
d11 1
a11 1
static char *rcsid_klog_c = "$Header: klog.c,v 4.1 87/09/01 15:46:45 steiner Locked $";
d44 1
d66 1
a66 1
	sprintf(logtxt,format,a1,a2,a3,a4,a5,a6,a7,a8,a9,a0);
d73 1
a73 1
	time(&now);
d80 1
a80 1
	fclose(logfile);
@


4.1
log
@No change; starting version 4.
@
text
@d3 1
a3 1
 * 	$Author: bcn $
d11 1
a11 1
static char *rcsid_klog_c = "$Header: klog.c,v 3.4 86/09/05 16:08:38 steiner Locked $";
d19 1
a19 1
#include	"klog.h"
@


3.4
log
@Changed the messages to be printed.
@
text
@d2 1
a2 1
 * 	$Source: /mit/projects/auth/src/lib/krb/RCS/klog.c,v $
d4 1
a4 1
 * 	$Locker: bcn $
d11 1
a11 1
static char *rcsid_klog_c = "$Header: klog.c,v 3.3 86/08/13 15:51:19 bcn Exp $";
@


3.3
log
@Updated list of printed error messages.
@
text
@d11 1
a11 1
static char *rcsid_klog_c = "$Header: klog.c,v 3.1 86/08/12 12:26:28 bcn Exp $";
d52 1
a52 1
	    logtype_array[L_KRB_PINFO] = 1;
@


3.2
log
@Added check on message types.
@
text
@d57 6
@


3.1
log
@*** empty log message ***
@
text
@d2 3
a4 3
 * 	$Source: /mit/projects/auth/src/lib/krb/RCS/log.c,v $
 * 	$Author: spm $
 * 	$Locker:  $
d11 1
a11 1
static char *rcsid_klog_c = "$Header: log.c,v 3.2 86/05/14 15:27:06 spm Exp $";
d25 1
d45 2
d48 15
a71 1
	sprintf(logtxt,format,a1,a2,a3,a4,a5,a6,a7,a8,a9,a0);
@
