head     4.10;
branch   ;
access   ;
symbols  PATCH8:4.7 PATCH7:4.7 KPATCH6:4.7 ASRSNAP1001:4.7 PATCH5:4.7 KPATCH4:4.7 KPATCH3:4.7 KPATCH2:4.7 KREL1:4.7 BETA5/24/88:4.5;
locks    ; strict;
comment  @ * @;


4.10
date     92.07.19.13.22.26;  author bostic;  state Exp;
branches ;
next     4.9;

4.9
date     90.06.25.20.56.40;  author kfall;  state Exp;
branches ;
next     4.8;

4.8
date     90.05.12.00.49.21;  author kfall;  state Exp;
branches ;
next     4.7;

4.7
date     89.01.23.09.25.15;  author jtkohl;  state Exp;
branches ;
next     4.6;

4.6
date     88.12.01.14.09.13;  author jtkohl;  state Exp;
branches ;
next     4.5;

4.5
date     88.02.24.18.13.18;  author steiner;  state Exp;
branches ;
next     4.4;

4.4
date     88.01.12.21.21.22;  author steiner;  state Exp;
branches ;
next     4.3;

4.3
date     87.12.06.11.23.50;  author steiner;  state Exp;
branches ;
next     4.2;

4.2
date     87.10.20.17.02.50;  author jtkohl;  state Exp;
branches ;
next     4.1;

4.1
date     87.09.01.15.45.44;  author steiner;  state Exp;
branches ;
next     3.4;

3.4
date     86.09.05.16.16.28;  author bcn;  state Exp;
branches ;
next     3.3;

3.3
date     86.08.12.12.33.54;  author bcn;  state Exp;
branches ;
next     3.2;

3.2
date     86.06.18.14.04.04;  author bcn;  state Exp;
branches ;
next     3.1;

3.1
date     86.03.28.13.47.59;  author bcn;  state Exp;
branches ;
next     1.2;

1.2
date     85.12.06.20.50.57;  author bcn;  state Exp;
branches ;
next     1.1;

1.1
date     85.11.15.12.49.29;  author bcn;  state Exp;
branches ;
next     ;


desc
@Convert from authentication name to a local unix name.
@


4.10
log
@check in for Kevin Fall by TK; change krb_get_lrealm call
@
text
@/*
 * $Source: /usr/src/kerberosIV/krb/RCS/kntoln.c,v $
 * $Author: kfall $
 *
 * Copyright 1985, 1986, 1987, 1988 by the Massachusetts Institute
 * of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef lint
static char *rcsid_kntoln_c =
"$Header: /usr/src/kerberosIV/krb/RCS/kntoln.c,v 4.9 90/06/25 20:56:40 kfall Exp Locker: kfall $";
#endif /* lint */

#include <mit-copyright.h>
#include <des.h>
#include <krb.h>
#include <strings.h>

/*
 * krb_kntoln converts an auth name into a local name by looking up
 * the auth name in the /etc/aname file.  The format of the aname
 * file is:
 *
 * +-----+-----+-----+-----+------+----------+-------+-------+
 * | anl | inl | rll | lnl | name | instance | realm | lname |
 * +-----+-----+-----+-----+------+----------+-------+-------+
 * | 1by | 1by | 1by | 1by | name | instance | realm | lname |
 * +-----+-----+-----+-----+------+----------+-------+-------+
 *
 * If the /etc/aname file can not be opened it will set the
 * local name to the auth name.  Thus, in this case it performs as
 * the identity function.
 *
 * The name instance and realm are passed to krb_kntoln through
 * the AUTH_DAT structure (ad).
 *
 * Now here's what it *really* does:
 *
 * Given a Kerberos name in an AUTH_DAT structure, check that the
 * instance is null, and that the realm is the same as the local
 * realm, and return the principal's name in "lname".  Return
 * KSUCCESS if all goes well, otherwise KFAILURE.
 */

krb_kntoln(ad,lname)
    AUTH_DAT *ad;
    char *lname;
{
    static char lrealm[REALM_SZ] = "";

    if (!(*lrealm) && (krb_get_lrealm(lrealm,0) == KFAILURE))
        return(KFAILURE);

    if (strcmp(ad->pinst,""))
        return(KFAILURE);
    if (strcmp(ad->prealm,lrealm))
        return(KFAILURE);
    (void) strcpy(lname,ad->pname);
    return(KSUCCESS);
}
@


4.9
log
@include des.h
@
text
@d2 1
a2 1
 * $Source: /usr/src/kerberosIV/src/lib/krb/RCS/kntoln.c,v $
d14 1
a14 1
"$Header: /usr/src/kerberosIV/src/lib/krb/RCS/kntoln.c,v 4.8 90/05/12 00:49:21 kfall Exp Locker: kfall $";
d54 1
a54 1
    if (!(*lrealm) && (krb_get_lrealm(lrealm,1) == KFAILURE))
@


4.8
log
@include des.h explicitly...don't rely on krb.h to do it for us
@
text
@d3 1
a3 1
 * $Author: jtkohl $
d14 1
a14 1
"$Header: /usr/src/kerberosIV/src/lib/krb/RCS/kntoln.c,v 4.7 89/01/23 09:25:15 jtkohl Exp Locker: kfall $";
d18 1
a19 1
#include <des.h>
@


4.7
log
@Programmer/Auditor: John Kohl
changes: name changes to krb_xxx
@
text
@d2 1
a2 1
 * $Source: /mit/kerberos/src/lib/krb/RCS/kntoln.c,v $
d14 1
a14 1
"$Header: kntoln.c,v 4.6 88/12/01 14:09:13 jtkohl Locked $";
d19 1
@


4.6
log
@Programmer: Jennifer Steiner
Auditor: John Kohl
changes: improve documentation of code
@
text
@d3 1
a3 1
 * $Author: steiner $
d14 1
a14 1
"$Header: kntoln.c,v 4.5 88/02/24 18:13:18 steiner Locked $";
d53 1
a53 1
    if (!(*lrealm) && (get_krbrlm(lrealm,1) == KFAILURE))
@


4.5
log
@Copyright notice, etc.
@
text
@d14 1
a14 1
"$Header: kntoln.c,v 4.4 88/01/12 21:21:22 steiner Locked $";
d38 7
a45 1

@


4.4
log
@Formatting changes.
Programmer: Ken.
Auditor: Jon.
@
text
@d2 2
a3 3
 *      $Source: /mit/kerberos/lib/krb/RCS/kntoln.c,v $
 *      $Author: steiner $
 *      $Locker:  $
d5 2
a6 1
 * Copyright 1985,1986 by the Massachusetts Institute of Technology
d8 2
d12 6
a19 5

#ifndef lint
static char *rcsid_atol_c =
    "$Header: kntoln.c,v 4.3 87/12/06 11:23:50 steiner Exp $";
#endif /* lint */
@


4.3
log
@Changed user routine names to krb_xxxxxxx
@
text
@d1 4
a4 4
/* 
 * 	$Source: /mit/kerberos/lib/krb/RCS/kntoln.c,v $
 * 	$Author: jtkohl $
 * 	$Locker: steiner $
d15 2
a16 2
"$Header: kntoln.c,v 4.2 87/10/20 17:02:50 steiner Locked $";
#endif	lint
d19 4
a22 4
 * krb_kntoln converts an athena name into a local name by looking
 *up the athena
 * name in the /etc/aname file.  The format of the aname file is:
 * 
d29 2
a30 2
 * If the /etc/aname file can not be opened it will set the 
 * local name to the athena name.  Thus, in this case it performs as 
d32 1
a32 1
 * 
d39 2
a40 2
AUTH_DAT	*ad;
char		*lname;
d42 1
a42 1
  static char	lrealm[REALM_SZ] = "";
d44 2
a45 2
  if(!(*lrealm) && (get_krbrlm(lrealm,1) == KFAILURE))
     return(KFAILURE);
d47 6
a52 6
  if(strcmp(ad->pinst,""))
    return(KFAILURE);
  if(strcmp(ad->prealm,lrealm))
    return(KFAILURE);
  (void) strcpy(lname,ad->pname);
  return(KSUCCESS);
@


4.2
log
@lint fixes
@
text
@d2 3
a4 3
 * 	$Source: /u3/kerberos.new/lib/krb/RCS/an_to_ln.c,v $
 * 	$Author: steiner $
 * 	$Locker: jtkohl $
d14 2
a15 1
static char *rcsid_atol_c = "$Header: an_to_ln.c,v 4.1 87/09/01 15:45:44 jtkohl Locked $";
d19 2
a20 1
 * antoln converts an athena name into a local name by looking up the athena
d33 1
a33 1
 * The name instance and realm are passed to antoln through
d38 1
a38 1
an_to_ln(ad,lname)
@


4.1
log
@No change; starting version 4.
@
text
@d2 3
a4 3
 * 	$Source: /mit/s/t/steiner/kerberos/lib/krb/RCS/an_to_ln.c,v $
 * 	$Author: bcn $
 * 	$Locker: steiner $
d11 1
d14 1
a14 1
static char *rcsid_atol_c = "$Header: an_to_ln.c,v 3.4 86/09/05 16:16:28 steiner Locked $";
d49 1
a49 1
  strcpy(lname,ad->pname);
@


3.4
log
@Will now only work if instance is null and realm is correct.
@
text
@d2 1
a2 1
 * 	$Source: /mit/projects/auth/src/lib/krb/RCS/an_to_ln.c,v $
d4 1
a4 1
 * 	$Locker: bcn $
d13 1
a13 1
static char *rcsid_atol_c = "$Header: an_to_ln.c,v 3.3 86/08/12 12:33:54 bcn Exp $";
@


3.3
log
@an_to_ln now returns an error code instead of lname.
@
text
@d13 1
a13 1
static char *rcsid_atol_c = "$Header: an_to_ln.c,v 3.2 86/06/18 14:04:04 bcn Exp $";
d39 11
a49 2
	strcpy(lname,ad->pname);
	return(KSUCCESS);
@


3.2
log
@an_to_ln now take an AUTH_DAT structure instead of
multiple arguments.  It has also been renamed
from antoln.
@
text
@d2 1
a2 1
 * 	$Source: /mit/projects/auth/src/lib/krb/RCS/antoln.c,v $
d4 1
a4 1
 * 	$Locker:  $
d13 1
a13 1
static char *rcsid_atol_c = "$Header: antoln.c,v 3.1 86/03/28 13:47:59 bcn Exp $";
a34 1
char	*
d40 1
a40 1
	return(lname);
@


3.1
log
@Name changed and arguments for instance and realm added.
It is still an intermim version that only returns the 
first agrument.
@
text
@d2 1
a2 1
 * 	$Source: /mit/projects/auth/src/lib/krb/RCS/atol.c,v $
d4 1
a4 1
 * 	$Locker: bcn $
d10 2
d13 1
a13 1
static char *rcsid_atol_c = "$Header: atol.c,v 1.2 85/12/06 20:50:57 bcn Exp $";
d26 1
a26 1
 * If the /etc/aname file can not be opened it will perform set the 
d30 2
d36 3
a38 5
antoln(name,inst,realm,lname)
char	*name;
char	*inst;
char	*realm;
char	*lname;
d40 1
a40 1
	strcpy(lname,name);
@


1.2
log
@Returns lname.  This is still a temporary version
@
text
@a4 5
 *    	$Log:	atol.c,v $
 * Revision 1.1  85/11/15  12:49:29  bcn
 * Initial revision
 * 
 * 
d6 1
a6 1
 * Copyright 1985 by the Massachusetts Institute of Technology
d11 1
a11 1
static char *rcsid_atol_c = "$Header: atol.c,v 1.1 85/11/15 12:49:29 bcn Exp $";
d15 1
a15 1
 * atol converts an athena name into a local name by looking up the athena
d18 5
a22 5
 * +-------------------+--------------------+-------+-------+
 * |aname length (anl) | lname length (lnl) | aname | lname |
 * +-------------------+--------------------+-------+-------+
 * |      1 byte       |       1 byte       |  anl  |  lnl  |
 * +-------------------+--------------------+-------+-------+
d32 4
a35 2
atol(aname,lname)
char	*aname;
d38 1
a38 1
	strcpy(lname,aname);
@


1.1
log
@Initial revision
@
text
@d2 6
a7 4
 * 	$Source: $
 * 	$Author: $
 * 	$Locker: $
 *    	$Log:	 $
d9 1
d16 1
a16 1
static char *rcsid_atol_c = "$Header:  $";
d36 1
d42 1
@
