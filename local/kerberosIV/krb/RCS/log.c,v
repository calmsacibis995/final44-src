head     4.9;
branch   ;
access   ;
symbols  PATCH8:4.7 PATCH7:4.7 KPATCH6:4.7 ASRSNAP1001:4.7 PATCH5:4.7 KPATCH4:4.7 KPATCH3:4.7 KPATCH2:4.7 KREL1:4.7 BETA5/24/88:4.6;
locks    ; strict;
comment  @ * @;


4.9
date     93.03.23.05.02.10;  author bostic;  state Exp;
branches ;
next     4.8;

4.8
date     90.06.25.20.56.49;  author kfall;  state Exp;
branches ;
next     4.7;

4.7
date     88.12.01.14.15.14;  author jtkohl;  state Exp;
branches ;
next     4.6;

4.6
date     88.02.24.18.14.06;  author steiner;  state Exp;
branches ;
next     4.5;

4.5
date     88.01.12.21.22.03;  author steiner;  state Exp;
branches ;
next     4.4;

4.4
date     87.12.06.11.24.13;  author steiner;  state Exp;
branches ;
next     4.3;

4.3
date     87.10.29.10.43.20;  author jtkohl;  state Exp;
branches ;
next     4.2;

4.2
date     87.10.20.17.11.21;  author jtkohl;  state Exp;
branches ;
next     4.1;

4.1
date     87.09.01.15.46.59;  author steiner;  state Exp;
branches ;
next     3.2;

3.2
date     86.05.14.15.27.06;  author spm;  state Exp;
branches ;
next     3.1;

3.1
date     86.03.28.13.34.05;  author bcn;  state Exp;
branches ;
next     1.3;

1.3
date     86.03.14.15.35.33;  author spm;  state Exp;
branches ;
next     1.2;

1.2
date     85.11.16.14.23.52;  author bcn;  state Exp;
branches ;
next     1.1;

1.1
date     85.10.10.10.10.51;  author bcn;  state Exp;
branches ;
next     ;


desc
@Initial RCS checkin
@


4.9
log
@GCC2 lint
@
text
@/*
 * $Source: /usr/src/kerberosIV/krb/RCS/log.c,v $
 * $Author: kfall $
 *
 * Copyright 1985, 1986, 1987, 1988 by the Massachusetts Institute
 * of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef lint
static char *rcsid_log_c =
"$Header: /usr/src/kerberosIV/krb/RCS/log.c,v 4.8 90/06/25 20:56:49 kfall Exp Locker: bostic $";
#endif /* lint */

#include <mit-copyright.h>
#include <sys/time.h>
#include <stdio.h>

#include <des.h>
#include <krb.h>
#include <klog.h>

static char *log_name = KRBLOG;
static is_open;

/*
 * This file contains three logging routines: set_logfile()
 * to determine the file that log entries should be written to;
 * and log() and new_log() to write log entries to the file.
 */

/*
 * log() is used to add entries to the logfile (see set_logfile()
 * below).  Note that it is probably not portable since it makes
 * assumptions about what the compiler will do when it is called
 * with less than the correct number of arguments which is the
 * way it is usually called.
 *
 * The log entry consists of a timestamp and the given arguments
 * printed according to the given "format".
 *
 * The log file is opened and closed for each log entry.
 *
 * The return value is undefined.
 */

/*VARARGS1 */
void log(format,a1,a2,a3,a4,a5,a6,a7,a8,a9,a0)
    char *format;
    int a1,a2,a3,a4,a5,a6,a7,a8,a9,a0;
{
    FILE *logfile, *fopen();
    long time(),now;
    struct tm *tm;

    if ((logfile = fopen(log_name,"a")) == NULL)
        return;

    (void) time(&now);
    tm = localtime(&now);

    fprintf(logfile,"%2d-%s-%02d %02d:%02d:%02d ",tm->tm_mday,
            month_sname(tm->tm_mon + 1),tm->tm_year,
            tm->tm_hour, tm->tm_min, tm->tm_sec);
    fprintf(logfile,format,a1,a2,a3,a4,a5,a6,a7,a8,a9,a0);
    fprintf(logfile,"\n");
    (void) fclose(logfile);
    return;
}

/*
 * set_logfile() changes the name of the file to which
 * messages are logged.  If set_logfile() is not called,
 * the logfile defaults to KRBLOG, defined in "krb.h".
 */

set_logfile(filename)
    char *filename;
{
    log_name = filename;
    is_open = 0;
}

/*
 * new_log() appends a log entry containing the give time "t" and the
 * string "string" to the logfile (see set_logfile() above).  The file
 * is opened once and left open.  The routine returns 1 on failure, 0
 * on success.
 */

new_log(t,string)
    long t;
    char *string;
{
    static FILE *logfile;

    long time();
    struct tm *tm;

    if (!is_open) {
        if ((logfile = fopen(log_name,"a")) == NULL) return(1);
        is_open = 1;
    }

    if (t) {
        tm = localtime(&t);

        fprintf(logfile,"\n%2d-%s-%02d %02d:%02d:%02d  %s",tm->tm_mday,
                month_sname(tm->tm_mon + 1),tm->tm_year,
                tm->tm_hour, tm->tm_min, tm->tm_sec, string);
    }
    else {
        fprintf(logfile,"\n%20s%s","",string);
    }

    (void) fflush(logfile);
    return(0);
}
@


4.8
log
@include des.h
@
text
@d2 2
a3 2
 * $Source: /usr/src/kerberosIV/src/lib/krb/RCS/log.c,v $
 * $Author: jtkohl $
d14 1
a14 1
"$Header: /usr/src/kerberosIV/src/lib/krb/RCS/log.c,v 4.7 88/12/01 14:15:14 jtkohl Exp Locker: kfall $";
a56 1
    char *month_sname();
@


4.7
log
@Programmer: Jennifer Steiner
Auditor: John Kohl
changes: improve documentation of code
@
text
@d2 2
a3 2
 * $Source: /mit/kerberos/src/lib/krb/RCS/log.c,v $
 * $Author: steiner $
d14 1
a14 1
"$Header: log.c,v 4.6 88/02/24 18:14:06 steiner Locked $";
d21 1
@


4.6
log
@Copyright notice, etc.
@
text
@d14 1
a14 1
"$Header: log.c,v 4.5 88/01/12 21:22:03 steiner Locked $";
d28 10
a37 4
 * log is used to add entries to the logfile.  Note that
 * it is probably not portable since is makes assumptions
 * about what the compiler will do when it is called with
 * less than the correct number of arguments which is the
d40 6
a45 1
 * Returns 0 on success, 1 on failure.
d74 3
a76 3
 * set_logfile changes the name of the file to which
 * messages are logged.  If set_logfile is not called,
 * the logfile defaults to KRBLOG.
d85 7
@


4.5
log
@Formatting changes.
Programmer: Ken.
Auditor: Jon.
@
text
@d2 2
a3 3
 *      $Source: /mit/kerberos/lib/krb/RCS/log.c,v $
 *      $Author: steiner $
 *      $Locker:  $
d5 2
a6 1
 * Copyright 1985,1986 by the Massachusetts Institute of Technology
d8 2
d14 1
a14 1
    "$Header: log.c,v 4.4 87/12/06 11:24:13 steiner Exp $";
d17 1
a17 1

@


4.4
log
@Changed user routine names to krb_xxxxxxx
@
text
@d1 4
a4 4
/* 
 * 	$Source: /u2/lockers/kerberos/lib/krb/RCS/log.c,v $
 * 	$Author: jtkohl $
 * 	$Locker: steiner $
d11 3
a13 2
static char *rcsid_log_c = "$Header: log.c,v 4.3 87/10/29 10:43:20 steiner Locked $";
#endif	lint
d16 2
a17 2
#include	<sys/time.h>
#include	<stdio.h>
d19 2
a20 2
#include	<krb.h>
#include	<klog.h>
d22 2
a23 2
static	char	*log_name = KRBLOG;
static	is_open;
d28 1
a28 1
 * about what the compiler will do when it is called with  
d35 4
a38 5
/*VARARGS1*/
void
log(format,a1,a2,a3,a4,a5,a6,a7,a8,a9,a0)
char	*format;
int	a1,a2,a3,a4,a5,a6,a7,a8,a9,a0;
d40 4
a43 7
	FILE	*logfile, *fopen();
	long	time(),now;
	struct	tm	*tm;
	char *month_sname();
	
	if ((logfile = fopen(log_name,"a")) == NULL)
		return;
d45 2
a46 2
	(void) time(&now);
	tm = localtime(&now);
d48 10
a57 7
	fprintf(logfile,"%2d-%s-%02d %02d:%02d:%02d ",tm->tm_mday, 
		month_sname(tm->tm_mon + 1),tm->tm_year,
		tm->tm_hour, tm->tm_min, tm->tm_sec);
	fprintf(logfile,format,a1,a2,a3,a4,a5,a6,a7,a8,a9,a0);
	fprintf(logfile,"\n");
	(void) fclose(logfile);
	return;
d61 1
a61 1
 * set_logfile changes the name of the file to which 
d67 1
a67 1
char	*filename;
d69 2
a70 2
	log_name = filename;
	is_open = 0;
d74 2
a75 2
	long	t;
	char	*string;
d77 1
a77 1
	static	FILE	*logfile;
d79 2
a80 12
	long	time();
	struct	tm	*tm;
	
	if (!is_open)
		{
		if ((logfile = fopen(log_name,"a")) == NULL) return(1);
		is_open = 1;
		}
	
	if (t)
		{
		tm = localtime(&t);
d82 18
a99 12
		fprintf(logfile,"\n%2d-%s-%02d %02d:%02d:%02d  %s",tm->tm_mday, 
			month_sname(tm->tm_mon + 1),tm->tm_year,
			tm->tm_hour, tm->tm_min, tm->tm_sec, string);
		}
	else
		{
		fprintf(logfile,"\n%20s%s","",string);
		}
	
		
	(void) fflush(logfile);
	return(0);
@


4.3
log
@lint cleanup
@
text
@d2 1
a2 1
 * 	$Source: /u3/kerberos.new/lib/krb/RCS/log.c,v $
d4 1
a4 1
 * 	$Locker: jtkohl $
d11 1
a11 1
static char *rcsid_log_c = "$Header: log.c,v 4.2 87/10/20 17:11:21 jtkohl Locked $";
d19 1
@


4.2
log
@lint fixes.
@
text
@d3 1
a3 1
 * 	$Author: steiner $
d11 1
a11 1
static char *rcsid_log_c = "$Header: log.c,v 4.1 87/09/01 15:46:59 jtkohl Locked $";
d33 2
a34 1
/*VARARGS*/
d45 1
a45 1
		return(1);
d56 1
a56 1
	return(1);
d76 1
a76 1
	static	FILE	*logfile, *fopen();
@


4.1
log
@No change; starting version 4.
@
text
@d2 3
a4 3
 * 	$Source: /mit/s/t/steiner/kerberos/lib/krb/RCS/log.c,v $
 * 	$Author: spm $
 * 	$Locker: steiner $
d11 1
a11 1
static char *rcsid_log_c = "$Header: log.c,v 3.2 86/05/14 15:27:06 steiner Locked $";
d33 1
d41 1
d46 1
a46 1
	time(&now);
d54 2
a55 2
	fclose(logfile);

d77 1
a77 1
	long	time(),now;
d100 2
a101 1
	fflush(logfile);
@


3.2
log
@*** empty log message ***
@
text
@d2 3
a4 3
 * 	$Source: /mit/projects/auth/src/lib/krb/RCS/log.c,v $
 * 	$Author: bcn $
 * 	$Locker: spm $
d11 1
a11 1
static char *rcsid_log_c = "$Header: log.c,v 3.1 86/03/28 13:34:05 bcn Exp $";
@


3.1
log
@Update major revision number.
@
text
@d3 2
a4 2
 * 	$Author: spm $
 * 	$Locker: bcn $
d11 1
a11 1
static char *rcsid_log_c = "$Header: log.c,v 1.3 86/03/14 15:35:33 spm Exp $";
d18 1
a18 1
#include	"krb.h"
@


1.3
log
@added new_log
@
text
@d3 2
a4 11
 * 	$Author: bcn $
 * 	$Locker: spm $
 *    	$Log:	log.c,v $
 * Revision 1.2  85/11/16  14:23:52  bcn
 * Added set_logfile to allow one to change the file that messages
 * are logged to.  The logfile is specified by the static log_name.
 * Moved in to libkrb.
 * 
 * Revision 1.1  85/10/10  10:10:51  bcn
 * Initial revision
 * 
d6 1
a6 1
 * Copyright 1985 by the Massachusetts Institute of Technology
d11 1
a11 1
static char *rcsid_log_c = "$Header: log.c,v 1.2 85/11/16 14:23:52 bcn Exp $";
@


1.2
log
@Added set_logfile to allow one to change the file that messages
are logged to.  The logfile is specified by the static log_name.
Moved in to libkrb.
@
text
@d4 1
a4 1
 * 	$Locker: bcn $
d6 5
d20 1
a20 1
static char *rcsid_log_c = "$Header: log.c,v 1.1 85/10/10 10:10:51 bcn Exp $";
d30 1
d75 33
@


1.1
log
@Initial revision
@
text
@d2 7
a8 4
 * 	$Source: $
 * 	$Author: $
 * 	$Locker: $
 *    	$Log:	 $
d15 1
a15 1
static char *rcsid_log_c = "$Header: $";
a18 1

d22 1
a22 1
#include	"kerberos.h"
d24 1
d29 1
a29 1
 * about what the compiler will do when it is called with 
d33 1
d44 2
a45 2
	if ((logfile = fopen(LOGFILE,"a")) == NULL)
		return;
d59 11
@
