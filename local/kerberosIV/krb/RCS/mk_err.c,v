head     4.5;
branch   ;
access   ;
symbols  PATCH8:4.4 PATCH7:4.4 KPATCH6:4.4 ASRSNAP1001:4.4 PATCH5:4.4 KPATCH4:4.4 KPATCH3:4.4 KPATCH2:4.4 KREL1:4.4 BETA5/24/88:4.3;
locks    ; strict;
comment  @ * @;


4.5
date     90.06.25.20.56.53;  author kfall;  state Exp;
branches ;
next     4.4;

4.4
date     88.11.15.16.33.36;  author jtkohl;  state Exp;
branches ;
next     4.3;

4.3
date     88.02.24.18.14.13;  author steiner;  state Exp;
branches ;
next     4.2;

4.2
date     88.01.12.21.22.10;  author steiner;  state Exp;
branches ;
next     4.1;

4.1
date     87.12.06.11.24.19;  author steiner;  state Exp;
branches ;
next     4.0;

4.0
date     87.10.29.10.04.07;  author jtkohl;  state Exp;
branches ;
next     1.1;

1.1
date     87.10.29.09.46.59;  author jtkohl;  state Exp;
branches ;
next     ;


desc
@mk_appl_err_msg() for kerberos
@


4.5
log
@include des.h
@
text
@/*
 * $Source: /usr/src/kerberosIV/src/lib/krb/RCS/mk_err.c,v $
 * $Author: jtkohl $
 *
 * Copyright 1985, 1986, 1987, 1988 by the Massachusetts Institute
 * of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 */

#ifndef lint
static char *rcsid_mk_err_c =
"$Header: /usr/src/kerberosIV/src/lib/krb/RCS/mk_err.c,v 4.4 88/11/15 16:33:36 jtkohl Exp Locker: kfall $";
#endif /* lint */

#include <mit-copyright.h>
#include <sys/types.h>
#include <des.h>
#include <krb.h>
#include <prot.h>
#include <strings.h>

/*
 * This routine creates a general purpose error reply message.  It
 * doesn't use KTEXT because application protocol may have long
 * messages, and may want this part of buffer contiguous to other
 * stuff.
 *
 * The error reply is built in "p", using the error code "e" and
 * error text "e_string" given.  The length of the error reply is
 * returned.
 *
 * The error reply is in the following format:
 *
 * unsigned char	KRB_PROT_VERSION	protocol version no.
 * unsigned char	AUTH_MSG_APPL_ERR	message type
 * (least significant
 * bit of above)	HOST_BYTE_ORDER		local byte order
 * 4 bytes		e			given error code
 * string		e_string		given error text
 */

long krb_mk_err(p,e,e_string)
    u_char *p;			/* Where to build error packet */
    long e;			/* Error code */
    char *e_string;		/* Text of error */
{
    u_char      *start;

    start = p;

    /* Create fixed part of packet */
    *p++ = (unsigned char) KRB_PROT_VERSION;
    *p = (unsigned char) AUTH_MSG_APPL_ERR;
    *p++ |= HOST_BYTE_ORDER;

    /* Add the basic info */
    bcopy((char *)&e,(char *)p,4); /* err code */
    p += sizeof(e);
    (void) strcpy((char *)p,e_string); /* err text */
    p += strlen(e_string);

    /* And return the length */
    return p-start;
}
@


4.4
log
@Documentor: Jennifer Steiner
Auditor: John Kohl
changes: document the code properly
@
text
@d2 2
a3 2
 * $Source: /mit/kerberos/src/lib/krb/RCS/mk_err.c,v $
 * $Author: steiner $
d14 1
a14 1
"$Header: mk_err.c,v 4.3 88/02/24 18:14:13 steiner Locked $";
d19 1
@


4.3
log
@Copyright notice, etc.
@
text
@d14 1
a14 1
"$Header: mk_err.c,v 4.2 88/01/12 21:22:10 steiner Locked $";
d28 13
d44 1
a44 1
    u_char *p;
@


4.2
log
@Formatting changes.
Programmer: Ken.
Auditor: Jon.
@
text
@d2 2
a3 3
 *      $Source: /mit/kerberos/lib/krb/RCS/mk_err.c,v $
 *      $Author: steiner $
 *      $Locker:  $
d5 2
a6 1
 * Copyright 1985,1986 by the Massachusetts Institute of Technology
d8 2
d13 2
a14 2
static char *rcsid_mk_appl_err_msg_c =
    "$Header: mk_err.c,v 4.1 87/12/06 11:24:19 steiner Exp $";
d17 1
@


4.1
log
@Changed user routine names to krb_xxxxxxx
@
text
@d1 4
a4 4
/* 
 * 	$Source: /mit/kerberos/lib/krb/RCS/mk_err.c,v $
 * 	$Author: jtkohl $
 * 	$Locker: steiner $
d12 2
a13 2
"$Header: mk_err.c,v 4.0 87/10/29 10:04:07 steiner Locked $";
#endif	lint
d15 4
a18 4
#include	<sys/types.h>
#include        <krb.h>
#include	<prot.h>
#include	<strings.h>
d20 5
a24 3
/* This routine creates a general purpose error reply message
 * Doesn't use KTEXT because application protocol may have long messages,
 * and may want this part of buffer contiguous to other stuff.
d27 4
a30 5
long
krb_mk_err(p,e,e_string)
u_char	*p;
long	e;				/* Error code									*/
char	*e_string;				/* Text of error						   */
d32 1
a32 1
	u_char	*start;
d34 1
a34 1
	start = p;
d36 4
a39 4
	/* Create fixed part of packet */
	*p++ = (unsigned char) KRB_PROT_VERSION;
	*p = (unsigned char) AUTH_MSG_APPL_ERR;
	*p++ |= HOST_BYTE_ORDER;
d41 5
a45 5
	/* Add the basic info */
	bcopy((char *)&e,(char *)p,4);	/* err code */
	p += sizeof(e);
	(void) strcpy((char *)p,e_string); /* err text */
	p += strlen(e_string);
d47 2
a48 2
	/* And return the length */
	return p-start;
a49 1

@


4.0
log
@no changes; rev. 4.0
@
text
@d2 1
a2 1
 * 	$Source: /u3/kerberos.new/lib/krb/RCS/mk_appl_err_msg.c,v $
d4 1
a4 1
 * 	$Locker: jtkohl $
d12 1
a12 1
"$Header: mk_appl_err_msg.c,v 1.1 87/10/29 09:46:59 jtkohl Locked $";
d26 1
a26 1
mk_appl_err_msg(p,e,e_string)
@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
 * 	$Source: /u3/kerberos.new/lib/krb/RCS/cr_err_reply.c,v $
 * 	$Author: steiner $
 * 	$Locker:  $
d12 1
a12 1
"$Header: cr_err_reply.c,v 4.5 87/10/28 16:03:22 steiner Exp $";
@
