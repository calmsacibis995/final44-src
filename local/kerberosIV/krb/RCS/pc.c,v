head     4.1;
branch   ;
access   ;
symbols  PATCH8:4.1 PATCH7:4.1 KPATCH6:4.1 ASRSNAP1001:4.1 PATCH5:4.1 KPATCH4:4.1 KPATCH3:4.1 KPATCH2:4.1 KREL1:4.1 BETA5/24/88:4.1;
locks    ; strict;
comment  @ * @;


4.1
date     87.09.01.15.47.09;  author steiner;  state Exp;
branches ;
next     3.1;

3.1
date     86.03.28.10.21.13;  author bcn;  state Exp;
branches ;
next     1.2;

1.2
date     86.03.25.15.53.32;  author spm;  state Exp;
branches ;
next     1.1;

1.1
date     85.12.03.15.42.42;  author bcn;  state Exp;
branches ;
next     ;


desc
@Routines that should be available on the PC, but aren't.
@


4.1
log
@No change; starting version 4.
@
text
@/* 
 * 	$Source: /mit/s/t/steiner/kerberos/lib/krb/RCS/pc.c,v $
 * 	$Author: bcn $
 * 	$Locker: steiner $
 *
 * Copyright 1985,1986 by the Massachusetts Institute of Technology
 *
 */

#ifndef lint
static char *rcsid_pc_c = "$Header: pc.c,v 3.1 86/03/28 10:21:13 steiner Locked $";
#endif	lint

bzero(address,l)
char	*address;
int	l;
{
	int	i;
	for (i = 0;i < l;i++)
		address[i] = 0;
}

bcmp(a,b,l)
char	*a;
char	*b;
int	l;
{
	int	i;
	for (i = 0;i < l;i++)
		{
		if (*b++ != *a++) return -1;
		}
	return 0;	
}

bcopy(a,b,l)
char	*a;
char	*b;
int	l;
{
	int	i;
	for (i = 0;i < l;i++)
		b[i] = a[i];
}


@


3.1
log
@Changing rev number.
@
text
@d2 3
a4 3
 * 	$Source: /mit/projects/auth/src/lib/krb/RCS/pc.c,v $
 * 	$Author: spm $
 * 	$Locker: bcn $
d11 1
a11 1
static char *rcsid_pc_c = "$Header: pc.c,v 1.2 86/03/25 15:53:32 spm Exp $";
@


1.2
log
@add bcmp
@
text
@d3 2
a4 6
 * 	$Author: bcn $
 * 	$Locker: spm $
 *    	$Log:	pc.c,v $
 * Revision 1.1  85/12/03  15:42:42  bcn
 * Initial revision
 * 
d6 1
a6 1
 * Copyright 1985 by the Massachusetts Institute of Technology
d11 1
a11 1
static char *rcsid_pc_c = "$Header: pc.c,v 1.1 85/12/03 15:42:42 bcn Exp $";
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
 * 	$Source: /mit/projects/auth/src/client/RCS/pc.c,v $
d4 1
a4 1
 * 	$Locker:  $
d6 3
d15 1
a15 1
static char *rcsid_pc_c = "$Header: pc.c,v 1.1 85/10/10 11:21:26 bcn Exp $";
d18 10
a27 1
bcopy(a,b,l)
d34 4
a37 1
		b[i] = a[i];
d40 3
a42 2
bzero(address,l)
char	*address;
d47 1
a47 1
		address[i] = 0;
d49 1
@
