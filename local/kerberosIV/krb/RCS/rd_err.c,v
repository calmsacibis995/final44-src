head     4.6;
branch   ;
access   ;
symbols  PATCH8:4.5 PATCH7:4.5 KPATCH6:4.5 ASRSNAP1001:4.5 PATCH5:4.5 KPATCH4:4.5 KPATCH3:4.5 KPATCH2:4.5 KREL1:4.5 BETA5/24/88:4.3;
locks    ; strict;
comment  @ * @;


4.6
date     90.06.25.20.57.10;  author kfall;  state Exp;
branches ;
next     4.5;

4.5
date     89.01.13.17.26.38;  author steiner;  state Exp;
branches ;
next     4.4;

4.4
date     88.12.01.14.19.48;  author jtkohl;  state Exp;
branches ;
next     4.3;

4.3
date     88.02.24.18.15.22;  author steiner;  state Exp;
branches ;
next     4.2;

4.2
date     88.01.12.21.23.18;  author steiner;  state Exp;
branches ;
next     4.1;

4.1
date     87.12.06.11.24.57;  author steiner;  state Exp;
branches ;
next     4.0;

4.0
date     87.10.29.10.03.14;  author jtkohl;  state Exp;
branches ;
next     1.1;

1.1
date     87.10.29.09.56.15;  author jtkohl;  state Exp;
branches ;
next     ;


desc
@rd_appl_err_msg() for kerberos
@


4.6
log
@include des.h
@
text
@/*
 * $Source: /usr/src/kerberosIV/src/lib/krb/RCS/rd_err.c,v $
 * $Author: steiner $
 *
 * Copyright 1986, 1987, 1988 by the Massachusetts Institute
 * of Technology.
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 *
 * This routine dissects a a Kerberos 'safe msg',
 * checking its integrity, and returning a pointer to the application
 * data contained and its length.
 *
 * Returns 0 (RD_AP_OK) for success or an error code (RD_AP_...)
 *
 * Steve Miller    Project Athena  MIT/DEC
 */

#ifndef lint
static char *rcsid_rd_err_c=
"$Header: /usr/src/kerberosIV/src/lib/krb/RCS/rd_err.c,v 4.5 89/01/13 17:26:38 steiner Exp Locker: kfall $";
#endif /* lint */

#include <mit-copyright.h>

/* system include files */
#include <stdio.h>
#include <errno.h>
#include <sys/types.h>
#include <netinet/in.h>
#include <sys/time.h>

/* application include files */
#include <des.h>
#include <krb.h>
#include <prot.h>

/*
 * Given an AUTH_MSG_APPL_ERR message, "in" and its length "in_length",
 * return the error code from the message in "code" and the text in
 * "m_data" as follows:
 *
 *	m_data->app_data	points to the error text
 *	m_data->app_length	points to the length of the error text
 *
 * If all goes well, return RD_AP_OK.  If the version number
 * is wrong, return RD_AP_VERSION, and if it's not an AUTH_MSG_APPL_ERR
 * type message, return RD_AP_MSG_TYPE.
 *
 * The AUTH_MSG_APPL_ERR message format can be found in mk_err.c
 */

int
krb_rd_err(in,in_length,code,m_data)
    u_char *in;                 /* pointer to the msg received */
    u_long in_length;           /* of in msg */
    long *code;                 /* received error code */
    MSG_DAT *m_data;
{
    register u_char *p;
    int swap_bytes = 0;
    p = in;                     /* beginning of message */

    if (*p++ != KRB_PROT_VERSION)
        return(RD_AP_VERSION);
    if (((*p) & ~1) != AUTH_MSG_APPL_ERR)
        return(RD_AP_MSG_TYPE);
    if ((*p++ & 1) != HOST_BYTE_ORDER)
        swap_bytes++;

    /* safely get code */
    bcopy((char *)p,(char *)code,sizeof(*code));
    if (swap_bytes)
        swap_u_long(*code);
    p += sizeof(*code);         /* skip over */

    m_data->app_data = p;       /* we're now at the error text
                                 * message */
    m_data->app_length = in_length;

    return(RD_AP_OK);           /* OK == 0 */
}
@


4.5
log
@declare function as int not long.
programmer: jtkohl
auditor: steiner
@
text
@d2 2
a3 2
 * $Source: /mit/kerberos/src/lib/krb/RCS/rd_err.c,v $
 * $Author: jtkohl $
d22 1
a22 1
"$Header: rd_err.c,v 4.4 88/12/01 14:19:48 jtkohl Locked $";
d35 1
@


4.4
log
@Programmer: Jennifer Steiner
Auditor: John Kohl
changes: improve documentation of code
@
text
@d3 1
a3 1
 * $Author: steiner $
d22 1
a22 1
"$Header: rd_err.c,v 4.3 88/02/24 18:15:22 steiner Locked $";
d53 2
a54 1
long krb_rd_err(in,in_length,code,m_data)
@


4.3
log
@Copyright notice, etc.
@
text
@d22 1
a22 1
"$Header: rd_err.c,v 4.2 88/01/12 21:23:18 steiner Locked $";
d38 15
a52 1
/* RETURNS 0 if ok, else error code */
@


4.2
log
@Formatting changes.
Programmer: Ken.
Auditor: Jon.
@
text
@d2 2
a3 1
 * Copyright 1986 Massachusetts Institute of Technology
d5 2
a6 3
 *      $Source: /mit/kerberos/lib/krb/RCS/rd_err.c,v $
 *      $Author: steiner $
 *      $Locker:  $
d8 2
a9 1
 *      Steve Miller    Project Athena  MIT/DEC
d11 3
a13 3
 *      This routine dissects a a Kerberos 'safe msg',
 *  checking its integrity, and returning a pointer to the application
 *  data contained and its length.
d15 3
a17 1
 *      Returns 0 (RD_AP_OK) for success or an error code (RD_AP_...)
d21 2
a22 2
static char *rcsid_rd_appl_err_msg_c=
    "$Header: rd_err.c,v 4.1 87/12/06 11:24:57 steiner Exp $";
d24 2
@


4.1
log
@Changed user routine names to krb_xxxxxxx
@
text
@d1 2
a2 1
/*	Copyright	1986	Massachusetts Institute of Technology	
d4 7
a10 7
 *  $Source: /mit/kerberos/lib/krb/RCS/rd_err.c,v $
 *	$Author: jtkohl $
 *	$Locker: steiner $
 * 
 *	Steve Miller	Project Athena	MIT/DEC
 * 
 *	This routine dissects a a Kerberos 'safe msg',
d14 1
a14 1
 *	Returns 0 (RD_AP_OK) for success or an error code (RD_AP_...)
d17 1
a17 1
#ifndef	lint
d19 2
a20 2
"$Header: rd_err.c,v 4.0 87/10/29 10:03:14 steiner Locked $";
#endif lint
d23 5
a27 5
#include	<stdio.h>
#include	<errno.h>
#include	<sys/types.h>
#include	<netinet/in.h>
#include	<sys/time.h>
d30 2
a31 2
#include	<krb.h>
#include	<prot.h>
d33 6
a38 7
long
krb_rd_err(in,in_length,code,m_data)
u_char *in;				/* pointer to the msg received */
u_long in_length;			/* of in msg */
long *code;				/* received error code */
MSG_DAT *m_data;
/* RETURNS	0 if ok, else error code */
d40 3
a42 3
	register u_char	*p;
	int swap_bytes = 0;
	p = in;				/* beginning of message */
d44 6
a49 3
	if (*p++ != KRB_PROT_VERSION)	return(RD_AP_VERSION);
	if ( ((*p) & ~1) != AUTH_MSG_APPL_ERR) return(RD_AP_MSG_TYPE);
	if (  (*p++ & 1) != HOST_BYTE_ORDER) swap_bytes++;
d51 5
a55 4
	/* safely get code */
	bcopy((char *)p,(char *)code,sizeof(*code));
	if (swap_bytes) swap_u_long(*code);
	p += sizeof(*code);		/* skip over */
d57 3
a59 3
	m_data->app_data = p;		/* we're now at the error text
					   message */
	m_data->app_length = in_length;
d61 1
a61 1
	return(RD_AP_OK);		/* OK == 0 */
@


4.0
log
@fill in length field too.
@
text
@d3 1
a3 1
 *  $Source: /u3/kerberos.new/lib/krb/RCS/rd_appl_err_msg.c,v $
d5 1
a5 1
 *	$Locker: jtkohl $
d18 1
a18 1
"$Header: rd_appl_err_msg.c,v 1.1 87/10/29 09:56:15 jtkohl Locked $";
d33 1
a33 1
rd_appl_err_msg(in,in_length,code,m_data)
@


1.1
log
@Initial revision
@
text
@d3 2
a4 2
 *  $Source: /u3/kerberos.new/lib/krb/RCS/rd_safe_msg.c,v $
 *	$Author: steiner $
d18 1
a18 1
"$Header: rd_safe_msg.c,v 4.5 87/10/28 16:05:11 jtkohl Locked $";
d55 1
@
