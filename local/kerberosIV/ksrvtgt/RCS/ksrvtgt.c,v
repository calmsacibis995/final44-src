head     4.4;
branch   ;
access   ;
symbols  PATCH8:4.3 PATCH7:4.3 KPATCH6:4.3 ASRSNAP1001:4.3 PATCH5:4.3 KPATCH4:4.2 KPATCH3:4.2 KPATCH2:4.2 KREL1:4.2;
locks    ; strict;
comment  @ * @;


4.4
date     90.06.25.21.03.27;  author kfall;  state Exp;
branches ;
next     4.3;

4.3
date     89.07.28.10.17.28;  author jtkohl;  state Exp;
branches ;
next     4.2;

4.2
date     89.01.13.18.05.19;  author steiner;  state Exp;
branches ;
next     4.1;

4.1
date     89.01.05.11.20.58;  author jtkohl;  state Exp;
branches ;
next     ;


desc
@Program to retrieve a ticket-granting ticket, given a service key file.
@


4.4
log
@no significant change
@
text
@/*
 * $Source: /usr/src/kerberosIV/src/kuser/RCS/ksrvtgt.c,v $
 * $Author: jtkohl $
 *
 * Copyright 1988 by the Massachusetts Institute of Technology. 
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>. 
 *
 * Get a ticket-granting-ticket given a service key file (srvtab)
 * The lifetime is the shortest allowed [1 five-minute interval]
 *
 */

#include <stdio.h>
#include <sys/param.h>
#include <des.h>
#include <krb.h>
#include <conf.h>

const char rcsid[] =
    "$Header: /usr/src/kerberosIV/src/kuser/RCS/ksrvtgt.c,v 4.3 89/07/28 10:17:28 jtkohl Exp Locker: kfall $";

main(argc,argv)
    int argc;
    char **argv;
{
    char realm[REALM_SZ + 1];
    register int code;
    char srvtab[MAXPATHLEN + 1];

    bzero(realm, sizeof(realm));
    bzero(srvtab, sizeof(srvtab));

    if (argc < 3 || argc > 5) {
	fprintf(stderr, "Usage: %s name instance [[realm] srvtab]\n",
		argv[0]);
	exit(1);
    }
    
    if (argc == 4)
	(void) strncpy(srvtab, argv[3], sizeof(srvtab) -1);
    
    if (argc == 5) {
	(void) strncpy(realm, argv[3], sizeof(realm) - 1);
	(void) strncpy(srvtab, argv[4], sizeof(srvtab) -1);
    }

    if (srvtab[0] == 0)
	(void) strcpy(srvtab, KEYFILE);

    if (realm[0] == 0)
	if (krb_get_lrealm(realm) != KSUCCESS)
	    (void) strcpy(realm, KRB_REALM);

    code = krb_get_svc_in_tkt(argv[1], argv[2], realm,
			      "krbtgt", realm, 1, srvtab);
    if (code)
	fprintf(stderr, "%s\n", krb_err_txt[code]);
    exit(code);
}
@


4.3
log
@fix up realm handling stuff.
Programmer: Jay Berkenbilt
Auditor: John Kohl
@
text
@d2 2
a3 2
 * $Source: /mit/kerberos/src/kuser/RCS/ksrvtgt.c,v $
 * $Author: steiner $
d17 1
d22 1
a22 1
    "$Header: /mit/kerberos/src/kuser/RCS/ksrvtgt.c,v 4.2 89/01/13 18:05:19 steiner Exp Locker: qjb $";
@


4.2
log
@function name changes.
programmer: jtkohl
auditor: steiner
@
text
@d3 1
a3 1
 * $Author: jtkohl $
d16 1
d21 1
a21 1
    "$Header: ksrvtgt.c,v 4.1 89/01/05 11:20:58 jtkohl Locked $";
a22 3
char *realm = "ATHENA.MIT.EDU";
char *srvtab = "/etc/srvtab";

d27 1
d29 5
d39 4
d44 2
a45 2
	realm = argv[3];
	srvtab = argv[4];
d47 8
a54 2
    else if (argc == 4)
	srvtab = argv[3];
@


4.1
log
@Programmer: Ken Raeburn
Auditor: John Kohl
Changes: first version checked in.
@
text
@d2 2
a3 2
 * $Source: $
 * $Author: $
d20 1
a20 1
    "$Header: $";
d41 2
a42 2
    code = get_svc_in_tkt(argv[1], argv[2], realm,
			  "krbtgt", realm, 1, srvtab);
@
