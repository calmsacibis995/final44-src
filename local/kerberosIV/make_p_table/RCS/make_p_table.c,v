head     4.8;
branch   ;
access   ;
symbols  PATCH8:4.8 PATCH7:4.8 KPATCH6:4.8 ASRSNAP1001:4.8 PATCH5:4.8 ADAMS_NSA:4.8 KPATCH4:4.8 KPATCH3:4.8 KPATCH2:4.8 KREL1:4.8 BETA5/24/88:4.6 v1:1.2;
locks    ; strict;
comment  @ * @;


4.8
date     88.11.15.11.29.59;  author jtkohl;  state Exp;
branches ;
next     4.7;

4.7
date     88.06.09.16.43.29;  author steiner;  state Exp;
branches ;
next     4.6;

4.6
date     88.02.24.14.22.14;  author steiner;  state Exp;
branches ;
next     4.5;

4.5
date     88.01.14.18.45.40;  author steiner;  state Exp;
branches ;
next     4.4;

4.4
date     88.01.14.17.40.31;  author raeburn;  state Exp;
branches ;
next     4.3;

4.3
date     87.10.23.10.49.03;  author steiner;  state Exp;
branches ;
next     4.2;

4.2
date     87.09.10.16.16.23;  author steiner;  state Exp;
branches ;
next     4.1;

4.1
date     87.09.01.15.41.30;  author steiner;  state Exp;
branches ;
next     1.7;

1.7
date     87.01.13.16.36.30;  author wesommer;  state Exp;
branches ;
next     1.6;

1.6
date     87.01.09.15.20.56;  author wesommer;  state Exp;
branches ;
next     1.5;

1.5
date     87.01.09.12.41.37;  author wesommer;  state Exp;
branches ;
next     1.4;

1.4
date     86.08.08.14.24.23;  author spm;  state Exp;
branches ;
next     1.3;

1.3
date     85.12.16.13.47.36;  author spm;  state Exp;
branches ;
next     1.2;

1.2
date     85.08.16.12.50.38;  author spm;  state Exp;
branches ;
next     1.1;

1.1
date     85.08.14.10.21.21;  author spm;  state Exp;
branches ;
next     ;


desc
@works, faster
@


4.8
log
@Programmer: Bill Sommerfeld
Auditor: John Kohl
changes:
rename routines to des_xxx     
rename structures likewise
use local variables and static routines where appropriate
convert to des_internal.h       
make debug routines consistent
@
text
@/*
 * $Source: //ra/mit/wesommer/des/RCS/make_p_table.c,v $
 * $Author: steiner $
 *
 * Copyright 1985, 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please
 * see the file <mit-copyright.h>.
 *
 */

#include <mit-copyright.h>
#include <stdio.h>
#include "des_internal.h"
#include "tables.h"

extern unsigned long swap_byte_bits();
extern unsigned long rev_swap_bit_pos_0();
static unsigned char P_temp[32];
static unsigned long P_prime[4][256];

void gen(stream)
    FILE *stream;
{
    register i,j,k,m;
    /* P permutes 32 bit input R1 into 32 bit output R2 */

#ifdef BIG
    /* flip p into p_temp */
    for (i = 0; i<32; i++)
	P_temp[P[rev_swap_bit_pos_0(i)]] = rev_swap_bit_pos_0(i);

    /*
     * now for each byte of input, figure out all possible combinations
     */
    for (i = 0; i <4 ; i ++) {	/* each input byte */
	for (j = 0; j<256; j++) { /* each possible byte value */
	    /* flip bit order */
	    k = j;
	    /* swap_byte_bits(j); */
	    for (m = 0; m < 8; m++) { /* each bit */
		if (k & (1 << m)) {
		    /* set output values */
		    P_prime[i][j] |= 1 << P_temp[(i*8)+m];
		}
	    }
	}
    }

    fprintf(stream,
	    "\n\tstatic unsigned long const P_prime[4][256] = {\n\t");
    for (i = 0; i < 4; i++) {
	fprintf(stream,"\n");
	for (j = 0; j < 64; j++) {
	    fprintf(stream,"\n");
	    for (k = 0; k < 4; k++) {
		fprintf(stream,"0x%08X",P_prime[i][j*4+k]);
		if ((i == 3) && (j == 63) && (k == 3))
		    fprintf(stream,"\n};");
		else
		    fprintf(stream,", ");
	    }
	}
    }

#endif
    fprintf(stream,"\n");
}
@


4.7
log
@Optimizations for vax, change in generating files.
Programmer: raeburn.
Auditor: jtkohl.
@
text
@d2 2
a3 2
 * $Source$
 * $Author$
d14 1
a14 1
#include "conf.h"
@


4.6
log
@Copyright notice, etc.
@
text
@@


4.5
log
@Formatted.
Programmer: raeburn.
@
text
@d2 2
a3 1
 * des_make_p_table.c
d5 5
d12 1
a12 1
 *	spm	8/85
d15 6
@


4.4
log
@Changed include file names krb_conf.h to conf.h and des_tables.h to
tables.h.
@
text
@d1 2
a2 1
/* des_make_p_table.c
d9 1
a9 1
#include	<stdio.h>
d11 2
a12 2
#include	"conf.h"
#include	"tables.h"
d14 2
a15 2
extern  unsigned long	swap_byte_bits();
extern  unsigned long	rev_swap_bit_pos_0();
d21 2
a22 3
	register	i,j,k,m,n;
/* P permutes 32 bit input R1 into 32 bit output R2						   */
	
d24 6
a29 12
/* this generates much faster code than bit fields, which cause
 * insv and extv instructions on the vax.
 */


#ifdef	BIG
/* flip p into p_temp													   */
	for (i = 0; i<32; i++)
		{
		P_temp[P[rev_swap_bit_pos_0(i)]] = rev_swap_bit_pos_0(i);
#ifdef	notdef
		fprintf(stderr,"\n P_temp[%d] = %d",P[i],i);
d31 1
a31 1
		}
d33 16
a48 17
/* now for each byte of input, figure out all possible combinations		   */
	for (i = 0; i <4 ; i ++)	/* each input byte						   */
		{
		for (j = 0; j<256; j++)	/* each possible byte value*/		
			{
			/* flip bit order*/
			k = j;/*swap_byte_bits(j);									   */
			for (m = 0; m < 8; m++)	/* each bit							   */
				{
				if (k & (1 << m))
					{
					/* set output values*/
					P_prime[i][j] |= 1 <<	P_temp[(i*8)+m];
#ifdef	notdef
					fprintf(stderr,
				"\ni = %d j = %d k = %d m = %d p_temp = %d P_prime[i][j]= %X",
					i,j,k,m, P_temp[(i*8)+m], P_prime[i][j]);
a49 3
					}
				}
			}
d51 1
a51 21
	
	fprintf(stdout,"\n\tstatic	unsigned long	P_prime[4][256] = {\n\t");	
	for (i = 0; i<4; i++)
		{
		fprintf(stdout,"\n");
		for (j = 0; j < 64; j++)
			{
			fprintf(stdout,"\n");
			for (k = 0; k < 4; k++)
				{
				fprintf(stdout,"0x%08X",P_prime[i][j*4+k]);
				if ( (i == 3) && (j == 63) && (k == 3))
					{
					fprintf(stdout,"\n};");
					}
				else
					{
					fprintf(stdout,", ");
					}
			}				
		}
d53 1
d55 15
d71 2
a72 2
	fprintf(stdout,"\n");
}			
@


4.3
log
@Moved ./des_conf.h to .../include/krb_conf.h.
@
text
@d10 2
a11 2
#include	<krb_conf.h>
#include	"des_tables.h"
@


4.2
log
@Changed include files configuration and referencing.
@
text
@a7 1
#include	"des_conf.h"
d10 1
@


4.1
log
@No change; starting version 4.
@
text
@d8 1
a8 1
#include	"./des_conf.h"
d11 1
a11 1
#include	"./des_tables.h"
@


1.7
log
@Added include of des_conf.h
@
text
@@


1.6
log
@Fix for hc on the RTPC
@
text
@d8 1
@


1.5
log
@Patch for hc compiler: replace '| =' with '|='
@
text
@a13 1
extern	char	P[];
@


1.4
log
@RT changes
@
text
@d51 1
a51 1
					P_prime[i][j] | = 1 <<	P_temp[(i*8)+m];
@


1.3
log
@fix include
@
text
@d13 1
d33 1
a33 1
		P_temp[P[i]] = i;
@


1.2
log
@ok v1
@
text
@d10 1
a10 1
#include	"des_tables.h"
@


1.1
log
@Initial revision
@
text
@@
