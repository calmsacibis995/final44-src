head     4.7;
branch   ;
access   ;
symbols  PATCH8:4.7 PATCH7:4.7 KPATCH6:4.7 ASRSNAP1001:4.7 PATCH5:4.7 ADAMS_NSA:4.7 KPATCH4:4.7 KPATCH3:4.7 KPATCH2:4.7 KREL1:4.7 BETA5/24/88:4.5 v1:1.3;
locks    ; strict;
comment  @ * @;


4.7
date     88.11.15.11.30.15;  author jtkohl;  state Exp;
branches ;
next     4.6;

4.6
date     88.06.09.16.43.58;  author steiner;  state Exp;
branches ;
next     4.5;

4.5
date     88.02.24.14.22.27;  author steiner;  state Exp;
branches ;
next     4.4;

4.4
date     88.01.14.18.45.49;  author steiner;  state Exp;
branches ;
next     4.3;

4.3
date     88.01.14.17.44.19;  author raeburn;  state Exp;
branches ;
next     4.2;

4.2
date     87.09.10.16.16.25;  author steiner;  state Exp;
branches ;
next     4.1;

4.1
date     87.09.01.15.41.34;  author steiner;  state Exp;
branches ;
next     1.5;

1.5
date     86.08.08.14.25.12;  author spm;  state Exp;
branches ;
next     1.4;

1.4
date     85.12.16.13.47.50;  author spm;  state Exp;
branches ;
next     1.3;

1.3
date     85.08.16.12.52.04;  author spm;  state Exp;
branches ;
next     1.2;

1.2
date     85.08.12.13.37.18;  author spm;  state Exp;
branches ;
next     1.1;

1.1
date     85.08.11.14.15.38;  author spm;  state Exp;
branches ;
next     ;


desc
@works
@


4.7
log
@Programmer: Bill Sommerfeld
Auditor: John Kohl
changes:
rename routines to des_xxx     
rename structures likewise
use local variables and static routines where appropriate
convert to des_internal.h       
make debug routines consistent
@
text
@/*
 * $Source: //ra/mit/wesommer/des/RCS/make_s_table.c,v $
 * $Author: steiner $
 *
 * Copyright 1985, 1988 by the Massachusetts Institute of Technology.
 *
 * For copying and distribution information, please
 * see the file <mit-copyright.h>.
 */

#include <mit-copyright.h>
#include <stdio.h>
#include "des_internal.h"
#include "tables.h"

extern unsigned long swap_bit_pos_0();
extern unsigned long swap_six_bits_to_ansi();
extern unsigned long swap_four_bits_to_ansi();
char temp[8][64];
int des_debug;

void gen(stream)
    FILE *stream;
{
    register unsigned long i,j,k,l,m,n;

    /* rearrange the S table entries, and adjust for host bit order */

    fprintf(stream, "static unsigned char const S_adj[8][64] = {");
    fprintf(stream, "    /* adjusted */\n");

    for (i = 0; i<=7 ; i++) {
        for (j = 0; j <= 63; j++) {
            /*
             * figure out which one to put in the new S[i][j]
             *
             * start by assuming the value of the input bits is "j" in
             * host order, then figure out what it means in standard
             * form.
             */
            k = swap_six_bits_to_ansi(j);
            /* figure out the index for k */
            l = (((k >> 5) & 01) << 5)
                + ((k & 01) <<4) + ((k >> 1) & 0xf);
            m = S[i][l];
            /* restore in host order */
            n = swap_four_bits_to_ansi(m);
            if (des_debug)
                fprintf(stderr,
                "i = %d, j = %d, k = %d, l = %d, m = %d, n = %d\n",
                        i,j,k,l,m,n);
            temp[i][j] = n;
        }
    }

    for (i = 0; i<=7; i++) {
        fprintf(stream,"\n");
        k =0;
        for (j = 0; j<= 3; j++) {
            fprintf(stream,"\n");
            for (m = 0; m <= 15; m++) {
                fprintf(stream,"%2d",temp[i][k]);
                if ((k++ != 63) || (i !=7)) {
                    fprintf(stream,", ");
                }
            }
        }
    }

    fprintf(stream,"\n};\n");
}
@


4.6
log
@Optimizations for vax, change in generating files.
Programmer: raeburn.
Auditor: jtkohl.
@
text
@d2 2
a3 2
 * $Source$
 * $Author$
d13 1
a13 1
#include "conf.h"
d20 1
a20 1
int debug;
d48 1
a48 1
            if (debug)
@


4.5
log
@Copyright notice, etc.
@
text
@d2 2
a3 2
 * $Source: /mit/kerberos/tools/RCS/prototype.c,v $
 * $Author: steiner $
d5 1
a5 1
 * Copyright 1988 by the Massachusetts Institute of Technology.
d7 2
a8 6
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 *
 * part of the Athena Kerberos encryption system
 *
 * spm	8/85
a10 5
#ifndef	lint
static char rcsid_make_s_table_c[] =
"$Header: prototype.c,v 1.2 88/02/22 18:54:06 steiner Locked $";
#endif	lint

d13 1
a13 1

d20 1
a20 1
int des_debug;
d22 2
a23 1
main()
d29 2
a30 4
    fprintf(stdout, "/*\n");
    fprintf(stdout, " * s_tables.h\n");
    fprintf(stdout, " * derived from make_s_tables.c\n");
    fprintf(stdout, " */\n");
a31 3
    fprintf(stdout,
	    "\nstatic unsigned char S_adj[8][64] = /* adjusted */\n{");

d33 21
a53 21
	for (j = 0; j <= 63; j++) {
	    /*
	     * figure out which one to put in the new S[i][j]
	     *
	     * start by assuming the value of the input bits is "j" in
	     * host order, then figure out what it means in standard
	     * form.
	     */
	    k = swap_six_bits_to_ansi(j);
	    /* figure out the index for k */
	    l = (((k >> 5) & 01) << 5)
		+ ((k & 01) <<4) + ((k >> 1) & 0xf);
	    m = S[i][l];
	    /* restore in host order */
	    n = swap_four_bits_to_ansi(m);
	    if (des_debug)
		fprintf(stderr,
		"\ni = %d\tj = %d, k = %d, l = %d\tm = %d, n = %d",
			i,j,k,l,m,n);
	    temp[i][j] = n;
	}
d57 11
a67 11
	fprintf(stdout,"\n");
	k =0;
	for (j = 0; j<= 3; j++) {
	    fprintf(stdout,"\n");
	    for (m = 0; m <= 15; m++) {
		fprintf(stdout,"%2d",temp[i][k]);
		if ((k++ != 63) || (i !=7)) {
		    fprintf(stdout,", ");
		}
	    }
	}
d70 1
a70 1
    fprintf(stdout,"\n};\n");
@


4.4
log
@Formatted.
Programmer: raeburn.
@
text
@d2 2
a3 1
 * des_make_s_table.c
d5 5
d12 1
a12 1
 *	spm	8/85
d15 6
@


4.3
log
@Changed include file name des_tables.h to tables.h.
@
text
@d1 2
a2 1
/* des_make_s_table.c
d9 1
a9 1
#include	<stdio.h>
d11 1
a11 1
#include	"tables.h"
d13 5
a17 5
extern	unsigned long	swap_bit_pos_0();
extern	unsigned long	swap_six_bits_to_ansi();
extern	unsigned long	swap_four_bits_to_ansi();
char	temp[8][64];
int		debug;
d21 1
a21 3
	register unsigned long	i,j,k,l,m,n;
	
/* rearrange the S table entries, and adjust for host bit order			   */
d23 1
a23 3
	fprintf(stdout,
"\n/* des_s_tables.h\n * derived from des_make_s_tables.c\n	*/");
	fprintf(stdout,"\nstatic unsigned char S_adj[8][64] = /* adjusted */\n{");
d25 4
a28 23
	for (i = 0; i<=7 ; i++)
		{
		for (j = 0; j <= 63; j++)
			{
			/* figure out which one to put in the new S[i][j]			   */
			/* start by assuming the value of the input bits is "j" in
			 * host order, then figure out what it means in standard form.
			 */
			 k = swap_six_bits_to_ansi(j);
			 /* figure out the index for k	   */
			 l = ( ((k >> 5) & 01) << 5) + ((k & 01) <<4) + ((k >> 1) & 0xf);
			 m = S[i][l];
			 /* restore in host order									   */
			 n = swap_four_bits_to_ansi(m);
			 if (debug) 
				 {
				 fprintf(stderr,
				 "\ni = %d\tj = %d, k = %d, l = %d\tm = %d, n = %d",
				 i,j,k,l,m,n);
				 }
			 temp[i][j] = n; 
			}
		}		
d30 2
a31 17
	for (i = 0; i<=7; i++)
		{
		fprintf(stdout,"\n");
		k =0;
		for (j = 0; j<= 3; j++)
			{
			fprintf(stdout,"\n");
			for (m = 0; m <= 15; m++)
				{
				fprintf(stdout,"%2d",temp[i][k]);
				if ((k++ != 63) || (i !=7))
					{
					fprintf(stdout,", ");
					}
				}
			}
		}	
d33 21
a53 1
	fprintf(stdout,"\n};\n");
d55 18
a72 2
	
			
@


4.2
log
@Changed include files configuration and referencing.
@
text
@d10 1
a10 1
#include	"des_tables.h"
@


4.1
log
@No change; starting version 4.
@
text
@d10 1
a10 1
#include	"./des_tables.h"
@


1.5
log
@RT changes
@
text
@@


1.4
log
@*** empty log message ***
@
text
@d13 2
a14 2
extern	unsigned long	swap_six_bits();
extern	unsigned long	swap_four_bits();
d36 1
a36 1
			 k = swap_six_bits(j);
d41 1
a41 1
			 n = swap_four_bits(m);
@


1.3
log
@ok v1
@
text
@d10 1
a10 1
#include	"des_tables.h"
@


1.2
log
@works, faster 
@
text
@@


1.1
log
@Initial revision
@
text
@d26 1
a26 1
	fprintf(stdout,"\nstatic char S_adj[8][64] = /* adjusted */\n{");
@
