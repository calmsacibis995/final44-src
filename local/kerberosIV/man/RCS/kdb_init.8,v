head     4.2;
branch   ;
access   ;
symbols  PATCH8:4.1 PATCH7:4.1 KPATCH6:4.1 ASRSNAP1001:4.1 PATCH5:4.1 KPATCH4:4.1 KPATCH3:4.1 KPATCH2:4.1 KREL1:4.1 BETA5/24/88:1.1;
locks    ; strict;
comment  @@;


4.2
date     90.06.25.21.12.05;  author kfall;  state Exp;
branches ;
next     4.1;

4.1
date     89.01.23.11.09.02;  author jtkohl;  state Exp;
branches ;
next     4.0;

4.0
date     89.01.23.10.13.21;  author jtkohl;  state Exp;
branches ;
next     1.2;

1.2
date     89.01.17.18.21.12;  author steiner;  state Exp;
branches ;
next     1.1;

1.1
date     87.12.21.15.05.27;  author steiner;  state Exp;
branches ;
next     ;


desc
@From Bill Bryant.
@


4.2
log
@no big changes
@
text
@.\" $Source: /usr/src/kerberosIV/src/man/RCS/kdb_init.8,v $
.\" $Author: jtkohl $
.\" $Header: /usr/src/kerberosIV/src/man/RCS/kdb_init.8,v 4.1 89/01/23 11:09:02 jtkohl Exp Locker: kfall $
.\" Copyright 1989 by the Massachusetts Institute of Technology.
.\"
.\" For copying and distribution information,
.\" please see the file <mit-copyright.h>.
.\"
.TH KDB_INIT 8 "Kerberos Version 4.0" "MIT Project Athena"
.SH NAME
kdb_init \- Initialize Kerberos key distribution center database
.SH SYNOPSIS
kdb_init [ 
.B realm
]
.SH DESCRIPTION
.I kdb_init
initializes a Kerberos key distribution center database, creating the
necessary principals.
.PP
If the optional
.I realm
argument is not present,
.I kdb_init
prompts for a realm name (defaulting to the definition in /usr/include/krb.h).
After determining the realm to be created, it prompts for
a master key password.  The master key password is used to encrypt
every encryption key stored in the database.
.SH DIAGNOSTICS
.TP 20n
"/etc/kerberosIV/principal: File exists"
An attempt was made to create a database on a machine which already had
an existing database.
.SH FILES
.TP 20n
/etc/kerberosIV/principal.pag, /etc/kerberosIV/principal.dir
DBM files containing database
.TP
/usr/include/kerberosIV/krb.h
Include file defining default realm
.SH SEE ALSO
kdb_destroy(8)
@


4.1
log
@add RCS header
@
text
@d1 1
a1 1
.\" $Source: /mit/kerberos/src/man/RCS/kdb_init.8,v $
d3 1
a3 1
.\" $Header:  $
d31 1
a31 1
"/kerberos/principal: File exists"
d36 1
a36 1
/kerberos/principal.pag, /kerberos/principal.dir
d39 1
a39 1
/usr/include/krb.h
@


4.0
log
@No change, incrementing vno to 4.x
@
text
@d2 2
a3 1
.\" $Author: steiner $
@


1.2
log
@Programmer: jtkohl
Auditor: steiner
rewrote (accidentally).
@
text
@d1 1
a1 1
.\" $Source: /mit/kerberos/src/man/RCS/krb_sendauth.3,v $
@


1.1
log
@Initial revision
@
text
@d1 3
a3 2
.\" All rights reserved.  
.\" 
d5 2
a6 1
.\"	@@(#)fg.1	6.8 (Berkeley) 11/02/87
d8 1
a8 16
.TH KDB_INIT 8 "December 16, 1987"
.UC 4
.de sh
.br
.ne 5
.PP
\fB\\$1\fR
.PP
..
.if n .ds ua ^
.if t .ds ua \(ua
.if n .ds aa '
.if t .ds aa \(aa
.if n .ds ga `
.if t .ds ga \(ga
.if t .tr *\(**
d10 1
a10 1
kdb_init \- Initialize the Kerberos master database
d12 2
a13 4
.HP 15
.B /usr/etc/kdb_init
[
.I realmname
d16 3
d20 3
a22 27
This utility creates and initializes the Kerberos master database.
It creates the database files
.I \/kerberos\/principal.dir
and
.IR \/kerberos\/principal.pag,
and initializes the database by adding
three database entries:
the master database principal,
a Kerberos default principal,
and the initial ticket-granting service principal
.IR krbtkt.
.PP
The master database principal is the entry to the database itself.
You cannot manipulate the database without the master database password.
The Kerberos default principal provides a template for
service principals that you will install later.
The
.I krbtkt
principal is the Kerberos ticket-granting ticket service.
It is the service that provides initial tickets
for
.I kinit
users.
.PP
If you do not include the Kerberos
.I realmname
when you enter the command,
d24 18
a41 17
prompts you for it.
The program also asks you to enter the master database key.
You are asked to enter it twice for confirmation.
Don't forget the key.
You cannot manipulate the database without it.

After using
.I kdb_init
to set up the master database,
you may want to use the
.I kstash
utility to hide the master database password on the database host machine.
This will allow Kerberos administration programs to access and
manipulate the master database without needing a human operator
to enter the password from the keyboard.
.SH "SEE ALSO"
kerberos(1), kinit(1), kstash(8), kdb_edit(8), kdb_destroy(8)
@
