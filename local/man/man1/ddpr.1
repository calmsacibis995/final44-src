.TH DDPR DDBS
.SH NAME
ddpr - print a DDBS data file
.SH SYNOPSIS
ddpr [file] [fieldname[^][%][+][++][_] [[:]alias] ...][+] [++] [_] [-t] [-r] [-w] [-h] [-f] [-v] [-s] [-u] 
.SH DESCRIPTION
.I Ddpr
produces a nicely formatted columnar output of a DDBS data file.
The arguments may be given in any order.
If no file name or `-' is given
the standard input is used.
Otherwise, the first argument whose first character is not `-' is
taken to be the name of a file to be used as the input.
Normally all the information in the file is printed.  
However, a specific subset of fields may be selected.
The desired fields are merely listed as the last arguments.
The fields may be `renamed' for the purposes of printing.
If an argument following the input file name contains a colon (`:')
then the string before the colon is taken to be the name of a field
in the file and the string after the colon is taken to be what you
want it to be printed out as.
.br
If a carrot (`^') follows the field name
then a heading will be printed every time the data in the
corresponding field changes.  See `-h' below.
.br
If a percent sign (`%') follows the field name
then extra space will be printed every time the data in the
corresponding field changes.  This will have the effect of separating
the print into visual blocks.
.br
If a plus sign (`+') follows a field name,
totals will be printed for all numeric columns every time
the data in this field changes.  Additionally, if any
field uses the `+' option then a GRAND TOTAL will be printed at the end.
.br
If two plus signs (`++') follow the field name then that field will be 
considered numeric and only fields followed by `++' will be totaled.
Otherwise all numeric fields are totaled (fund numbers, course numbers, ...).
.br
If an underscore (`_') follows the field name
then the data in the associated field will be printed only when it changes.
.br
Note: `^', `%', and '_' are meaningful only in columnar output mode.
(As opposed to raw output mode.)

.SH OPTIONS
-w \fIn\fR
.in +5
Set the width to \fIn\fR characters wide.
The default width is the maximum width of the largest field of each type
in the input file.
(n is an integer.)
.in

-h \fIn\fR
.in
Headings.
(n is an integer.)
Automatically print headings every \fIn\fR lines.
A heading consists of a line with the keywords printed in the same columnar
form as the rest of the data.  The headings are offset by blank lines
preceding.  Headings may also be produced every time one
of a preselected group of fields changes its value by including the character
`^' immediatly after the field identifier in question in the argument list.
(See the example, below).
.in

-f
.in
Fold the lines.  The output is folded at the end of the line
instead of being `shaved'.  Folding will not take place in the
mildle of a field.
.in

-r
.in
Raw.  The output comes out in raw DDBS form.  Thus ddpr may
be used to restructure DDBS files.
.in
-s \fIn\fR
.in
Spacing.  The inter-column spacing is set to \fIn\fR.  The default is 2
spaces between columns
.in

-u
.in
Unique.  Suppresses printing of consecutive duplicate items.
.in

-v \fIn\fR
.in
Vertical spacing.  Sets the spacing between lines to \fIn\fR.  (1 means single
spacing, 2 means double spacing, etc.)  The default value is is 1.
.in

-t
.in
Print totals only. Prints the total for a field in place. Items are
printed only as needed for totals. Only the last item in the total
calculation is used in the other fields. This can be used with ``-r''
to produce a new file with totals only.
.in

+
.in
Grand Total only.  Prints a total for each numeric column once only
at the very end.
.in

_
.in
(underscore) Print data only when it changes in every column.
.in

.SH "MORE DESCRIPTION"
Ddpr first looks through its input file and finds the longest
field of each type.
Then, if neccessary it `shaves' the field widths until resultant total
width is equal to the width setting.
The -f option disables the shaving described above.
.SH EXAMPLES
To make a nice print of the file `data' on the line printer you would do:
.br
	ddpr file | lpr &
.br
To make the same print, but with heading every 60 lines you would do:
.br
	ddpr file -h 60 | lpr &
.br
To look at the same file `data' on your terminal you could do:
.br
	ddpr file
.br
or to have it compressed so that each item fits all on one line:
.br
	ddpr file -w 79
.br
To print a list of name, divisions and major advisors one could do:
.br
	ddpr eecsa name div mj
.br
To print a table with reasonable headings:
.br
.in 5
Using the `rename' feature
.br
	ddpr file ``pn:Part Number'' ``uc:UC Inventory Number''
.br
Using the automatic heading for new category option
.br
	ddpr file ac^ name
.br
Notice the `^' after the field identifier.  A heading will be
produced every time the ac field changes in the input file.
.in 0

Using the automatic space before new section option:
.br
	ddpr file name category%
.br
Will produce a print in which each new category section is set off 
by extra spacing.
.bp
To use ``ddpr'' to reorganize a data file:  If you have three
fields in an existing data file (``name'', ``phone'' & ``address'')
and wish to add a fourth, e.g.
``title'' between ``name'' and ``phone'', while retaining the file
in its original ``raw'' form, you would give the following
command:
.br
	ddpr -r filename name title phone address > newfile
.br
This command will create a ``newfile'' with all the data from the old file
with the addition of a new field name in the appropriate place.

.SH FILES
/mnt/tmp/ddpr#	Temporary file
.SH AUTHOR
Len Edmondson
.SH "SEE ALSO"
ddsort (DDBS), ddgrep (DDBS), ddmerge (DDBS), ddwc (DDBS), lpr (I)
