.TH "DDSORT" DDBS 
.SH NAME
ddsort \*- sort DDBS data files
.SH SYNOPSIS
ddsort [-Nnrd] key [file] [-o [output_file]]
.SH DESCRIPTION
.it ddsort
sorts DDBS data files by the data in a specific field identified by ``key''.
The input is taken from the named file.
The standard input is used if no data file name is given.
Thus \fIddsort\fR may be used as a filter.
.SH OPTIONS

-N
.in +5
Name.   The sorting key fields are taken to be names (of people).
The format of the names is very flexible,
i.e.,  `Jane Jones', `Jones, Jane',  `Jane Smith-Jones', `Ms. Jane A. Jones',
`Dr. Angela P. Smith', `Prof. Carbon Q. Copy'
will all be properly recognized as names.
If a field consists of a series of names, only the first will be used.
A `/' or `;' in the field also stops the search for further names.
.in

-d
.in +5
Date.   The sorting key fields are taken to be dates.
The format of the date is very flexible.
I.e.  5-May-70,  May 5th, 1970, 2-5, 2-5-70
will all be properly recognized as dates.
.in

-n
.in +5
Number.   The sorting key fields are taken to be numbers.
Sorting then happens in numerical order.
Otherwise sorting is alphabetical (like a dictionary).
.in

-o
.in
Output.  If the -o option is given, the following argument is taken to
be the name
of a file into which the output of the sort will be sent.
So, for example, to sort a file `data' in place, one could do:
.br

ddsort ad3 data -o data
.br
.in

-r
.in
Reverse.  Reverse the sense of the sort.
.in

.SH "MORE DESCRIPTION"
If the given key matches none of the keys in the
data file, the file is copied straight through, without being sorted.
All items need not have the same number of fields.  Items with blank
or missing key fields will come out first in the sorted file.
If the last line of the input file isn't a dollar sign ($) alone on the
line, the error message ``unexpected EOF'' is printed and no other
output is produced.
Hierarchical sorting can be achieved through the use of \fIddsort\fR in
conjuction with pipes.
If , for example you had a ddbs file with entries for ``campus'',
``building'', and ``room'' and wanted it sorted first
by campus, then by building , then by classroom 
you could do 
.br

ddsort room infile | ddsort building | ddsort  campus > outfile.
.br

Limitations:  \fIddsort\fR will fail if a single line of the input file
is longer than 5120 characters. Lines ending in \\ are considered
individual lines here. Ddsort uses temporary files, so
if there isn't enough temporary file space, it will fail.
As a safety feature, \fIddsort\fR is not interruptable during its output stage.
This provides some measure of protection against accidently
producing a partial file.
For long files, \fIrsort\fR or \fIsort\fR in conjunction with \fIbook\fR
will process much faster.
.SH FILES
/tmp/ddsortH#####	hash file
.br
/tmp/ddsortD#####	data file
.SH AUTHOR
Len Edmondson
.SH SEE ALSO
ddmerge (DDBS),
ddgrep (DDBS),
ddwc (DDBS),
ddpr (DDBS)
