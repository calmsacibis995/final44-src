.TH DVISUN 1
.SH NAME
dvisun \- displays dvi files on SUNs
.SH SYNOPSIS
.B dvisun
[
.B \-i
] [
.B \-n
] [
.B \-p
] [
.B \-l
] [ \+N
] dvifile[.dvi]
.SH DESCRIPTION
The
.I dvisun
program displays a
.I .dvi
file on a SUN. After each page of the
output is displayed the program will wait for a response from
the user. Type
.B u
, 
.B d
, 
.B l
, 
.B r
to move the displayed
page of the document up, down, left or right. This provides a facility to 
examine the entire page if the page is larger than the screen.
A 
.B p
will display
the previous page. <RETURN> goes to the next page. When a new page is 
displayed, the top left corner of the page will be displayed in the top
left corner of the screen.
Multiple pages may be skipped forwards or backwards by entering 
.B \+n <RETURN>
or
.B \-n <RETURN>
to skip n pages. The program will not skip past the beginning or the end
of the document. Prior to display of the first page in the
document several pages may be skipped by including a
.B \+N
option on the command line. This will cause N pages to be skipped
prior to displaying the first page on the screen.
Typing 
.B q
will cause
the program to exit.
.PP
Normally,
.I dvisun
will display pages as black text on a white background.
If
.I dvisun
is run from under the window system, it will NOT adopt the
mode (normal/inverse) that suntools was given during start-up.
To invert this behaviour, use the
.B \-i
flag.
.PP
After the document is processed a list of errors is printed
on standard error. This error listing is also saved in
the file dvifile.log. The creation of the log file may be prevented
by using the
.B \-l
option when invoking the program.
.PP
This version of
.I dvisun
has been carefully adapted to our imagen output device.
It draws borders around the pages displayed to show exactly where
the page edges will appear on output.
These borders may be turned off by including the
.B \-n
flag on the command line.
.PP
This is a `bare bones' DVI-to-Sun program. Minimal error checking
is done. For more complete error checking
.IR dvitype(1)
should be run.
.PP
Occasionally there may be insufficient memory to hold the information about
all of the fonts in the system. Portions of the document may be previewed
by including the
.B \-p
option on the command line. This will prevent the preloading of all fonts
into the system and instead use demand loading of the font tables.
.PP
Normally,
.I dvisun
expects a standard SUN-100/150 size display and framebuffer device.
When using a Sun-2, set the environment variable SUN2 to any non-null value.
This will cause the larger screen size to be handled correctly, as well as
causing some adjustments to border placement.
Sun-2s also have a different name for their framebuffer device.
.SH FILES
.TP 2.5i
/dev/bwone0
Framebuffer device on SUN-100/150
.TP
/dev/bwtwo0
Framebuffer device on Sun-2
.TP
*.dvi
TeX DeVice Independent output file
.TP
/usr/local/fonts/pixel/*.*pxl
TeX font rasters for SUNs
.SH "SEE ALSO"
dvitype(1),
tex(1)
.SH BUGS
When using fonts with decent resolution only two-thirds of a page appears
on the screen.
.PP
Currently, the look-ahead of the original stand-alone version of dvisun
has been simulated under the window system using non-blocking input.
Although a way has been found to block rather than busy-waiting
in the GetChar() routine, it (and this whole technique) is much too
complicated.
(In fact, there may even be a small race condition in the current
arrangement if the system flushes the input buffer when the input mode
changes.)
Whenever the ioctl() used by the InputWaiting() routine actually
works for windows (which it currently does not), it should be used instead.
All this is really due to a bug in the Sun environment: the ioctl()
should work.
.PP
The Sun-2 modifications have made too much space appear at the bottom of a
page on a SUN-100/150.
They were also not rigorously measured for the Sun-2.
Pages may appear
somewhat different on the Sun-2 display than they will on the imagen.
.SH AUTHOR
Mark Senn wrote the early versions of this program for the BBN BitGraph.
Stephan Bechtolsheim, Bob Brown, Richard Furuta, James Schaad
and Robert Wells improved it. Norm Hutchinson ported the program to the Sun.
Charles Perkins modified it to run under the window system, added the
border calculations, and modified it to handle Sun-2s.
