.TH GREMLINLIB 8  "December 1984"
.UC 4
.SH NAME
gr_open, gr_close, gr_vector, gr_curve, gr_arc, gr_circle, gr_polygon, gr_text \- Gremlin file creation routines
.SH SYNOPSIS
.nf
.B #include <local/gremlin.h>
.PP
.B FILE *gr_open(gremlinfile, device, orientation, x, y)
.B char *gremlinfile;
.B int device, orientation;
.B float x, y;
.PP
.B gr_close(fp)
.B FILE *fp;
.PP
.B gr_vector(fp, npoints, list, brush)
.B FILE *fp;
.B int npoints, brush;
.B float list[][2];
.PP
.B gr_curve(fp, npoints, list, brush)
.B FILE *fp;
.B int npoints, brush;
.B float list[][2];
.PP
.B gr_arc(fp, cx, cy, sx, sy, angle, brush)
.B FILE *fp;
.B float cx, cy, sx, sy, angle;
.B int brush;
.PP
.B gr_circle(fp, cx, cy, radius, brush)
.B FILE *fp;
.B float cx, cy, radius;
.B int brush;
.PP
.B gr_polygon(fp, npoints, list, border, stipple)
.B FILE *fp;
.B int npoints, border, stipple;
.B float list[][2];
.PP
.B gr_text(fp, text, x, y, font, size, justification)
.B FILE *fp;
.B char *text;
.B float x, y;
.B int font, size, justification;
.fi
.SH DESCRIPTION
These functions are used to generate files suitable for input to
.I Gremlin
running on either the AED or a SUN Workstation.
.I Gr_open
returns the result of a
.I fopen()
call which must be used as an argument
.RI ( fp )
to all other routines.
The other routines return either a status of 
.I GR_ERROR
or
.IR GR_OK .
.PP
.I Gr_open
opens
.I gremlinfile
for writing using the file format for 
.I device
(SUN_GREMLIN or AED_GREMLIN).
.I Orientation
(HORZ_ORIENT or VERT_ORIENT)
must be specified, but is ignored on the SUNs.
.I X
and
.I y
indicate a position to be used when reading the file into another
Gremlin picture (on startup (0, 0) is in the lower-left corner).
.I Gr_close
will close the Gremlin
file, writing a terminator to it.
.PP
.I Gr_vector
writes a vector object to the file referenced by
.IR fp .
.I Npoints
indicates the number of coordinates in 
.IR list ,
an array of (x, y) pairs.
.I Brush 
may be either DOTTED, DOTDASHED, THICK, DASHED, NARROW or MEDIUM.
.PP
.I Gr_curve
writes a curve object to the file referenced by
.I fp
in the same manner as 
.IR gr_vector .
.PP
.I Gr_arc
writes an arc object to the file referenced by
.IR fp .
.I Cx
and
.I cy
are the coordinates of the arc's center.
.I Sx
and
.I sy
are the coordinates of one endpoint of the arc.
.I Angle
is the number of counter-clockwise degrees in the angle, and 
.I brush
is as above.
.PP
.I Gr_circle
writes a circle object to the file referenced by
.IR fp .
.I Cx
and
.I cy
are the coordinates of the circle's center, and 
.I brush
is as above.
.PP
.I Gr_polygon
writes a polygon object to the file referenced by
.IR fp .
.I Npoints
indicates the number of coordinates in 
.IR list ,
an array of (x, y) pairs of vertices.
The polygon's
.I border
can have the same styles as a vector's brush.
In addition, a zero for this argument means no border.
The
.I stipple
must be between one and eight.
.PP
.I Gr_text
writes a text object to the file referenced by
.I fp
containing the string
.IR text .
The text is placed relative to the position indicated by
.I x
and 
.IR y ,
using the
.I justification
(BOTLEFT, CENTLEFT, TOPLEFT, BOTCENT, CENTCENT, TOPCENT, BOTRIGHT, CENTRIGHT,
or TOPRIGHT).
The text will be displayed using 
.I font
(1 - 4)
and 
.I size
(1 - 4).
.PP
To use the library, include
.I /usr/include/local/gremlin.h
in your source program.
Since the library uses math routines, you will need to compile
using a sequence such as this:
.br
.ti 5
cc prog.c -lgremlin -lm
.SH AUTHOR
Mark Opperman
