.nh
.ll 6.5i
.TH RAPID 1
.UC 4
.SH NAME
rapid - Rapid APplIcation Development
.SH SYNOPSIS
.B rapid
[ \fB-Dns\fR ] infiles [ actions ] [ \fB-L\fR x ] [ \fB-l\fRx ] [ \fB-o\fR outfile ]
.sp
outfile [ \fB-abdnrRu\fR ] [ - flaglist ] [ \fB-D\fR altdialogue ]  [ arglist ]
.SH DESCRIPTION
The
.I rapid
command invokes the RAPID/USE application development system, which 
is used to create and modify screen-oriented interactive dialogues
and systems.
RAPID/USE executes a model of systems based on state transition diagrams,
in which system output is associated with nodes and user input is 
associated with arcs.
A set of \fIactions\fR
may be included so that one may use \fIrapid\fR to build interactive systems.
An action may be associated with the transition along an arc from one
node to another.
Actions may be operations on a relational database using the Troll/USE
relational database system and/or programmed actions in any (or all) of
C, FORTRAN 77, or Pascal.
If no programmed actions are to be included, tdi (1) may be used.
.LP
The 
.I infiles
contain the rapid dialogue description, representing a
set of USE transition diagrams.
Multiple diagram descriptions may be included in a single file.
Execution starts at the entry node of the first diagram declared
in the first input file listed, or by default at
the beginning of a diagram named \fImain\fR located anywhere in the
\fIinfiles\fR.
.LP
Actions may be provided as source files in the various programming
languages, or as separately compiled object files ("file.o").
Source files are compiled as needed and linked with specified
object files and libraries to produce an executable program.
.LP
The default name of the executable program is the base name of the first infile
with the suffix ".out", e.g., \fImain.out\fR.
.sp 0.5v
.LP
Flags for \fIrapid\fR are as follows:
.TP 8
.B \-D
Compile dialogue only and include it in \fRoutfile\fR.
.TP
.B \-L \fIx\fR
Load the named user library (archive format)
.I x
in with the output module.  
(The -L flag is not needed if the named user library has the ".a" suffix.)
.TP
.B \-l\fIx\fR
Load the named system library (from /lib or /usr/lib) 
.I x
in with the output module (e.g. \fI-lm\fR).
.TP
.B \-n
Compiler warnings are suppressed.
.TP
.B \-o \fRoutfile
Name the executable program \fIoutfile\fR instead of \fIinfile.out\fR.
.TP
.B \-s
Resolve addresses of actions called and strip \fIoutfile\fR.
.sp 1v
.ti -4
Flags for execution of \fIoutfile\fR are as follows:
.TP 8
.B \-a
Dialogue only, with no execution of actions.
Action numbers, \fBcall\fR, and \fBdo\fR statements
may appear in the compiled dialogue, but no actions will be
executed when the arc is traversed.
If several \fBwhen\fR branches follow the action call (\fBdo\fR),
the first of these branches will be taken (see -d).
.TP
.B \-b
Turn off checking for screen boundaries and suppress error messages
for screen boundary violations.
.TP
.B \-d
Dialogue only, with no execution of actions (even if linked in). 
Action numbers, \fBcall\fR, and \fBdo\fR statements
may still appear in the compiled dialogue, but no actions will be
executed when the arc is traversed. 
A prompt will appear on the bottom
line on the screen asking for a return value from the action.  
The arc corresponding to that action value will be traversed
if such an arc exists. (see -a).
.TP
.B \-n
Execution warnings are suppressed.  (Use this option with care!)
.TP
.B \-R
Run \fIrapid\fR in raw mode.  Normally, \fIrapid\fR is run in
.I cbreak
mode where some
character processing takes place, such as recognition of
.B BREAK
or
.B DEL.
In 
.I raw
mode, complete control over all keys is possible, however, caution
must be taken as the program cannot be exited with
.B BREAK
or
.B DEL.
The
.I raw
and
.I cbreak
modes are described in tty(4).
.TP
.B \-r
Create a log file named
.I outfile.rlog.nn, 
where outfile is the base name of the executable program and 
.I nn
is a unique sequence number generated by
.I rapid
from the set 00-99. 
(The name \fIoutfile\fR may be truncated to the first six letters on
systems with a fixed length for file names.)
The log contains the exact raw input from a user session. 
The file can be used to run the executable program again with the exact same
set of inputs.  
.TP
.B \-u
Create a log file named
.I outfile.ulog.nn, 
where outfile is the base name of the executable program and 
.I nn
is a unique sequence number generated by
.I rapid
from the set 00-99.
(The name \fIoutfile\fR may be truncated to the first six letters on
systems with a fixed length for file names.)
The log contains a line for each time a node is
visited or an action executed.  A timestamp begins each line.
For nodes, each line ends with the input the user entered at that node.
.LP
Action files written in C should contain the include line
.sp 0.5v
.ti +0.5i
#include <local/rapid.h>
.LP
After the executable program has been created,
.I outfile
can be given as a command to execute the compiled system.
The flags -a, -b, -D, -d, -n, -r, -u, and -R may be given
to select execution time options.
.LP
The outfile will use the dialogue description files on which
rapid was invoked unless an alternate dialogue version is given with
the -D flag
.sp 0.5v
.ti +0.5i
outfile -D altdialogue
.sp 0.5v
The alternate dialogue may be the outfile created with \fItdi\fR
or by a separate invocation of rapid with the -D option.
.LP
Locally defined flags and arguments may also be given to the executable
outfile program.
Flags are preceded by a minus sign ("-").
All flags and arguments given on the outfile command line and \fInot\fR
used by \fIrapid\fR are 
placed in an external character pointer array, rargv (char *rargv[ ]).
The count of such flags and arguments is stored in the
external integer variable, rargc (int rargc).
Both rargv and rargv are declared in <local/rapid.h>.
In the action files, rargv and rargc can then be used similarly to the
use of argv and argc in a C program.  The argument "rargv[0]" is the
executable file name. 
.sp 0.5v
.LP
During execution, two system commands are available:
.LP
.B BREAK
(<BREAK> key) - terminate interpretation of the diagrams and return
the user to the Unix shell (if -R not selected).
.LP
!Unix command - the remainder of the
line after the '\!!' is sent to the Unix shell to be interpreted
as a Unix command.  A '\!!' is displayed and control is returned
to the node where this command was used.
.SH EXAMPLES
If the current directory contains the files
.I actions.c
and
.I actns1.c,
then the command:
.sp 0.5v
.ti +1i
rapid adtsystem actions.c actns1.c -o tsystem
.sp 0.5v
will compile the files, produce
.I actions.o
and
.I actns1.o,
check the dialogue description
.I adtsystem,
load them together
and produce the executable file
.I tsystem.
.LP
The first call to
.sp 0.5v
.ti +1i
tsystem -u -q xyz
.sp 0.5v
will execute \fItsystem\fR, produce a log \fItsystem.ulog.00\fR, and store the
local flag -q and the local argument xyz in the array rargv to
be interpreted by the action routines of \fItsystem\fR.
.SH "SEE ALSO"
rapsum(1), tdi(1), troll(1), troll(3), tty(4)
.br
.I "A RAPID/USE Tutorial,"
by A.I. Wasserman and D.T. Shewmake
.br
.I "RAPID/USE Reference Manual",
by D.T. Shewmake, A.I. Wasserman, and P.A. Pircher
.SH AUTHORS
David Shewmake, Anthony Wasserman, Peter Pircher
.SH FILES
.ta 2.8i
.nf
/usr/local/rapcomp	rapid compiler
/usr/local/raptdi	transition diagram interpreter
/usr/local/lib/librapid.a	rapid library
/usr/local/lib/rap_errors	rapid compiler errors
/usr/local/lib/rapobj	base rapid object module
/usr/local/lib/rapproto	driver for Transition Diagram Interpreter
/usr/include/local/rapid.h	rapid actions header file
/usr/tmp/rapmore.$$	temporary more file
outfile.ulog.nn	transition log
outfile.rlog.nn	raw input log
/tmp/rapcmp.$$	compiler temporaries
/tmp/raptxt.$$
/tmp/rapsca.$$
.fi
