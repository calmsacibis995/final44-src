.TH SNO 1 2/9/73
.SH NAME
sno \- Snobol interpreter
.SH SYNOPSIS
.B sno
[ file ]
.SH DESCRIPTION
.I Sno
is a Snobol III (with slight differences)
compiler and interpreter.
.I Sno
obtains input from the
concatenation of
.I file
and the standard input.
All input through a statement
containing the label `end' is
considered program and is compiled.
The rest is available to `syspit'.
.PP
.I Sno
differs from Snobol III in the following ways.
.PP
There are no unanchored searches.
To get the same effect:
.PP
        a ** b          unanchored search for b
.br
        a *x* b = x c   unanchored assignment
.PP
There is no back referencing.
.PP
        x = "abc"
.br
        a *x* x         is an unanchored search for `abc'
.PP
Function declaration is different.
The function declaration is
done at compile time by the use of the label `define'.
Thus there is no ability to define functions at run time
and the use of the name `define' is preempted.
There is also no provision for automatic variables
other than the parameters.
For example:
.HP 8
.B "define     f( )"
.PP
or
.HP 8
.B "define     f(a,b,c)"
.PP
All labels except `define' (even `end')
must have a non-empty statement.
.PP
If `start' is a label in the program,
program execution will start there.
If not, execution begins with the first
executable statement.
`define' is not an executable statement.
.PP
There are no builtin functions.
.PP
Parentheses for arithmetic are not needed.
Normal precedence applies.
Because of this, the arithmetic
operators `/' and `*'
must be set off by space.
.PP
The right side of assignments
must be non-empty.
.PP
Either \' or " may be used for literal quotes.
.PP
The pseudo-variable `sysppt' is not available.
.SH "SEE ALSO"
Snobol III manual.
(JACM;
Vol. 11 No. 1; Jan 1964; pp 21)
