.TH VERSAPLOT 3X 11/13/79
.UC
.SH NAME
versaplot \- routines for creating vectors to be plotted on the versatec
.SH SYNOPSIS
.TP
.B plots_(option,p,v) 
.B int *option; char *p, *v;
.TP
.B plot_(x,y,pen) 
.B float *x, *y; int *pen;
.TP
.B offset_(xoff,xfac,yoff,yfac)
.B float *xoff, *xfac, *yoff, *yfac;
.TP
.B factor_(fact)
.B float *fact;
.TP
.B newpen_(nibs)
.B int *nibs;
.TP
.B where_(xnow,ynow,dfact)
.B float *xnow, *ynow, *dfact;
.TP
.B symbol_(x,y,height,text,angle,nc)
.B float *x,*height,*y,*angle; char *text; int *nc;
.TP
.B number_(x,y,height,fpn,ndec)
.B float *x,*y,*fpn,*height; int *ndec;
.TP
.B scale_(array,axlen,npts,inc)
.B float array[],*axlen; int *npts,*inc;
.TP
.B line_(x,y,npts,inc,lintyp,inteq)
.B float x[],y[]; int *npts,*lintyp,*inteq,*inc;
.TP
.B axis_(x,y,label,nchar,axlen,angle,fval,dv)
.B int *nchar; char *label; float *x, *y, *axlen, *angle, *fval, *dv;
.TP
.B setmsg_(msglvl)
.B int *msglvl;
.TP
.B grid_(x,y,nx,xd,ny,yd,lmask)
.B float *x,*y,*xd,*yd; int *nx,*ny,*lmask;
.TP
.B tone_(x,y,pat,n)
.B int *n,pat[]; float x[],y[];
.TP
.B curve_(x,y,ne,delta)
.B float *delta,x[],y[]; int *ne;
.fi
.PP
.ft R
.SH DESCRIPTION
These subroutines generate a file of vectors and a parameter file which
contains information necessary to rasterize the vectors.
.I Plots
must be called first to initialize variables and create files.
.I Plot
must be called last with
.I pen
= 999.
These routines are obtained by the 
.I ld
(1) option 
.B \-lv.
'C' programs must also include 
.B \-lF77
.B \-lI77
and
.B \-lm
for example 'cc main.c -lv -lF77 -lI77 -lm'.
The Versatec 'Versaplot Software Manual' provides descriptions and samples
for each routine. Argument and function descriptions are as follows:
.TP
.B plots_(option,p,v)
 initializes internal plotting variables.
.RS
.IP "option ="
.RS
.IP 0
initiate raster process, 'parm' is used for parameter file name 'vector' is used
for vector file name
.IP 1
initiate raster process, use 
.I p
for parameter file name and
.I v
for vector file name
.IP 2
do not initiate raster process, use
.I p
for parameter file name and
.I v
for vector file name
.RE
.RE
.TP
.B plot_(x,y,pen)
processes straight line 'pen' moves with the 'pen' up or down
.RS
.IP x,y
coordinate pair of the terminal position of the move
.IP "pen ="
.RS
.IP 999
end of all plotting
.IP \-999
end of current plot
.IP 3
move to (x,y)
.IP 2
draw to (x,y)
.IP \-2
draw to (x,y), re\-origin
.IP \-3
move to (x,y), re\-origin
.IP \-12 
draw to offset/scaled (x,y), re\-origin
.IP \-13 
move to offset/scaled (x,y), re\-origin
.IP 12
draw to offset/scaled (x,y)
.IP 13 
move to offset scaled (x,y)
.RE
.RE
.TP
.B offset_(xoff,xfac,yoff,yfac)
sets special scale factors and offsets to be used by
.I plot
when called with
.I pen
equal plus or minus 12 or 13, x and y coordinates are adjusted as follows:
.I xnew = (xold \- xoff) / xfac, ynew = (yold \- yoff) / yfac
.TP
.B factor_(fact)
changes the size of entire plot by the ratio of new to normal plot size
for example 
.I fact
equal 2 would double the plot size
.TP
.B newpen_(nibs)
changes the line width from 1 to 5
.I nibs
wide
.TP
.B where_(xnow,ynow,dfact)
returns the current 'pen' position and drawing factor ratio
.TP
.B symbol_(x,y,height,text,angle,nc)
plots characters at various angles and sizes
.RS
.IP x,y
starting position
.IP height
height in inches
.IP text
character string if
.I nc
is positive, integer symbol number if 
.I nc
is negative
.IP angle
rotation angle in degrees
.IP nc
positive
.I nc
indicates number of characters to be plotted,
negative
.I nc 
indicates text is an integer symbol number,
.I nc 
= \-1 means move to (x,y),
.I nc 
= \-2 means draw to (x,y)
.RE
.TP
.B number_(x,y,height,fpn,ndec)
converts floating point number to decimal and plots it
.RS
.IP fpn
number to be plotted
.IP ndec
.RS
.IP "> 0"
number of places to the right of decimal point
.IP "= 0"
plot only integer portion and decimal point 
.IP "= -1"
plot only integer portion
.IP "< -1"
absolute value
.I ndec 
\- 1 digits are right truncated from the
integer portion
.RE
.RE
.TP
.B scale_(array,axlen,npts,inc)
computes scale factors for use with 
.I line 
and 
.I axis 
subroutines. This routine returns the starting unscaled data value and the 
scaling factor to the next two elements beyond the start of
.I array
plus
.I npts
times
.I inc
.RS
.IP array
array of unscaled data
.IP axlen
axis length in inches
.IP npts
number of points to be scaled in array 
.IP inc
increment used in picking data from array,
if positive the first unscaled value is a minimum with a positive scale factor,
if negative the first unscaled value is a maximum with a negative scale factor
.RE
.TP
.B line_(x,y,npts,inc,lintyp,inteq)
plots points from coordinate data arrays, coordinate data must be followed by
scaling parameters set by 
.I scale
.RS
.IP x 
array of x values followed by scaling parameters
.IP y
array of y values followed by scaling parameters
.IP npts
number of data values in each array
.IP inc 
increment for picking data from array
.IP lintyp
magnitude of
.I lintyp 
is the symbol plot frequency for plotted symbols
.RS
.IP "= 0"
points connected by straight lines
.IP "> 0"
points connected by straight lines with plotting symbols
.IP "< 0" 
only symbols plotted
.RE
.IP inteq
symbol number of symbol to be used if symbol plotting
.RE
.TP
.B axis_(x,y,label,nchar,axlen,angle,fval,dv)
generates an axis line with labels and scales
.RS
.IP x,y
starting position
.IP label
character string used to label axis
.IP nchar
number characters in
.I label,
positive values indicate all marking is done above the axis line,
negative values indicate all marking is done below the axis line
.IP axlen 
length in inches of axis
.IP angle
angle of rotation of axis in degrees
.IP fval 
first value for axis annotation at inch intervals
.IP dv
number of data points per inch
.RE
.TP
.B setmsg_(msglvl)
alters message level parameter (0\-5) during execution
.TP
.B grid_(x,y,nx,xd,ny,nd,lmask)
generates grid patterns
.RS
.IP x,y
starting position
.IP nx
number of intervals in x direction, if 
.I nx 
is greater than 1000 then
.I xd
must be an array of intervals with
.I nx 
\- 1000 elements, negative
.I nx
suppresses vertical line generation
.IP ny,yd
same as
.I nx 
and
.I xd 
only for y direction
.IP lmask
bit pattern used to generate grid, 32 bits long
.RE
.TP
.B tone_(x,y,pat,n)
provides patterned shading for specified area(s), for more than one area
shading is done in alternate overlapping areas. At least two calls to 
.I tone
must be made to shade an area, the first call (last argument negative)
sets the pattern and the second call (last argument positive) defines the
area(s).
.RS
.IP x,y
data arrays defining the area(s) to be shaded
.IP pat 
integer array of either pattern elements (32 bits long) or number of 
elements specifying a particular area
.IP n
if positive this is the number of areas defined in the x and y arrays,
if negative this is the number of pattern elements (max 16) in the 
pattern array
.RE
.TP
.B curve_(x,y,ne,delta)
generates a smooth continuous curve through a series of points
.RS 
.IP x,y
arrays of points to be joined
.IP ne 
(absolute) number of points in arrays
negative value indicates that the last two elements of each array are 
scale factors,
.IP delta 
(absolute value) is the segment length for the incremental 
approximation of the curve, positive value specifies plotting with 
solid line,
negative value specifies plotting with dashed line,
positive value indicates the points are already scaled
.RE
.SH SEE ALSO
vrast(1)
Versaplot Software Manual
