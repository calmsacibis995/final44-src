# This is the local configure file (distribution version).
# You must modify it to fit your particular configuration
# and name it Config.local
# The following configuratiions can be auto-generated:
#
#	make Config.local.green
#		make a Config.local that supports a local clock
#		(i.e. allow fallback to use of the CPU's own clock)
#	make Config.local.NO.clock
#		make a Config.local that supports no clocks
#
#
# NOTE TO GREENHORNS
#
# For plug-'n-play and no radios or other complicated gadgetry,
# use "make Config.local.green" as above.
#
# Following defines can be set in the DEFS_OPT= define:
#
# The flag -DDEBUG includes some debugging code. To use this, include
# the define and start the daemon with one or more -d flags, depending
# on your calibration of pearannoya. The daemon will not detach your
# terminal in this case. Judicious use of grep will reduce the speaker
# volume to bearable levels.
#
# To change the location of the configuration file, use a
# -DCONFIG_FILE=\\"/local/etc/ntp.conf\\" or something similar.
#
# The -DSYSLOG_FILE defines allows logging messages that are normally
# reported via syslog() in a file. The file name can be configured using
# the configuration line "logfile <filename>" in CONFIG_FILE.
#
# There are three serial port system software interfaces, each of
# which is peculiar to one or more Unix versions. Define
# -DHAVE_SYSV_TTYS for basic System V compatibility; define -DSTREAM
# for POSIX compatibility including System V Streams, and
# HAVE_BSD_TTYS for 4.3bsd compatibility.
# Use HAVE_TERMIOS for POSIX (termios.h) without System V Streams.
# Only one of these three should be defined. If none are defined,
# HAVE_BSD_TTYS is assumed.
# Usually these defines are already set correctly.
#
DEFS_OPT=-DDEBUG

#
# The DEFS_LOCAL define picks up all flags from DEFS_OPT (do not delete that)
# and one of the following:
#
# The flag -DREFCLOCK causes the basic reference clock support to be
# compiled into the daemon. If you set this you may also want to
# configure the particular clock drivers you want in the CLOCKDEFS= line
# below. This flag affects xntpd only. This define is included by
# default when using the "make makeconfig" script.
#
# The next two sets of defines are meaningful only when radio clock
# drivers or special 1-pps signals are to be used. For systems without
# these features, these delicious complexities can be avoided. Ordinarily,
# the "make makeconfig" script figures out which ones to use, but your
# mileage may vary.
#
#       There are three ways to utilize external 1-pps signals. Define
#       -DPPS to include just the pps routine, such as used by the DCF77(PARSE)
#       clock driver. Define -DPPSCLK to include a serial device driver
#       which avoids much of the jitter due to upper level port
#       processing. This requires a dedicated serial port and either the
#       tty_clock line discipline or tty_clk_streams module, both of
#       which are in the ./kernel directory. Define -DPPSCD to include a
#       special driver which intercepts carrier-detect transitions
#       generated by the pps signal. This requires a nondedicated serial
#       port and the ppsclock streams module in the ./kernel directory.
#       Only one of these three flags should be defined.
#
# The flag KERNEL_PLL causes code to be compiled for a special feature of
#	the kernel that (a) implements the phase-lock loop and (b) provides
#	a user interface to learn time, maximum error and estimated error.
#	See the file README.kern in the doc directory for further info.
#	This code is activated only if the relevant kernel features have
#	been configured; it does not affect operation of unmodified kernels.
#	To compile it, however, requires a few header files from the
#	special distribution.
#
# Note: following line must always start with DEFS_LOCAL= $(DEFS_OPT)
DEFS_LOCAL= $(DEFS_OPT) #GREEN -DREFCLOCK #TEST -DPPSPPS -DKERNEL_PLL

#
# Radio clock support definitions (these only make sense if -DREFCLOCK
# used), which is normally the case. Note that a configuration can include
# no clocks, more than one type of clock and even multiple clocks of the
# same type.
#
#       For most radio clocks operating with serial ports, accuracy can
#       be considerably improved through use of the tty_clk line
#       discipline or tty_clk_STREAMS streams module found in the
#       ./kernel directory. These gizmos capture a timestamp upon
#       occurrence of an intercept character and stuff it in the data
#       stream for the clock driver to munch. To select this mode,
#       postfix the driver name with the string CLK; that is, WWVB
#       becomes WWVBCLK. If more than one clock is in use, the CLK
#       postfix can be used with any or all of them.
#
#       Alternatively, for the best accuracy, use the ppsclock streams
#       module in the ./ppsclock directory to steal the carrier-detect
#       transition and capture a precision timestamp. At present this
#       works only with SunOS 4.1.1 or later. To select this mode,
#       postfix the driver name with the string PPS; that is, AS2201
#       becomes AS2201PPS. If more than one clock is in use, the PPS
#       postfix should be used with only one of them. If any PPS
#       postfix is defined, the -DPPSPPS define should be used on the
#       DEFS above.
#
# Define -DLOCAL_CLOCK for a local pseudo-clock to masquerade as a
# reference clock for those subnets without access to the real thing.
# Works in all systems and requires no hardware support. This is defined
# by default when using the "make makeconfig" script and greenhorn
# configuraiton.
#
# Define -DAS2201 for an Austron 2200A or 2201A GPS receiver. It should
# work in all systems with a serial port. The driver does not support the
# CLK mode, but does support the PPS mode. If the radio is connected to
# more than one machine, the PPS mode is required.
#
# Define -DCHU for a special CHU receiver using an ordinary shortwave
# radio. This requires the chu_clk line discipline or chu_clk_STREAMS
# module in the ./kernel directory. At present, this driver works only
# on SunOS4.1.x; operation in other systems has not been confirmed.
# Construction details for a suitable modem can be found in the ./gadget
# directory. The driver supports # neither the CLK nor PPS modes.
#
# Define -DGOES for a Kinemetrics/TrueTime 468-DC GOES receiver. This
# driver is known to work with some other TrueTime products as well,
# including the GPS-DC GPS receiver. It should work in all systems with
# a serial port. The driver does not support the CLK mode, but does
# support the PPS mode.
#
# Define -DGPSTM for a Kinemetrics/TrueTime GPS-TM/TMD receiver. It
# should work in all systems with a serial port.
#
# Define -DIRIG for a IRIG-B timecode timecode using the audio codec of
# the Sun SPARCstations. This requires a modified BSD audio driver and
# exclusive access to the audio port. A memo describing how it works and
# how to install the driver is in the README.irig file in the ./doc
# directory.
#
# Define -DLEITCH for a Leitch CSD 5300 Master Clock System Driver for
# the HP 5061B Cesium Clock. It should work in all systems with a serial
# port. The driver does not support the CLK mode, but does support the
# PPS mode.
#
# Define -DMX4200PPS for a Magnavox 4200 GPS receiver. At present, this
# driver works only on SunOS4.1.x with CPU serial ports only. The PPS
# mode is required.
#
# Define -DMSFEESPPS for an EES M201 MSF receiver. It currently only works
# under SunOS 4.x with the PPSCD (ppsclock) STREAMS module, but the RCS
# files on cl.cam.ac.uk still has support for CLK and CBREAK modes.
#
# Define -DOMEGA for a Kinemetrics/TrueTime OM-DC OMEGA receiver. It
# should work in all systems with a serial port. The driver does not
# support the CLK mode, but does support the PPS mode.
#
# Define -DPARSE for a DCF77/GPS(GENERIC) receiver. For best performance
# this requires a special parsestreams STREAMS (SunOS 4.x) module in the
# ./parse directory. Define -DPARSEPPS for PPS support via the
# DCF77/GPS (GENERIC) receiver; also, define -DPPS in the DEFS above.
# Define:       -DCLOCK_MEINBERG for Meinberg clocks
#               -DCLOCK_SCHMID   for Schmid receivers
#               -DCLOCK_DCF7000  for ELV DCF7000
#               -DCLOCK_RAWDCF   for simple receivers (100/200ms pulses on Rx)
#               -DCLOCK_TRIMSV6  for Trimble SV6 GPS receiver
#
# Define -DPST for a PST/Traconex 1020 WWV/H receiver. The driver
# supports both the CLK and PPS modes. It should work in all systems
# with a serial port.
#
# Define -DTPRO for a KSI/Odetics TPRO-S IRIG-B timecode reader. This
# requires the SunOS interface driver available from KSI. The driver
# supports neither the CLK nor PPS modes.
#
# Define -DTRAK for a 8810 GPS Receiver with Buffered RS-232-C Interface
# Module. The driver supports both the CLK and PPS modes. It should work
# in all systems with a serial port.
#
# Define -DWWVB for a Spectracom 8170 or Netclock/2 WWVB receiver. It
# should work in all systems with a serial port. The driver supports
# both the CLK and PPS modes if the requisite kernel support is installed.
#
# Note: The following defines result in compilation of all the above radio
# clocks. This works on a Sun 4.1.x system which has tty_clk, chu_clk and
# ppsclock STREAMS modules installed. If the trailing CLK and PPS suffixes
# are removed and the IRIG, PARSE* and CLOCK* deleted, all of the rest compile
# under Ultrix 4.2a/3 and DEC # OSF/1 Alpha.
#
CLOCKDEFS= #GREEN -DLOCAL_CLOCK #TEST -DAS2201PPS -DCHU -DATUM -DGOES -DGPSTM -DIRIG -DLEITCH -DMSFEES -DMX4200PPS -DOMEGA -DPST -DTPRO -TRAK -DWWVB -DPARSE -DPARSEPPS -DCLOCK_MEINBERG -DCLOCK_RAWDCF -DCLOCK_SCHMID -DCLOCK_DCF7000 -DCLOCK_TRIMSV6

#
# Directory into which binaries should be installed (default /usr/local)
#
BINDIR=	/usr/local/bin
