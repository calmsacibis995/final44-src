


GET(1)		    UNIX Programmer's Manual		   GET(1)



NAME
     get - get a version of an SCCS file

SYNOPSIS
     get [-rSID] [-ccutoff] [-ilist] [-xlist] [-aseq no.] [-k]
     [-e] [-_l[_p]] [-p] [-m] [-n] [-s] [-b] [-g] [-t] file ...

DESCRIPTION
     _G_e_t generates creates an ASCII text  file	from  each  named
     SCCS  file  according  to	the  specifications  given by its
     keyletter arguments, which begin with -.  The arguments  may
     be specified in any order, but all keyletter arguments apply
     to all named SCCS files.	If  a  directory  is  named,  _g_e_t
     behaves  as though each file in the directory were specified
     as a named file, except that non-SCCS files (last	component
     of the pathname does not begin with s.) and unreadable files
     are silently ignored.  If a name of - is given, the standard
     input  is	read; each line of the standard input is taken to
     be the name of an SCCS file to be	processed.   Again,  non-
     SCCS files and unreadable files are silently ignored.

     The generated text is normally written into  a  file  called
     the  _g-_f_i_l_e whose name is derived from the SCCS file name by
     simply removing the leading s.  (See also FILES, below).

     Each of the keyletter arguments is explained below as though
     only one named SCCS file is to be processed, but the effects
     of any keyletter  argument  applies  independently  to  each
     named file.

	  -r_S_I_D          The _SCCS _I_Dentification string (SID)  of
			 the  version  (delta) of an SCCS file to
			 be retrieved.	TABLE 1  shows,  for  the
			 most  useful  cases,  what version of an
			 SCCS file is retrieved (as well  as  the
			 SID  of  the  version	to  be eventually
			 created by _d_e_l_t_a(1) if the -e	keyletter
			 is  also used), as a function of the SID
			 specified.

	  -c_c_u_t_o_f_f	 _C_u_t_o_f_f   date-time,	in    the    form
			 YY[MM[DD[HH[MM[SS]]]]].     No   changes
			 (deltas) to the  SCCS	file  which  were
			 created   after   the	specified  _c_u_t_o_f_f
			 date-time are included in the	generated
			 ASCII text file.  Units omitted from the
			 date-time default to their maximum  pos-
			 sible	values;  that  is,  ``-c7502'' is
			 equivalent to	``-c750228235959''.   Any
			 number  of  non-numeric  characters  may
			 separate the various 2 digit  pieces  of
			 the   _c_u_t_o_f_f  date-time.   This  feature



Printed 3/16/88               SCCS				1






GET(1)		    UNIX Programmer's Manual		   GET(1)



			 allows one to specify a _c_u_t_o_f_f  date  in
			 the  form: ``"-c77/2/2 9:22:25"''.  Note
			 that this implies that one may  use  the
			 %E% and %U% identification keywords (see
			 below) for nested _g_e_t_s within,  say  the
			 input to a _s_e_n_d(1) command:

			      ~!get  "-c%E%  %U%"  sfile

	  -e		 Indicates that the _g_e_t is for	the  pur-
			 pose  of  editing  or	making	a  change
			 (delta) to the SCCS file  via	a  subse-
			 quent use of _d_e_l_t_a(1).  The -e keyletter
			 used in a _g_e_t for a  particular  version
			 (SID)	of the SCCS file prevents further
			 _g_e_ts for editing on the same  SID  until
			 _d_e_l_t_a	is executed or the j (joint edit)
			 flag  is  set	in  the  SCCS  file  (see
			 _a_d_m_i_n(1)).   Concurrent  use  of  the -e
			 keyletter in _g_e_ts for different SIDs  is
			 always allowed.

			 If the _g-_f_i_l_e generated by _g_e_t  with  an
			 -e  keyletter	is accidentally ruined in
			 the process of editing  it,  it  may  be
			 regenerated by re-executing the _g_e_t com-
			 mand with the -k keyletter in	place  of
			 the -e keyletter.

			 SCCS file protection specified  via  the
			 ceiling, floor, and authorized user list
			 stored in the SCCS file  (see	_a_d_m_i_n(1))
			 are  enforced	when  the -e keyletter is
			 used.

	  -b		 Used with the -e keyletter  to  indicate
			 that the new delta should have an SID in
			 a new branch as shown in TABLE 1.   This
			 keyletter  is allowed only if the b flag
			 exists in the file (see _a_d_m_i_n(1),  TABLE
			 1).

	  -i_l_i_s_t	 A _l_i_s_t of deltas to be included  (forced
			 to  be  applied)  in the creation of the
			 generated file.  The _l_i_s_t has	the  fol-
			 lowing syntax:

			 <list> ::= <range> | <list> , <range>
			 <range> ::= SID | SID - SID

			 SID, the SCCS Identification of a delta,
			 may  be  in  any form shown in the ``SID



Printed 3/16/88               SCCS				2






GET(1)		    UNIX Programmer's Manual		   GET(1)



			 Specified'' column of TABLE 1.   Partial
			 SIDs  are  interpreted  as  shown in the
			 ``SID Retrieved'' column of TABLE 1.

	  -x_l_i_s_t	 A _l_i_s_t of deltas to be excluded  (forced
			 not  to  be  applied) in the creation of
			 the  generated   file.    See	 the   -i
			 keyletter for the _l_i_s_t format.

	  -k		 Suppresses replacement of identification
			 keywords  (see  below)  in the retrieved
			 text by their value.  The  -k	keyletter
			 is   implied	by  the  -i,  -x  and  -e
			 keyletters.

	  -l[p]          Causes a delta  summary  to  be  written
			 into  an  _l-_f_i_l_e. If -lp is used then an
			 _l-_f_i_l_e is not created; the delta summary
			 is   written	on  the  standard  output
			 instead.  See FILES for  the  format  of
			 the _l-_f_i_l_e.

	  -p		 Causes the text retrieved from the  SCCS
			 file  to be written on the standard out-
			 put.  No _g-_f_i_l_e is created.  All  output
			 which normally goes to the standard out-
			 put goes to file descriptor  2  instead,
			 unless  the  -s  keyletter  is  used, in
			 which case it disappears.

	  -s		 Suppresses all output	normally  written
			 on  the standard output.  However, fatal
			 error messages (which always go to  file
			 descriptor 2) remain unaffected.

	  -m		 Causes each text line retrieved from the
			 SCCS  file  to be preceded by the SID of
			 the delta that inserted the text line in
			 the SCCS file.  The format is: SID, fol-
			 lowed by a horizontal tab,  followed  by
			 the text line.

	  -n		 Causes each generated text  line  to  be
			 preceded  with  the  %M%  identification
			 keyword value (see below).   The  format
			 is:  %M% value, followed by a horizontal
			 tab, followed by the  text  line.   When
			 both  the -m and -n keyletters are used,
			 the format is: %M% value, followed by	a
			 horizontal   tab,  followed  by  the  -m
			 keyletter generated format.




Printed 3/16/88               SCCS				3






GET(1)		    UNIX Programmer's Manual		   GET(1)



	  -g		 Suppresses the actual retrieval of  text
			 from  the  SCCS  file.   It is primarily
			 used to generate an _l-_f_i_l_e, or to verify
			 the existence of a particular SID.

	  -t		 Used to access the most recently created
			 (``top'')  delta  in a given release (e.
			 g., -r1), or release and level  (e.  g.,
			 -r1.2).

	  -a_s_e_q _n_o.	 The delta sequence number  of	the  SCCS
			 file  delta  (version)  to  be retrieved
			 (see _s_c_c_s_f_i_l_e(5)).   This  keyletter  is
			 used by the _c_o_m_b(1) command; it is not a
			 generally useful  keyletter,  and  users
			 should  not  use it.  If both the -r and
			 -a  keyletters  are  specified,  the  -a
			 keyletter is used.  Care should be taken
			 when using the -a keyletter in  conjunc-
			 tion  with  the -e keyletter, as the SID
			 of the delta to be created  may  not  be
			 what  one expects.  The -r keyletter can
			 be used with the -a and -e keyletters to
			 control  the  naming  of  the SID of the
			 delta to be created.

	  For each file processed, _g_e_t responds (on the  standard
	  output) with the SID being accessed and with the number
	  of lines retrieved from  the	SCCS  file.   If  the  -e
	  keyletter  is  used,	the  SID  of the delta to be made
	  appears after the SID accessed and before the number of
	  lines  generated.  If there is more than one named file
	  or if a directory or standard input is named, each file
	  name	is  printed  (preceded by a newline) before it is
	  processed.  If the -i keyletter is used included deltas
	  are  listed following the notation ``Included''; if the
	  -x keyletter is used excluded deltas are listed follow-
	  ing the notation ``Excluded''.

	   TABLE 1. Determination of SCCS Identification String
  ______________________________________________________________________________________________________________________________________________
  SID	     -b Keyletter Other                 SID	  SID of Delta
  Specified* Used|-	  Conditions		Retrieved to be Created
  ______________________________________________________________________________________________________________________________________________
  none|=           no	  R defaults to mR	mR.mL	  mR.(mL+1)
  _______________________________________________________________________
  none|=          yes	  R defaults to mR	mR.mL	  mR.mL.(mB+1).1
  ______________________________________________________________________________________________________________________________________________
  R		  no	  R > mR		mR.mL	  R.1***
  _______________________________________________________________________
  R		  no	  R = mR		mR.mL	  mR.(mL+1)
  _______________________________________________________________________



Printed 3/16/88               SCCS				4






GET(1)		    UNIX Programmer's Manual		   GET(1)



  R		 yes	  R > mR		mR.mL	  mR.mL.(mB+1).1
  _______________________________________________________________________
  R		 yes	  R = mR		mR.mL	  mR.mL.(mB+1).1
  _______________________________________________________________________
			  R < mR and
  R		  -	  R does _n_o_t exist	hR.mL**   hR.mL.(mB+1).1
  _______________________________________________________________________
			  Trunk successor
			  in release > R

  R		  -
			     and R exists
						      R.mL	  R.mL.(mB+1).1

  ______________________________________________________________________________________________________________________________________________
  R.L		  no	  No trunk successor	R.L	  R.(L+1)
  _______________________________________________________________________
  R.L		 yes	  No trunk successor	R.L	  R.L.(mB+1).1
  _______________________________________________________________________
			  Trunk successor
  R.L		  -	  in release >_ R	R.L	  R.L.(mB+1).1
  ______________________________________________________________________________________________________________________________________________
  R.L.B           no	  No branch successor	R.L.B.mS  R.L.B.(mS+1)
  _______________________________________________________________________
  R.L.B          yes	  No branch successor	R.L.B.mS  R.L.(mB+1).1
  ______________________________________________________________________________________________________________________________________________
  R.L.B.S	  no	  No branch successor	R.L.B.S   R.L.B.(S+1)
  _______________________________________________________________________
  R.L.B.S	 yes	  No branch successor	R.L.B.S   R.L.(mB+1).1
  _______________________________________________________________________
  R.L.B.S	  -	  Branch successor	R.L.B.S   R.L.(mB+1).1
  ______________________________________________________________________________________________________________________________________________

	  *	``R'',	``L'',	 ``B'',   and	``S''	are   the
		``release'',	 ``level'',    ``branch'',    and
		``sequence'' components of the SID, respectively;
		``m''  means  ``maximum''.   Thus,  for  example,
		``R.mL'' means ``the maximum level number  within
		release  R'';  ``R.L.(mB+1).1'' means ``the first
		sequence number on the _n_e_w branch (i.e.,  maximum
		branch number plus one) of level L within release
		R''.  Note that if the SID specified  is  of  the
		form  ``R.L'', ``R.L.B'', or ``R.L.B.S'', each of
		the specified components _m_u_s_t exist.

	  |-	The -b keyletter is effective only if the b  flag
		(see  _a_d_m_i_n(1)) is present in the file.  An entry
		of - means ``irrelevant''.

	  |=	This case applies if the d (default SID) flag  is
		_n_o_t  present  in  the  file.   If  the	d flag _i_s
		present in the file, then the SID  obtained  from
		the  d	flag  is  interpreted  as  if it had been
		specified on the command line.	Thus, one of  the
		other cases in this table applies.




Printed 3/16/88               SCCS				5






GET(1)		    UNIX Programmer's Manual		   GET(1)



	  ***	This is used to force creation of the _f_i_r_s_t delta
		in a _n_e_w release.

	  **	``hR'' is the highest _e_x_i_s_t_i_n_g	release  that  is
		lower than the specified, _n_o_n_e_x_i_s_t_e_n_t, release R.
		_________________________________________________________________

IDENTIFICATION KEYWORDS
     Identifying information is inserted into the text	retrieved
     from the SCCS file by replacing _i_d_e_n_t_i_f_i_c_a_t_i_o_n _k_e_y_w_o_r_d_s with
     their value wherever they occur.  The following keywords may
     be used in the text stored in an SCCS file:

	       Keyword	 Value

		 %M%	 Module name: either the value of the m
			 flag in the file (see _a_d_m_i_n(1)), or if
			 absent, the name of the SCCS file with
			 the leading s. removed.

		 %I%	 SCCS identification (SID)
			 (%R%.%L%.%B%.%S%) of the retrieved text.

		 %R%	 Release.

		 %L%	 Level.

		 %B%	 Branch.

		 %S%	 Sequence.

		 %D%	 Current date (YY/MM/DD).

		 %H%	 Current date (MM/DD/YY).

		 %T%	 Current time (HH:MM:SS).

		 %E%	 Date newest applied delta was created
			 (YY/MM/DD).

		 %G%	 Date newest applied delta was created
			 (MM/DD/YY).

		 %U%	 Time newest applied delta was created
			 (HH:MM:SS).

		 %Y%	 Module type: value of the t flag in the
			 SCCS file (see _a_d_m_i_n(1)).

		 %F%	 SCCS file name.

		 %P%	 Fully qualified SCCS file name.



Printed 3/16/88               SCCS				6






GET(1)		    UNIX Programmer's Manual		   GET(1)



		 %Q%	 The value of the q flag in the file (see
			 _a_d_m_i_n(1)).

		 %C%	 Current line number.  This keyword is
			 intended for identifying messages output
			 by the program such as ``this shouldn't
			 have happened'' type errors.  It is _n_o_t
			 intended to be used on every line to
			 provide sequence numbers.

		 %Z%	 The 4 characters @(#) used to construct
			 strings recognizable by _w_h_a_t(1).

		 %W%	 A shorthand notation for constructing
			 _w_h_a_t(1) strings for UNIX program files.
			 %W% = %Z%%M%<horizontal-tab>%I%

		 %A%	 Another shorthand notation for con-
			 structing _w_h_a_t(1) strings for non-UNIX
			 program files.  %A% = %Z%%Y% %M% %I%%Z%

FILES
     Several auxiliary files may be created by _g_e_t.  These  files
     are  known generically as the _g-_f_i_l_e, _l-_f_i_l_e, _p-_f_i_l_e, and _z-
     _f_i_l_e. The letter before the hyphen is called  the	tag.   An
     auxiliary	file  name is formed from the SCCS file name: the
     last component of all SCCS file names must be  of	the  form
     ``s._m_o_d_u_l_e_n_a_m_e'', the auxiliary files are named by replacing
     the leading s with the tag.  The _g-_f_i_l_e is an  exception  to
     this  scheme:  the  _g-_f_i_l_e is named by removing the s..  For
     example, if the SCCS file name is ``s.xyz.c'', the auxiliary
     file names would be ``xyz.c'', ``l.xyz.c'', ``p.xyz.c'', and
     ``z.xyz.c'', respectively.

     The _g-_f_i_l_e, which contains the generated text, is created in
     the  current directory (unless the -p keyletter is used).	A
     _g-_f_i_l_e is created in all cases, whether or not any lines  of
     text  were  generated  by	the  _g_e_t. It is owned by the real
     user.  If the -k keyletter is used or implied  its  mode  is
     644;  otherwise  its  mode  is 444.  Only the real user need
     have write permission in the current directory.

     The _l-_f_i_l_e  contains  a  table  showing  which  deltas  were
     applied  in  generating  the  retrieved text.  The _l-_f_i_l_e is
     created in the current directory  if  the	-l  keyletter  is
     used;  its  mode  is  444	and it is owned by the real user.
     Only the real user need have write permission in the current
     directory.

     Lines in the _l-_f_i_l_e have the following format:





Printed 3/16/88               SCCS				7






GET(1)		    UNIX Programmer's Manual		   GET(1)



	    a) A blank character if the delta was applied; * oth-
	       erwise.
	    b) A blank character if the delta was applied or
	       wasn't applied and ignored;
	       * if the delta wasn't applied and wasn't ignored.
	    c) A code indicating a ``special'' reason why the
	       delta was or was not applied:
		  ``I'': Included.
		  ``X'': Excluded.
		  ``C'': Cut off (by a -c keyletter).
	    d) Blank.
	    e) SCCS identification (SID).
	    f) Tab character.
	    g) Date and time (in the form YY/MM/DD HH:MM:SS) of
	       creation.
	    h) Blank.
	    i) Login name of person who created _d_e_l_t_a.

	    The comments and MR data follow on subsequent  lines,
	    indented  one horizontal tab character.  A blank line
	    terminates each entry.

     The _p-_f_i_l_e is used to pass information resulting from a  _g_e_t
     with  an  -e keyletter along to _d_e_l_t_a. Its contents are also
     used to prevent a subsequent execution of	_g_e_t  with  an  -e
     keyletter	for  the  same SID until _d_e_l_t_a is executed or the
     joint edit flag (j, see _a_d_m_i_n(1)) is set in the  SCCS  file.
     The  _p-_f_i_l_e  is created in the directory containing the SCCS
     file and the effective user must have  write  permission  in
     that  directory.	Its  mode  is  644 and it is owned by the
     effective user.  The format of the  _p-_f_i_l_e  is:  the  gotten
     SID,  followed  by a blank, followed by the SID that the new
     delta will have when it is made, followed by a  blank,  fol-
     lowed  by	the  login  name  of the real user, followed by a
     blank, followed by the date-time the _g_e_t was executed,  fol-
     lowed  by	a  blank  and the -i keyletter argument if it was
     present, followed by a blank and the -x  keyletter  argument
     if  it  was present, followed by a newline.  There can be an
     arbitrary number of lines in the _p-_f_i_l_e at any time; no  two
     lines can have the same new delta SID.

     The _z-_f_i_l_e serves as a _l_o_c_k-_o_u_t mechanism against simultane-
     ous  updates.  Its contents are the binary (2 bytes) process
     ID of the command (i.e., _g_e_t) that created it.   The  _z-_f_i_l_e
     is created in the directory containing the SCCS file for the
     duration of _g_e_t. The same protection restrictions	as  those
     for  the  _p-_f_i_l_e apply for the _z-_f_i_l_e. The _z-_f_i_l_e is created
     mode 444.

SEE ALSO
     admin(1), delta(1), prs(1), what(1), help(1), sccsfile(5),
     _S_o_u_r_c_e _C_o_d_e _C_o_n_t_r_o_l _S_y_s_t_e_m _U_s_e_r'_s _G_u_i_d_e by L. E. Bonanni and



Printed 3/16/88               SCCS				8






GET(1)		    UNIX Programmer's Manual		   GET(1)



     C. A. Salemi.

DIAGNOSTICS
     Use _h_e_l_p(1) for explanations.

BUGS
     If the effective user has write permission (either expli-
     citly or implicitly) in the directory containing the SCCS
     files, but the real user doesn't, then only one file may be
     named when the -e keyletter is used.













































Printed 3/16/88               SCCS				9



