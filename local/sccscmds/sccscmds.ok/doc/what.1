.TH WHAT 1 SCCS
.tr $%
.SH NAME
what \(em identify files
.SH SYNOPSIS
.tr ##
.B what
file
.ZZ
.SH DESCRIPTION
.ad
.I What
searches the given files for all occurrences
of the pattern which
.IR get\^ (1)
substitutes for $Z% (this is
\fB@(#)\fR
at this printing)
and prints out what follows until the
first \fB", >,\fR newline\fB, \\,\fR or null character.
For example, if the \fB\s-1C\fR\s+1 program in file \fBf.c\fR contains
.PP
.RE
.RS 5
char iden\(ru\(ru\(ru[] "@(#)identification information";
.RE
.PP
and \fBf.c\fR is compiled to yield \fBf.o\fR and \fBa.out,\fR
then the command
.PP
.RE
.RS 5
.I what
f\fB.\fRc f\fB.\fRo a\fB.\fRout
.RE
.PP
will print
.PP
.RE
.RS 8
f\fB.\fRc:
.PP
.RE
.RS 13
identification information
.PP
.RE
.RS 8
f\fB.\fRo:
.PP
.RE
.RS 13
identification information
.PP
.RE
.RS 8
a\fB.\fRout:
.PP
.RE
.RS 13
identification information
.PP
.RE
.I What
is intended to be used in conjunction with the \*(S) command
.IR get\^ (1),
which automatically inserts identifying information,
but it can also be used where the information is inserted manually.
.SH "SEE ALSO"
get(1), help(1)
.SH DIAGNOSTICS
Use
.IR help\^ (1)
for explanations.
.SH BUGS
It's possible that an unintended occurrence of the pattern
\fB@(#)\fR
could be
found just by chance, but this causes no harm in nearly all cases.
.tr $$
