h50215
s 00002/00002/00063
d D 1.3 90/06/24 18:33:39 trent 3 2
c trivial pathname changes
e
s 00017/00008/00048
d D 1.2 86/06/05 22:59:40 lepreau 2 1
c handle stdin via temp file.  This code needlessly uses temp file
c in case 'tac <file' but who's  going to do that?  Also should stat the temp 
c file to determine optimum klsize for write's to it.
e
s 00056/00000/00000
d D 1.1 85/06/09 01:42:08 lepreau 1 0
c date and time created 85/06/09 01:42:08 by lepreau
e
u
U
t
T
I 1
.\"	%W% %G%
.\"
.TH TAC 1 "%Q%"
.SH NAME
tac \- concatenate and print files in reverse
.SH SYNOPSIS
.B tac
[
.B \-string
] [
.B +string
D 2
] file ...
E 2
I 2
] [ file ... ]
E 2
.SH DESCRIPTION
.I Tac
reads each
.I file
in sequence
and writes it on the standard output, reversed by the file segments
delimited by
.I string.
.I \-string
specifies segments bounded on the left by
.I string,
while
.I +string
specifies right-bounded segments.
The default is
.I +\en
(print lines in reverse order).
I 2
If no input
.I file
is given, or if the argument `-'
is encountered,
.I tac
reads from the standard input.  Note that in this case
.I tac
stores the entire standard input in a temporary
file before it outputs anything, so for large input it is slow.
E 2
.SH EXAMPLES
.RS
tac '-\e
.br
D 3
From\ ' /usr/spool/mail/$USER
E 3
I 3
From\ ' /var/mail/$USER
E 3
.RE
prints out one's mail messages, most recent first.
.PP
.RS
tac file
.RE
prints the file in reverse, line by line, and:
.PP
.RS
D 2
tac file1 file2 >file3
E 2
I 2
D 3
tac /usr/adm/messages | egrep 'hp.*hard'
E 3
I 3
tac /var/log/messages | egrep 'hp.*hard'
E 3
E 2
.RE
D 2
reverses each of the first two files by line and places the
concatenated result on the third.
E 2
I 2
prints out the hard errors on MASSBUS disk drives, most recent first.
E 2
.SH SEE ALSO
cat(1), rev(1), tail(1), tmail(1)
.SH BUGS
.I Tac
D 2
doesn't yet handle multiple argument files exactly right.  It's
also unclear which direction it should process them in.
E 2
I 2
doesn't handle multiple argument files exactly right, and it's
also unclear in which order they should be processed.
E 2
.br
D 2
.I Tac
does not (and cannot efficiently) work on piped input.
E 2
I 2
If invoked as `tac < file', 
.I tac
uses a temp file but it doesn't have to.
E 2
E 1
