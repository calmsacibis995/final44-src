.ds nM nmake\"	`make' someday
.ds oM make\"	`omake' someday
.TH MKOLD 1
.(B
.tl @Copyright (c) 1984, 1985, 1986, 1987@@AT&T All Rights Reserved@
.(E 2
.SH NAME
mkold \- convert a makefile to the old format
.SH SYNOPSIS
.B mkold
[
.B \-x
.I path
]
[
.I "target ..."
]
.SH DESCRIPTION
.I mkold
converts a Fourth Generation
.IR \*(nM (1)
makefile to old
.IR \*(oM (1)
compatable format.
.I mkold
accepts
.I \*(nM
target arguments and options and should be run in the same directory as
.I \*(nM
would have been run.
Only active targets are listed in the output makefile.
.PP
The
.B \-x
option specifies an absolute (rooted at
.BR / )
directory
.I path
to be excluded.
Any target or dependency with the path prefix
.I path
is omitted from the
.I \*(oM
makefile target and dependency lists.
Multiple
.B \-x
options accumulate.
Targets with the path prefix
.B /usr/include
are always excluded.
.PP
The conversion process is divided into two passes.
The first pass is
.I \*(nM
with the
.B \-o
option set.
The second pass constructs the
.I \*(oM
makefile on the standard output based on information supplied by the first pass.
.PP
Symbolic information is preserved where possible in the output makefile.
Comments, however, are lost in the conversion.
.PP
Most makefiles can be converted using either 
.B mkold
or
.BR "mkold all clobber print ..." .
.SH FILES
Makefile, makefile
.SH DIAGNOSTICS
Messages from 
.I mkold
are preceded by 
.BR "mkold: " ;
all other messages are output by
.I \*(nM .
.SH "SEE ALSO"
\*(nM(1), mkcv(1), \*(oM(1)
.SH CAVEATS
Absolute directory path names are given symbolic names.
Common absolute directory prefixes are named
.BI COM .nn
and other absolute directory paths are named
.BI DIR .nn.
It may be necessary to redefine the
.BI COM .nn
directory paths when porting makefiles to other systems.
