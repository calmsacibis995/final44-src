September 27, 1983

The new version of Tabs has a lot of changes in it.  Some of these
changes will require modifications to old Tabs based programs.  This is
due primarily to the addition of visual attributes.

========= Add the ATTRIBUTE variable to old procedures

The following routines now require an attribute argument:

	Print_Center (Winner, x, ATTRIBUTE, string)

	Print_Form (Winner, x, y, ATTRIBUTE, string)

	Print_Help_Window (field_ptr, ATTRIBUTE, a, b, c, d, e, f, g, h)

	Print_Message (Winner, ATTRIBUTE, a, b, c, d, e, f, g, h)

	RightString (Winner, x, y, fill_char, value, ATTRIBUTE)

	LeftString (Winner, x, y, fill_char, value, ATTRIBUTE)

	CenterString (Winner, x, y, fill_char, value, ATTRIBUTE)

	Set_Label (field_ptr, where, label, ATTRIBUTE)

	New_Window()
		the setup structure now contains an attribute for boxing the
		new window.  Add something like the following to your window
		creation code:

			setup.box_attribute = ATTRIBUTE;

	wrefresh (Winner) is now Wrefresh (Winner) to avoid naming conflicts.

Consult the Tabs manual under Set_Attributes() for a list of the
supported visual attributes.


========= Add -lcurses to your makefiles

The compilation sequence must now also include the curses library.  Add
a "-lcurses" to the end of your load statement.  The following is a sample
makefile for the new Tabs.

F=/u1/blewett/forms.d

F_LIBS=${F}/Tab.d/libform.a ${F}/windows.d/libwindows.a ${F}/vt.d/libvt.a

CFLAGS=-O -I${F}/Tab.d -I${F}/vt.d -I${F}/windows.d

x1:	x1.o ${F_LIBS}
	cc -o x1 x1.o ${F_LIBS} -lcurses
                                   ^
                                   |
Only the -lcurses should have changed from your last makefile.


========= Use INVISIBLE to set up your windows

The depth at which windows become invisible has been changed from 8 to
the defined constant INVISIBLE.  It is currently set to 200.


========= New Procedures to make life worth living again!

Now the good news:

The window movement routines have been optimized so that multiple
Move_Window() calls will now be much faster.


Set_Tab_Movement() is still available, but supporting routines allow you
to set the parameters that you need without having to remember which
parameter is which.  The new routines are as follows:

	/* Onepass fields - one entry only */
	Set_One_Pass (field_ptr, on_or_off);

	/* Cursor pad and mouse movement switch */
	Set_CP_Movement (field_ptr, on_or_off, verify);

	/* BACK TAB switch */
	Set_BT_Movement (field_ptr, on_or_off, verify);


The editing type (OVERLAY or INSERT) may now be set without recompiling
Tabs.

	Def_Editing_Type (type);


The field endtry type (FAR_RIGHT or FAR_LEFT) may now be set without
recompiling Tabs.

	Def_Entry_Type (type);
