=> March 26, 1984

========= Improved Terminal Support
Along with the usual bug fixes and patches this release has a greatly
improved screen update.  The support for odd terminal types has also
been improved.  The data requirements have been greatly reduced and the
code made a bit more portable.

========= The One Pass Option Fixed Up A Bit
The set one pass option for fields now works a little more reasonably. 
If the set one pass option is set (i.e. with Set_Tab_Movement() or
Set_One_Pass()) the field will not be entered if the field contains any
characters or if the field was exited and verified.  Exited and verified
means that the end user left the field by using a control character
directive (i.e. carriage return or function key) that was set to be
verified (see Set_Tab_Movement()).  This definition of a used field
makes it possible to set the one pass option on confirmation fields.
Set_Default_Field() may now be used by the application as a way of
limiting access to a one pass field.

If you are using the one pass option for fields that normally contain a
default value, you should set the one pass option in the field's post
action routine, rather than before the end user gets to the field.  The
post action routine should look something like the following: 

	set_1_pass (f, count, index, rc)
	.
	{
		if (rc == 0)
			Set_One_Pass (f[index], TRUE);
		return (index);
	}

If you set one pass on fields that normally have a default value set
the end user will of course not be able to enter the field after the
default value has been set in the field.

========= Curses
I have included a subdirectory, small_curses.d, that has all of the
curses routines that are required to run Tabs software.  I have included
these routines for people who are living on machines with very old or
seriously modified version of curses.  If at all possible you should use
the libcurses.a on your local system.  Contact Brian Keene at MH for a
copy of curses as it is being distributed with version 5 release 2.

========= DMD Support for Netty
I am also sending along Oran Bodner's DMD version of netty and the
supporting routines.  I have not had a chance to test these, but they
look pretty good and will at least get you started on the DMD.

============================= end March 26, 1984


=> Feb 13, 1984

========= Change user_mask to fndfv for CMKEY_LIST fields and Match Menus

CMKEY_LIST now returns the the kval (associated index) in fndfv.  It
used to use user_mask.  User mask and user_pointer are now used only by
application programs.

New_Match_menu now also uses fndfv instead of user_mask.


========= CMKEY_LIST keyword lists no longer have to be sorted!

CMKEY_LIST now sorts the first 128 keywords.  Keyword lists of over 128
should be sorted by the application.  Lists of over 128 are probably
created automatically, so this should not be much of a problem.


========= New_Match_Menu Changes

The New_Match_Menu() stuff has been greatly expanded.  It now uses only
one window for all popup menus.  You can also specify that the menu
popup only after an arbitrary delay.  This makes this sort of menu good
for expert users, too.  Read the entry in the Tabs manual for full
details.

========= Optimizations

This version of Tabs has a bunch of performnace tweeks.  Window movement
is much faster.  Show_Default_Field() has also been tunded up a bit.

============================= end Feb 13, 1984


=> third quarter 1983

September 27, 1983

The new version of Tabs has a lot of changes in it.  Some of these
changes will require modifications to old Tabs based programs.  This is
due primarily to the addition of visual attributes.

========= Add the ATTRIBUTE variable to old procedures

The following routines now require an attribute argument:

	Print_Center (Winner, x, ATTRIBUTE, string)

	Print_Form (Winner, x, y, ATTRIBUTE, string)

	Print_Help_Window (field_ptr, ATTRIBUTE, a, b, c, d, e, f, g, h)

	Print_Message (Winner, ATTRIBUTE, a, b, c, d, e, f, g, h)

	RightString (Winner, x, y, fill_char, value, ATTRIBUTE)

	LeftString (Winner, x, y, fill_char, value, ATTRIBUTE)

	CenterString (Winner, x, y, fill_char, value, ATTRIBUTE)

	Set_Label (field_ptr, where, label, ATTRIBUTE)

	New_Window()
		the setup structure now contains an attribute for boxing the
		new window.  Add something like the following to your window
		creation code:

			setup.box_attribute = ATTRIBUTE;

	wrefresh (Winner) is now Wrefresh (Winner) to avoid naming conflicts.

Consult the Tabs manual under Set_Attributes() for a list of the
supported visual attributes.


========= Add -lcurses to your makefiles

The compilation sequence must now also include the curses library.  Add
a "-lcurses" to the end of your load statement.  The following is a sample
makefile for the new Tabs.

F=/u1/blewett/forms.d

F_LIBS=${F}/Tab.d/libform.a ${F}/windows.d/libwindows.a ${F}/vt.d/libvt.a

CFLAGS=-O -I${F}/Tab.d -I${F}/vt.d -I${F}/windows.d

x1:	x1.o ${F_LIBS}
	cc -o x1 x1.o ${F_LIBS} -lcurses
                                   ^
                                   |
Only the -lcurses should have changed from your last makefile.


========= Use INVISIBLE to set up your windows

The depth at which windows become invisible has been changed from 8 to
the defined constant INVISIBLE.  It is currently set to 200.


========= New Procedures to make life worth living again!

Now the good news:

The window movement routines have been optimized so that multiple
Move_Window() calls will now be much faster.


Set_Tab_Movement() is still available, but supporting routines allow you
to set the parameters that you need without having to remember which
parameter is which.  The new routines are as follows:

	/* Onepass fields - one entry only */
	Set_One_Pass (field_ptr, on_or_off);

	/* Cursor pad and mouse movement switch */
	Set_CP_Movement (field_ptr, on_or_off, verify);

	/* BACK TAB switch */
	Set_BT_Movement (field_ptr, on_or_off, verify);


The editing type (OVERLAY or INSERT) may now be set without recompiling
Tabs.

	Def_Editing_Type (type);


The field endtry type (FAR_RIGHT or FAR_LEFT) may now be set without
recompiling Tabs.

	Def_Entry_Type (type);

============================= end third quarter 1983
