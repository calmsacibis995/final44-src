This lesson covers the ways that Guide can be made to replace buttons automatically,
.Gu
 without user intervention.
.Nl
.Nl
-- PART A:  UNASKED REPLACEMENTS: ASKING-LEVELS AND USER-LEVELS --
.Nl
.Nl
EXPERIMENT 1:  Look at the following test line.  Then select the Author menu command,
.Gu
 and look at the test line again.
.Nl
 
.Nl
TEST LINE:  Before starting you must switch on your 
.Bu u 0 n
machine
.bU
.Gu .
.Nl
.Nl
You will see that the word `SUN' (or perhaps, if you are using some machine that is 
.Gu
not a SUN, its machine-name) is enclosed within reverse-video Cs, and is therefore 
.Gu
the replacement of a usage; yet you never selected a replace-button to cause this 
.Gu
replacement to be made.  Moreover the ordinary reader using reader-display would be 
.Gu
unaware that any replacement had been made.
.Nl
.Nl
EXPERIMENT 2:  Undo the replacement in the above test line; you will see that the 
.Gu
replace-button `machine' will appear.  Select this button to get back to its original 
.Gu
state.
.Nl
.Nl
The `machine' replace-button was, in fact, set by the author of this lesson to be 
.Gu
replaced automatically when this source file was loaded.  It is an example of an `unasked 
.Gu
replacement', i.e. a replacement that is made automatically without asking the reader.
.Gu
  Unasked replacements allow authors to tailor documents to different sorts of readers,
.Gu
 without the reader needing to take any special action.  Indeed unasked replacements 
.Gu
are totally invisible when in reader-display.  It is only in author-display that unasked 
.Gu
replacements can be seen and can be undone.  (Once undone they cease to be unasked 
.Gu
replacements.)
.Nl
.Nl
EXPERIMENT 3:  The second test line, just below this Experiment, contains another 
.Gu
unasked replacement of `machine' by a specific machine-name.  Select the Reader command 
.Gu
to go back to reader-display, and try to undo the machine-name in this test line. 
.Gu
 This will fail: the fact that the machine-name comes from a replacement is totally 
.Gu
invisible to the ordinary reader.  Select the Author command to get back to author-
.Gu
display to continue with this lesson.
.Nl
.Nl
SECOND TEST LINE:  You then examine the 
.Bu u 0 n
machine
.bU
 screen.
.Nl
.Nl
As you know, definitions can be placed in the current source file or in the definitions-
.Gu
file (i.e. glossary.guide).  Definitions of unasked replacements are often put in 
.Gu
the definitions-file; this allows the definitions-file to be changed (or different 
.Gu
users to use different definitions-files) without any change to the source file.  
.Gu
For example the definition of `machine' for this lesson is in the definitions-file 
.Gu
(glossary.guide).  A reader of this lesson on an APOLLO computer might use a definitions-
.Gu
file that defined `machine' as `APOLLO'.
.Nl
.Nl
EXPERIMENT 4: (optional)  If you are a sceptic and want to make sure that the definition 
.Gu
of `machine' really does occur in the definitions-file, use the New command (with 
.Gu
its New-view option) to load the current definitions-file (which is /usr/lib/guide/
.Gu
glossary.guide since definitions-files are taken from the same directory as the most 
.Gu
recently loaded source file, which is /usr/lib/guide/author3.gu).  Having confirmed 
.Gu
that this file really does include the definition of `machine', it is best if you 
.Gu
get rid of your new view (by using Quit) to save screen space.
.Nl
.Nl
The way that unasked replacements work is as follows.  Each replace-button has an 
.Gu
`asking-level' associated with it, and each time a new source file is loaded the current 
.Gu
`user-level' is examined.  If the asking-level is less than the user-level, a replace-
.Gu
button is automatically replaced when the file is loaded.  All this may surprise you,
.Gu
 since you have been happily using Guide without knowing about these concepts.  The 
.Gu
reason is that by default the asking-level of each button is set to 1 and the user-
.Gu
level is also by default equal to 1.  Thus the asking-level is normally NOT less than 
.Gu
the user-level (since both are equal to 1), and no unasked replacements are made. 
.Gu
 However the author of this source gave the above occurrences of the `machine' replace-
.Gu
button an asking-level of 0 so that they were automatically replaced on loading.  
.Gu
Asking-levels are examined and set by using the Change-button menu command.  This 
.Gu
command works in a different way to most others: you first select the command and 
.Gu
then place the marker-bar.  The reason is that it is hard to place the marker-bar 
.Gu
within a button-name, because selecting a button causes it to be replaced.  The Change-
.Gu
button menu command, however, `freezes' buttons so that you can conquer this problem.
.Gu
.Nl
.Nl
EXPERIMENT 5:  Select the Change-button command in the menu, and place the marker-
.Gu
bar within the following replace-button: 
.Bu u 1 n
machine
.bU
.Gu .
  Then select the Change-properties option, and then the Asking-level option.  You 
.Gu
will see that the asking-level is 1: that is why this occurrence of `machine' has 
.Gu
not been automatically replaced.  The Change-button command displays new possible 
.Gu
settings of the asking-level.  Select `1', thus leaving the asking-level unchanged.
.Gu
.Nl
.Nl
EXPERIMENT 6:  The following is an unasked replacement of `machine': 
.Bu u 0 n
machine
.bU
.Gu .
  Undo this replacement so that you can see the `machine' replace-button that caused 
.Gu
it; then select the Change-button command and place the marker-bar within this button.
.Gu
  Now select the Change-properties and Asking-level options as in the previous Experiment: 
.Gu
you will see that the asking-level of this button is 0.  Select 0 as the new asking-
.Gu
level, so that it remains unchanged.
.Nl
.Nl
EXPERIMENT 7:  In readiness for subsequent Experiments, which will change asking-levels,
.Gu
 create a second view containing the file called data.author3.  Do this by selecting 
.Gu
the New menu command, and then selecting New-view in answer to its first question 
.Gu
and typing `data.author3' as the filename to be loaded.
.Nl
.Nl
EXPERIMENT 8:   Follow the procedure of the previous Experiments to place the marker-
.Gu
bar within the `more' replace-button in the view below, and find its asking-level.
.Gu
  You will see it has the normal asking-level of 1.  This time select 0 as the new 
.Gu
asking-level.  The asking-level of the button has now been changed to zero.
.Nl
.Nl
Although you have changed the asking-level, you have not seen any change in the display.
.Gu
  This is because the button will only be automatically replaced when the source is 
.Gu
next LOADED.  Thus to observe the effect of your change you would need to Save the 
.Gu
source and then re-load it using the New menu command.  Before doing this we will 
.Gu
confirm that the asking-level has really been changed:
.Nl
.Nl
EXPERIMENT 9:  Use the Change-button menu command as before in order to confirm that 
.Gu
the asking-level of the `more' replace-button is indeed 0.
.Nl
.Nl
(This concludes our present discussion of the Change-button command, but we shall 
.Gu
return later to discuss its other uses.)
.Nl
.Nl
EXPERIMENT 10:  Select the Save menu command.  The Save command will ask you if you 
.Gu
want to save view 1 (this view): select `No';  it will then ask you if you want to 
.Gu
save view 2: select `Yes', and then 'Yes' again to get the normal options.  Then type 
.Gu
`t#' as the name of the file in which you want to save.
.Nl
.Nl
EXPERIMENT 11:  Now use the New menu command to load the file you have just saved.
.Gu
  Thus select New-view in answer to its first question, and type `t#' as the file 
.Gu
name.  You will see that the `more' button is automatically replaced in the new file 
.Gu
that is loaded.
.Nl
.Nl
EXPERIMENT 12:  To clear up the screen, delete the last two views.  Do this by using 
.Gu
the Quit menu command (twice) with Delete-last-view option.
.Nl
.Nl
We have covered how to set the asking-level; it is now time to show how to set the 
.Gu
user-level.  This is quite simple: to set the user-level to, say, 2, you simply type 
.Gu
-u2 immediately before the file name that you want loaded.
.Nl
.Nl
EXPERIMENT 13:  Select the New menu command, and then New-view.  Now, as the file 
.Gu
name to be loaded type:
.Nl
.Nl
	-u0 t#
.Nl
.Nl
The file t# will now be loaded at user-level 0, and since the asking-level of the 
.Gu
`more' button is NOT now less than its user-level (since both are 0), it is not automatically 
.Gu
replaced.  Delete the new view again by using the Quit menu command.
.Nl
.Nl
You can set the user-level by using the `-u' facility either on the New menu command 
.Gu
or on the command that you use to enter Guide (e.g.  guide -u3  myfile hisfile); you 
.Gu
can even use it on a `load' extension of a dependent button.  Once a user-level has 
.Gu
been set, this same user-level is used for all source files that are subsequently 
.Gu
loaded until the user-level is set again.  Thus our current user-level is still 0,
.Gu
 and to set it back to 1 again we would need to use `-u1' on the New menu command.
.Gu
.Nl
.Nl
.Nl
-- PART B:  PRE-SET REPLACEMENTS --
.Nl
.Nl
The second form of unasked replacement is the pre-set replacement.  It is only applicable 
.Gu
to replace-buttons, but gives finer tuning and more user control than the asking-level/
.Gu
user-level facility.  If a replace-button is pre-set then ALL replace-buttons with 
.Gu
that name are automatically replaced.  Thus if a document contains several EXAMPLE 
.Gu
replace-buttons then pre-setting one of them causes them all to be replaced.  (It 
.Gu
would not, however, pre-set a replace-button called `Example', since this mechanism 
.Gu
is case-sensitive.)  Pre-setting of buttons can be fixed in a source file or it can 
.Gu
be done dynamically by the user; the latter is achieved simply by pointing at the 
.Gu
button and clicking the 
.Bu u 0 n
pre-set
.bU
 button on the mouse rather than, as is normal, the 
.Bu u 0 n
select
.bU
 button.  (If you are in author-display you will notice two unasked replacements in 
.Gu
the previous sentence: these are used to tailor the description of mouse buttons to 
.Gu
different types of mouse.)
.Nl
.Nl
EXPERIMENT 14:  Select the Reader menu command to get back to reader-display, so that 
.Gu
you see this Experiment just as an ordinary reader would.  Now select one of the EXAMPLE 
.Gu
replace-buttons below, but click the 
.Bu u 0 n
pre-set
.bU
 button rather than the 
.Bu u 0 n
select
.bU
 button on the mouse, thus pre-setting the EXAMPLE button.  Confirm your action by 
.Gu
selecting `Yes' when Guide asks you if you really want to do this.
.Nl
1. 
.Bu l 1 n
EXAMPLE
.bU
.Re
This is the replacement of one EXAMPLE button
.rE
.Nl
2. 
.Bu l 1 n
EXAMPLE
.bU
.Re
This is the replacement of the other EXAMPLE button
.rE
.Nl
.Nl
You will see that both EXAMPLE replace-buttons have been replaced.  Indeed any other 
.Gu
EXAMPLE replace-buttons that were in this source would also be automatically replaced.
.Gu
.Nl
.Nl
EXPERIMENT 15:  Try to undo the above replacements:  you will fail because unasked 
.Gu
replacements cannot be undone when in reader-display.
.Nl
.Nl
Pre-setting is useful to readers if they are continually asked the same enquiry: e.
.Gu
g.
.Nl
.Nl
	
.En
Are you a 
.Bu l 1 n
beginner
.bU
.Re
beginner-replacement-1
.rE
 or an 
.Bu l 1 n
expert
.bU
.Re
expert-replacement-1
.rE
 ?
.eN
.Nl
	.
.Nl
	.
.Nl
	
.En
Are you a 
.Bu l 1 n
beginner
.bU
.Re
beginner-replacement-2
.rE
 or an 
.Bu l 1 n
expert
.bU
.Re
expert-replacement-2
.rE
 ?
.eN
.Nl
.Nl
EXPERIMENT 16:  Pre-set the `expert' replace-button in one of the above enquiries,
.Gu
 and watch how both `expert' replace-buttons are replaced.
.Nl
.Nl
Every time a replace-button is pre-set, its name is added to the `list of pre-set 
.Gu
replace-buttons'.  When a source is Saved, the list of pre-set replace-buttons is 
.Gu
saved with it.  Then if the source is subsequently loaded, these replace-buttons will 
.Gu
be pre-set on loading without the user being aware of the automatic replacements. 
.Gu
 The list of pre-set buttons is stored at the very start of the document, and is enclosed 
.Gu
within reverse-video Ps; it is only visible when in author-display.
.Nl
.Nl
EXPERIMENT 17:  Select the Author menu command.  Then use the thumb-bar to go back 
.Gu
to the very start of the document.  You will see the list of pre-set buttons: it contains 
.Gu
the names `EXAMPLE' and `expert'.  Then use the thumb-bar again to return here.
.Nl
.Nl
You can, if you wish, edit the list of pre-set buttons, and this is another way of 
.Gu
achieving pre-setting.  Such pre-sets come into effect when you return to reader-display.
.Gu
.Nl
.Nl
To summarise what has been covered in this lesson:
.Nl
.Nl
1.	the asking-level facility applies to individual replace-buttons, and is under the 
.Gu
author's control.
.Nl
.Nl
2.	the pre-setting facility applies to individual names of replace-names.  It can 
.Gu
be used dynamically by readers, or it can be pre-planned by authors.
.Nl
.Nl
EXPERIMENT 18:  This ends the lesson.  Use the Quit menu command to finish.
.Nl
