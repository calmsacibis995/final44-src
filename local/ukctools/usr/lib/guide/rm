rm, rmdir: commands that remove (
.Bu g 1 n
unlink
.bU
) files
.Nl
.Bu g 1 n
syntax
.bU
:  rm [-fri] file ...
.Nl
 
.Bu l 1 n
Example
.bU
.Re
.Nl
EXAMPLE 1
.Nl
    rm myfile
.Nl
removes myfile from the current directory.  
.Bu l 1 n
Second example
.bU
.Re
.Nl
.Nl
EXAMPLE 2
.Nl
    rm myfile anotherfile direc/file3
.Nl
removes myfile and anotherfile from the current directory, and removes file3 from 
.Gu
the directory direc.  
.Bu l 1 n
Third example
.bU
.Re
.Nl
.Nl
EXAMPLE 3
.Nl
    rm -i *
.Nl
removes all files in the current directory (because the 
.Bu g 1 n
* metacharacter
.bU
 in the shell means `all files').  The -i option ensures that, before each file is 
.Gu
deleted, you are shown its name and are asked to confirm that you really want to delete 
.Gu
it.  The file is only deleted if you type the letter `y'; if you type anything else 
.Gu
the file remains intact.  
.Bu l 1 n
Fourth example
.bU
.Re
.Nl
.Nl
EXAMPLE 4
.Nl
    rm -r /usr
.Nl
would delete all users and their files.  Fortunately the 
.Bu g 1 n
file protection
.bU
 system normally prevents this really happening, unless you are the superuser.
.Nl
.rE
.rE
.rE
.rE
.Nl
DESCRIPTION 
.En
 
.Bu l 1 n
More
.bU
.Re
.Nl
Rm removes the entries for one or more files from a directory.  If an entry was the 
.Gu
last link to the file, the file is destroyed.  
.En
This means that ... 
.Bu l 1 n
More
.bU
.Re
This means that not only is the name of the file removed from the directory, but the 
.Gu
contents of the file is destroyed and lost for ever. Thus, before deleting a file 
.Gu
be sure either that its contents are saved elsewhere or you do not want the file any 
.Gu
more.
.rE
.eN
  Removal of a file requires 
.Bu g 1 n
write permission
.bU
 in its directory; the permissions on the file itself are immaterial.
.Nl
.Nl
If a file has no write permission and the standard input is a terminal, its permissions 
.Gu
are printed and a line is read from the standard input.  If that line begins with 
.Gu
`y' the file is deleted, otherwise the file remains.
.Nl
.Nl
If a designated file is a directory, an error comment is printed unless the optional 
.Gu
argument -r has been used.
.Nl
.Nl
ALSO SEE
.Nl
rmdir delete a directory (todo)
.Nl
.rE
.eN
.Nl
OPTIONS  
.Bu l 1 n
More
.bU
.Re
.Nl
The following options are available:
.Nl
-f	force deletion even if the file has no 
.Bu g 1 n
write permission
.bU
.Nl
-i	interactively ask the user to confirm each removal.  If you are a beginner
.En
  
.Bu l 1 n
More
.bU
.Re
, you are recommended to use this option, especially if you want to delete several 
.Gu
files at the same time. 
.En
 
.Bu l 1 n
Example
.bU
.Re
For example when using
.Nl
		rm *
.Nl
	to delete all the files in a directory.
.rE
.eN
.rE
.eN
.Nl
-r	is used when the file(s) to be deleted are directories. It removes all the files 
.Gu
within each directory, and then `recursively' does the same to each sub-directory 
.Gu
within the directory, thus deleting the entire tree of files that has the given directory 
.Gu
as its root.
.Nl
.rE
.Nl
ERROR MESSAGES  
.Bu l 1 n
More
.bU
.Re
.Nl
rm: xxx nonexistent
.Nl
means that the file xxx does not exist within the current directory.
.Nl
.Nl
rm: xxx directory
.Nl
means that xxx is a directory.  To remove a directory you should use rmdir.
.rE
.Nl
