h46333
s 00002/00002/00132
d D 4.11 90/01/30 17:01:58 bostic 11 10
c change to dirent.h to pick up Kirk's seekdir/telldir fix
e
s 00002/00002/00132
d D 4.10 86/03/22 05:06:56 lepreau 10 9
c double INMAX and OUTMAX (from thomas@utah-cs)
e
s 00001/00001/00133
d D 4.9 85/10/25 15:16:39 mckusick 9 8
c more $? space fro David Tilbrook
e
s 00001/00000/00133
d D 4.8 85/04/16 14:57:17 mckusick 8 7
c vpath additions from Greg Couch (gregc@ucsfcgl)
e
s 00004/00005/00129
d D 4.7 84/11/26 10:45:20 ralph 7 6
c don't compile in metering by default.
e
s 00001/00001/00133
d D 4.6 83/07/01 23:27:03 wnj 6 5
c include fixes
e
s 00001/00001/00133
d D 4.5 83/06/13 03:24:18 sam 5 4
c too small to make LINT system
e
s 00001/00001/00133
d D 4.4 82/05/07 18:43:35 mckusick 4 3
c update to new fs
e
s 00006/00004/00128
d D 4.3 82/04/20 18:56:03 mckusick 3 2
c add new directory access routines
e
s 00001/00001/00131
d D 4.2 81/03/15 00:44:07 wnj 2 1
c fix sccs id
e
s 00132/00000/00000
d D 4.1 81/02/28 21:15:51 wnj 1 0
c date and time created 81/02/28 21:15:51 by wnj
e
u
U
t
T
I 1
D 2
static	char *sccsid = "%W% (Berkeley) %E%";
E 2
I 2
/* %M% %I% %E% */
I 11
#include <sys/param.h>
E 11
E 2
#include <stdio.h>
#include <ctype.h>
I 3
D 11
#include <sys/param.h>
D 4
#include <ndir.h>
E 4
I 4
D 6
#include <dir.h>
E 6
I 6
#include <sys/dir.h>
E 11
I 11
#include <dirent.h>
E 11
E 6
E 4
E 3

#define SHELLCOM "/bin/sh"

typedef long int TIMETYPE;

D 7
#ifdef unix
/*  to install metering, add a statement like */
#define METERFILE "/usr/sif/make/Meter"
/* to turn metering on, set external variable meteron to 1 */
#endif
E 7
I 7
/*  to install metering, add a statement like
 * #define METERFILE "/usr/sif/make/Meter"
 * to turn metering on, set external variable meteron to 1.
 */
E 7

/* define FSTATIC to be static on systems with C compilers
   supporting file-static; otherwise define it to be null
*/
#define FSTATIC static

#define NO 0
#define YES 1

#define unequal strcmp
#define HASHSIZE 1021
#define NLEFTS 512
#define NCHARS 500
#define NINTS  250
D 5
#define INMAX 2500
E 5
I 5
D 10
#define INMAX 3500
E 5
#define OUTMAX 3500
E 10
I 10
#define INMAX 7000
#define OUTMAX 7000
E 10
D 9
#define QBUFMAX 2500
E 9
I 9
#define QBUFMAX 5000
E 9
#define MAXDIR 10

#define ALLDEPS  1
#define SOMEDEPS 2

#define META 01
#define TERMINAL 02
extern char funny[128];


#define ALLOC(x) (struct x *) ckalloc(sizeof(struct x))

extern int sigivalue;
extern int sigqvalue;
extern int waitpid;
extern int dbgflag;
extern int prtrflag;
extern int silflag;
extern int noexflag;
extern int keepgoing;
extern int noruleflag;
extern int touchflag;
extern int questflag;
extern int ndocoms;
extern int ignerr;
extern int okdel;
extern int inarglist;
extern char *prompt;
extern int nopdir;
extern char junkname[ ];



struct nameblock
	{
	struct nameblock *nxtnameblock;
	char *namep;
I 8
	char *alias;
E 8
	struct lineblock *linep;
	int done:3;
	int septype:3;
	TIMETYPE modtime;
	};

extern struct nameblock *mainname ;
extern struct nameblock *firstname;

struct lineblock
	{
	struct lineblock *nxtlineblock;
	struct depblock *depp;
	struct shblock *shp;
	};
extern struct lineblock *sufflist;

struct depblock
	{
	struct depblock *nxtdepblock;
	struct nameblock *depname;
	};

struct shblock
	{
	struct shblock *nxtshblock;
	char *shbp;
	};

struct varblock
	{
	struct varblock *nxtvarblock;
	char *varname;
	char *varval;
	int noreset:1;
	int used:1;
	};
extern struct varblock *firstvar;

struct pattern
	{
	struct pattern *nxtpattern;
	char *patval;
	};
extern struct pattern *firstpat;

D 3
struct opendir
E 3
I 3
struct dirhdr
E 3
	{
D 3
	struct opendir *nxtopendir;
	FILE * dirfc;
E 3
I 3
	struct dirhdr *nxtopendir;
	DIR *dirfc;
E 3
	char *dirn;
	};
D 3
extern struct opendir *firstod;
E 3
I 3
extern struct dirhdr *firstod;
E 3


struct chain
	{
	struct chain *nextp;
	char *datap;
	};

char *copys(), *concat(), *subst();
int *ckalloc();
struct nameblock *srchname(), *makename();
TIMETYPE exists();
E 1
