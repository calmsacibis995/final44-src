h44765
s 00001/00001/00138
d D 6.1 85/04/29 14:40:41 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00105/00055/00034
d D 5.1 85/04/29 14:40:27 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00089/00000/00000
d D 4.1 85/04/29 14:40:18 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH OD 1  4/1/81
E 2
I 2
D 3
.TH OD 1 "16 February 83"
E 3
I 3
.TH OD 1 "%Q%"
E 3
E 2
.UC 4
.SH NAME
D 2
od \- octal dump
E 2
I 2
od \- octal, decimal, hex, ascii dump
E 2
.SH SYNOPSIS
.B od
D 2
[
.B \-abcdoxDOXw
] [ file ] [ [
.B +
]offset[
.BR ". " "]["
\fBb\fR ] ]
E 2
I 2
[ \-format ] [ file ] [ [\fB+\fP]offset[\fB.\fP][\fBb\fP] [label] ]
E 2
.SH DESCRIPTION
.I Od
D 2
dumps
.I file
in
one or more formats
as
selected by the first argument.
E 2
I 2
displays
.IR file ,
or it's standard input,
in one or more dump formats
as selected by the first argument.
E 2
If the first argument is missing,
.B \-o
D 2
is default.
The meanings of the format argument characters
are:
.TP 3
E 2
I 2
is the default.
Dumping continues until end-of-file.
.PP
The meanings of the format argument characters are:
.TP 5
.B  a
Interpret bytes as characters and display them with their ACSII names.
If the
.B p
character is given also, then bytes with even parity are underlined.
The
.B P
character causes bytes with odd parity to be underlined.
Otherwise the parity bit is ignored.
.TP 5
E 2
.B  b
D 2
Interpret bytes in octal.
.TP 3
E 2
I 2
Interpret bytes as unsigned octal.
.TP 5
E 2
.B  c
D 2
Interpret bytes in ASCII.
E 2
I 2
Interpret bytes as ASCII characters.
E 2
Certain non-graphic characters appear as C escapes:
null=\e0,
backspace=\eb,
formfeed=\ef,
newline=\en,
return=\er,
tab=\et;
others appear as 3-digit octal numbers.
D 2
.TP 3
E 2
I 2
Bytes with the parity bit set are displayed in octal.
.TP 5
E 2
.B  d
D 2
Interpret shorts (16 bit words) in decimal.
.TP 3
E 2
I 2
Interpret (short) words as unsigned decimal.
.TP 5
.B  f
Interpret long words as floating point.
.TP 5
.B  h
Interpret (short) words as unsigned hexadecimal.
.TP 5
.B  i
Interpret (short) words as signed decimal.
.TP 5
.B  l
Interpret long words as signed decimal.
.TP 5
E 2
.B  o
D 2
Interpret shorts (16 bit words) in octal.
.TP 3
.B  w
Produce wide (132 column) output.
.TP 3
E 2
I 2
Interpret (short) words as unsigned octal.
.TP 5
.BR s [n]
Look for strings of ascii graphic characters, terminated with a null byte.
.I N
specifies the minimum length string to be recognized.
By default, the minimum length is 3 characters.
.TP 5
.B  v
Show all data. By default, display lines that are identical to the last
line shown are not output, but are indicated with an ``*'' in column 1.
.TP 5
.BR w [n]
Specifies the number of input bytes to be interpreted and displayed
on each output line. If
.B w
is not specified, 16 bytes are read for each display line.
If
.I n
is not specified, it defaults to 32.
.TP 5
E 2
.B  x
D 2
Interpret shorts (16 bit words) in hex.
.TP 3
.B  D
Interpret longs (32 bit words) in decimal.
.TP 3
.B  O
Interpret longs (32 bit words) in octal.
.TP 3
.B  X
Interpret longs (32 bit words) in hex.
E 2
I 2
Interpret (short) words as hexadecimal.
E 2
.PP
I 2
An upper case format character implies the long or double precision
form of the object.
.PP
E 2
The
I 2
.I offset
argument specifies the byte offset
into the file where dumping is to commence.
By default this argument is interpreted in octal.
A different radix can be specified;
If ``\fB.\fR'' is appended to the argument, then
.I offset
is interpreted in decimal.
If
.I offset
begins with ``\fBx\fP'' or ``\fB0x\fP'',
it is interpreted in hexadecimal.
If ``\fBb\fP'' (``\fBB\fP'') is appended, the offset is interpreted
as a block count, where a block is 512 (1024) bytes.
If the
E 2
.I file
D 2
argument specifies which file is to be dumped.
If no file argument is specified,
the standard input is used.
E 2
I 2
argument is omitted, an
.I offset
argument must be preceded by
.RB `` + ''.
E 2
.PP
D 2
The offset argument specifies the offset
in the file where dumping is to commence.
This argument is normally interpreted
as octal bytes.
If `\fB.\fR' is appended, the offset is interpreted in
decimal.
If `\fBb\fR' is appended, the offset is interpreted in
blocks of 512 bytes.
If the file argument is omitted,
the offset argument must be preceded 
.RB ` + '.
E 2
I 2
The radix of the displayed address will be the same as the radix of the
.IR offset ,
if specified; otherwise it will be octal.
E 2
.PP
D 2
Dumping continues until end-of-file.
E 2
I 2
.I Label
will be interpreted as a pseudo-address for the first byte displayed.
It will be shown in ``()'' following the file offset.
It is intended to be used with
core images to indicate the real memory address.
The syntax for
.I label
is identical to that for
.IR offset .
E 2
.SH "SEE ALSO"
adb(1)
I 2
.SH BUGS
A file name argument can't start with ``+''.
A hexadecimal offset can't be a block count.
Only one file name argument can be given.
.PP
It is an historical botch to require specification of object, radix, and
sign representation in a single character argument.
E 2
E 1
