h04127
s 00001/00001/00050
d D 1.7 90/01/08 05:48:54 edward 7 6
c sprint returns int
e
s 00002/00002/00049
d D 1.6 89/09/13 10:11:51 bostic 6 5
c fix signal, strcpy
e
s 00001/00001/00050
d D 1.5 87/10/22 09:44:43 bostic 5 4
c sprintf returns an int, now
e
s 00004/00000/00047
d D 1.4 87/04/06 15:27:23 bostic 4 3
c bug report 4.3BSD/usr.bin/48
e
s 00001/00001/00046
d D 1.3 87/04/06 15:24:20 bostic 3 2
c bug report 4.3BSD/usr.bin/46
e
s 00001/00001/00046
d D 1.2 85/04/08 11:42:48 ralph 2 1
c _NFILE nolonger defined
e
s 00047/00000/00000
d D 1.1 82/08/30 13:16:05 rrh 1 0
c date and time created 82/08/30 13:16:05 by rrh
e
u
U
t
T
I 1
	/* LINTLIBRARY */
/*
 *	%W%	(Berkeley)	%G%
 */
#include <stdio.h>
	exit(s) {;}
long	lseek(f, o, d) long o; { return(0); }
char	*mktemp(p) char *p; { return(p);}
D 6
int	(*signal(c, f))() int (*f)(); { return(f); }
E 6
I 6
void	(*signal(c, f))() void (*f)(); { return(f); }
E 6
char	*strcat(a, b) char *a, *b; { ; }
int	strcmp(a, b) char *a, *b; { return(1); }
D 6
char	*strcpy(a, b) char *a, *b; { ; }
E 6
I 6
char	*strcpy(a, b) char *a, *b; { return(a); }
E 6
int	strlen(s) char *s; { return(1); }
long	tell(f) { return((long)0); }
long	time(t) long *t; { return(0);}
char	*calloc(n,s) unsigned n, s; { static char c[1]; return(c); }
char	*malloc(n) unsigned n; {static char c; return(&c);}
char	*realloc(p, n) char *p; unsigned n; { static char c; return(&c);}
	free(p) char *p; {;}
	fclose(f) FILE *f; {return(0);}
	fflush(f) FILE *f; {return(0);}
char	*fgets( s, l, f ) char *s; FILE *f; { return(s); }
FILE	*fopen(s,m) char *s, *m; { return(stdin); }
FILE	*freopen(s, m, f) char *s, *m; FILE *f; { return(stdin); }
FILE	*fdopen(fd, m) char *m; { return(stdin);}
	/* VARARGS */
	fprintf( f, s ) FILE *f; char *s; {;}
	fputs(s,f) char *s; FILE *f; {;}
	fread( p, s, n, f ) char *p; FILE *f; {return(1);}
	/* VARARGS */
	fscanf( f, s ) FILE *f; char *s; {return(1);}
int	fwrite( p, s, n, f ) char *p; FILE *f; {return(0);}
	intss(){return(1); }
	/* VARARGS */
	printf( s ) char *s; {;}
	rewind(f) FILE *f; {;}
	/* VARARGS */
	scanf( f ) char *f; {return(1); }
	setbuf( f, b ) FILE *f; char *b; {;}
	/* VARARGS */
D 5
char	*sprintf( s, f ) char *s, *f; { return(s);}
E 5
I 5
D 7
int	sprintf( s, f ) char *s, *f; { return(s);}
E 7
I 7
int	sprintf( s, f ) char *s, *f; { return(1);}
E 7
E 5
	/* VARARGS */
	sscanf( s, f ) char *s, *f; { return(1); }
	ungetc( c, f ) FILE *f; {  return(c); }
	wdleng(){return(0); }
D 2
struct	_iobuf _iob[_NFILE];
E 2
I 2
D 3
extern	struct _iobuf _iob[];
E 3
I 3
struct _iobuf _iob[1];
E 3
E 2
char	_ctype_[129];
I 4
double	atof(s) char *s; { return(1.); }
double	frexp( v, e) double v; int *e; { return v; }
double	ldexp( v, e) double v; { return v; }
double	modf( v, p ) double v, *p; { return v; }
E 4
E 1
