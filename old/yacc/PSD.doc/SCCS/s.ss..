h38346
s 00000/00000/00058
d D 8.1 93/06/08 18:23:25 bostic 6 5
c 4.4BSD snapshot (revision 8.1)
e
s 00002/00002/00056
d D 6.3 93/06/05 15:55:01 bostic 5 4
c new doc.mk; document numbering changes for 4.4BSD
e
s 00002/00000/00056
d D 6.2 91/04/17 10:31:18 bostic 4 3
c new copyright; att/bsd/shared
e
s 00006/00004/00050
d D 6.1 86/05/08 00:16:59 mckusick 3 2
c document for 4.3BSD release
e
s 00000/00000/00054
d D 5.1 86/05/08 00:16:55 mckusick 2 1
c document distributed with 4.2BSD
e
s 00054/00000/00000
d D 4.1 86/05/08 00:16:50 mckusick 1 0
c document distributed with 4.1BSD
e
u
U
t
T
I 4
.\" %sccs.include.proprietary.roff%
.\"
E 4
I 1
.\"	%W% (Berkeley) %G%
.\"
D 3
.RP
E 3
I 3
D 5
.EH 'PS1:15-%''Yacc: Yet Another Compiler-Compiler'
.OH 'Yacc: Yet Another Compiler-Compiler''PS1:15-%'
E 5
I 5
.EH 'PSD:15-%''Yacc: Yet Another Compiler-Compiler'
.OH 'Yacc: Yet Another Compiler-Compiler''PSD:15-%'
E 5
.\".RP
E 3
.ND "July 31, 1978"
.TL
Yacc:
Yet Another Compiler-Compiler
.AU "MH 2C-559" 3968
Stephen C. Johnson
.AI
.MH
.AB
.PP
Computer program input generally has some structure;
in fact, every computer program that does input can be thought of as defining
an ``input language'' which it accepts.
An input language may be as complex as a programming language, or as simple as
a sequence of numbers.
Unfortunately, usual input facilities
are limited, difficult to use,
and often are lax about checking their inputs for validity.
.PP
Yacc provides a general tool for describing
the input to a computer program.
The Yacc user specifies the structures
of his input, together with code to be invoked as
each such structure is recognized.
Yacc turns such a specification into a subroutine that
handles the input process;
frequently, it is convenient and appropriate to have most
of the flow of control in the user's application
handled by this subroutine.
.PP
The input subroutine produced by Yacc calls a user-supplied routine to
return the next basic input item.
Thus, the user can specify his input in terms of individual input characters, or
in terms of higher level constructs such as names and numbers.
The user-supplied routine may also handle idiomatic features such as
comment and continuation conventions, which typically defy easy grammatical specification.
.PP
Yacc is written in portable C.
The class of specifications accepted is a very general one: LALR(1)
grammars with disambiguating rules.
.PP
In addition to compilers for C, APL, Pascal, RATFOR, etc., Yacc
has also been used for less conventional languages,
including a phototypesetter language, several desk calculator languages, a document retrieval system,
and a Fortran debugging system.
.AE
.OK
D 3
Computer Languages
Compilers
Formal Language Theory
E 3
I 3
.\"Computer Languages
.\"Compilers
.\"Formal Language Theory
E 3
.CS 23 11 34 0 0 8
E 1
