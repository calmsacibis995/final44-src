h44193
s 00003/00000/00266
d D 8.6 95/05/26 14:56:17 mckusick 16 15
c settimeofday can only advance the time in secure mode
e
s 00003/00003/00263
d D 8.5 95/04/28 14:14:05 bostic 15 14
c POSIX says that -s precedes init signal names
c From: Charles Hannum <mycroft@NetBSD.ORG>
e
s 00001/00000/00265
d D 8.4 94/06/01 20:39:50 ah 14 13
c page breaks for 4.4BSD manuals
e
s 00003/00003/00262
d D 8.3 94/04/18 10:42:49 mckusick 13 12
c relocate initialization of `securelevel' variable
e
s 00001/00001/00264
d D 8.2 94/04/17 07:20:27 bostic 12 11
c sysctl is in section 8
e
s 00002/00002/00263
d D 8.1 93/06/05 11:00:26 bostic 11 10
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00013/00005/00252
d D 6.8 93/06/03 15:15:04 mckusick 10 9
c final update from BSDI
e
s 00030/00032/00227
d D 6.7 93/06/02 16:40:24 mckusick 9 8
c cleanups on handling SIGHUP; other nits
e
s 00003/00000/00256
d D 6.6 93/05/26 10:15:59 bostic 8 7
c update Donn's organization for general release
e
s 00081/00015/00175
d D 6.5 93/03/03 17:55:39 mckusick 7 6
c add description of security levels and secure mode for single-user operation
e
s 00163/00117/00027
d D 6.4 91/04/29 04:36:04 cael 6 5
c mdoc version three/bsd copyright
e
s 00005/00005/00139
d D 6.3 90/06/24 21:40:28 trent 5 4
c new pathnames (getty, utmp, and wtmp)
e
s 00007/00005/00137
d D 6.2 86/05/22 20:52:53 karels 4 3
c update
e
s 00004/00025/00138
d D 6.1 85/04/27 13:31:21 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00008/00003/00155
d D 5.1 85/04/27 13:30:52 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00158/00000/00000
d D 4.1 85/04/27 13:30:20 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 6
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 6
I 6
D 11
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 11
I 11
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 11
E 6
.\"
I 8
.\" This code is derived from software contributed to Berkeley by
.\" Donn Seeley at Berkeley Software Design, Inc.
.\"
E 8
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
.\" %sccs.include.redist.roff%
E 6
.\"
D 2
.TH INIT 8 4/1/81
E 2
I 2
D 3
.TH INIT 8 4/1/83
E 3
I 3
D 6
.TH INIT 8 "%Q%"
E 3
E 2
.UC 4
.SH NAME
init \- process control initialization
.SH SYNOPSIS
.B /etc/init
.SH DESCRIPTION
.I Init
is invoked inside UNIX as the last step in the boot procedure.
It normally then runs the automatic reboot sequence as described in
.IR reboot (8),
E 6
I 6
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt INIT 8
.Os BSD 4
.Sh NAME
.Nm init
.Nd process control initialization
.Sh SYNOPSIS
.Nm init
.Sh DESCRIPTION
The
.Nm init
program
is the last stage of the boot process.
It normally runs the automatic reboot sequence as described in
.Xr reboot 8 ,
E 6
and if this succeeds, begins multi-user operation.
D 7
If the reboot fails, it commences single user operation by giving
E 7
I 7
If the reboot scripts fail,
D 9
.Fn init
E 9
I 9
.Nm init
E 9
commences single user operation by giving
E 7
D 6
the super-user a shell on the console.  It is possible to pass parameters
E 6
I 6
the super-user a shell on the console.
The
.Nm init
D 7
program
may be passed parameters
E 7
I 7
program may be passed parameters
E 7
E 6
from the boot program to
D 6
.I init
so that single user operation is commenced immediately.
When such single user operation is terminated by killing the single-user
shell (i.e. by hitting ^D),
.I init
runs
.I /etc/rc
without the reboot parameter.
This command file
performs housekeeping operations
such as removing temporary files,
mounting file systems, and starting
daemons.
.PP
E 6
I 6
prevent the system from going multi-user and to instead execute
D 7
a single user shell with out starting the normal daemons.
E 7
I 7
a single user shell without starting the normal daemons.
E 7
The system is then quiescent for maintenance work and may
D 7
later be made it go multi-user by killing the
E 7
I 7
later be made to go to multi-user by exiting the
E 7
D 9
the single-user shell (with ^D).
E 9
I 9
single-user shell (with ^D).
E 9
This
causes
.Nm init
to run the
.Pa /etc/rc
D 7
start up command file without the reboot parameter.
E 7
I 7
start up command file in fastboot mode (skipping disk checks).
E 7
.Pp
I 7
If the
.Nm console
entry in the
.Xr ttys 5
file is marked ``insecure'',
then
.Nm init
will require that the superuser password be
entered before the system will start a single-user shell.
The password check is skipped if the 
.Nm console
is marked as ``secure''.
.Pp
The kernel runs with four different levels of security.
Any superuser process can raise the security level, but only 
.Nm init
can lower it.
Security levels are defined as follows:
.Bl -tag -width flag
.It Ic -1
Permanently insecure mode \- always run system in level 0 mode.
.It Ic 0
Insecure mode \- immutable and append-only flags may be turned off.
All devices may be read or written subject to their permissions.
.It Ic 1
Secure mode \- immutable and append-only flags may not be changed;
disks for mounted filesystems,
.Pa /dev/mem ,
and
.Pa /dev/kmem
are read-only.
I 16
The
.Xr settimeofday 2
system call can only advance the time.
E 16
.It Ic 2
Highly secure mode \- same as secure mode, plus disks are always
read-only whether mounted or not.
This level precludes tampering with filesystems by unmounting them,
but also inhibits running
.Xr newfs 8
while the system is multi-user.
.El
.Pp
Normally, the system runs in level 0 mode while single user
and in level 1 mode while multiuser.
If the level 2 mode is desired while running multiuser,
it can be set in the startup script
.Pa /etc/rc
using
D 12
.Xr sysctl 1 .
E 12
I 12
.Xr sysctl 8 .
E 12
If it is desired to run the system in level 0 mode while multiuser,
the administrator must build a kernel with the variable
.Nm securelevel
D 13
in the kernel source file
.Pa /sys/kern/kern_sysctl.c
initialized to -1.
E 13
I 13
defined in the file
.Pa /sys/compile/MACHINE/param.c
and initialize it to -1.
E 13
D 9
Note that it is NOT initialized to zero, as that would allow the
.Nm securelevel
variable in the
.Nm vmunix
binary to be patched to -1.
Without initialization,
.Nm securelevel
loads in the initialized-to-zero region that only
comes into existence when the kernel is loaded and
hence cannot be patched by a stalking hacker.
E 9
.Pp
E 7
E 6
In multi-user operation, 
D 6
.I init's
role is to create a process for each
terminal port on which a user may log in.
To begin such operations, it reads the file
.I /etc/ttys
E 6
I 6
.Nm init
maintains
processes for the terminal ports found in the file
D 9
.Xr ttys 5.
E 9
I 9
.Xr ttys 5 .
E 9
.Nm Init
reads this file, and executes the command found in the second field.
This command is usually
.Xr getty 8 ;
.Xr getty
opens and initializes the tty line
E 6
and
D 3
forks several times to create a process
for each terminal specified in the file.
Each of these processes opens the appropriate terminal
for reading and writing.  These channels thus
receive file descriptors 0, 1 and 2, the standard input and
output and the diagnostic output.
Opening the terminal will usually involve a delay,
since the
.IR open ""
is not completed until someone
is dialed up and carrier established on the channel.
If a terminal exists but an error occurs when trying to open the terminal
.I init
complains by writing a message to the system console;
the message is repeated every 10 minutes for each such terminal
until the terminal is shut off in /etc/ttys and init notified (by
a hangup, as described below), or the terminal becomes accessible
(init checks again every minute).
After an open succeeds,
.I /etc/getty
is called with argument as specified by the second character of
the
.I ttys
file line.
E 3
I 3
D 6
executes a command for each terminal specified in the file.
This command will usually be
D 5
.IR /etc/getty .
E 5
I 5
.IR /usr/libexec/getty .
E 5
E 3
.I Getty
I 4
opens and initializes the terminal line,
E 4
reads the user's name and invokes
.I login
to log in the user and execute the Shell.
.PP
Ultimately the Shell will terminate
because of an end-of-file either
typed explicitly or generated as a result of hanging up.
The main path of
.IR init ,
which has been waiting
for such an event,
wakes up and removes the appropriate entry from the
file
.IR utmp ,
which records current users, and
makes an entry in
D 5
.IR /usr/adm/wtmp ,
E 5
I 5
.IR /var/log/wtmp ,
E 5
which maintains a history
of logins and logouts.
E 6
I 6
executes the
.Xr login
program.
E 6
The
D 6
.I wtmp
entry is made only if a user logged in successfully on the line.
Then the appropriate terminal is reopened and
.I getty
is
reinvoked.
.PP
.I Init
catches the
.I hangup
signal (signal SIGHUP) and interprets it to mean that
the file
.I /etc/ttys
should be read again.
The Shell process on each line which used to be active
in
.I ttys
but is no longer there is terminated;
a new process is created for each added line;
lines unchanged in the file are undisturbed.
D 4
Thus it is possible to drop or add phone lines without
E 4
I 4
Thus it is possible to drop or add terminal lines without
E 4
rebooting the system by changing the
.I ttys
file and sending a
.I hangup
signal to the
.I init
process: use `kill \-HUP 1.'
.PP
.I Init
E 6
I 6
.Xr login
program, when a valid user logs in,
D 7
exectutes a shell for that user.  When this shell
E 7
I 7
executes a shell for that user.  When this shell
E 7
dies, either because the user logged out
D 7
or an abnormal termination occured (a signal),
E 7
I 7
or an abnormal termination occurred (a signal),
E 7
the
.Nm init
program wakes up, deletes the user
from the
.Xr utmp 5
file of current users and records the logout in the
.Xr wtmp
file.
The cycle is
then restarted by
.Nm init
D 7
excuting a new
E 7
I 7
executing a new
E 7
.Xr getty
for the line.
I 14
.pl +1
E 14
.Pp
D 9
Lines may be added or deleted from the
E 9
I 9
Line status (on, off, secure, getty, or window information)
may be changed in the
E 9
.Xr ttys
file without a reboot by sending the signal
.Dv SIGHUP
to
.Nm init
with the command
D 9
.Dq Li "kill -HUP 1"
E 9
I 9
D 15
.Dq Li "kill -HUP 1" .
E 15
I 15
.Dq Li "kill \-s HUP 1" .
E 15
E 9
D 7
Upon receipt of this signal,
E 7
I 7
On receipt of this signal,
E 7
.Nm init
re-reads the
.Xr ttys
file.
D 9
Engaged (in use) ports
are not disturbed,
and if an engaged port has been deleted from the
file, it will only become inactive after the engaging process has
terminated (the user has logged off).
If a port is inactive (only a
.Xr getty
or terminated processes are attached to it)
E 9
I 9
When a line is turned off in
.Xr ttys ,
E 9
.Nm init
D 7
elimiates these processes.
E 7
I 7
D 9
eliminates these processes.
E 7
For these ports and any new ports, for which a command is found
in the
E 9
I 9
will send a SIGHUP signal to the controlling process
for the session associated with the line.
For any lines that were previously turned off in the
E 9
.Xr ttys
D 10
file,
E 10
I 10
file and are now on,
E 10
.Nm init
executes a new
D 9
.Xr getty .
E 9
I 9
.Xr getty
D 10
too enable a new login.
E 10
I 10
to enable a new login.
E 10
If the getty or window field for a line is changed,
D 10
the change takes effect at the beginning of the next
E 10
I 10
the change takes effect at the end of the current
E 10
login session (e.g., the next time 
.Nm init
starts a process on the line).
If a line is commented out or deleted from
.Xr ttys ,
.Nm init
will not do anything at all to that line.
D 10
However, it will complain that the association between lines
and the utmp is out of sync,
E 10
I 10
However, it will complain that the relationship between lines
in the
.Xr ttys
file and records in the
.Xr utmp
file is out of sync,
E 10
so this practice is not recommended.
E 9
.Pp
.Nm Init
E 6
will terminate multi-user operations and resume single-user mode
D 6
if sent a terminate (TERM) signal, i.e. ``kill \-TERM 1''.
E 6
I 6
if sent a terminate
.Pq Dv TERM
signal, for example,
D 15
.Dq Li "kill \-TERM 1" .
E 15
I 15
.Dq Li "kill \-s TERM 1" .
E 15
E 6
D 7
If there are processes outstanding which are deadlocked (due to
E 7
I 7
If there are processes outstanding that are deadlocked (because of
E 7
hardware or software failure),
D 6
.I init
E 6
I 6
.Xr init
E 6
will not wait for them all to die (which might take forever), but
will time out after 30 seconds and print a warning message.
D 6
.PP
.I Init
E 6
I 6
.Pp
.Nm Init
E 6
will cease creating new
D 6
.IR getty 's
and allow the system to slowly die away, if it is sent a terminal stop (TSTP)
signal, i.e. ``kill \-TSTP 1''.  A later hangup will resume full
E 6
I 6
.Xr getty Ns 's
and allow the system to slowly die away, if it is sent a terminal stop
.Pq Dv TSTP
signal, i.e.
D 15
.Dq Li "kill \-TSTP 1" .
E 15
I 15
.Dq Li "kill \-s TSTP 1" .
E 15
A later hangup will resume full
E 6
D 7
multi-user operations, or a terminate will initiate a single user shell.
E 7
I 7
multi-user operations, or a terminate will start a single user shell.
E 7
This hook is used by
D 6
.IR reboot (8)
E 6
I 6
.Xr reboot 8
E 6
and
D 6
.IR halt (8).
.PP
.I Init's
role is so critical that if it dies, the system will reboot itself
E 6
I 6
.Xr halt 8 .
.Pp
The role of
.Nm init
is so critical that if it dies, the system will reboot itself
E 6
automatically.
If, at bootstrap time, the
D 6
.I init
E 6
I 6
.Xr init
E 6
D 9
process cannot be located, the system will loop in user mode at location
0x13.
E 9
I 9
process cannot be located, the system will panic with the message
``panic: "init died (signal %d, exit %d)''.
E 9
D 6
.SH DIAGNOSTICS
D 4
\fBinit: \fR\fItty\fR\|\fB: cannot open\fR.  A terminal which is turned
on in the \fIrc\fR file cannot be opened, likely because the requisite
lines are either not configured into the system or the associated device
was not attached during boot-time system configuration.
E 4
I 4
D 5
\fB/etc/getty\fP \fIgettyargs\fP\fB failing, sleeping\fP.
E 5
I 5
\fB/usr/libexec/getty\fP \fIgettyargs\fP\fB failing, sleeping\fP.
E 6
I 6
.Sh DIAGNOSTICS
.Bl -diag
D 9
.It "/usr/libexec/getty \\*(eMgettyargs\\*(fP failing, sleeping."
E 9
I 9
.It "getty repeating too quickly on port %s, sleeping"
E 9
E 6
E 5
A process being started to service a line is exiting quickly
each time it is started.
This is often caused by a ringing or noisy terminal line.
D 6
.I Init will sleep for 30 seconds, then continue trying to start the process.
E 4
.LP
\fBWARNING: Something is hung (wont die); ps axl advised\fR.  A process
E 6
I 6
D 9
.Em "Init will sleep for 30 seconds" ,
E 9
I 9
.Em "Init will sleep for 10 seconds" ,
E 9
.Em "then continue trying to start the process" .
.Pp
D 9
.It "WARNING: Something is hung (wont die); ps axl advised."
E 9
I 9
.It "some processes would not die; ps axl advised."
E 9
A process
E 6
is hung and could not be killed when the system was shutting down.
D 7
This is usually caused by a process
which is stuck in a device driver due to a persistent device error condition.
E 7
I 7
This condition is usually caused by a process
that is stuck in a device driver because of
a persistent device error condition.
E 7
D 6
.SH FILES
D 2
/dev/console, /dev/tty?, /etc/utmp, /usr/adm/wtmp, /etc/ttys, /etc/rc
E 2
I 2
/dev/console,
/dev/tty*,
D 5
/etc/utmp,
/usr/adm/wtmp,
E 5
I 5
/var/run/utmp,
/var/log/wtmp,
E 5
/etc/ttys,
/etc/rc
E 2
.SH "SEE ALSO"
D 2
login(1), kill(1), sh(1), ttys(5), crash(8), getty(8), rc(8), reboot(8),
E 2
I 2
login(1), kill(1), sh(1), ttys(5), crash(8V), getty(8), rc(8), reboot(8),
E 2
halt(8), shutdown(8)
E 6
I 6
.El
.Sh FILES
.Bl -tag -width /var/log/wtmp -compact
.It Pa /dev/console
System console device.
.It Pa /dev/tty*
Terminal ports found in
.Xr ttys .
.It Pa /var/run/utmp
Record of Current users on the system.
.It Pa /var/log/wtmp
Record of all logins and logouts.
.It Pa /etc/ttys
The terminal initialization information file.
.It Pa /etc/rc
System startup commands.
.El
.Sh SEE ALSO
.Xr login 1 ,
.Xr kill 1 ,
.Xr sh 1 ,
.Xr ttys 5 ,
.Xr crash 8 ,
.Xr getty 8 ,
.Xr rc 8 ,
.Xr reboot 8 ,
.Xr halt 8 ,
.Xr shutdown 8
.Sh HISTORY
A
.Nm
command appeared in
.At v6 .
I 10
.Sh BUGS
Systems without
.Xr sysctl
behave as though they have security level \-1.
E 10
E 6
E 1
