h00684
s 00011/00000/00238
d D 8.8 94/06/16 17:53:27 mckusick 32 31
c describe -a flag and noauto option
e
s 00001/00001/00237
d D 8.7 94/03/27 15:42:44 bostic 31 30
c typo
e
s 00002/00002/00236
d D 8.6 94/03/27 15:00:45 bostic 30 29
c make async, sync match between .h and man page
e
s 00056/00035/00182
d D 8.5 94/03/27 07:46:02 bostic 29 28
c Jan-Simon and my new versions of the mount commands
c table driven options, delete -F in favor of -o being passed down
e
s 00005/00003/00212
d D 8.4 94/02/20 16:38:25 pendry 28 27
c update synopsis.  add more xrefs
e
s 00025/00064/00190
d D 8.3 94/02/20 16:23:07 bostic 27 26
c break mount.8 up into mount.8 and umount.8; add the rest of the
c mount commands to the SEE ALSO section
e
s 00017/00008/00237
d D 8.2 94/02/20 13:50:10 pendry 26 24
c document umount -h.  fix a few typos.  update synopsis.
e
s 00011/00005/00240
d R 8.2 94/02/20 13:35:03 pendry 25 24
c document umount -h; fix synopsis lines.
e
s 00002/00002/00243
d D 8.1 93/07/11 14:24:21 bostic 24 22
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00002/00002/00243
d R 8.1 93/06/05 11:01:22 bostic 23 22
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00007/00000/00238
d D 6.20 93/04/06 09:47:37 pendry 22 21
c added union option
e
s 00011/00004/00227
d D 6.19 92/11/15 23:52:00 mckusick 21 20
c -f flag (fake) becomes -d (debug); -f used to force downgrade from
c read-write to read-only mount mode
e
s 00018/00063/00213
d D 6.18 92/01/06 17:04:25 mckusick 20 19
c update to reflect mount_nfs being moved out
e
s 00003/00001/00273
d D 6.17 91/08/05 06:52:47 cael 19 18
c insert .Tn
e
s 00236/00169/00038
d D 6.16 91/05/04 15:26:49 cael 18 17
c mdoc version three/bsd copyright
e
s 00001/00011/00206
d D 6.15 90/06/24 21:41:12 trent 17 16
c new copyright notice
e
s 00006/00000/00211
d D 6.14 90/06/22 10:16:47 mckusick 16 15
c add support for spongy mounts
e
s 00006/00000/00205
d D 6.13 90/05/14 14:03:44 mckusick 15 14
c update for TCP based NFS from Rick Macklem
e
s 00023/00002/00182
d D 6.12 90/04/08 17:46:27 mckusick 14 13
c document -t option for mount, mount -a, and umount -a
e
s 00001/00001/00183
d D 6.11 90/01/04 22:42:10 mckusick 13 12
c add xref to unmount(2)
e
s 00003/00003/00181
d D 6.10 89/11/24 14:57:09 mckusick 12 11
c unknown types use /sbin/mount_XXX
e
s 00011/00000/00173
d D 6.9 89/11/09 22:23:25 mckusick 11 10
c add -f flag for forcible unmounting
e
s 00015/00006/00158
d D 6.8 89/10/31 18:23:00 mckusick 10 9
c add description of the -u flag
e
s 00060/00011/00103
d D 6.7 89/10/18 16:39:34 mckusick 9 8
c describe standard options; describe external file system types
e
s 00010/00011/00104
d D 6.6 89/08/16 10:49:01 mckusick 8 7
c clean up formating
e
s 00002/00006/00113
d D 6.5 89/08/16 00:46:51 mckusick 7 6
c delete references to mtab
e
s 00061/00008/00058
d D 6.4 89/07/11 19:04:14 mckusick 6 5
c update to support NFS (from Rick Macklem)
e
s 00011/00010/00055
d D 6.3 88/08/13 12:21:42 bostic 5 4
c add the -f flag, remove mention that the inode can be a regular file
e
s 00028/00053/00037
d D 6.2 88/08/05 14:49:05 bostic 4 3
c update for new abilities, general cleanup
e
s 00001/00001/00089
d D 6.1 85/04/27 13:36:01 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00001/00001/00089
d D 5.1 85/04/27 13:35:39 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00090/00000/00000
d D 4.1 85/04/27 13:35:24 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 9
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 9
I 9
D 18
.\" Copyright (c) 1980, 1989 The Regents of the University of California.
E 18
I 18
D 24
.\" Copyright (c) 1980, 1989, 1991 The Regents of the University of California.
E 18
.\" All rights reserved.
E 24
I 24
.\" Copyright (c) 1980, 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 24
E 9
.\"
I 9
D 17
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 17
I 17
D 18
.\" %sccs.include.redist.man%
E 18
I 18
.\" %sccs.include.redist.roff%
E 18
E 17
.\"
E 9
D 18
.\"	%W% (Berkeley) %G%
E 18
I 18
.\"     %W% (Berkeley) %G%
E 18
.\"
D 2
.TH MOUNT 8 "4/1/81"
E 2
I 2
D 3
.TH MOUNT 8  "4 February 1983"
E 3
I 3
D 18
.TH MOUNT 8 "%Q%"
E 3
E 2
.UC 4
.SH NAME
D 4
mount, umount \- mount and dismount file system
E 4
I 4
mount, umount \- mount and dismount file systems
E 4
.SH SYNOPSIS
D 4
.B /etc/mount
[ special name [
.B \-r
] ]
E 4
I 4
D 6
.nf
D 5
.B mount [-arw]
.B mount [-rw] special | node
.B mount [-rw] special node
E 5
I 5
.B mount [-afrw]
.B mount [-frw] special | node
.B mount [-frw] special node
E 6
I 6
.B mount
[
D 10
.B \-afrw
E 10
I 10
.B \-afrwu
I 14
] [
.B \-t
nfs | ufs | external_type
E 14
E 10
]
.br
.B mount
[
D 10
.B \-frw
E 10
I 10
.B \-frwu
E 10
]
special | node
.br
.B mount
[
D 10
.B \-frw
E 10
I 10
.B \-frwu
E 10
] [
.B \-t
D 8
.B nfs | ufs
E 8
I 8
D 9
nfs | ufs
E 9
I 9
nfs | ufs | external_type
E 9
E 8
] [
.B \-o
options
]
special node
.br
E 6
E 5
E 4
.PP
D 4
.B /etc/mount
.B \-a
.PP
.B /etc/umount
special
.PP
.B /etc/umount
.B \-a
E 4
I 4
D 6
.B umount [-a]
.B umount special | node
.fi
E 6
I 6
.B umount
[
D 14
.B \-a
E 14
I 14
.B \-af
E 14
I 11
] [
D 14
.B \-f
E 14
I 14
.B \-t
nfs | ufs | external_type
E 14
E 11
]
.br
.B umount
I 11
[
.B \-f
]
E 11
special | node
.br
E 6
E 4
.SH DESCRIPTION
.I Mount
D 4
announces to the system that a removable file system
is present on the device
.I special.
The file
.I name
must exist already; it
must be a directory (unless the root of the
mounted file system is not a directory).
It becomes the name of the newly mounted root.
The optional argument
.B \-r
indicates that the file system
is to be mounted read-only.
E 4
I 4
announces to the system that a removable file system is present on the
D 5
block device \fIspecial\fP.  The file \fInode\fP must exist already; it
must be a directory (unless the root of the mounted file system is not
a directory). It becomes the name of the newly mounted root. The optional
arguments \fI-r\fP and \fI-w\fP indicate that the file system is to be
mounted read-only or read-write, respectively.  If either \fIspecial\fP
or \fIfile\fP are not provided, the appropriate information is taken
from the \fIfstab\fP file.
E 5
I 5
D 6
block device \fIspecial\fP.  The file \fInode\fP must exist already and
E 6
I 6
block device \fIspecial\fP or the remote node ``rhost:path''. 
The file \fInode\fP must exist already and
E 6
it must be a directory.  It becomes the name of the newly mounted root.
The optional arguments \fI-r\fP and \fI-w\fP indicate that the file
D 10
system is to be mounted read-only or read-write, respectively.  If
either \fIspecial\fP or \fIfile\fP are not provided, the appropriate
E 10
I 10
system is to be mounted read-only or read-write, respectively.
If either \fIspecial\fP or \fIfile\fP are not provided, the appropriate
E 10
information is taken from the \fIfstab\fP file.  The \fI-f\fP option
causes everything to be done except for the actual system call; if it's
E 18
I 18
.Dd %Q%
.Dt MOUNT 8
.Os BSD 4
.Sh NAME
D 27
.Nm mount ,
.Nm umount
.Nd mount and dismount file systems
E 27
I 27
.Nm mount
.Nd mount file systems
E 27
.Sh SYNOPSIS
.Nm mount
D 28
.Op Fl afrwu
E 28
I 28
.Op Fl adfruvw
E 28
D 20
.Op Fl t Ar nfs | ufs | external_type
E 20
I 20
.Op Fl t Ar ufs | lfs | external_type
E 20
.Nm mount
D 28
.Op Fl frwu
E 28
I 28
.Op Fl dfruvw
E 28
D 20
.Ar special| node
E 20
I 20
.Ar special | node
E 20
.Nm mount
D 28
.Op Fl frwu
E 28
I 28
.Op Fl dfruvw
E 28
D 20
.Op Fl t Ar nfs | ufs | external_type
.Op | Ar external_type
E 20
I 20
D 29
.Op Fl t Ar ufs | lfs | external_type
E 29
E 20
.Op Fl o Ar options
I 29
.Op Fl t Ar ufs | lfs | external_type
E 29
.Ar special node
D 27
.Nm umount
D 26
.Op Fl af
E 26
I 26
.Fl a
.Op Fl f
.Op Fl h Ar host
E 26
D 20
.Op Fl t Ar nfs | ufs | external_type
E 20
I 20
.Op Fl t Ar ufs | lfs | external_type
E 20
.Nm umount
.Op Fl f
.Ar special | node
E 27
.Sh DESCRIPTION
The
.Nm mount
command
calls the
.Xr mount 2
system call to prepare and graft a
D 27
.Ar special
device or the remote node
(rhost:path)
on to the file system tree at the point
.Ar node.
E 27
I 27
.Ar "special device"
or the remote node (rhost:path) on to the file system tree at the point
.Ar node .
E 27
If either
.Ar special
or
.Ar node
D 27
are not provided, the appropriate
information is taken from the
E 27
I 27
are not provided, the appropriate information is taken from the
E 27
.Xr fstab 5
file.
.Pp
The system maintains a list of currently mounted file systems.
If no arguments are given to
.Nm mount,
this list is printed.
.Pp
D 27
Options available for the
.Nm mount
command:
E 27
I 27
The options are as follows:
E 27
.Bl -tag -width indent
I 32
.It Fl a
All the filesystems described in
.Xr fstab 5
are mounted.
Exceptions are those marked as ``noauto'' or are excluded by the
.Fl t
flag (see below).
E 32
D 29
.It Fl F
The standard mount options are parsed and
passed to external program via the
.Fl F
option
as a decimal number.
(See example below.)
E 29
D 21
.It Fl f
Causes everything to be done except for the actual system call; if it's
E 18
not obvious, this ``fakes'' mounting the file system.
E 21
I 21
.It Fl d
Causes everything to be done except for the actual system call.
E 21
I 6
D 9
The optional argument \fI-t\fP must be followed by \fBnfs\fP or
\fBufs\fP to indicate the file system type. The type \fBufs\fP is
the default.
The \fI-o\fP argument followed by \fIoptions\fP, which is a comma
separated string of any of the following list,
can be used to override the defaults for an nfs mount.
E 9
I 9
D 18
This option is useful in conjunction with the \fI-v\fP flag to
E 18
I 18
This option is useful in conjunction with the
.Fl v
flag to
E 18
determine what the
D 18
.I mount
E 18
I 18
.Nm mount
E 18
command is trying to do.
I 21
.It Fl f
Forces the revocation of write access when trying to downgrade
a filesystem mount status from read-write to read-only.
E 21
E 9
D 18
.PP
I 9
The optional argument \fI-t\fP can be used
to indicate the file system type.
The type \fBufs\fP is the default.
If the type is not one of the internally known types,
mount will attempt to execute a program in
D 12
.B /sbin
corresponding to the type name.
E 12
I 12
.B /sbin/mount_XXX
where \fBXXX\fP is replaced by the type name.
E 12
The standard mount options (see below) are parsed and
passed to external program via the \fI-F\fP option
as a decimal number.
Any additional options specific to the program can
be passed as a comma separated list;
these options are distinguished by starting with a \fI-\fP (dash).
Those options that take a value are specified
using the syntax -option=value.
For example, the mount command:
.br
	mount -t mfs -o nosuid,-N,-s=4000 /dev/dk0b /tmp
.br
causes mount to attempt to execute:
.br
D 12
	/sbin/mfs -F 8 -N -s 4000 /dev/dk0b /tmp
E 12
I 12
	/sbin/mount_mfs -F 8 -N -s 4000 /dev/dk0b /tmp
E 12
.PP
Options are specified by a \fI-o\fP argument
E 18
I 18
.It Fl o
Options are specified with a
.Fl o
D 29
flag
E 18
followed by a comma separated string of options.
The following options apply to any file system that is being mounted:
E 29
I 29
flag followed by a comma separated string of options.
The following options are available:
E 29
D 18
.IP "noexec" 12
E 18
I 18
.Bl -tag -width indent
I 29
D 30
.It asynchronous
E 30
I 30
.It async
E 30
All
.Tn I/O
to the file system should be done asynchronously.
This is a
.Em dangerous
flag to set,
and should not be used unless you are prepared to recreate the file
system should your system crash.
.It force
The same as
.Fl f ;
forces the revocation of write access when trying to downgrade
a filesystem mount status from read-write to read-only.
I 32
.It noauto
This filesystem should be skipped when mount is run with the
.Fl a
flag.
E 32
.It nodev
Do not interpret character or block special devices on the file system.
This option is useful for a server that has file systems containing
special devices for architectures other than its own.
E 29
.It noexec
E 18
Do not allow execution of any binaries on the mounted file system.
D 26
This options is useful for a server that has file systems containing
E 26
I 26
This option is useful for a server that has file systems containing
E 26
binaries for architectures other than its own.
D 18
.IP "nosuid" 12
E 18
I 18
.It nosuid
E 18
Do not allow set-user-identifier or set-group-identifier bits to take effect.
D 18
.IP "nodev" 12
E 18
I 18
D 29
.It nodev
E 18
Do not interpret character or block special devices on the file system.
D 26
This options is useful for a server that has file systems containing
E 26
I 26
This option is useful for a server that has file systems containing
E 26
special devices for architectures other than its own.
E 29
I 29
.It rdonly
The same as
D 31
.Fl f ;
E 31
I 31
.Fl r ;
E 31
mount the file system read-only (even the super-user may not write it).
E 29
D 18
.IP "synchronous" 12
E 18
I 18
D 30
.It synchronous
E 30
I 30
.It sync
E 30
E 18
D 19
All I/O to the file system should be done synchronously.
E 19
I 19
All
.Tn I/O
to the file system should be done synchronously.
I 29
.It update
The same as
.Fl u ;
indicate that the status of an already mounted file system should be changed.
E 29
I 22
.It union
Causes the namespace at the mount point to appear as the union
of the mounted filesystem root and the existing directory.
Lookups will be done in the mounted filesystem first.
If those operations fail due to a non-existent file the underlying
directory is then accessed.
All creates are done in the mounted filesystem.
E 22
E 19
D 18
.PP
I 10
The \fI-u\fP flag indicates that the status of an already mounted file
E 18
I 18
.El
I 29
.Pp
Any additional options specific to a filesystem type that is not
one of the internally known types (see the
.Fl t
option) may be passed as a comma separated list; these options are
distinguished by a leading
.Dq \&-
(dash).
Options that take a value are specified using the syntax -option=value.
For example, the mount command:
.Bd -literal -offset indent
mount -t mfs -o nosuid,-N,-s=4000 /dev/dk0b /tmp
.Ed
.Pp
causes
.Nm mount
to execute the equivalent of:
.Bd -literal -offset indent
/sbin/mount_mfs -o nosuid -N -s 4000 /dev/dk0b /tmp
.Ed
E 29
.It Fl r
D 29
The file system object is to be mounted read-only.
E 29
I 29
The file system is to be mounted read-only.
Mount the file system read-only (even the super-user may not write it).
The same as the
.Dq rdonly
argument to the
.Fl o
option.
E 29
D 20
.It Fl t Ar "nfs \\*(Ba ufs \\*(Ba external type"
E 20
I 20
.It Fl t Ar "ufs \\*(Ba lfs \\*(Ba external type"
E 20
The argument following the
.Fl t
is used to indicate the file system type.
The type
.Ar ufs
is the default.
I 20
The \fI-t\fP option can be used
to indicate that the actions should only be taken on
filesystems of the specified type.
More than one type may be specified in a comma separated list.
D 27
The list of filesystem types can be prefixed with ``no'' to
specify the filesystem types on which no action should be taken.
E 27
I 27
The list of filesystem types can be prefixed with
.Dq no
to specify the filesystem types for which action should
.Em not
be taken.
E 27
E 20
For example, the
.Nm mount
command:
.Bd -literal -offset indent
mount -a -t nonfs,mfs
.Ed
.Pp
mounts all filesystems except those of type
.Tn NFS
and
.Tn MFS .
.Pp
If the type is not one of the internally known types,
mount will attempt to execute a program in
.Pa /sbin/mount_ Ns Em XXX
where
.Em XXX
is replaced by the type name.
I 20
For example, nfs filesystems are mounted by the program
.Pa /sbin/mount_nfs .
E 20
.It Fl u
The
.Fl u
flag indicates that the status of an already mounted file
E 18
system should be changed.
D 18
Any of the options above may be changed;
E 18
I 18
Any of the options discussed above (the
.Fl o
option)
may be changed;
E 18
D 21
also a file system can be changed from read-only to read-write.
E 21
I 21
also a file system can be changed from read-only to read-write
or vice versa.
An attempt to change from read-write to read-only will fail if any
files on the filesystem are currently open for writing unless the
.Fl f
flag is also specified.
E 21
The set of options is determined by first extracting the options
D 18
for the file system from the \fIfstab\fP table,
then applying any options specified by the \fI-o\fP argument,
and finally applying the \fI-r\fP or \fI-w\fP option.
.PP
E 18
I 18
for the file system from the
.Xr fstab
table,
then applying any options specified by the
.Fl o
argument,
and finally applying the
.Fl r
or
.Fl w
option.
.It Fl v
Verbose mode.
.It Fl w
The file system object is to be read and write.
D 29
.It Fl
Any additional options specific to the program can
be passed as a comma separated list;
these options are distinguished by starting with a
.Fl
(dash).
.El
.Pp
Those options that take a value are specified
using the syntax -option=value.
For example, the mount command:
.Bd -literal -offset indent
mount -t mfs -o nosuid,-N,-s=4000 /dev/dk0b /tmp
.Ed
.Pp
causes mount to attempt to execute:
.Bd -literal -offset indent
/sbin/mount_mfs -F 8 -N -s 4000 /dev/dk0b /tmp
.Ed
E 29
.Pp
E 18
E 10
D 20
The following list can be used to override
the defaults for an nfs mount:
E 9
D 8
.nf
E 8
D 18
.IP "hard" 12
D 8
- I/O system calls will retry until the server responds (default)
E 8
I 8
I/O system calls will retry until the server responds (default)
E 8
.IP "soft" 12
D 8
- I/O system calls will fail and return errno after \fIretrans\fP request
E 8
I 8
I/O system calls will fail and return errno after \fIretrans\fP request
E 18
I 18
.Bl -tag -width indent
.It hard
.Tn I/O
system calls will retry until the server responds (default)
.It soft
.Tn I/O
system calls will fail and return errno after
.Em retrans
request
E 18
E 8
retransmissions
I 16
D 18
.IP "spongy" 12
E 18
I 18
.It spongy
E 18
Soft semantics for the stat, lookup, fsstat, readlink and readdir
filesystem operations and hard semantics for the others.
This option is meant to be similar to hard,
except that processes will not be hung forever when
they trip over mount points to dead servers.
E 16
D 18
.IP "bg" 12
E 18
I 18
.It bg
E 18
D 8
- If the first mount request times out, do retries in background
E 8
I 8
If the first mount request times out, do retries in background
E 8
D 18
.IP "intr" 12
D 8
- I/O system calls can be interrupted.
E 8
I 8
I/O system calls can be interrupted.
I 15
.IP "noconn" 12
E 18
I 18
.It intr
.Tn I/O
system calls can be interrupted.
.It noconn
E 18
Do not connect the socket.
D 18
Used for UDP servers that send replies from a
E 18
I 18
Used for
.Tn UDP
servers that send replies from a
E 18
socket other than the nfs server socket.
D 18
.IP "tcp" 12
Use TCP transport instead of UDP.
E 15
E 8
.IP "rsize=#" 12
D 8
- Set read size to \fI#\fP bytes.
E 8
I 8
Set read size to \fI#\fP bytes.
E 8
.IP "wsize=#" 12
D 8
- Set write size to \fI#\fP bytes.
E 8
I 8
Set write size to \fI#\fP bytes.
E 8
.IP "retry=#" 12
D 8
- Set mount retry count to \fI#\fP.
E 8
I 8
Set mount retry count to \fI#\fP.
E 8
.IP "retrans=#" 12
D 8
- Set retransmission count for nfs rpc's to \fI#\fP.
E 8
I 8
Set retransmission count for nfs rpc's to \fI#\fP.
E 8
.IP "timeo=#" 12
D 8
- Set initial nfs timeout to \fI#\fP in 0.1 sec intervals.
E 8
I 8
Set initial nfs timeout to \fI#\fP in 0.1 sec intervals.
E 8
.fi
E 6
E 5
E 4
.PP
.I Umount
D 4
announces to the system that the removable file system previously
mounted on device
.I special
is to be removed.
E 4
I 4
announces to the system that the removable file system \fInode\fP
or whatever removable file system was previously mounted on device
\fIspecial\fP should be removed.
I 11
If the \fI-f\fP option is specified for
.IR umount ,
the file system is forcibly unmounted.
E 18
I 18
.It tcp
Use
.Tn TCP
transport instead of
.Tn UDP .
.It rsize=#
Set read size to
.Ar #
bytes.
.It wsize=#
Set write size to
.Ar #
bytes.
.It retry=#
Set mount retry count to
.Ar # .
.It retrans=#
Set retransmission count for nfs rpc's to
.Ar # .
.It timeo=#
Set initial nfs timeout to
.Ar #
in 0.1 sec intervals.
.El
E 20
I 20
The options specific to NFS filesystems are described in the
.Xr mount_nfs 8
manual page.
E 20
D 27
.Pp
.Nm Umount
removes the
.Ar special
D 20
device
grafted
at point
E 20
I 20
device grafted at point
E 20
.Ar node
from file system tree.
.Pp
Options for the
.Nm umount
command:
.Bl -tag -width indent
I 26
.It Fl a
All of the file systems described in
.Xr fstab 5
are unmounted.
E 26
.It Fl f
The file system is forcibly unmounted.
E 18
Active special devices continue to work,
but all other files return errors if further accesses are attempted.
The root file system cannot be forcibly unmounted.
E 11
E 4
D 18
.PP
D 4
If the
.B \-a
option is present for either
E 4
I 4
If the \fI-a\fP option is present for either
E 4
.I mount
or
.I umount,
all of the file systems described in
D 4
.I /etc/fstab
are attempted to be mounted or unmounted.
In this case,
.I special
and
.I name
are taken from
.I /etc/fstab.
The
.I special
file name from
.I /etc/fstab
is the block special name.
E 4
I 4
.I fstab
are mounted or unmounted.
I 14
The optional argument \fI-t\fP can be used
to indicate that the actions should only be taken on
E 18
I 18
D 26
.It Fl a
All of the file systems described in
D 20
.Xr fstab
E 20
I 20
.Xr fstab 5
E 20
are unmounted.
.It Fl t
E 26
I 26
.It Fl h Ar host
Only filesystems mounted from the specified host will be
unmounted.  This option is implies the
.Fl a
option and, unless otherwise specified with the
.Fl t
option, will only unmount NFS filesystems.
.It Fl t Ar "ufs \\*(Ba lfs \\*(Ba external type"
E 26
Is used to indicate the actions should only be taken on
E 18
filesystems of the specified type.
More than one type may be specified in a comma separated list.
The list of filesystem types can be prefixed with ``no'' to
specify the filesystem types on which no action should be taken.
D 18
For example, the mount command:
.br
	mount -a -t nonfs,mfs
.br
mounts all filesystems except those of type NFS and MFS.
E 14
E 4
.PP
D 7
These commands
D 4
maintain a table of mounted devices in
E 4
I 4
maintain a list of currently mounted file systems in
E 4
.I /etc/mtab.
E 7
I 7
D 9
The system maintains a list of currently mounted filesystems.
E 9
I 9
The system maintains a list of currently mounted file systems.
E 9
E 7
If invoked without an argument,
.I mount
D 4
prints the table.
E 4
I 4
prints the list.
I 14
The optional argument \fI-t\fP can be used
to indicate that only filesystems of the specified type
should be listed.
More than one type may be specified in a comma separated list.
The list of filesystem types can be prefixed with ``no'' to
indicate the types of filesystems to be excluded from the listing.
E 14
E 4
.PP
Physically write-protected and magnetic tape file
systems must be mounted read-only
or errors will occur when access times are updated,
whether or not any explicit write is attempted.
.SH FILES
D 4
/etc/mtab	mount table
E 4
I 4
D 7
/etc/mtab		mount table
E 4
.br
E 7
/etc/fstab	file system table
.SH "SEE ALSO"
D 4
mount(2),
mtab(5), fstab(5)
E 4
I 4
D 7
mount(2), fstab(5), mtab(5)
E 7
I 7
D 13
mount(2), fstab(5)
E 13
I 13
mount(2), unmount(2), fstab(5)
E 13
E 7
E 4
.SH BUGS
D 4
Mounting file systems full of garbage will crash the system.
.br
E 4
I 4
Mounting garbaged file systems will crash the system.
.PP
E 4
Mounting a root directory on a non-directory
D 10
makes some apparently good pathnames invalid.
E 10
I 10
makes some apparently good path names invalid.
E 18
I 18
(See example above for the
.Nm mount
command.)
.El
E 27
.Sh FILES
.Bl -tag -width /etc/fstab -compact
.It Pa /etc/fstab
file system table
.El
.Sh SEE ALSO
.Xr mount 2 ,
D 27
.Xr unmount 2 ,
.Xr fstab 5
E 27
I 27
.Xr fstab 5 ,
.Xr mount_cd9660 8 ,
.Xr mount_fdesc 8 ,
.Xr mount_kernfs 8 ,
.Xr mount_lfs 8 ,
.Xr mount_lofs 8 ,
.Xr mount_mfs 8 ,
.Xr mount_nfs 8 ,
.Xr mount_null 8 ,
.Xr mount_portal 8 ,
I 28
.Xr mount_procfs 8 ,
E 28
.Xr mount_umap 8 ,
I 28
.Xr mount_union 8 ,
E 28
.Xr umount 8
E 27
.Sh BUGS
It is possible for a corrupted file system to cause a crash.
.Sh HISTORY
A
D 27
.Nm
E 27
I 27
.Nm mount
E 27
command appeared in
.At v6 .
E 18
E 10
E 1
