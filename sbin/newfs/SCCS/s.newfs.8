h46529
s 00017/00003/00255
d D 8.6 95/05/03 23:50:41 mckusick 20 19
c add -T and -n
e
s 00001/00001/00257
d D 8.5 94/07/24 23:27:12 mckusick 19 18
c mfs should be mount_mfs
e
s 00002/00000/00256
d D 8.4 94/06/01 20:43:20 ah 18 17
c page breaks for 4.4BSD manuals
e
s 00116/00082/00140
d D 8.3 94/03/27 13:47:33 bostic 17 16
c Jan-Simon Pendry's and my new mount code
e
s 00003/00003/00219
d D 8.2 93/12/11 23:43:15 mckusick 16 15
c copyediting for Usenix manuals
e
s 00002/00002/00220
d D 8.1 93/06/05 11:06:22 bostic 15 14
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00004/00000/00218
d D 6.13 93/05/05 17:04:17 mckusick 14 13
c add -O option to build old format filesystems
e
s 00001/00000/00217
d D 6.12 92/08/20 14:16:26 bostic 13 12
c add dumpfs.8 to see also section
e
s 00008/00008/00209
d D 6.11 92/05/28 00:01:37 mckusick 12 11
c use mount_mfs instead of just mfs
e
s 00111/00116/00106
d D 6.10 91/03/16 17:07:50 cael 11 10
c macro and text revision (-mdoc version 3)
e
s 00003/00013/00219
d D 6.9 90/06/24 21:44:12 trent 10 9
c new copyright & pathnames (mfs and newfs)
e
s 00050/00004/00182
d D 6.8 89/10/18 14:35:04 mckusick 9 8
c add information about the memory based file system
e
s 00014/00003/00172
d D 6.7 89/10/11 16:49:42 mckusick 8 7
c AT&T free
e
s 00036/00004/00139
d D 6.6 87/10/01 13:01:13 mckusick 7 6
c add remainder of tunable parmeters (-a, -d, -e); 
c rename old -a to -x, old -d to -u so above can have same values as `tunefs'
e
s 00007/00003/00136
d D 6.5 87/01/14 19:50:46 mckusick 6 5
c spelling diction
e
s 00075/00058/00064
d D 6.4 87/01/14 16:47:22 mckusick 5 4
c update to reflect options brought on by disk labels
e
s 00001/00001/00121
d D 6.3 86/05/21 22:10:27 mckusick 4 3
c update citations
e
s 00019/00003/00103
d D 6.2 85/09/12 00:02:19 mckusick 3 2
c allow specification of optimization preference
e
s 00001/00001/00105
d D 6.1 85/04/27 15:36:54 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00106/00000/00000
d D 5.1 85/04/27 15:36:34 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 6
.\" Copyright (c) 1983 Regents of the University of California.
E 6
I 6
D 8
.\" Copyright (c) 1983, 1987 Regents of the University of California.
E 6
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 8
I 8
D 11
.\" Copyright (c) 1983, 1987 The Regents of the University of California.
E 11
I 11
D 15
.\" Copyright (c) 1983, 1987, 1991 The Regents of the University of California.
E 11
.\" All rights reserved.
E 15
I 15
D 17
.\" Copyright (c) 1983, 1987, 1991, 1993
E 17
I 17
.\" Copyright (c) 1983, 1987, 1991, 1993, 1994
E 17
.\"	The Regents of the University of California.  All rights reserved.
E 15
.\"
D 10
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 10
I 10
.\" %sccs.include.redist.man%
E 10
E 8
.\"
D 11
.\"	%W% (Berkeley) %G%
E 11
I 11
.\"     %W% (Berkeley) %G%
E 11
.\"
D 2
.TH NEWFS 8 "20 February 1983"
E 2
I 2
D 11
.TH NEWFS 8 "%Q%"
E 2
.UC 5
.SH NAME
D 9
newfs \- construct a new file system
E 9
I 9
newfs, mfs \- construct a new file system
E 9
.SH SYNOPSIS
D 9
.B /etc/newfs
E 9
I 9
D 10
.B /sbin/newfs
E 10
I 10
.B newfs
E 10
E 9
[
I 3
.B \-N
] [
E 3
D 5
.B \-v
] [
.B \-n
] [
E 5
D 9
.B mkfs-options
E 9
I 9
.B newfs-options
E 9
]
D 5
.B special disk-type
E 5
I 5
.B special
I 9
.br
D 10
.B /sbin/mfs
E 10
I 10
.B mfs
E 10
[
.B \-F
mount_flags
] [
.B newfs-options
]
.B special node
E 9
E 5
.SH DESCRIPTION
.I Newfs
E 11
I 11
.Dd %Q%
.Dt NEWFS 8
.Os BSD 4.2
.Sh NAME
.Nm newfs ,
D 19
.Nm mfs
E 19
I 19
.Nm mount_mfs
E 19
.Nd construct a new file system
.Sh SYNOPSIS
.Nm newfs
D 17
.Op Fl N
.Op Ar newfs-options
E 17
I 17
.Op Fl NO
.Op Fl S Ar sector-size
D 20
.Op Fl a maxcontig
E 20
I 20
.Op Fl T Ar disktype
.Op Fl a Ar maxcontig
E 20
.Op Fl b Ar block-size
.Op Fl c Ar cylinders
.Op Fl d Ar rotdelay
.Op Fl e Ar maxbpg
.Op Fl f Ar frag-size
.Op Fl i Ar bytes
.Op Fl k Ar skew
.Op Fl l Ar interleave
.Op Fl m Ar free space
I 20
.Op Fl n Ar rotational positions
E 20
.Op Fl o Ar optimization
.Op Fl p Ar sectors
.Op Fl r Ar revolutions
.Op Fl s Ar size
.Op Fl t Ar tracks
.Op Fl u Ar sectors
.Op Fl x Ar sectors
E 17
.Ar special
D 12
.Nm mfs
E 12
I 12
.Nm mount_mfs
E 12
D 17
.Op Fl F Ar mount_flags
.Op Ar newfs-options
E 17
I 17
.Op Fl N
D 20
.Op Fl a maxcontig
E 20
I 20
.Op Fl T Ar disktype
.Op Fl a Ar maxcontig
E 20
.Op Fl b Ar block-size
.Op Fl c Ar cylinders
.Op Fl d Ar rotdelay
.Op Fl e Ar maxbpg
.Op Fl f Ar frag-size
.Op Fl i Ar bytes
.Op Fl m Ar free space
I 20
.Op Fl n Ar rotational positions
E 20
.Op Fl o Ar options
.Op Fl s Ar size
E 17
.Ar special node
.Sh DESCRIPTION
.Nm Newfs
E 11
D 5
is a ``friendly'' front-end to the
E 5
I 5
replaces the more obtuse
E 5
D 11
.IR mkfs (8)
E 11
I 11
.Xr mkfs 8
E 11
program.
I 5
Before running 
D 9
.IR newfs ,
E 9
I 9
D 11
.I newfs
E 11
I 11
.Nm newfs
E 11
or
D 11
.IR mfs ,
E 11
I 11
D 12
.Nm mfs ,
E 12
I 12
.Nm mount_mfs ,
E 12
E 11
E 9
the disk must be labeled using 
D 11
.IR disklabel (8).
E 5
.I Newfs
E 11
I 11
.Xr disklabel 8 .
.Nm Newfs
E 11
D 5
will look up the type of disk a file system is
being created on in the disk description
file
.IR /etc/disktab ,
calculate the appropriate
parameters to use in calling
.IR mkfs ,
then build the file system by forking 
.I mkfs 
and, if the file system is a root partition,
install the necessary bootstrap programs
in the initial 8 sectors of the device.
E 5
I 5
builds a file system on the specified special device
basing its defaults on the information in the disk label.
Typically the defaults are reasonable, however
D 11
.I newfs
E 11
I 11
.Nm newfs
E 11
has numerous options to allow the defaults to be selectively overridden.
E 5
D 11
The
D 5
.B \-n
option prevents the 
bootstrap programs from being installed.
I 3
The
E 5
.B \-N
option causes the file system parameters to be printed out
D 6
without actually creating the file system.
E 6
I 6
without really creating the file system.
E 6
E 3
.PP
I 9
.I Mfs
E 11
I 11
.Pp
D 12
.Nm Mfs
E 12
I 12
.Nm Mount_mfs
E 12
E 11
is used to build a file system in virtual memory and then mount it
on a specified node.
D 11
.I Mfs
E 11
I 11
D 12
.Nm Mfs
E 12
I 12
.Nm Mount_mfs
E 12
E 11
exits and the contents of the file system are lost
when the file system is unmounted.
If
D 11
.I mfs
E 11
I 11
D 12
.Nm mfs
E 12
I 12
.Nm mount_mfs
E 12
E 11
is sent a signal while running,
for example during system shutdown,
it will attempt to unmount its
corresponding file system.
The parameters to
D 11
.I mfs
E 11
I 11
D 12
.Nm mfs
E 12
I 12
.Nm mount_mfs
E 12
E 11
are the same as those to
D 11
.IR newfs .
E 11
I 11
.Nm newfs .
E 11
D 20
The special file is only used to read the disk label which provides
E 20
I 20
If the
.Fl T
flag is specified (see below), the special file is unused.
Otherwise, it is only used to read the disk label which provides
E 20
a set of configuration parameters for the memory based file system.
The special file is typically that of the primary swap area,
since that is where the file system will be backed up when
free memory gets low and the memory supporting
the file system has to be paged.
D 11
.PP
E 11
I 11
.Pp
E 11
E 9
D 5
If the 
.B \-v
option is supplied, 
.I newfs
will print out its actions, including
the parameters passed to
.IR mkfs .
.PP
Options which may be used to override default
parameters passed to
.I mkfs
are:
E 5
I 5
The following options define the general layout policies.
E 5
D 11
.TP 10
D 5
.B \-s size
The size of the file system in sectors.
.TP 10
E 5
.B \-b block-size
E 11
I 11
.Bl -tag -width Fl
.It Fl N
Causes the file system parameters to be printed out
without really creating the file system.
I 14
.It Fl O
D 16
Creates an 4.3BSD format filesystem.
E 16
I 16
Creates a 4.3BSD format filesystem.
E 16
This options is primarily used to build root filesystems
that can be understood by older boot ROMs.
I 20
.It Fl T
Uses information for the specified disk from
.Pa /etc/disktab
instead of trying to get the information from a disklabel.
E 20
E 14
D 17
.It Fl b Ar block-size
E 11
The block size of the file system in bytes.  
D 11
.TP 10
.B \-f frag-size
E 11
I 11
.It Fl f Ar frag-size
E 11
The fragment size of the file system in bytes.
D 11
.TP 10
D 5
.B \-t #tracks/cylinder
.TP 10
.B \-c #cylinders/group
The number of cylinders per cylinder group in a file system.
The default value used is 16.
.TP 10
E 5
.B \-m free space %
E 11
I 11
.It Fl m Ar free space \&%
E 11
The percentage of space reserved from normal users; the minimum
D 6
free space threshhold.  The default value used is 10%.
E 6
I 6
free space threshold.  The default value used is 10%.
I 7
See
D 11
.IR tunefs (8)
E 11
I 11
.Xr tunefs 8
E 11
for more details on how to set this option.
E 7
E 6
D 11
.TP 10
I 3
.B \-o optimization preference (``space'' or ``time'')
E 11
I 11
.It Fl o Ar optimization\ preference
.Pq ``space'' or ``time''
E 11
The file system can either be instructed to try to minimize the time spent
allocating blocks, or to try to minimize the space fragmentation on the disk.
If the value of minfree (see above) is less than 10%,
the default is to optimize for space;
D 16
if the value of minfree greater than or equal to 10%,
E 16
I 16
if the value of minfree is greater than or equal to 10%,
E 16
the default is to optimize for time.
I 7
See
D 11
.IR tunefs (8)
E 11
I 11
.Xr tunefs 8
E 11
for more details on how to set this option.
E 17
E 7
D 11
.TP 10
I 7
.B \-a maxcontig
E 11
I 11
.It Fl a Ar maxcontig
E 11
D 17
This specifies the maximum number of contiguous blocks that will
D 11
be laid out before forcing a rotational delay (see \-d below).
E 11
I 11
be laid out before forcing a rotational delay (see
E 17
I 17
This specifies the maximum number of contiguous blocks that will be
laid out before forcing a rotational delay (see the
E 17
.Fl d
D 17
below).
E 17
I 17
option).
E 17
E 11
The default value is one.
See
D 11
.IR tunefs (8)
E 11
I 11
.Xr tunefs 8
E 11
for more details on how to set this option.
I 17
.It Fl b Ar block-size
The block size of the file system, in bytes.  
.It Fl c Ar #cylinders/group
The number of cylinders per cylinder group in a file system.
The default value is 16.
E 17
D 11
.TP 10
.B \-d rotdelay
E 11
I 11
.It Fl d Ar rotdelay
E 11
D 17
This specifies the expected time (in milliseconds)
to service a transfer completion
interrupt and initiate a new transfer on the same disk.
E 17
I 17
This specifies the expected time (in milliseconds) to service a transfer
completion interrupt and initiate a new transfer on the same disk.
E 17
The default is 4 milliseconds.
See
D 11
.IR tunefs (8)
E 11
I 11
.Xr tunefs 8
E 11
for more details on how to set this option.
I 18
.ne 1i
E 18
D 11
.TP 10
.B \-e maxbpg
E 11
I 11
.It Fl e Ar maxbpg
E 11
This indicates the maximum number of blocks any single file can
allocate out of a cylinder group before it is forced to begin
allocating blocks from another cylinder group.
The default is about one quarter of the total blocks in a cylinder group.
See
D 11
.IR tunefs (8)
E 11
I 11
.Xr tunefs 8
E 11
for more details on how to set this option.
I 17
.It Fl f Ar frag-size
The fragment size of the file system in bytes.
E 17
D 11
.TP 10
E 7
E 3
D 5
.B \-r revolutions/minute
The speed of the disk in revolutions per minute (normally 3600).
.TP 10
.B \-S sector-size
The size of a sector in bytes (almost never anything but 512).
.TP 10
E 5
.B \-i number of bytes per inode
E 11
I 11
.It Fl i Ar number of bytes per inode
E 11
This specifies the density of inodes in the file system.
The default is to create an inode for each 2048 bytes of data space.
If fewer inodes are desired, a larger number should be used;
to create more inodes a smaller number should be given.
D 5
.SH FILES
/etc/disktab	for disk geometry and file system partition information 
.br
/etc/mkfs	to actually build the file system
.br
/usr/mdec	for boot strapping programs
E 5
I 5
D 11
.TP 10
.B \-c #cylinders/group
E 11
I 11
D 17
.It Fl c Ar #cylinders/group
E 11
The number of cylinders per cylinder group in a file system.
The default value used is 16.
E 17
I 17
.It Fl m Ar free space \&%
The percentage of space reserved from normal users; the minimum free
space threshold.
The default value used is 10%.
See
.Xr tunefs 8
for more details on how to set this option.
I 20
.It Fl n Ar rotational\ positions
Determines how many rotational time slots there are in
one revolution of the disk.
E 20
.It Fl o Ar optimization\ preference
.Pq ``space'' or ``time''
The file system can either be instructed to try to minimize the time spent
allocating blocks, or to try to minimize the space fragmentation on the disk.
If the value of minfree (see above) is less than 10%,
the default is to optimize for space;
if the value of minfree is greater than or equal to 10%,
the default is to optimize for time.
See
.Xr tunefs 8
for more details on how to set this option.
E 17
D 11
.TP 10
.B \-s size
E 11
I 11
.It Fl s Ar size
E 11
The size of the file system in sectors.
I 17
.El
E 17
D 11
.PP
E 11
I 11
.Pp
E 11
The following options override the standard sizes for the disk geometry. 
Their default values are taken from the disk label.
Changing these defaults is useful only when using
D 11
.I newfs
E 11
I 11
.Nm newfs
E 11
D 17
to build a file system whose raw image will eventually be used
on a different type of disk than the one on which it is initially
created (for example on a write-once disk).
I 6
Note that changing any of these values from their
defaults will make it impossible for 
E 17
I 17
to build a file system whose raw image will eventually be used on a
different type of disk than the one on which it is initially created
(for example on a write-once disk).
Note that changing any of these values from their defaults will make
it impossible for 
E 17
D 11
.I fsck
E 11
I 11
.Xr fsck
E 11
D 16
to find the alternate superblocks if the standard super block is lost.
E 16
I 16
to find the alternate superblocks if the standard superblock is lost.
E 16
E 6
D 11
.TP 10
.B \-r revolutions/minute
E 11
I 11
D 17
.It Fl r Ar revolutions/minute
E 11
The speed of the disk in revolutions per minute.
E 17
I 17
.Bl -tag -width Fl
E 17
D 11
.TP 10
.B \-S sector-size
E 11
I 11
.It Fl S Ar sector-size
E 11
The size of a sector in bytes (almost never anything but 512).
D 11
.TP 10
D 7
.B \-d sectors/track
E 7
I 7
.B \-u sectors/track
E 7
The number of sectors/track available for data
allocation by the file system.
This does not include sectors reserved at the end of each track for
bad block replacement (see \fB\-p\fP below).
.TP 10
.B \-t #tracks/cylinder
E 11
I 11
D 17
.It Fl u Ar sectors/track
The number of sectors per track available for data
allocation by the file system.  This does not
include sectors reserved at the end of each track
for bad block replacement (see
.Fl p
below).
.It Fl t Ar #tracks/cylinder
E 11
The number of tracks/cylinder available for data
allocation by the file system.
E 17
I 17
.It Fl k Ar sector \&0 skew , per track
Used to describe perturbations in the media format to compensate for
a slow controller.
Track skew is the offset of sector 0 on track N relative to sector 0
on track N-1 on the same cylinder.
.It Fl l Ar hardware sector interleave
Used to describe perturbations in the media format to compensate for
a slow controller.
Interleave is physical sector interleave on each track,
specified as the denominator of the ratio:
.Dl sectors read/sectors passed over
Thus an interleave of 1/1 implies contiguous layout, while 1/2 implies
logical sector 0 is separated by one sector from logical sector 1.
E 17
D 11
.TP 10
.B \-p spare sectors per track
E 11
I 11
.It Fl p Ar spare sectors per track
E 11
D 17
Spare sectors (bad sector replacements) are physical sectors
that occupy space at the end of each track.
E 17
I 17
Spare sectors (bad sector replacements) are physical sectors that occupy
space at the end of each track.
E 17
D 7
They are not counted as part of the sectors/track (\fB\-d\fP)
E 7
I 7
D 11
They are not counted as part of the sectors/track (\fB\-u\fP)
E 11
I 11
They are not counted as part of the sectors/track
.Pq Fl u
E 11
E 7
since they are not available to the file system for data allocation.
I 17
.It Fl r Ar revolutions/minute
The speed of the disk in revolutions per minute.
I 18
.ne 1i
E 18
.It Fl t Ar #tracks/cylinder
The number of tracks/cylinder available for data allocation by the file
system.
.It Fl u Ar sectors/track
The number of sectors per track available for data allocation by the file
system.
This does not include sectors reserved at the end of each track for bad
block replacement (see the
.Fl p
option.)
E 17
D 11
.TP 10
D 7
.B \-a spare sectors per cylinder
E 7
I 7
.B \-x spare sectors per cylinder
E 11
I 11
.It Fl x Ar spare sectors per cylinder
E 11
E 7
D 17
Spare sectors (bad sector replacements) are physical sectors
that occupy space at the end of the last track in the cylinder.
E 17
I 17
Spare sectors (bad sector replacements) are physical sectors that occupy
space at the end of the last track in the cylinder.
E 17
D 7
They are deducted from the sectors/track (\fB\-d\fP)
E 7
I 7
D 11
They are deducted from the sectors/track (\fB\-u\fP)
E 11
I 11
They are deducted from the sectors/track
.Pq Fl u
E 11
E 7
D 17
of the last track of each cylinder
since they are not available to the file system for data allocation.
D 11
.TP 10
.B \-l hardware sector interleave
E 11
I 11
.It Fl l Ar hardware sector interleave
E 11
Used to describe perturbations in the media format to
compensate for a slow controller.
Interleave is physical sector interleave on each track,
specified as the denominator of the ratio:
D 11
.nf
	sectors read / sectors passed over
.fi
E 11
I 11
.Dl sectors read/sectors passed over
E 11
Thus an interleave of 1/1 implies contiguous layout, while 1/2
implies logical sector 0 is separated by one sector from logical
sector 1.
D 11
.TP 10
.B \-k sector 0 skew, per track
E 11
I 11
.It Fl k Ar sector \&0 skew , per track
E 11
Used to describe perturbations in the media format to
compensate for a slow controller.
Track skew is the offset of sector 0 on track N
relative to sector 0 on track N-1 on the same cylinder.
I 9
D 11
.PP
E 11
I 11
.Pp
E 17
I 17
of the last track of each cylinder since they are not available to the file
system for data allocation.
E 17
.El
E 11
D 17
The following option applies only to
D 11
.IR mfs .
.TP 10
.B \-F mount flags
E 11
I 11
D 12
.Nm mfs .
E 12
I 12
.Nm mount_mfs .
E 12
.Bl -tag -width Fl
.It Fl F Ar mount flags
E 11
Used to pass in a decimal numeric value to be passed
as mount flags when running as a memory based file system.
This option is primarily intended for use when
E 17
I 17
.Pp
The options to the
E 17
D 11
.I mfs
E 11
I 11
D 12
.Nm mfs
E 12
I 12
.Nm mount_mfs
E 12
E 11
D 17
is started by the
E 17
I 17
command are as described for the
.Nm newfs
command, except for the
.Fl o
option.
.Pp
That option is as follows:
.Bl -tag -width indent
.It Fl o
Options are specified with a
.Fl o
flag followed by a comma separated string of options.
See the
E 17
D 11
.IR mount (8)
E 11
I 11
.Xr mount 8
E 11
D 17
command.
E 17
I 17
man page for possible options and their meanings.
E 17
E 9
E 5
D 11
.SH "SEE ALSO"
disktab(5),
fs(5),
I 5
disklabel(8),
E 5
diskpart(8),
fsck(8),
format(8),
D 5
mkfs(8),
E 5
tunefs(8)
.PP
D 3
McKusick, Joy, Leffler; "A Fast File System for Unix",
Computer Systems Research Group, Dept of EECS, Berkeley, CA 94720;
TR #7, September 1982.
E 3
I 3
M. McKusick, W. Joy, S. Leffler, R. Fabry,
``A Fast File System for UNIX'',
\fIACM Transactions on Computer Systems 2\fP, 3.
pp 181-197, August 1984.
D 4
(reprinted in the System Manager's Manual and in Volume 2c)
E 4
I 4
(reprinted in the System Manager's Manual, SMM:14)
E 11
I 11
.El
.Sh SEE ALSO
.Xr disktab 5 ,
.Xr fs 5 ,
I 13
.Xr dumpfs 8 ,
E 13
.Xr disklabel 8 ,
.Xr diskpart 8 ,
.Xr fsck 8 ,
.Xr format 8 ,
I 17
.Xr mount 8 ,
E 17
.Xr tunefs 8
.Rs
.%A M. McKusick
.%A W. Joy
.%A S. Leffler
.%A R. Fabry
.%T A Fast File System for UNIX ,
.%J ACM Transactions on Computer Systems 2
.%V 3
.%P pp 181-197
.%D August 1984
.%O (reprinted in the BSD System Manager's Manual)
.Re
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.2 .
E 11
E 4
E 3
D 5
.SH BUGS
Should figure out the type of the disk without the user's help.
E 5
E 1
