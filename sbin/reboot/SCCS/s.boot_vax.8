h20687
s 00001/00001/00295
d D 8.2 94/04/19 15:22:53 mckusick 14 13
c add architecture to Dt field
e
s 00002/00002/00294
d D 8.1 93/06/05 11:11:01 bostic 13 12
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00009/00064/00287
d D 6.10 91/10/28 17:44:58 bostic 12 11
c break reboot man page up into machine specific and independent
e
s 00246/00156/00105
d D 6.9 91/03/16 17:08:22 cael 11 10
c macro and text revision (-mdoc version 3)
e
s 00004/00014/00257
d D 6.8 90/06/24 21:50:30 trent 10 9
c new copyright & pathnames (reboot & wtmp)
e
s 00014/00003/00257
d D 6.7 88/10/29 21:59:06 bostic 9 8
c add Berkeley specific copyright
e
s 00059/00022/00201
d D 6.6 88/07/12 13:52:17 karels 8 7
c update
e
s 00006/00007/00217
d D 6.5 86/11/26 14:30:21 bostic 7 6
c bug report 4.3BSD/man/8
e
s 00014/00002/00210
d D 6.4 86/05/28 10:30:22 karels 6 5
c pcs750.bin; refer to other actions of reboot()
e
s 00013/00001/00199
d D 6.3 86/05/24 22:58:44 karels 5 4
c new logging
e
s 00056/00027/00144
d D 6.2 86/05/24 10:46:25 karels 4 3
c updates
e
s 00001/00001/00170
d D 6.1 85/04/27 13:43:28 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00028/00016/00143
d D 5.1 85/04/27 13:42:48 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00159/00000/00000
d D 4.1 85/04/27 13:42:23 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 9
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 9
I 9
D 11
.\" Copyright (c) 1980 The Regents of the University of California.
E 11
I 11
D 13
.\" Copyright (c) 1980, 1991 The Regents of the University of California.
E 11
.\" All rights reserved.
E 13
I 13
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 13
.\"
D 10
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 10
I 10
.\" %sccs.include.redist.man%
E 10
E 9
.\"
D 11
.\"	%W% (Berkeley) %G%
E 11
I 11
.\"     %W% (Berkeley) %G%
E 11
.\"
D 2
.TH REBOOT 8 5/10/81
E 2
I 2
D 3
.TH REBOOT 8 5/10/83
E 3
I 3
D 11
.TH REBOOT 8 "%Q%"
E 3
E 2
.UC 4
.SH NAME
reboot \- UNIX bootstrapping procedures
.SH SYNOPSIS
D 10
.B /etc/reboot
E 10
I 10
.B reboot
E 10
[
.B \-n
] [
.B \-q
]
.SH DESCRIPTION
.PP
UNIX is started by placing it in memory
E 11
I 11
.Dd %Q%
D 12
.Dt REBOOT 8
.Os BSD 4
E 12
I 12
D 14
.Dt BOOT 8
E 14
I 14
.Dt BOOT 8 vax
E 14
.Os
E 12
.Sh NAME
D 12
.Nm reboot
E 12
I 12
.Nm boot
E 12
.Nd
D 12
.Tn UNIX
bootstrapping procedures
.Sh SYNOPSIS
.Nm reboot
.Op Fl n
.Op Fl q
E 12
I 12
system bootstrapping procedures
E 12
.Sh DESCRIPTION
D 12
.Pp
.Tn UNIX
is started by placing it in memory
E 11
D 4
at location zero and transferring to zero.
E 4
I 4
at location zero and transferring to the entry point.
E 4
Since the system is not reenterable,
it is necessary to read it in from disk or tape
each time it is to be bootstrapped.
D 11
.PP
.B Rebooting a running system.
When a UNIX is running and a reboot is desired,
.IR shutdown (8)
E 11
I 11
.Pp
.Sy Rebooting a running system .
When a
.Tn UNIX
is running and a reboot is desired,
.Xr shutdown 8
E 11
is normally used.
If there are no users then
D 10
.B /etc/reboot
E 10
I 10
D 11
.B reboot
E 11
I 11
.Nm reboot
E 11
E 10
can be used.
D 6
Reboot causes the disks to be synced, and then a multi-user
reboot (as described below) is initiated.  This causes a system to be
E 6
I 6
Reboot causes the disks to be synced and allows the system
to perform other shutdown activities such as resynchronizing
hardware time-of-day clocks.
A multi-user reboot (as described below) is then initiated.
This causes a system to be
E 6
booted and an automatic disk check to be performed.  If all this succeeds
without incident, the system is then brought up for many users.
D 11
.PP
E 11
I 11
.Pp
E 11
Options to reboot are:
D 11
.TP
.B \-n
E 11
I 11
.Bl -tag -width Ds
.It Fl n
E 11
option avoids the sync.  It can be used if a disk or the processor
D 2
is on fire.  (It is no longer necessary to reboot after rebuilding
the root file system.)
E 2
I 2
is on fire. 
E 2
D 11
.TP
.B \-q
E 11
I 11
.It Fl q
E 11
reboots quickly and ungracefully, without shutting down running
processes first.
D 11
.PP
I 5
.I Reboot
E 11
I 11
.El
.Pp
.Nm Reboot
E 11
normally logs the reboot using
D 11
.IR syslog (8)
E 11
I 11
.Xr syslog 8
E 11
and places a shutdown record in the login accounting file
D 10
/usr/adm/wtmp.
E 10
I 10
D 11
/var/log/wtmp.
E 11
I 11
.Pa /var/log/wtmp.
E 11
E 10
These actions are inhibited if the
D 11
.B \-n
E 11
I 11
.Fl n
E 11
or
D 11
.B \-q
E 11
I 11
.Fl q
E 11
options are present.
D 11
.PP
E 5
.B "Power fail and crash recovery."
E 11
I 11
.Pp
E 12
.Sy Power fail and crash recovery.
E 11
Normally, the system will reboot itself at power-up or after crashes.
Provided the auto-restart is enabled on the machine front panel,
D 4
an automatic consistency check of the file systems will be performed
then and unless this fails the system will resume multi-user operations.
E 4
I 4
an automatic consistency check of the file systems will be performed,
and unless this fails, the system will resume multi-user operations.
E 4
D 11
.PP
.B Cold starts.
E 11
I 11
.Pp
D 12
.Sy Cold starts .
E 12
I 12
.Sy Cold starts.
E 12
E 11
D 8
These are processor type dependent.
E 8
I 8
These are processor-type dependent.
E 8
On an 11/780, there are two floppy files for each disk controller,
both of which cause boots from unit 0 of the root file system
of a controller located on mba0 or uba0.
One gives a single user shell, while the other invokes the multi-user
D 11
automatic reboot.  Thus these files are HPS and HPM for the single
and multi-user boot from MASSBUS RP06/RM03/RM05 disks,
UPS and UPM for UNIBUS storage module controller and disks
such as the EMULEX SC-21
D 8
and AMPEX 9300 pair, or HKS and HKM for RK07 disks.
E 8
I 8
and AMPEX 9300 pair,
RAS and RAM to boot from MSCP controllers and disks such as the RA81,
or HKS and HKM for RK07 disks.
E 11
I 11
D 12
automatic reboot.  Thus these files are
E 12
I 12
automatic reboot.
Thus these files are
E 12
.Tn HPS
and
.Tn HPM
for the single
and multi-user boot from
.Tn MASSBUS
RP06/RM03/RM05 disks,
.Tn UPS
and
.Tn UPM
for
.Tn UNIBUS
storage module controller and disks
such as the
.Tn EMULEX
SC-21
and
.Tn AMPEX
9300 pair,
.Tn RAS
and
.Tn RAM
to boot from
.Tn MSCP
controllers and disks such as the RA81,
or
.Tn HKS
and
.Tn HKM
for RK07 disks.
E 11
E 8
I 4
There is also a script for booting from the default device,
which is normally a copy of one of the standard multi-user boot scripts,
but which may be modified to perform other actions
or to boot from a different unit.
The situation on the 8600 is similar, with scripts loaded from the console RL02.
E 4
D 11
.PP
E 11
I 11
.Pp
E 11
Giving the command
D 11
.IP
>>>BOOT HPM
.LP
E 11
I 11
.Pp
.Dl >>>BOOT HPM
.Pp
E 11
D 8
Would boot the system from (e.g.) an RP06 and run the automatic consistency
E 8
I 8
would boot the system from (e.g.) an RP06 and run the automatic consistency
E 8
check as described in
D 11
.IR fsck (8).
E 11
I 11
.Xr fsck 8 .
E 11
(Note that it may
be necessary to type control-P
I 4
and halt the processor
E 4
D 11
to gain the attention of the LSI-11 before getting the >>> prompt.)
E 11
I 11
to gain the attention of the
.Tn LSI-11
before getting the >>> prompt.)
E 11
The command
D 11
.IP
>>>BOOT ANY
.LP
E 11
I 11
.Pp
.Dl >>>BOOT ANY
.Pp
E 11
invokes a version of the boot program in a way which allows you to
specify any system as the system to be booted.
It reads from the console a device specification (see below) followed
immediately by a pathname.
D 11
.PP
E 11
I 11
.Pp
E 11
I 4
The scripts may be modified for local configuration if necessary.
D 7
The boot device type is set in register 10 as the device major number.
The flags and minor device are placed in register 11.
The register is used in four one-byte fields; from least to most significant,
they are boot flags (as defined in
.IR <sys/reboot.h> ),
disk partition, drive unit, and adaptor number (UNIBUS or MASSBUS as
appropriate).
E 7
I 7
The flags are placed in register 11 (as defined in
D 11
.IR <sys/reboot.h> ).
E 11
I 11
.Aq Pa sys/reboot.h ) .
E 11
D 8
The boot device is specified in register 10.  This register is used
as four one-byte fields; from least to most significant, they are the
boot device type (the device major number), disk partition, drive unit,
and adaptor number (UNIBUS or MASSBUS as appropriate).
E 8
I 8
The boot device is specified in register 10.
The encoding of this register is also defined in
D 11
.IR <sys/reboot.h> .
E 11
I 11
.Aq Pa sys/reboot.h .
E 11
The current encoding has a historical basis, and is shown in the following
table:
D 11
.LP
.ta 5 10
.nf
	bits	usage
	0-7	boot device type (the device major number)
	8-15	disk partition
	16-19	drive unit
	20-23	controller number
	24-27	adaptor number (UNIBUS or MASSBUS as appropriate)
.fi
.LP
E 11
I 11
.Pp
.Bd -unfilled -offset indent -compact
bits	usage
0-7	boot device type (the device major number)
8-15	disk partition
16-19	drive unit
20-23	controller number
24-27	adaptor number (UNIBUS or MASSBUS as appropriate)
.Ed
.Pp
E 11
The adaptor number corresponds to the normal configuration on the 11/750,
and to the order in which adaptors are found on the 11/780 and 8600
D 11
(generally the same as the numbers used by UNIX).
E 8
E 7
.PP
E 11
I 11
(generally the same as the numbers used by
.Tn UNIX ) .
.Pp
E 11
E 4
On an 11/750, the reset button will boot from the device
selected by the front panel boot device switch.  In systems
with RK07's, position B normally selects the RK07 for boot.
This will boot multi-user.  To boot from RK07 with boot flags you
may specify
D 11
.IP
>>>B/\fIn\fR DMA0
.LP
where, giving a \fIn\fR of 1 causes the boot program
E 11
I 11
.Pp
.Bd -unfilled -offset indent -compact
.Li \&>>>B/ Ns Fl n No DMA0
.Ed
.Pp
where, giving a
.Ar n
of 1 causes the boot program
E 11
to ask for the name of the system to be bootstrapped,
D 11
giving a \fIn\fR of 2 causes the boot program to come up single
user, and a \fIn\fR of 3 causes both of these actions to occur.
I 4
The ``DM'' specifies RK07, the ``A'' represents the adaptor number (UNIBUS
or MASSBUS), and the ``0'' is the drive unit number.
Other disk types which may be used are DB (MASSBUS), DD (TU58),
and DU (UDA-50/RA disk).
E 11
I 11
giving a
.Ar n
of 2 causes the boot program to come up single
user, and a
.Ar n
of 3 causes both of these actions to occur.
The ``DM'' specifies RK07, the ``A'' represents the adaptor number
.Pf ( Tn UNIBUS
or
.Tn MASSBUS ) ,
and the ``0'' is the drive unit number.
Other disk types which may be used are DB
.Pq Tn MASSBUS ,
DD (TU58),
and DU
.Pf ( Tn UDA-50/RA
disk).
E 11
A non-zero disk partition can be used by adding (partition times 1000 hex)
D 11
to \fIn\fR.
E 4
.PP
I 8
The boot procedure on the MicroVAX II is similar.
E 11
I 11
to
.Ar  n .
.Pp
The boot procedure on the Micro
.Tn VAX
II
is similar.
E 11
A switch on the back panel sets the power-up action
to autoboot or to halt.
When halted, the processor may be booted using the same syntax
as on the 11/750.
D 11
.PP
E 11
I 11
.Pp
E 11
E 8
The 11/750 boot procedure uses the boot roms to load block 0 off of
the specified device.  The /usr/mdec directory contains a number
of bootstrap programs for the various disks which should be placed
D 2
in a new pack via
.IP
cp /usr/mdec/\fIxx\fRboot /dev/\fIxx\fR?a
E 2
I 2
D 8
in a new pack automatically by
.IR newfs (8)
when the ``a'' partition file system on the pack is created.
E 8
I 8
in a new pack by
D 11
.IR disklabel (8).
Similarly, the MicroVAX II boot procedure loads a boot parameter block
E 11
I 11
.Xr disklabel 8 .
Similarly, the Micro
.Tn VAX
II boot procedure loads a boot parameter block
E 11
from block 0 of the disk.
The
D 11
.I rdboot
``bootstrap'' contains the correct parameters for an MSCP disk such
E 11
I 11
.Xr rdboot
.Dq bootstrap
contains the correct parameters for an
.Tn MSCP
disk such
E 11
as the RD53.
E 8
E 2
D 11
.PP
E 11
I 11
.Pp
E 11
D 2
whenever a new bootable pack is to be created.
.PP
E 2
D 4
On both processors, the 
E 4
I 4
On any processor, the 
E 4
D 11
.I boot
E 11
I 11
.Em boot
E 11
program
D 4
finds the corresponding file on the given device, loads that file
E 4
I 4
finds the corresponding file on the given device 
D 11
.RI ( vmunix
E 11
I 11
.Pf ( Pa vmunix
E 11
by default), loads that file
E 4
into memory location zero, and starts the program at the entry address
specified in the program header (after clearing off the high bit
D 4
of the specified entry address.)
Normal line editing characters can be used in specifying the pathname.
E 4
I 4
of the specified entry address).
E 4
D 11
.PP
D 2
If you have an rp06, rm05 or rm03 disk and wish to boot off of a file
system which starts at cylinder 0 of unit 0, you can type \*(lqhp(0,0)vmunix\*(rq
E 2
I 2
D 4
If you have a MASSBUS disk
and wish to boot off of a file
system which starts at cylinder 0
of unit 0, you can type \*(lqhp(0,0)vmunix\*(rq
E 2
to the boot prompt; \*(lqup(0,0)vmunix\*(rq would specify
D 2
a UNIBUS ampex 9300 drive, ``rk(0,0)vmunix'' would specify
a RK-07 disk drive.
E 2
I 2
a UNIBUS drive, ``hk(0,0)vmunix'' would specify
an RK07 disk drive, ``ra(0,0)vmunix'' would specify a
UDA50 disk drive, and ``rb(0,0)vmunix'' would specify a
disk on a 730 IDC.
E 2
.PP
A device specification has the following form:
E 4
I 4
The file specifications used with \*(lqBOOT ANY\*(rq or \*(lqB/3\*(rq
E 11
I 11
.Pp
The file specifications used with
.Dq BOOT ANY
or
.Dq \&B/3
E 11
are of the form:
E 4
D 11
.IP
D 4
device(unit, minor)
E 4
I 4
D 8
device(unit,minor)
E 8
I 8
device(adaptor,controller,unit,minor)
E 8
E 4
.PP
E 11
I 11
.Pp
.Dl device(adaptor,controller,unit,minor)
.Pp
E 11
where
D 11
.I device
E 11
I 11
.Ar device
E 11
is the type of the device to be searched,
I 8
D 11
.I adaptor
is the UNIBUS or MASSBUS number of the adaptor to which the device is attached,
.I controller
is the unit number of the controller or MASSBUS tape formatter on that adaptor,
E 8
.I unit
E 11
I 11
.Ar adaptor
is the
.Tn UNIBUS
or
.Tn MASSBUS
number of the adaptor to which the device is attached,
.Ar controller
is the unit number of the controller or
.Tn MASSBUS
tape formatter on that adaptor,
.Ar unit
E 11
D 4
is 8* the mba or uba number plus
the unit number of the device,
E 4
I 4
D 8
is 8 * the mba or uba number plus
the unit number of the disk or tape,
E 8
I 8
is the unit number of the disk or transport slave unit of the tape,
E 8
E 4
and
D 11
.I minor
E 11
I 11
.Ar minor
E 11
D 4
is the minor device index.
E 4
I 4
is the disk partition or tape file number.
I 8
Leading adaptor or controller numbers default to 0.
E 8
Normal line editing characters can be used when typing the file specification.
E 4
The following list of supported devices may vary from installation to
installation:
I 8
D 11
.LP
E 8
.ta 5 10
.nf
D 2
	hp	RP06, RM03, RM05, RP07 or RM80 on MASSBUS
	up	storage module drive on UNIBUS
E 2
I 2
	hp	MASSBUS disk drive
	up	UNIBUS storage module drive
E 2
	ht	TE16,TU45,TU77 on MASSBUS
I 8
	kra	storage module on a KDB50
E 8
I 2
	mt	TU78 on MASSBUS
E 2
	hk	RK07 on UNIBUS
I 2
D 8
	ra	storage module on a UDA50
E 8
I 8
	ra	storage module on a MSCP-compatible UNIBUS controller
E 8
	rb	storage module on a 730 IDC
	rl	RL02 on UNIBUS
E 2
	tm	TM11 emulation tape drives on UNIBUS
I 8
	tms	TMSCP-compatible tape
E 8
	ts	TS11 on UNIBUS
I 2
	ut	UNIBUS TU45 emulator
E 2
.fi
.PP
E 11
I 11
.Pp
.Bd -unfilled -offset indent -compact
hp	MASSBUS disk drive
up	UNIBUS storage module drive
ht	TE16,TU45,TU77 on MASSBUS
kra	storage module on a KDB50
mt	TU78 on MASSBUS
hk	RK07 on UNIBUS
ra	storage module on a MSCP-compatible UNIBUS controller
rb	storage module on a 730 IDC
rl	RL02 on UNIBUS
tm	TM11 emulation tape drives on UNIBUS
tms	TMSCP-compatible tape
ts	TS11 on UNIBUS
ut	UNIBUS TU45 emulator
.Ed
.Pp
E 11
I 4
For example,
to boot from a file system which starts at cylinder 0
D 11
of unit 0 of a MASSBUS disk, type \*(lqhp(0,0)vmunix\*(rq
D 8
to the boot prompt; \*(lqup(0,0)vmunix\*(rq would specify
E 8
I 8
to the boot prompt; \*(lqhp(2,0,1,0)vmunix\*(rq
would specify drive 1 on MASSBUS adaptor 2;
\*(lqup(0,0)vmunix\*(rq would specify
E 8
a UNIBUS drive, \*(lqhk(0,0)vmunix\*(rq would specify
D 8
an RK07 disk drive, \*(lqra(0,0)vmunix\*(rq would specify a
UDA50 disk drive, and \*(lqrb(0,0)vmunix\*(rq would specify a
E 8
I 8
an RK07 disk drive, \*(lqra(1,0,0,0)vmunix\*(rq would specify a
UDA50 disk drive on a second UNIBUS, and \*(lqrb(0,0)vmunix\*(rq would specify a
E 8
disk on a 730 IDC.
E 11
I 11
of unit 0 of a
.Tn MASSBUS
disk, type
.Ql hp(0,0)vmunix
to the boot prompt;
.Ql hp(2,0,1,0)vmunix
would specify drive 1 on
.Tn MASSBUS
adaptor 2;
.Ql up(0,0)vmunix
would specify a
.Tn UNIBUS
drive,
.Ql hk(0,0)vmunix
would specify
an RK07 disk drive,
.Ql ra(1,0,0,0)vmunix
would specify a
.Tn UDA50
disk drive on a second
.Tn UNIBUS ,
and
.Ql rb(0,0)vmunix
would specify a
disk on a 730
.Tn IDC .
E 11
E 4
D 8
For tapes, the minor device number gives a file offset.
E 8
I 8
For tapes, the minor device number gives a file offset;
D 11
\*(lqmt(1,2,3,4)\*(rq would specify the fifth file on slave 3 of the formatter
at \*(lqdrive\*(rq 2 on mba 1.
E 8
.PP
E 11
I 11
.Ql mt(1,2,3,4)
would specify the fifth file on slave 3 of the formatter
at
.Ql drive
2 on mba 1.
.Pp
E 11
I 6
On an 11/750 with patchable control store,
microcode patches will be installed by
D 11
.I boot
E 11
I 11
.Em boot
E 11
if the file
D 11
.I psc750.bin
E 11
I 11
.Pa psc750.bin
E 11
exists in the root of the filesystem from which the system is booted.
D 11
.PP
E 11
I 11
.Pp
E 11
E 6
In an emergency, the bootstrap methods described in the paper
D 2
``Setting up the Fourth Berkeley Software Tape'' can be used
E 2
I 2
D 4
``Installing and Operating 4.2bsd'' can be used
E 4
I 4
D 11
``Installing and Operating 4.3bsd'' can be used
E 4
E 2
to boot from a distribution tape.
.SH FILES
D 4
.ta \w'/usr/mdec/mboot   'u
E 4
I 4
D 8
.ta \w'/usr/mdec/installboot   'u
E 8
I 8
.ta \w'/usr/mdec/bootxx   'u
E 8
E 4
/vmunix	system code
.br
/boot	system bootstrap
I 4
.br
/usr/mdec/xxboot	sector-0 boot block for 750, xx is disk type
.br
/usr/mdec/bootxx	second-stage boot for 750, xx is disk type
.br
D 8
/usr/mdec/installboot	program to install boot blocks on 750
I 6
.br
E 8
/pcs750.bin	microcode patch file on 750
E 6
E 4
.SH "SEE ALSO"
I 4
arff(8V),
E 4
D 2
crash(8), fsck(8), init(8), rc(8), shutdown(8), halt(8)
E 2
I 2
crash(8V),
I 8
disklabel(8),
E 8
fsck(8),
I 4
halt(8),
E 4
init(8),
I 4
D 8
newfs(8),
E 8
E 4
rc(8),
D 4
shutdown(8),
halt(8),
newfs(8)
E 4
I 4
D 5
shutdown(8)
E 5
I 5
shutdown(8),
syslogd(8)
E 11
I 11
.%T Installing and Operating 4.3bsd
can be used to boot from a distribution tape.
.Sh FILES
.Bl -tag -width /usr/mdec/xxboot -compact
.It Pa /vmunix
system code
.It Pa /boot
system bootstrap
.It Pa /usr/mdec/xxboot
sector-0 boot block for 750, xx is disk type
.It Pa /usr/mdec/bootxx
second-stage boot for 750, xx is disk type
.It Pa /pcs750.bin
microcode patch file on 750
.El
.Sh SEE ALSO
.Xr arff 8 ,
D 12
.Xr crash 8 ,
.Xr disklabel 8 ,
.Xr fsck 8 ,
E 12
.Xr halt 8 ,
D 12
.Xr init 8 ,
.Xr rc 8 ,
.Xr shutdown 8 ,
.Xr syslogd 8
E 12
I 12
.Xr reboot 8 ,
.Xr shutdown 8
E 12
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.0 .
E 11
E 5
E 4
E 2
E 1
