h20181
s 00002/00002/00058
d D 8.1 93/06/09 19:09:41 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00004/00004/00056
d D 6.4 93/06/09 19:09:38 bostic 7 5
c fixed the under development line
e
s 00002/00002/00058
d R 8.1 93/06/05 13:22:50 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00059/00039/00001
d D 6.3 91/04/19 14:30:34 cael 5 4
c macro and text revision (-mdoc version 3)
e
s 00001/00001/00039
d D 6.2 86/05/12 17:40:26 karels 4 3
c move from 3X to 3
e
s 00001/00001/00039
d D 6.1 85/05/15 14:53:05 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00003/00005/00037
d D 5.1 85/05/15 14:52:57 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00042/00000/00000
d D 4.1 85/05/15 14:52:49 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
D 8
.\" Copyright (c) 1991 Regents of the University of California.
.\" All rights reserved.
E 8
I 8
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 8
E 5
.\"
D 2
.TH ASSERT 3X
E 2
I 2
D 3
.TH ASSERT 3X "19 January 1983"
E 3
I 3
D 4
.TH ASSERT 3X "%Q%"
E 4
I 4
D 5
.TH ASSERT 3 "%Q%"
E 4
E 3
E 2
.AT 3
.SH NAME
assert \- program verification
.SH SYNOPSIS
.B #include <assert.h>
.PP
.B assert(expression)
.SH DESCRIPTION
.PP
.I Assert
is a macro that indicates
.I expression
is expected to be true at this point in the program.
It causes an
.IR exit (2)
D 2
with a diagnostic comment on the standard output
when
E 2
I 2
with a diagnostic comment on the standard output when
E 2
.I expression
is false (0).
Compiling with the 
.IR cc (1)
option
.SM
.B \-DNDEBUG
effectively deletes
.I assert
from the program.
.SH DIAGNOSTICS
`Assertion failed: file
.I f
line
.I n.'
.I F
is the source file and
.I n
D 2
the source line number
of the
E 2
I 2
the source line number of the
E 2
.I assert
statement.
E 5
I 5
.\" %sccs.include.redist.man%
.\"
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt ASSERT 3
.Os
.Sh NAME
.Nm assert
.Nd expression verification macro
.Sh SYNOPSIS
.Fd #include <assert.h>
.Fn assert expression
.Sh DESCRIPTION
The
.Fn assert
macro tests the given
.Ar expression
and if it is false,
the calling process is terminated.
A
diagnostic message is written to the
.Em stderr
and the function
.Xr _exit 2
is called effectively terminating the program.
.Pp
If
.Ar expression
is true,
the
.Fn assert
macro does nothing.
.Pp
The
.Fn assert
macro
may be removed at compile time with
the
.Fl NDEBUG
option, see
.Xr cc 1 .
.Sh DIAGNOSTICS
The following diagnostic message is written to
.Em stderr
if
.Ar expression
is false:
.Bd -literal -offset indent
"assertion \e"%s\e" failed: file \e"%s\e", line %d\n", \e
		    "expression", __FILE__, __LINE__);
.Ed
.Sh HISTORY
D 7
The
.Fn assert
function is
.Ud .
E 7
I 7
A
.Nm assert
macro appeared in
.At v6 .
E 7
E 5
E 1
