h30757
s 00002/00002/00111
d D 8.1 93/06/05 13:25:37 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00004/00003/00109
d D 6.3 91/04/30 18:13:16 bostic 4 3
c new copyright; att/bsd/shared
e
s 00009/00007/00103
d D 6.2 85/06/07 20:50:38 kre 3 2
c From Jerry Berkman
e
s 00001/00001/00109
d D 6.1 85/05/15 16:26:25 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00110/00000/00000
d D 5.1 85/05/15 16:26:18 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 4
I 4
D 5
.\" Copyright (c) 1983 The Regents of the University of California.
.\" All rights reserved.
E 5
I 5
.\" Copyright (c) 1983, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 5
.\"
.\" %sccs.include.proprietary.roff%
E 4
.\"
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH PERROR 3F "13 June 1983"
E 2
I 2
.TH PERROR 3F "%Q%"
E 2
.UC 5
.SH NAME
perror, gerror, ierrno \- get system error messages
.SH SYNOPSIS
.B subroutine perror (string)
.br
.B character*(*) string
.sp 1
.B subroutine gerror (string)
.br
.B character*(*) string
.sp 1
.B character*(*) function gerror()
.sp 1
.B function ierrno()
.SH DESCRIPTION
.I Perror
will write a message to fortran logical unit 0
appropriate to the last detected system error.
.I String
will be written preceding the standard error message.
.PP
.I Gerror
returns the system error message in character variable
.I string.
.I Gerror
may be called either as a subroutine or as a function.
.PP
.I Ierrno
will return the error number of the last detected system error.
This number is updated only when an error actually occurs.
Most routines and I/O statements that might generate such errors
return an error code after the call;
that value is a more reliable indicator of what caused the error condition.
.SH FILES
.ie \nM /usr/ucb/lib/libU77.a
.el /usr/lib/libU77.a
.SH "SEE ALSO"
intro(2), perror(3)
.br
D. L. Wasley, \fIIntroduction to the f77 I/O Library\fR
.SH BUGS
.I String
in the call to
.I perror
can be no longer than 127 characters.
.PP
The length of the string returned by
.I gerror
is determined by the calling program.
.SH NOTES
UNIX system error codes are described in
.IR intro (2).
The f77 I/O error codes and their meanings are:
.sp 1
.in +5
100	``error in format''
.br
101	``illegal unit number''
.br
D 3
102	``formatted io not allowed''
E 3
I 3
102	``formatted i/o not allowed''
E 3
.br
D 3
103	``unformatted io not allowed''
E 3
I 3
103	``unformatted i/o not allowed''
E 3
.br
D 3
104	``direct io not allowed''
E 3
I 3
104	``direct i/o not allowed''
E 3
.br
D 3
105	``sequential io not allowed''
E 3
I 3
105	``sequential i/o not allowed''
E 3
.br
106	``can't backspace file''
.br
107	``off beginning of record''
.br
108	``can't stat file''
.br
109	``no * after repeat count''
.br
110	``off end of record''
.br
111	``truncation failed''
.br
112	``incomprehensible list input''
.br
113	``out of free space''
.br
114	``unit not connected''
.br
D 3
115	``read unexpected character''
E 3
I 3
115	``invalid data for integer format term''
E 3
.br
D 3
116	``blank logical input field''
E 3
I 3
116	``invalid data for logical format term''
E 3
.br
117	``'new' file exists''
.br
118	``can't find 'old' file''
.br
D 3
119	``unknown system error''
E 3
I 3
119	``opening too many files or unknown system error''
E 3
.br
120	``requires seek ability''
.br
121	``illegal argument''
.br
122	``negative repeat count''
.br
123	``illegal operation for unit''
I 3
.br
124	``invalid data for d, e, f, or g format term''
E 3
E 1
