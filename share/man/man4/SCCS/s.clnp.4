h29930
s 00002/00002/00139
d D 8.2 94/04/02 09:46:09 bostic 7 6
c netarg -> netiso
e
s 00002/00002/00139
d D 8.1 93/06/09 19:16:45 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00000/00005/00141
d D 6.4 93/06/09 19:16:41 bostic 5 3
c fixed the under development line
e
s 00002/00002/00144
d R 8.1 93/06/05 13:44:15 bostic 4 3
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00001/00145
d D 6.3 91/07/31 23:03:31 cael 3 2
c make groff happy
e
s 00107/00075/00039
d D 6.2 91/03/28 00:45:53 cael 2 1
c macro and text revision (-mdoc version 3)
e
s 00114/00000/00000
d D 6.1 90/05/30 13:51:15 sklower 1 0
c date and time created 90/05/30 13:51:15 by sklower
e
u
U
t
T
I 1
D 2
.\" Copyright (c) 1990 The Regents of the University of California.
E 2
I 2
D 6
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 2
.\" All rights reserved.
E 6
I 6
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 6
.\"
.\" %sccs.include.redist.man%
.\"
D 2
.\"	%W% (Berkeley) %G%
E 2
I 2
.\"     %W% (Berkeley) %G%
E 2
.\"
D 2
.TH CLNP 4 "%Q%"
.UC 4
.SH NAME
clnp \- Connectionless-Mode Network Protocol
.SH SYNOPSIS
.B #include <sys/socket.h>
.br
.B #include <netargo/iso.h>
.br
.B #include <netargo/clnp.h>
.PP
.B s = socket(AF_ISO, SOCK_RAW, 0);
.SH DESCRIPTION
CLNP is the connectionless-mode network protocol used by the 
E 2
I 2
.Dd %Q%
.Dt CLNP 4
.Os
.Sh NAME
.Nm clnp
.Nd Connectionless-Mode Network Protocol
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
D 7
.Fd #include <netargo/iso.h>
.Fd #include <netargo/clnp.h>
E 7
I 7
.Fd #include <netiso/iso.h>
.Fd #include <netiso/clnp.h>
E 7
.Ft int
.Fn socket AF_ISO SOCK_RAW 0
.Sh DESCRIPTION
.Tn CLNP
is the connectionless-mode network protocol used by the 
E 2
connectionless-mode network service. This protocol is specified in
D 2
ISO 8473.
E 2
I 2
.Tn ISO
8473.
E 2
It may be accessed
D 2
through a \*(lqraw socket\*(rq for debugging purposes only.
CLNP sockets are connectionless,
E 2
I 2
through a
.Dq raw socket
for debugging purposes only.
.Tn CLNP
sockets are connectionless,
E 2
and are normally used with the
D 2
.I sendto 
E 2
I 2
.Xr sendto
E 2
and
D 2
.I recvfrom 
E 2
I 2
.Xr recvfrom
E 2
calls, though the
D 2
.IR connect (2)
E 2
I 2
.Xr connect 2
E 2
call may also be used to fix the destination for future
packets (in which case the 
D 2
.IR read (2)
E 2
I 2
.Xr read 2
E 2
or
D 2
.IR recv (2)
E 2
I 2
.Xr recv 2
E 2
and 
D 2
.IR write (2)
E 2
I 2
.Xr write 2
E 2
or
D 2
.IR send (2)
E 2
I 2
.Xr send 2
E 2
system calls may be used).
D 2
.PP
Outgoing packets automatically have a CLNP header prepended to
them. Incoming packets received by the user contain the full CLNP header.
The following \fIsetsockopt\fR options apply to CLNP:
.TP
CLNPOPT_FLAGS
E 2
I 2
.Pp
Outgoing packets automatically have a
.Tn CLNP
header prepended to
them. Incoming packets received by the user contain the full
.Tn CLNP
header.
The following
.Xr setsockopt
options apply to
.Tn CLNP :
.Bl -tag -width CLNPOPT_FLAGS
.It Dv CLNPOPT_FLAGS
E 2
Sets the flags which are passed to clnp when sending a datagram.
Valid flags are:
D 2
.nf
.br
CLNP_NO_SEG-Do not allow segmentation
CLNP_NO_ER-Suppress ER pdus
CLNP_NO_CKSUM-Do not generate the CLNP checksum
.br
.fi
.TP
CLNPOPT_OPTS
Sets CLNP options. The options must be formatted exactly as specified by
ISO 8473, section 7.5 "Options Part." Once an option has been set, it will
E 2
I 2
.Pp
D 3
.Bl -tag -width CLNP_NO_CKSUM -compact -offset Ds
E 3
I 3
.Bl -tag -width "CLNP_NO_CKSUM" -offset indent -compact
E 3
.It Dv CLNP_NO_SEG
Do not allow segmentation
.It Dv CLNP_NO_ER
Suppress ER pdus
.It Dv CLNP_NO_CKSUM
Do not generate the
.Tn CLNP
checksum
.El
.Pp
.It Dv CLNPOPT_OPTS
Sets
.Tn CLNP
options. The options must be formatted exactly as specified by
.Tn ISO
8473, section 7.5
.Dq Options Part.
Once an option has been set, it will
E 2
be sent on all packets until a different option is set.
D 2
.SH "CONGESTION EXPERIENCE BIT"
E 2
I 2
.El
.Sh CONGESTION EXPERIENCE BIT
E 2
Whenever a packet is transmitted, the globally unique quality of
service option is added to the packet. The sequencing preferred bit and
the low transit delay bit are set in this option.
D 2
.PP
E 2
I 2
.Pp
E 2
If a packet is forwarded containing the globally unique quality of
service option, and the interface through which the packet will be 
D 2
transmitted has a queue length greater than \fIcongest_threshold\fR,
E 2
I 2
transmitted has a queue length greater than
.Em congest_threshold ,
E 2
then the congestion experienced bit is set in the quality of service option.
D 2
.PP
The threshold value stored in \fIcongest_threshold\fR may be changed
with the \fIclnlutil\fR utility.
.PP
E 2
I 2
.Pp
The threshold value stored in
.Em congest_threshold
may be tuned.
.Pp
E 2
When a packet is received with the 
globally unique quality of service option present, and the
congestion experienced bit is set, then the transport congestion
control function is called.
D 2
.SH DIAGNOSTICS
E 2
I 2
.Sh DIAGNOSTICS
E 2
A socket operation may fail with one of the following errors returned:
D 2
.TP 15
[EISCONN]
when trying to establish a connection on a socket which
E 2
I 2
.Bl -tag -width [EADDRNOTAVAIL]
.It Bq Er EISCONN
When trying to establish a connection on a socket which
E 2
already has one, or when trying to send a datagram with the destination
address specified and the socket is already connected;
D 2
.TP 15
[ENOTCONN]
when trying to send a datagram, but
E 2
I 2
.It Bq Er ENOTCONN
When trying to send a datagram, but
E 2
no destination address is specified, and the socket hasn't been
connected;
D 2
.TP 15
[ENOBUFS]
when the system runs out of memory for
E 2
I 2
.It Bq Er ENOBUFS
When the system runs out of memory for
E 2
an internal data structure;
D 2
.TP 15
[EADDRNOTAVAIL]
when an attempt is made to create a 
E 2
I 2
.It Bq Er EADDRNOTAVAIL
When an attempt is made to create a 
E 2
socket with a network address for which no network interface
exists;
D 2
.TP 15
[EHOSTUNREACH]
when trying to send a datagram, but no route to the destination
E 2
I 2
.It Bq Er EHOSTUNREACH
When trying to send a datagram, but no route to the destination
E 2
address exists.
D 2
.TP 15
[EINVAL]
when specifying unsupported options.
.SH SEE ALSO
send(2), recv(2), intro(4), iso(4)
.SH BUGS
E 2
I 2
.It Bq Er EINVAL
When specifying unsupported options.
.El
.Sh SEE ALSO
.Xr send 2 ,
.Xr recv 2 ,
.Xr intro 4 ,
.Xr iso 4
D 5
.Sh HISTORY
The
.Nm
protocol implementation
.Ud
E 5
.Sh BUGS
E 2
Packets are sent with the type code of 0x1d (technically an invalid
D 2
packet type) for lack of a better way to identify raw CLNP packets.
.PP
No more than MLEN bytes of options can be specified.
E 2
I 2
packet type) for lack of a better way to identify raw
.Tn CLNP
packets.
.Pp
No more than
.Dv MLEN
bytes of options can be specified.
E 2
E 1
