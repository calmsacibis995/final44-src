h00002
s 00002/00002/00099
d D 8.1 93/06/09 19:16:04 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00000/00005/00101
d D 6.3 93/06/09 19:16:01 bostic 4 2
c fixed the under development line
e
s 00002/00002/00104
d R 8.1 93/06/05 13:44:21 bostic 3 2
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00077/00045/00029
d D 6.2 91/03/28 00:45:54 cael 2 1
c macro and text revision (-mdoc version 3)
e
s 00074/00000/00000
d D 6.1 90/05/30 13:40:56 sklower 1 0
c date and time created 90/05/30 13:40:56 by sklower
e
u
U
t
T
I 1
D 2
.\" Copyright (c) 1990 The Regents of the University of California.
E 2
I 2
D 5
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 2
.\" All rights reserved.
E 5
I 5
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 5
.\"
.\" %sccs.include.redist.man%
.\"
D 2
.\"	%W% (Berkeley) %G%
E 2
I 2
.\"     %W% (Berkeley) %G%
E 2
.\"
D 2
.TH CLTP 4 "%Q%"
.UC 5
.SH NAME
cltp \- ISO Connectionless Transport Protocol
.SH SYNOPSIS
.B #include <sys/socket.h>
.br
.B #include <netiso/iso.h>
.PP
.B s = socket(AF_ISO, SOCK_DGRAM, 0);
.SH DESCRIPTION
CLTP is a simple, unreliable datagram protocol which is accessed
via the SOCK_DGRAM abstraction for the ISO
protocol family.  CLTP sockets are connectionless, and are
E 2
I 2
.Dd %Q%
.Dt CLTP 4
.Os
.Sh NAME
.Nm cltp
.Nd
.Tn ISO
Connectionless Transport Protocol
.Sh SYNOPSIS
.Fd #include <sys/socket.h>
.Fd #include <netiso/iso.h>
.Ft int
.Fn socket AF_ISO SOCK_DGRAM 0
.Sh DESCRIPTION
.Tn CLTP
is a simple, unreliable datagram protocol which is accessed
via the
.Dv SOCK_DGRAM
abstraction for the
.Tn ISO
protocol family.
.Tn CLTP
sockets are connectionless, and are
E 2
normally used with the
D 2
.I sendto 
E 2
I 2
.Xr sendto
E 2
and
D 2
.IR recvfrom 
E 2
I 2
.Xr recvfrom
E 2
calls, though the
D 2
.IR connect (2)
E 2
I 2
.Xr connect 2
E 2
call may also be used to fix the destination for future
packets (in which case the 
D 2
.IR recv (2)
E 2
I 2
.Xr recv 2
E 2
or
D 2
.IR read (2)
E 2
I 2
.Xr read 2
E 2
and 
D 2
.IR send (2)
E 2
I 2
.Xr send 2
E 2
or
D 2
.IR write(2)
E 2
I 2
.Xr write 2
E 2
system calls may be used).
D 2
.PP
CLTP address formats are identical to those used by TP.
In particular CLTP provides a service selector in addition
to the normal ISO NSAP.  Note that the CLTP selector
space is separate from the TP selector space (i.e. a CLTP selector
may not be \*(lqconnected\*(rq to a TP selector).
.PP
Options at the CLNP network level may be used with CLTP; see
.IR clnp (4).
.SH DIAGNOSTICS
E 2
I 2
.Pp
.Tn CLTP
address formats are identical to those used by TP.
In particular
.Tn CLTP
provides a service selector in addition
to the normal
.Tn ISO NSAP .
Note that the
.Tn CLTP
selector
space is separate from the TP selector space (i.e. a
.Tn CLTP
selector
may not be
.Dq connected
to a TP selector).
.Pp
Options at the
.Tn CLNP
network level may be used with
.Tn CLTP ;
see
.Xr clnp 4 .
.Sh DIAGNOSTICS
E 2
A socket operation may fail with one of the following errors returned:
D 2
.TP 15
[EISCONN]
E 2
I 2
.Bl -tag -width [EADDRNOTAVAIL]
.It Bq Er EISCONN
E 2
when trying to establish a connection on a socket which
already has one, or when trying to send a datagram with the destination
address specified and the socket is already connected;
D 2
.TP 15
[ENOTCONN]
E 2
I 2
.It Bq Er ENOTCONN
E 2
when trying to send a datagram, but
no destination address is specified, and the socket hasn't been
connected;
D 2
.TP 15
[ENOBUFS]
E 2
I 2
.It Bq Er ENOBUFS
E 2
when the system runs out of memory for
an internal data structure;
D 2
.TP 15
[EADDRINUSE]
E 2
I 2
.It Bq Er EADDRINUSE
E 2
when an attempt
is made to create a socket with a selector which has already been
allocated;
D 2
.TP 15
[EADDRNOTAVAIL]
E 2
I 2
.It Bq Er EADDRNOTAVAIL
E 2
when an attempt is made to create a 
socket with a network address for which no network interface
exists.
D 2
.SH SEE ALSO
getsockopt(2), recv(2), send(2), socket(2), intro(4), iso(4), clnp(4)
E 2
I 2
.El
.Sh SEE ALSO
.Xr getsockopt 2 ,
.Xr recv 2 ,
.Xr send 2 ,
.Xr socket 2 ,
.Xr intro 4 ,
.Xr iso 4 ,
.Xr clnp 4
D 4
.Sh HISTORY
The
.Nm
protocol implementation
.Ud
E 4
E 2
E 1
