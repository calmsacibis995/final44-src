h05843
s 00002/00002/00135
d D 8.1 93/06/09 19:17:37 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00000/00005/00137
d D 6.4 93/06/09 19:17:34 bostic 6 4
c fixed the under development line
e
s 00002/00002/00140
d R 8.1 93/06/05 13:48:05 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00085/00079/00057
d D 6.3 91/03/28 14:56:30 cael 4 2
c macro and text revision (-mdoc version 3)
e
s 00000/00000/00136
d R 6.3 91/03/28 00:46:18 cael 3 2
c macro and text revision (-mdoc version 3)
e
s 00015/00001/00121
d D 6.2 91/03/12 15:34:32 mckusick 2 1
c update for new method of describing passed file descriptors
e
s 00122/00000/00000
d D 6.1 91/03/12 15:21:32 mckusick 1 0
c manual page from Sam Leffler
e
u
U
t
T
I 1
D 7
.\" Copyright (c) 1991 The Regents of the University of California.
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
.\"
.\" %sccs.include.redist.man%
.\"
D 4
.\"	%W% (Berkeley) %G%
E 4
I 4
.\"     %W% (Berkeley) %G%
E 4
.\"
D 4
.TH UNIX 4 "%Q%"
.UC 5
.SH NAME
unix \-
.SM UNIX\c
-domain protocol family
.SH SYNOPSIS
.B #include <sys/types.h>
.br
.B #include <sys/un.h>
.SH DESCRIPTION
.de _d
.if t .ta .6i 2.1i 2.6i
.\" 2.94 went to 2.6, 3.64 to 3.30
.if n .ta .84i 2.6i 3.30i
..
.de _f
.if t .ta .5i 1.25i 2.5i
.\" 3.5i went to 3.8i
.if n .ta .7i 1.75i 3.8i
..
E 4
I 4
.Dd %Q%
.Dt UNIX 4
.Os
.Sh NAME
.Nm unix
.Nd UNIX-domain protocol family
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <sys/un.h>
.Sh DESCRIPTION
E 4
The
D 4
.SM UNIX\c
-domain protocol family is a collection of protocols
E 4
I 4
.Tn UNIX Ns -domain
protocol family is a collection of protocols
E 4
that provides local (on-machine) interprocess
communication through the normal
D 4
.IR socket (2)
E 4
I 4
.Xr socket 2
E 4
mechanisms.
The 
D 4
.SM UNIX\c
-domain family supports the
SOCK_STREAM and SOCK_DGRAM socket types and uses
E 4
I 4
.Tn UNIX Ns -domain
family supports the
.Dv SOCK_STREAM
and
.Dv SOCK_DGRAM
socket types and uses
E 4
filesystem pathnames for addressing.
D 4
.SH ADDRESSING
.SM UNIX\c
-domain addresses are variable-length filesystem pathnames of
E 4
I 4
.Sh ADDRESSING
.Tn UNIX Ns -domain
addresses are variable-length filesystem pathnames of
E 4
at most 104 characters.
The include file
D 4
.RI < sys/un.h >
E 4
I 4
.Aq Pa sys/un.h
E 4
defines this address:
D 4
.sp 1
.nf
._f
E 4
I 4
.Bd -literal -offset indent
E 4
struct sockaddr_un {
D 4
	u_char	sun_len;
	u_char	sun_family;
	char	sun_path[104];
E 4
I 4
u_char	sun_len;
u_char	sun_family;
char	sun_path[104];
E 4
};
D 4
.sp 1
.fi
E 4
I 4
.Ed
.Pp
E 4
Binding a name to a
D 4
.SM UNIX\c
-domain socket with
.IR bind (2)
E 4
I 4
.Tn UNIX Ns -domain
socket with
.Xr bind 2
E 4
causes a socket file to be created in the filesystem.
This file is
D 4
.I not
E 4
I 4
.Em not
E 4
removed when the socket is closed\(em\c
D 4
.IR unlink (2)
E 4
I 4
.Xr unlink 2
E 4
must be used to remove the file.
D 4
.PP
E 4
I 4
.Pp
E 4
The
D 4
.SM UNIX\c
-domain protocol family does not support broadcast addressing or any form
of \*(lqwildcard\*(rq matching on incoming messages. 
E 4
I 4
.Tn UNIX Ns -domain
protocol family does not support broadcast addressing or any form
of
.Dq wildcard
matching on incoming messages. 
E 4
All addresses are absolute- or relative-pathnames
of other
D 4
.SM UNIX\c
-domain sockets.
E 4
I 4
.Tn UNIX Ns -domain
sockets.
E 4
Normal filesystem access-control mechanisms are also
applied when referencing pathnames; e.g., the destination
of a
D 4
.IR connect (2)
E 4
I 4
.Xr connect 2
E 4
or
D 4
.IR sendto (2)
E 4
I 4
.Xr sendto 2
E 4
must be writable.
D 4
.SH PROTOCOLS
E 4
I 4
.Sh PROTOCOLS
E 4
The 
D 4
.SM UNIX\c
-domain protocol family is comprised of simple
E 4
I 4
.Tn UNIX Ns -domain
protocol family is comprised of simple
E 4
transport protocols that support the
D 4
.SM SOCK_STREAM
E 4
I 4
.Dv SOCK_STREAM
E 4
and
D 4
.SM SOCK_DGRAM
E 4
I 4
.Dv SOCK_DGRAM
E 4
abstractions.
D 4
.SM SOCK_STREAM
E 4
I 4
.Dv SOCK_STREAM
E 4
sockets also support the communication of 
D 4
.UX
E 4
I 4
.Ux
E 4
file descriptors through the use of the
D 2
.I msg_accrights
E 2
I 2
D 4
.I msg_control
E 4
I 4
.Ar msg_control
E 4
E 2
field in the
D 4
.I msg
E 4
I 4
.Ar msg
E 4
argument to
D 4
.IR sendmsg (2)
E 4
I 4
.Xr sendmsg 2
E 4
and
D 4
.IR recvmsg (2).
I 2
.PP
E 4
I 4
.Xr recvmsg 2 .
.Pp
E 4
E 2
Any valid descriptor may be sent in a message.
I 2
The file descriptor(s) to be passed are described using a 
D 4
.BI struct cmsghdr
E 4
I 4
.Ar struct cmsghdr
E 4
that is defined in the include file
D 4
.RI < sys/socket.h >.
E 4
I 4
.Aq Pa sys/socket.h .
E 4
The type of the message is
D 4
.SM SCM_RIGHTS,
E 4
I 4
.Dv SCM_RIGHTS ,
E 4
and the data portion of the messages is an array of integers
representing the file descriptors to be passed.
The number of descriptors being passed is defined
by the length field of the message;
the length field is the sum of the size of the header
plus the size of the array of file descriptors.
D 4
.PP
E 4
I 4
.Pp
E 4
E 2
The received descriptor is a 
D 4
.I duplicate
E 4
I 4
.Em duplicate
E 4
of the sender's descriptor, as if it were created with a call to
D 4
.IR dup (2).
E 4
I 4
.Xr dup 2 .
E 4
Per-process descriptor flags, set with
D 4
.IR fcntl (2),
E 4
I 4
.Xr fcntl 2 ,
E 4
are 
D 4
.I not
E 4
I 4
.Em not
E 4
passed to a receiver.
Descriptors that are awaiting delivery, or that are
purposely not received, are automatically closed by the system
when the destination socket is closed.
D 4
.SH SEE ALSO
socket(2), intro(4)
.PP
An Introductory 4.3BSD Interprocess Communication Tutorial (PS1:7).
.PP
An Advanced 4.3BSD Interprocess Communication Tutorial (PS1:8).
E 4
I 4
.Sh SEE ALSO
.Xr socket 2 ,
.Xr intro 4
.Rs
.%T "An Introductory 4.3 BSD Interprocess Communication Tutorial"
.%B PS1
.%N 7
.Re
.Rs
.%T "An Advanced 4.3 BSD Interprocess Communication Tutorial"
.%B PS1
.%N 8
.Re
D 6
.Sh HISTORY
The
.Tn UNIX Ns -domain
protocol manual
.Ud
E 6
E 4
E 1
