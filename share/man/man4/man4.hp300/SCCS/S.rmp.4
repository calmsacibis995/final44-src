h41023
s 00002/00002/00130
d D 8.1 93/06/09 19:15:12 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00001/00005/00131
d D 5.3 93/06/09 19:15:08 bostic 4 2
c fixed the under development line
e
s 00002/00002/00134
d R 8.1 93/06/05 13:42:07 bostic 3 2
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00100/00060/00036
d D 5.2 91/03/27 23:24:54 cael 2 1
c macro and text revision (-mdoc version 3)
e
s 00096/00000/00000
d D 5.1 90/06/29 19:09:28 bostic 1 0
c date and time created 90/06/29 19:09:28 by bostic
e
u
U
t
T
I 1
D 2
.\" Copyright (c) 1990 The Regents of the University of California.
E 2
I 2
D 5
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
E 2
.\" All rights reserved.
E 5
I 5
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 5
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the Systems Programming Group of the University of Utah Computer
.\" Science Department.
I 4
.\"
E 4
D 2
.\"
E 2
.\" %sccs.include.redist.man%
.\"
D 2
.\"	%W% (Berkeley) %G%
E 2
I 2
.\"     %W% (Berkeley) %G%
E 2
.\"
D 2
.TH RMP 4F "%Q%"
.UC 7
.SH NAME
rmp \- HP Remote Maintenance Protocol family
.SH SYNOPSIS
.B options RMP
.PP
.B #include <sys/types.h>
.br
.B #include <sys/socket.h>
.br
.B #include <netrmp/rmp.h>
.br
.B #include <netrmp/rmp_var.h>
.PP
.B s = socket(AF_RMP, SOCK_RAW, proto);
.SH DESCRIPTION
E 2
I 2
.Dd %Q%
.Dt RMP 4 hp300
.Os
.Sh NAME
.Nm rmp
.Nd
.Tn HP
Remote Maintenance Protocol Family
.Sh SYNOPSIS
.Cd "options RMP"
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Fd #include <netrmp/rmp.h>
.Fd #include <netrmp/rmp_var.h>
.Ft int
.Fn socket AF_RMP SOCK_RAW proto
.Sh DESCRIPTION
E 2
Hewlett-Packard's Remote Maintenance Protocol family is a collection
of protocols layered atop
D 2
.I IEEE 802.3.
E 2
I 2
.Tn IEEE  802.3 .
E 2
The current implementation of the RMP family provides protocol support only
D 2
for the SOCK_RAW socket type.
As a result, sendto(2) and recvfrom(2) must be used to send and
receive RMP packets.
.PP
The format of an RMP packet is defined in the include file
.RI < netrmp/rmp_var.h >.
The RMP packet arrives encapsulated in an (HP extended)
.I IEEE 802.2
E 2
I 2
for the
.Dv SOCK_RAW
socket type.
As a result,
.Xr sendto 2
and
.Xr recvfrom 2
must be used to send and
receive
.Tn RMP
packets.
.Pp
The format of an
.Tn RMP
packet is defined in the include file
.Aq Pa netrmp/rmp_var.h .
The
.Tn RMP
packet arrives encapsulated in an
.Pf ( Tn HP
extended)
.Tn IEEE  802.2
E 2
packet.
The
D 2
.I IEEE 802.2
E 2
I 2
.Tn IEEE  802.2
E 2
packet
is preceded by the kernel address of an
D 2
.I ifnet struct
E 2
I 2
.Ar ifnet struct
E 2
which is used to `route' a packet out the same interface it
arrived on.
Outgoing packets are encapsulated in a standard
D 2
.I IEEE 802.3
E 2
I 2
.Tn IEEE  802.3
E 2
packet, while incoming packets have this information stripped away.
D 2
.SH ADDRESSING
RMP (IEEE 802.3) addresses are 6 octets in length (48 bytes).
E 2
I 2
.Sh ADDRESSING
.Tn RMP
.Pf ( Tn IEEE
802.3) addresses are 6 octets in length (48 bytes).
E 2
Sockets in the Remote Maintenance Protocol family use the following
addressing structure:
D 2
.nf

E 2
I 2
.Bd -literal -offset indent
E 2
struct sockaddr_rmp {
	short		srmp_family;
	u_char		srmp_dhost[6];
};
D 2

.fi
.SH PROTOCOLS
The RMP protocol family supported by the operating system
E 2
I 2
.Ed
.Sh PROTOCOLS
The
.Tn RMP
protocol family supported by the operating system
E 2
is currently comprised of the Boot Protocol
D 2
.I (proto=RMPPROTO_BOOT).
E 2
I 2
.Pq Em proto= Ns Dv RMPPROTO_BOOT .
E 2
Unfortunately, we have no documentation on the Remote Maintenance
Protocol and only sketchy information about the Boot Protocol.
D 2
.SH SEE ALSO
socket(2), bind(2), sendto(2), recvfrom(2), intro(4N), rbootd(8)
.br
An Advanced 4.3BSD Interprocess Communication Tutorial
.SH BUGS
.TP 2
\-
The HP ROM uses IEEE 802.3 (as opposed to Ethernet) packets.  While the
E 2
I 2
.Sh SEE ALSO
.Xr socket 2 ,
.Xr bind 2 ,
.Xr sendto 2 ,
.Xr recvfrom 2 ,
.Xr intro 4 ,
.Xr rbootd 8
.Rs
.%T "An Advanced 4.3 BSD Interprocess Communication Tutorial"
.Re
D 4
.Sh HISTORY
The
.Nm
protocol interface
.Ud
E 4
.Sh BUGS
.Bl -bullet
.It
The
.Tn HP ROM
uses
.Tn IEEE
802.3 (as opposed to Ethernet) packets.  While the
E 2
kernel heuristically recognizes these packets, a more general mechanism
for doing so should be provided.
D 2
.TP 2
\-
The HP ROM uses a multicast address when first trying to locate boot
E 2
I 2
.It
The
.Tn HP ROM
uses a multicast address when first trying to locate boot
E 2
servers.  While the Ethernet [sic] board is programmed to recognize
this particular multicast address (9:0:9:0:0:4), a more general
mechanism for doing so should be provided.
D 2
.TP 2
\-
The kernel supports only RAW sockets for the RMP protocol.
E 2
I 2
.It
The kernel supports only
.Tn RAW
sockets for the
.Tn RMP
protocol.
E 2
This is either a bug or a feature, since the kernel is smaller at the
price of greater complexity in the server.
D 2
.TP 2
\-
There is no support for bind(2)'ing an address in the RMP domain.
Something like an RMPADDR_ANY should be provided to prevent more than one
.I rbootd
E 2
I 2
.It
There is no support for
.Xr bind Ns 'ing
an address in the
.Tn RMP
domain.
Something like an
.Dv RMPADDR_ANY
should be provided to prevent more than one
.Xr rbootd
E 2
server from running at the same time.
I 2
.El
E 2
E 1
