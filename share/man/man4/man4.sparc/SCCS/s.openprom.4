h53513
s 00002/00002/00125
d D 8.1 93/06/05 13:40:54 bostic 2 1
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00127/00000/00000
d D 5.1 93/02/17 06:36:42 torek 1 0
c date and time created 93/02/17 06:36:42 by torek
e
u
U
t
T
I 1
D 2
.\" Copyright (c) 1992 The Regents of the University of California.
.\" All rights reserved.
E 2
I 2
.\" Copyright (c) 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 2
.\"
.\" This software was developed by the Computer Systems Engineering group
.\" at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
.\" contributed to Berkeley.
.\"
.\" %sccs.include.redist.man%
.\"
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt OPENPROM 4 sparc
.Os
.Sh NAME
.Nm openprom
.Nd OPENPROM and EEPROM interface
.Sh SYNOPSIS
.Fd #include <machine/openpromio.h>
.Sh DESCRIPTION
The file
.Nm /dev/openprom
is an interface to the SPARC OPENPROM,
including the EEPROM area.
This interface is highly stylized;
ioctls are used for all operations.
These ioctls refer to
.Dq nodes ,
which are simply
.Dq magic
integer values describing data areas.
Occasionally the number 0 may be used or returned instead,
as described below.
A special distinguished
.Dq options
node holds the EEPROM settings.
.Pp
The calls that take and/or return a node
use a pointer to an
.Li int
variable for this purpose;
others use a pointer to an
.Li struct opiocdesc
descriptor,
which contains a node and two counted strings.
The first string is comprised of the fields
.Li op_namelen
(an
.Li int )
and
.Li op_name
(a
.Li "char *" ) ,
giving the name of a field.
The second string is comprised of the fields
.Li op_buflen
and
.Li op_buf ,
used analogously.
These two counted strings work in a
.Dq value-result
fashion.
At entry to the ioctl,
the counts are expected to reflect the buffer size;
on return,
the counts are updated to reflect the buffer contents.
.Pp
The following ioctls are supported:
.Bl -tag -width OPIOCGETOPTNODE
.It Dv OPIOCGETOPTNODE
Takes nothing, and fills in the options node number.
.It OPIOCGETNEXT
Takes a node number and returns the number of the following node.
The node following the last node is number 0;
the node following number 0 is the first node.
.It Dv OPIOCGETCHILD
Takes a node number and returns the number of the first
.Dq child
of that node.
This child may have siblings; these can be discovered by using
.Dv OPIOCGETNEXT .
.It Dv OPIOCGET
Fills in the value of the named property for the given node.
If no such property is associated with that node,
the value length is set to -1.
If the named property exists but has no value,
the value length is set to 0.
.It Dv OPIOCSET
Writes the given value under the given name.
The OPENPROM may refuse this operation;
in this case
.Dv EINVAL
is returned.
.It Dv OPIOCNEXTPROP
Finds the property whose name follows the given name
in OPENPROM internal order.
The resulting name is returned in the value field.
If the named property is the last, the
.Dq next
name is the empty string.
As with
.Dv OPIOCGETNEXT ,
the next name after the empty string is the first name.
.El
.Sh FILES
.Pa /dev/openprom
.Sh ERRORS
The following may result in rejection of an operation:
.Bl -tag -width Er
.It Bq Er EINVAL
The given node number
is not zero
and does not correspond to any valid node,
or is zero where zero is not allowed.
.It Bq Er EBADF
The requested operation requires permissions not specified at the call to
.Fn open .
.It Bq Er ENAMETOOLONG
The given name or value field
exceeds the maximum allowed length (8191 bytes).
.El
.Sh SEE ALSO
.Xr ioctl 2
.Sh BUGS
Due to limitations within the OPENPROM itself,
these functions run at elevated priority
and may adversely affect system performance.
E 1
