h47467
s 00002/00002/00111
d D 8.1 93/06/05 13:45:22 bostic 9 8
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00067/00044/00046
d D 6.7 91/03/27 23:51:38 cael 8 7
c  macro and text revision (-mdoc version 3)
e
s 00001/00011/00089
d D 6.6 90/06/23 18:06:28 trent 7 6
c new copyright notice
e
s 00016/00005/00084
d D 6.5 89/02/14 17:34:25 bostic 6 5
c add Berkeley specific copyright notice
e
s 00009/00008/00080
d D 6.4 86/05/16 15:55:50 karels 5 4
c new trailers
e
s 00004/00001/00084
d D 6.3 86/02/18 13:31:16 karels 4 3
c document flags
e
s 00006/00003/00079
d D 6.2 86/02/18 13:27:47 karels 3 2
c update backoff algorithm
e
s 00001/00001/00081
d D 6.1 85/05/15 17:42:29 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00082/00000/00000
d D 5.1 85/05/15 17:42:22 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 6
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 6
I 6
D 8
.\" Copyright (c) 1983 The Regents of the University of California.
E 8
I 8
D 9
.\" Copyright (c) 1983, 1991 The Regents of the University of California.
E 8
.\" All rights reserved.
E 9
I 9
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 9
E 6
.\"
I 6
D 7
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 7
I 7
.\" %sccs.include.redist.man%
E 7
.\"
E 6
D 8
.\"	%W% (Berkeley) %G%
E 8
I 8
.\"     %W% (Berkeley) %G%
E 8
.\"
D 2
.TH EC 4 "27 July 1983"
E 2
I 2
D 8
.TH EC 4 "%Q%"
E 2
.UC 5
.SH NAME
ec \- 3Com 10 Mb/s Ethernet interface
.SH SYNOPSIS
D 4
.B "device ec0 at uba0 csr 161000 vector ecrint eccollide ecxint"
E 4
I 4
.B "device ec0 at uba0 csr 161000 vector ecrint eccollide ecxint flags 0"
E 4
.SH DESCRIPTION
E 8
I 8
.Dd %Q%
.Dt EC 4 vax
.Os BSD 4.2
.Sh NAME
.Nm ec
.Nd 3Com 10 Mb/s Ethernet interface
.Sh SYNOPSIS
.Cd "device ec0 at uba0 csr 161000 vector ecrint eccollide ecxint flags 0"
.Sh DESCRIPTION
E 8
The
D 8
.I ec
E 8
I 8
.Nm ec
E 8
interface provides access to a 10 Mb/s Ethernet network through
a 3com controller.
D 8
.PP
The hardware has 32 kilobytes of dual-ported memory on the UNIBUS. 
E 8
I 8
.Pp
The hardware has 32 kilobytes of dual-ported memory on the
.Tn UNIBUS .
E 8
This memory
is used for internal buffering by the board, and the interface code reads
D 8
the buffer contents directly through the UNIBUS.
I 4
The address of this memory is given in the \fIflags\fP field
E 8
I 8
the buffer contents directly through the
.Tn UNIBUS .
The address of this memory is given in the
.Ar flags
field
E 8
in the configuration file.
The first interface normally has its memory at Unibus address 0.
E 4
D 8
.PP
E 8
I 8
.Pp
E 8
D 5
The host's Internet address is specified at boot time with an SIOCSIFADDR
E 5
I 5
Each of the host's network addresses
D 8
is specified at boot time with an SIOCSIFADDR
E 5
ioctl.  The
.I ec
E 8
I 8
is specified at boot time with an
.Dv SIOCSIFADDR
.Xr ioctl 2 .
The
.Nm ec
E 8
interface employs the address resolution protocol described in
D 6
.IR arp (4P)
E 6
I 6
D 8
.IR arp (4)
E 8
I 8
.Xr arp 4
E 8
E 6
to dynamically map between Internet and Ethernet addresses on the local
network.
D 8
.PP
I 5
The interface normally tries to use a ``trailer'' encapsulation
E 8
I 8
.Pp
The interface normally tries to use a
.Dq trailer
encapsulation
E 8
to minimize copying data on input and output.
D 8
The use of trailers is negotiated with ARP.
E 8
I 8
The use of trailers is negotiated with
.Tn ARP .
E 8
This negotiation may be disabled, on a per-interface basis,
D 8
by setting the IFF_NOTRAILERS
flag with an SIOCSIFFLAGS ioctl.
.PP
E 8
I 8
by setting the
.Dv IFF_NOTRAILERS
flag with an
.Dv SIOCSIFFLAGS
.Xr ioctl .
.Pp
E 8
E 5
The interface software implements an exponential backoff algorithm
when notified of a collision on the cable.  This algorithm utilizes
D 8
a 16-bit mask and the VAX-11's interval timer in calculating a series
E 8
I 8
a 16-bit mask and the
.Tn VAX-11 Ns 's
interval timer in calculating a series
E 8
of random backoff values.  The algorithm is as follows:
D 8
.TP 5
1.
E 8
I 8
.Bl -enum -offset indent
.It
E 8
Initialize the mask to be all 1's.
D 8
.TP 5
2.
E 8
I 8
.It
E 8
If the mask is zero, 16 retries have been made and we give
up.
D 8
.TP 5
3.
E 8
I 8
.It
E 8
Shift the mask left one bit and formulate a backoff by
D 3
masking the interval timer with the mask (this is actually
the two's complement of the value).
E 3
I 3
masking the interval timer with the smaller of the complement of this mask
and a 5-bit mask, resulting in a pseudo-random number between 0 and 31.
This produces the number of slot times to delay,
where a slot is 51 microseconds.
E 3
D 8
.TP 5
4.
E 8
I 8
.It
E 8
Use the value calculated in step 3 to delay before retransmitting
D 3
the packet.  The delay is done in a software busy loop.
E 3
I 3
the packet.
The delay is done in a software busy loop.
E 3
D 5
.PP
The interface normally tries to use a ``trailer'' encapsulation
to minimize copying data on input and output.  This may be
disabled, on a per-interface basis, by setting the IFF_NOTRAILERS
flag with an SIOCSIFFLAGS ioctl.
E 5
D 8
.SH DIAGNOSTICS
.BR "ec%d: send error" .
E 8
I 8
.El
.Sh DIAGNOSTICS
.Bl -diag
.It ec%d: send error.
E 8
After 16 retransmissions using the
exponential backoff algorithm described above, the packet
was dropped.
D 8
.PP
.BR "ec%d: input error (offset=%d)" .
E 8
I 8
.Pp
.It ec%d: input error (offset=%d).
E 8
The hardware indicated an error
in reading a packet off the cable or an illegally sized packet.
The buffer offset value is printed for debugging purposes.
D 8
.PP
.BR "ec%d: can't handle af%d" .
E 8
I 8
.Pp
.It ec%d: can't handle af%d.
E 8
The interface was handed
a message with addresses formatted in an unsuitable address
family; the packet was dropped.
D 8
.SH SEE ALSO
D 6
intro(4N), inet(4F), arp(4P)
E 6
I 6
netintro(4), inet(4), arp(4)
E 6
.SH BUGS
E 8
I 8
.El
.Sh SEE ALSO
.Xr netintro 4 ,
.Xr inet 4 ,
.Xr arp 4
.Sh HISTORY
The
.Nm
driver appeared in
.Bx 4.2 .
.Sh BUGS
E 8
D 5
The PUP protocol family should be added.
.PP
E 5
The hardware is not capable of talking to itself.  The software
implements local sending and broadcast by sending such packets to the
loop interface.  This is a kludge.
D 8
.PP
E 8
I 8
.Pp
E 8
Backoff delays are done in a software busy loop.  This can degrade the
system if the network experiences frequent collisions.
E 1
