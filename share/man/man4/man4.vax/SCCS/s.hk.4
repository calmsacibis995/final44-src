h33802
s 00002/00002/00172
d D 8.1 93/06/05 13:46:07 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00124/00092/00050
d D 6.4 91/03/27 23:51:42 cael 6 5
c  macro and text revision (-mdoc version 3)
e
s 00008/00005/00134
d D 6.3 88/06/13 18:00:02 karels 5 4
c disklabel xref's in hp, uda; new error formats with diskerr
e
s 00007/00002/00132
d D 6.2 86/06/01 00:47:44 mis 4 3
c corrected rk07 partition info.
e
s 00001/00001/00133
d D 6.1 85/05/15 17:20:39 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00027/00027/00107
d D 5.1 85/05/15 17:20:26 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00134/00000/00000
d D 4.1 85/05/15 17:20:16 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 6
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 6
I 6
D 7
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
E 6
.\"
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
.\" %sccs.include.redist.man%
E 6
.\"
D 2
.TH HK 4 5/11/81
E 2
I 2
D 3
.TH HK 4 "27 July 1983"
E 3
I 3
D 6
.TH HK 4 "%Q%"
E 3
E 2
.UC 4
.SH NAME
hk \- RK6-11/RK06 and RK07 moving head disk
.SH SYNOPSIS
D 2
controller hk0 at uba? csr 0177440 vector rkintr
E 2
I 2
.B "controller hk0 at uba? csr 0177440 vector rkintr"
E 2
.br
D 2
disk rk0 at hk0 drive 0
.br
disk rk1 at hk0 drive 1
E 2
I 2
.B "disk rk0 at hk0 drive 0"
E 2
.SH DESCRIPTION
Files with minor device numbers 0 through 7 refer to various portions
of drive 0;
minor devices 8 through 15 refer to drive 1, etc.
The standard device names begin with ``hk'' followed by
the drive number and then a letter a-h for partitions 0-7 respectively.
The character ? stands here for a drive number in the range 0-7.
.PP
D 2
The origin and size of the pseudo-disks on each drive are
as follows:
E 2
I 2
The block files access the disk via the system's normal
buffering mechanism and may be read and written without regard to
physical disk records.  There is also a `raw' interface
which provides for direct transmission between the disk
and the user's read or write buffer.
A single read or write call results in exactly one I/O operation
and therefore raw I/O is considerably more efficient when
many words are transmitted.  The names of the raw files
conventionally begin with an extra `r.'
E 2
.PP
I 2
In raw I/O counts should be a multiple of 512 bytes (a disk sector).
Likewise
.I seek
calls should specify a multiple of 512 bytes.
.SH "DISK SUPPORT"
The origin and size (in sectors) of the
pseudo-disks on each drive are as follows:
.PP
E 2
.nf
.ta .5i +\w'000000    'u +\w'000000    'u +\w'000000    'u
RK07 partitions:
	disk	start	length	cyl
E 6
I 6
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt HK 4
.Os BSD 4
.Sh NAME
.Nm hk
.Nd
.Tn RK6-11 Ns / Tn RK06
and
.Tn RK07
disk interface
.Sh SYNOPSIS
.Cd "controller hk0 at uba? csr 0177440 vector rkintr"
.Cd "disk rk0 at hk0 drive 0"
.Sh DESCRIPTION
The
.Nm hk
driver
is a typical block-device disk driver; block device
.Tn I/O
is
described in
.Xr physio 4 .
.Pp
The script
.Xr MAKEDEV 8
should be used to create the special files; if a special file
needs to be created by hand consult
.Xr mknod 8 .
.Sh DISK SUPPORT
Special file names begin with
.Sq Li hk
and
.Sq Li rhk
for the block and character files respectively. The second
component of the name, a drive unit number in the range of zero to
seven, is represented by a
.Sq Li ?
in the disk layouts below. The last component is the file system partition
which is designated
by a letter from
.Sq Li a
to
.Sq Li h .
and
corresponds to a minor device number set: zero to seven,
eight to 15, 16 to 23 and so forth for drive zero, drive two and drive
three respectively.
The location and size (in sectors) of the
partitions for the
.Tn RK06
and
.Tn RK07
drives are as follows:
.Bl -column header diskx undefined length
.Tn RK07 No partitions:
.Sy	disk	start	length	cyl
E 6
	hk?a	0	15884	0-240
	hk?b	15906	10032	241-392
	hk?c	0	53790	0-814
D 4
	hk?g	26004	27786	393-813
E 4
I 4
	hk?d	25938	15884	393-633
	hk?f	41844	11792	634-814
	hk?g	25938	27786	393-813
E 4
D 6
.PP
D 2
.nf
E 2
RK06 partitions
	disk	start	length	cyl
E 6
I 6

.Tn RK06 No partitions
.Sy	disk	start	length	cyl
E 6
	hk?a	0	15884	0-240
	hk?b	15906	11154	241-409
	hk?c	0	27126	0-410
D 6
.DT
.fi
.PP
On a dual RK-07 system
E 6
I 6
.El
.Pp
On a dual
.Tn RK-07
system
E 6
partition hk?a is used
for the root for one drive
and partition hk?g for the /usr file system.
If large jobs are to be run using
hk?b on both drives as swap area provides a 10Mbyte paging area.
Otherwise
partition hk?c on the other drive
is used as a single large file system.
D 2
.PP
The block files access the disk via the system's normal
buffering mechanism and may be read and written without regard to
physical disk records.  There is also a `raw' interface
which provides for direct transmission between the disk
and the user's read or write buffer.
A single read or write call results in exactly one I/O operation
and therefore raw I/O is considerably more efficient when
many words are transmitted.  The names of the raw files
conventionally begin with an extra `r.'
.PP
In raw I/O counts should be a multiple of 512 bytes (a disk sector).
Likewise
.I seek
calls should specify a multiple of 512 bytes.
E 2
D 6
.SH FILES
/dev/hk[0-7][a-h]	block files
.br
/dev/rhk[0-7][a-h]	raw files
.SH SEE ALSO
D 2
hp(4), up(4)
E 2
I 2
hp(4),
uda(4),
D 4
up(4)
E 4
I 4
up(4),
syslogd(8)
E 4
E 2
.SH DIAGNOSTICS
D 5
\fBrk%d%c: hard error sn%d cs2=%b ds=%b er=%b\fR.  An unrecoverable
D 2
error occured during transfer of the specified sector of the specified
E 2
I 2
error occurred during transfer of the specified sector of the specified
E 2
disk partition.  The contents of the cs2, ds and er registers are printed
E 5
I 5
\fBhk%d%c: hard error %sing fsbn %d[-%d] cs2=%b ds=%b er=%b\fR.
E 6
I 6
.Sh FILES
.Bl -tag -width /dev/rhk[0-7][a-h] -compact
.It Pa /dev/hk[0-7][a-h]
block files
.It Pa /dev/rhk[0-7][a-h]
raw files
.El
.Sh DIAGNOSTICS
.Bl -diag
.It "hk%d%c: hard error %sing fsbn %d[-%d] cs2=%b ds=%b er=%b."
E 6
An unrecoverable error occurred during transfer of the specified
filesystem block number(s),
which are logical block numbers on the indicated partition.
The contents of the cs2, ds and er registers are printed
E 5
in octal and symbolically with bits decoded.
The error was either unrecoverable, or a large number of retry attempts
(including offset positioning and drive recalibration) could not
recover the error.
D 6
.PP
\fBrk%d: write locked\fR.  The write protect switch was set on the drive
E 6
I 6
.Pp
.It rk%d: write locked.
The write protect switch was set on the drive
E 6
when a write was attempted.  The write operation is not recoverable.
D 6
.PP
\fBrk%d: not ready\fR.  The drive was spun down or off line when it was
E 6
I 6
.Pp
.It rk%d: not ready.
The drive was spun down or off line when it was
E 6
accessed.  The i/o operation is not recoverable.
D 6
.PP
\fBrk%d: not ready (came back!)\fR.  The drive was not ready, but after
E 6
I 6
.Pp
.It rk%d: not ready (came back!).
The drive was not ready, but after
E 6
printing the message about being not ready (which takes a fraction
of a second) was ready.  The operation is recovered if no further
errors occur.
D 6
.PP
D 5
\fBrk%d%c: soft ecc sn%d\fR.  A recoverable ECC error occurred on the
D 2
specified sector of the specified disk partition.  This happens normally
E 2
I 2
specified sector in the specified disk partition. 
E 5
I 5
\fBup%d%c: soft ecc reading fsbn %d[-%d]\fP.
A recoverable ECC error occurred on the
E 6
I 6
.Pp
.It rk%d%c: soft ecc reading fsbn %d[-%d].
A recoverable
.Tn ECC
error occurred on the
E 6
specified sector(s) in the specified disk partition. 
E 5
This happens normally
E 2
a few times a week.  If it happens more frequently than
D 2
this the sectors where the errors are occuring should be checked to see
E 2
I 2
this the sectors where the errors are occurring should be checked to see
E 2
if certain cylinders on the pack, spots on the carriage of the drive
or heads are indicated.
D 6
.PP
\fBhk%d: lost interrupt\fR.  A timer watching the controller detected
E 6
I 6
.Pp
.It hk%d: lost interrupt.
A timer watching the controller detected
E 6
no interrupt for an extended period while an operation was outstanding.
This indicates a hardware or software failure.  There is currently a
hardware/software problem with spinning down drives while they are
being accessed which causes this error to occur.
D 6
The error causes a UNIBUS reset, and retry of the pending operations.
E 6
I 6
The error causes a
.Tn UNIBUS
reset, and retry of the pending operations.
E 6
If the controller continues to lose interrupts, this error will recur
a few seconds later.
D 6
.SH BUGS
In raw I/O
.I read
and
.IR write (2)
truncate file offsets to 512-byte block boundaries,
and
.I write
E 6
I 6
.El
.Sh SEE ALSO
.Xr hp 4 ,
.Xr uda 4 ,
.Xr up 4 ,
.Xr syslogd 8
.Sh HISTORY
The
.Nm
driver appeared in
.Bx 4.1 .
.Sh BUGS
The
.Xr write
function
E 6
scribbles on the tail of incomplete blocks.
D 6
Thus,
in programs that are likely to access raw devices,
.I read, write
and
.IR lseek (2)
should always deal in 512-byte multiples.
.PP
DEC-standard error logging should be supported.
.PP
E 6
I 6
.Pp
.Tn DEC Ns -standard
error logging should be supported.
.Pp
E 6
A program to analyze the logged error information (even in its
present reduced form) is needed.
D 6
.PP
E 6
I 6
.Pp
E 6
The partition tables for the file systems should be read off of each
pack, as they are never quite what any single installation would prefer,
and this would make packs more portable.
I 4
D 6
.PP
The rk07 g partition size in rk.c disagrees with that in /etc/disktab.
E 6
I 6
.Pp
The
.Tn RK07
g partition size in rk.c disagrees with that in
.Pa /etc/disktab.
E 6
E 4
E 1
