h14854
s 00002/00002/00105
d D 8.1 93/06/05 13:47:00 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00069/00047/00038
d D 6.5 91/03/27 23:51:49 cael 5 4
c  macro and text revision (-mdoc version 3)
e
s 00001/00011/00084
d D 6.4 90/06/23 18:06:02 trent 4 3
c new copyright notice
e
s 00016/00005/00079
d D 6.3 89/02/14 17:34:37 bostic 3 2
c add Berkeley specific copyright notice
e
s 00008/00008/00076
d D 6.2 86/05/16 15:52:41 karels 2 1
c update trailers
e
s 00084/00000/00000
d D 6.1 86/02/17 17:28:03 sklower 1 0
c Manual Pages for MICOM interlan NP100 unibus 10MB/s intelligent ethernet controller for downloading (np) and operation(ix)
e
u
U
t
T
I 1
D 3
.\" Copyright (c) 1986 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 3
I 3
D 5
.\" Copyright (c) 1986 The Regents of the University of California.
E 5
I 5
D 6
.\" Copyright (c) 1986, 1991 The Regents of the University of California.
E 5
.\" All rights reserved.
E 6
I 6
.\" Copyright (c) 1986, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 6
E 3
.\"
I 3
D 4
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 4
I 4
.\" %sccs.include.redist.man%
E 4
.\"
E 3
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
.\"     %W% (Berkeley) %G%
E 5
.\"
D 5
.TH IX 4 "%Q%"
.UC 5
.SH NAME
ix \- Interlan Np100 10 Mb/s Ethernet interface
.SH SYNOPSIS
.B "device np0 at uba0 csr 166000 vector npintr"
.SH DESCRIPTION
E 5
I 5
.Dd %Q%
.Dt IX 4 vax
.Os BSD 4.2
.Sh NAME
.Nm ix
.Nd Interlan Np100 10 Mb/s Ethernet interface
.Sh SYNOPSIS
.Cd "device np0 at uba0 csr 166000 vector npintr"
.Sh DESCRIPTION
E 5
The
D 5
.I ix
E 5
I 5
.Nm ix
E 5
interface provides access to a 10 Mb/s Ethernet network through
D 2
an Interlan Np100 controller.
E 2
I 2
an Interlan Np100 controller used as a link-layer interface.
E 2
D 5
.PP
E 5
I 5
.Pp
E 5
This interface is unusual in that it requires loading firmware
into the controller before it may be used as a network interface.
This is accomplished by opening a character special device,
and writing data to it.
D 5
A program to load the image is provided in /usr/src/new/np100.
E 5
I 5
A program to load the image is provided in
.Pa /usr/src/new/np100 .
E 5
The sequence of commands would be:
D 5
.nf

	# ./npload np.image [/dev/np<board #> if other than np00]
	# sleep 10
	# ifconfig ix0 ...
.fi
.PP
E 5
I 5
.Bd -literal -offset indent
# ./npload np.image [/dev/np<board #> if other than np00]
# sleep 10
# ifconfig ix0 ...
.Ed
.Pp
E 5
D 2
The host's Internet address is specified at boot time with an SIOCSIFADDR
ioctl.
E 2
I 2
Each of the host's network addresses
D 5
is specified at boot time with an SIOCSIFADDR
ioctl.  The
E 2
.I ix
E 5
I 5
is specified at boot time with an
.Dv SIOCSIFADDR
.Xr ioctl 2 .
The
.Nm ix
E 5
interface employs the address resolution protocol described in
D 3
.IR arp (4P)
E 3
I 3
D 5
.IR arp (4)
E 5
I 5
.Xr arp 4
E 5
E 3
to dynamically map between Internet and Ethernet addresses on the local
network.
D 5
.PP
The interface normally tries to use a ``trailer'' encapsulation
E 5
I 5
.Pp
The interface normally tries to use a
.Dq trailer
encapsulation
E 5
D 2
to minimize copying data on input and output.  This may be
disabled, on a per-interface basis, by setting the IFF_NOTRAILERS
E 2
I 2
to minimize copying data on input and output.
D 5
The use of trailers is negotiated with ARP.
E 5
I 5
The use of trailers is negotiated with
.Tn ARP .
E 5
This negotiation may be disabled, on a per-interface basis,
D 5
by setting the IFF_NOTRAILERS
E 2
flag with an SIOCSIFFLAGS ioctl.
.SH DIAGNOSTICS
\fBix%d: Req failed, cmd %x, stat %x, ust error %x,%x\fP.
E 5
I 5
by setting the
.Dv IFF_NOTRAILERS
flag with an 
.Dv SIOCSIFFLAGS 
.Xr ioctl .
.Sh DIAGNOSTICS
.Bl -diag
.It "ix%d: Req failed, cmd %x, stat %x, ust error %x,%x."
E 5
The firmware in the controller refused to honor a request from
D 5
.UX
E 5
I 5
.Tn UNIX
E 5
in initializing packet level communications.
The board may need to be reset and reloaded.
Or, you may not have allowed enough time between loading the board
and issuing the request to begin unix network operation.
D 5
.PP
\fBix%d: can't initialize\fP.
E 5
I 5
.Pp
.It ix%d: can't initialize.
E 5
The interface was unable to obtain unibus resources required for operation.
D 5
.PP
\fBix%d: failed to reinitialize DLA module\fP.
E 5
I 5
.Pp
.It ix%d: failed to reinitialize DLA module.
E 5
The interface got sick after attempting to reprogram its physical
ethernet address.  Try reloading the firmware.
The attempt is made only when this interfaces is not the first
D 5
one configured for XNS.
.PP
\fBix%d: can't handle af%d\fP.  The interface was handed
E 5
I 5
one configured for
.Tn XNS .
.Pp
.It ix%d: can't handle af%d.
The interface was handed
E 5
a message with addresses formatted in an unsuitable address
family; the packet was dropped.
D 5
.PP
\fBix%d: stray xmit interrupt, npreq=%x\fP.
E 5
I 5
.Pp
.It ix%d: stray xmit interrupt, npreq=%x.
E 5
This may happen if the board is reloaded while network processes are still
running.
D 5
.PP
\fBixrint: cqe error %x, %x, %x\fP.
E 5
I 5
.Pp
.It ixrint: cqe error %x, %x, %x.
E 5
This will result if an 
D 5
.IR ifconfig (8c)
E 5
I 5
.Xr ifconfig 8
E 5
request is made at an inopportune time, such as not allowing
enough time after loading the firmware.
After 100 such errors are logged, the unix network driver will
shut itself down, saying:
D 5
.PP
\fBixrint: shutting down unix dla\fP.
E 5
I 5
.Pp
.It ixrint: shutting down unix dla.
E 5
The recourse is to reload the firmware and allow more time.
D 5
.SH SEE ALSO
D 3
intro(4N), inet(4F), arp(4P), np(4).
E 3
I 3
netintro(4), inet(4), arp(4), np(4).
E 5
I 5
.El
.Sh SEE ALSO
.Xr netintro 4 ,
.Xr inet 4 ,
.Xr arp 4 ,
.Xr np 4 .
.Sh HISTORY
The
.Nm
driver appeared in
.Bx 4.3 .
E 5
E 3
D 2
.SH BUGS
There should be a direct path to an intelligent controller
via a protocol family using the socket mechanism.
E 2
E 1
