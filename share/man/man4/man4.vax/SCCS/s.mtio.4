h03382
s 00002/00002/00206
d D 8.1 93/06/05 13:47:33 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00145/00106/00063
d D 6.5 91/03/27 23:51:53 cael 6 5
c  macro and text revision (-mdoc version 3)
e
s 00001/00011/00168
d D 6.4 90/06/23 18:05:43 trent 5 4
c new copyright notice
e
s 00014/00003/00165
d D 6.3 89/08/28 09:03:50 bostic 4 3
c add Berkeley specific copyright notice
e
s 00021/00012/00147
d D 6.2 86/05/16 15:59:24 karels 3 2
c new ops, types
e
s 00001/00001/00158
d D 6.1 85/05/15 17:45:36 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00159/00000/00000
d D 5.1 85/05/15 17:45:29 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 4
I 4
D 6
.\" Copyright (c) 1983 The Regents of the University of California.
E 6
I 6
D 7
.\" Copyright (c) 1983, 1991 The Regents of the University of California.
E 6
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
.\"
D 5
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 5
I 5
.\" %sccs.include.redist.man%
E 5
E 4
.\"
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
.\"     %W% (Berkeley) %G%
E 6
.\"
D 2
.TH MTIO 4 "27 July 1983"
E 2
I 2
D 6
.TH MTIO 4 "%Q%"
E 2
.UC 5
.SH NAME
mtio \- UNIX magtape interface
.SH DESCRIPTION
The files
.I "mt0, ..., mt15"
refer to the UNIX magtape drives,
which may be on the MASSBUS using the TM03 formatter
.IR ht (4),
or TM78 formatter,
.IR mt (4),
or on the UNIBUS using either the TM11 or TS11 formatters
.IR tm (4),
TU45 compatible formatters,
.IR ut (4),
or
.IR ts (4).
The following description applies to any of the transport/controller pairs.
The files
.I "mt0, ..., mt7"
D 3
are 800bpi, 
E 3
I 3
are 800bpi (or the transport's lowest density), 
E 3
.I "mt8, ..., mt15"
D 3
are 1600bpi, and
E 3
I 3
are 1600bpi (or the transport's second density), and
E 3
.I "mt16, ..., mt23"
D 3
are 6250bpi.
E 3
I 3
are 6250bpi (or the transport's third density).
E 3
(But note that only 1600 bpi is available with the TS11.)
The files
.IR "mt0, ..., mt3" ,
.IR "mt8, ..., mt11" ,
E 6
I 6
.Dd %Q%
.Dt MTIO 4 vax
.Os BSD 4.2
.Sh NAME
.Nm mtio
.Nd
.Tn UNIX
magtape interface
.Sh DESCRIPTION
The special files
named
.Pa /dev/mt0
E 6
and
D 6
.I "mt16, ..., mt19"
are rewound when closed; the others are not.
When a file open for writing is closed, two end-of-files are written.
If the tape is not to be rewound
it is positioned with the head between the two
tapemarks.
.PP
A standard tape consists of a
series of 1024 byte records terminated by an
end-of-file.
To the extent possible, the system makes
it possible, if inefficient, to treat
the tape like any other file.
Seeks have their usual meaning and it is possible
to read or write a byte at a time.
Writing in very small units is inadvisable,
D 3
however, because it tends to create monstrous record
E 3
I 3
however, because it uses most of the tape in record
E 3
gaps.
.PP
The
.I mt
files discussed above are useful
when it is desired to access the tape in a way
compatible with ordinary files.
When foreign tapes are to be dealt with, and especially
when long records are to be read or written, the
`raw' interface is appropriate.
The associated files are named
.I "rmt0, ..., rmt23,"
but the same minor-device considerations as for the regular files still apply.
A number of other ioctl operations are available
E 6
I 6
.Pa /dev/rmt0
through
.Pa /dev/mt23
and
.Pa /dev/rmt23
refer to
.Tn UNIX
magtape drives,
which may be on the
.Tn MASSBUS
using the
.Tn TM03
formatter
.Xr ht 4 ,
or
.Tn TM78
formatter,
.Xr mt 4 ,
or on the
.Tn UNIBUS
using either the
.Tn TM11
or
.Tn TS11
formatters
.Xr tm 4 ,
.Tn TU45
compatible formatters,
.Xr ut 4 ,
or
.Xr ts 4 .
These devices are typical tape block devices,
see
.Xr physio 4 .
.Pp
The following table of the converntional device names
is applicable to any of the transport/controller pairs.
(But note that only 1600
.Tn BPI
is available with the
.Tn TS11 . )
.Bl -column "no-rewindxxx" "or lowest densityxx" "or lowest densityxx" "or lowest densityxx" -offset indent
	      800 BPI	      1600 BPI	      6500 BPI
.Em	or lowest density	or second density	or third density

Rewind	     mt0/rmt0	      mt8/rmt8	       mt16/rmt16
Rewind	     mt1/rmt1	      mt9/rmt9	       mt17/rmt17
Rewind	     mt2/rmt2	      mt10/rmt10	       mt18/rmt18
Rewind	     mt3/rmt3	      mt11/rmt11	       mt19/rmt19
No-rewind	    nmt4/nrmt4	    nmt12/nrmt12	    nmt20/nrmt20
No-rewind	    nmt5/nrmt5	    nmt13/nrmt13	    nmt21/nrmt21
No-rewind	    nmt6/nrmt6	    nmt14/nrmt14	    nmt22/nrmt22
No-rewind	    nmt7/nrmt7	    nmt15/nrmt15	    nmt23/nrmt32
.El
.Pp
The rewind devices automatically rewind
when the last requested read, write or seek has finished, or the end of the tape
has been reached. The letter
.Ql n
is usually prepended to
the name of the no-rewind devices.
.Pp
Unix tapes are written in multiples of 1024 byte block
records. Two end-of-file markers mark the end of a tape, and
one end-of-file marker marks the end of a tape file.
If the tape is not to be rewound it is positioned with the
head in between the two tape marks, where the next write
will over write the second end-of-file marker.
.Pp
All of the magtape devices may be manipulated with the
.Xr mt 1
command.
.Pp
A number of
.Xr ioctl 2
operations are available
E 6
on raw magnetic tape.
The following definitions are from
D 6
.RI < sys/mtio.h >:
.PP
.nf
E 6
I 6
.Aq Pa sys/mtio.h :
.Bd  -literal
E 6
/*
 * Structures and definitions for mag tape io control commands
 */

/* structure for MTIOCTOP - mag tape op command */
struct	mtop	{
	short	mt_op;		/* operations defined below */
	daddr_t	mt_count;	/* how many of them */
};

/* operations */
#define MTWEOF	0	/* write an end-of-file record */
#define MTFSF	1	/* forward space file */
#define MTBSF	2	/* backward space file */
#define MTFSR	3	/* forward space record */
#define MTBSR	4	/* backward space record */
#define MTREW	5	/* rewind */
#define MTOFFL	6	/* rewind and put the drive offline */
#define MTNOP	7	/* no operation, sets status only */
I 3
D 6
#define MTCACHE	8	/* enable controller cache */
#define MTNOCACHE	9	/* disable controller cache */
E 6
I 6
#define MTCACHE 8	/* enable controller cache */
#define MTNOCACHE 9	/* disable controller cache */
E 6
E 3

/* structure for MTIOCGET - mag tape get status command */

struct	mtget	{
	short	mt_type;	/* type of magtape device */
/* the following two registers are grossly device dependent */
	short	mt_dsreg;	/* ``drive status'' register */
	short	mt_erreg;	/* ``error'' register */
/* end device-dependent registers */
	short	mt_resid;	/* residual count */
/* the following two are not yet implemented */
	daddr_t	mt_fileno;	/* file number of current position */
	daddr_t	mt_blkno;	/* block number of current position */
/* end not yet implemented */
};

/*
D 3
 * Constants for mt_type byte
E 3
I 3
 * Constants for mt_type byte.  These are the same
D 6
 * for other controllers compatible with the types listed.
E 6
I 6
 * for controllers compatible with the types listed.
E 6
E 3
 */
D 3
#define	MT_ISTS		0x01
#define	MT_ISHT		0x02
#define	MT_ISTM		0x03
#define	MT_ISMT		0x04
#define	MT_ISUT		0x05
#define	MT_ISCPC	0x06
#define	MT_ISAR		0x07
E 3
I 3
#define	MT_ISTS		0x01		/* TS-11 */
#define	MT_ISHT		0x02		/* TM03 Massbus: TE16, TU45, TU77 */
#define	MT_ISTM		0x03		/* TM11/TE10 Unibus */
#define	MT_ISMT		0x04		/* TM78/TU78 Massbus */
#define	MT_ISUT		0x05		/* SI TU-45 emulation on Unibus */
#define	MT_ISCPC	0x06		/* SUN */
#define	MT_ISAR		0x07		/* SUN */
#define	MT_ISTMSCP	0x08		/* DEC TMSCP protocol (TU81, TK50) */
I 6
#define MT_ISCY 	0x09		/* CCI Cipher */
#define MT_ISCT 	0x0a		/* HP 1/4 tape */
#define MT_ISFHP	0x0b		/* HP 7980 1/2 tape */
#define MT_ISEXABYTE	0x0c		/* Exabyte */
#define MT_ISEXA8200	0x0c		/* Exabyte EXB-8200 */
#define MT_ISEXA8500	0x0d		/* Exabyte EXB-8500 */
#define MT_ISVIPER1	0x0e		/* Archive Viper-150 */
#define MT_ISPYTHON	0x0f		/* Archive Python (DAT) */
#define MT_ISHPDAT	0x10		/* HP 35450A DAT drive */
E 6
E 3

/* mag tape io control commands */
D 6
#define	MTIOCTOP	_IOW(m, 1, struct mtop)		/* do a mag tape op */
#define	MTIOCGET	_IOR(m, 2, struct mtget)	/* get tape status */
I 3
#define MTIOCIEOT	_IO(m, 3)			/* ignore EOT error */
#define MTIOCEEOT	_IO(m, 4)			/* enable EOT error */
E 6
I 6
#define	MTIOCTOP	_IOW('m', 1, struct mtop)	/* do a mag tape op */
#define	MTIOCGET	_IOR('m', 2, struct mtget)	/* get tape status */
#define MTIOCIEOT	_IO('m', 3)			/* ignore EOT error */
#define MTIOCEEOT	_IO('m', 4)			/* enable EOT error */
E 6
E 3

#ifndef KERNEL
#define	DEFTAPE	"/dev/rmt12"
#endif
D 6
.fi
.ft R
.PP
Each
.I read
or
.I write
call reads or writes the next record on the tape.
In the write case the record has the same length as the
buffer given.
During a read, the record size is passed
back as the number of bytes read, provided it is no greater
than the buffer size;
if the record is long, an error is indicated.
In raw tape I/O seeks are ignored.
A zero byte count is returned when a tape mark is read,
but another read will fetch the first record of the
new tape file.
.SH FILES
/dev/mt?
.br
/dev/rmt?
.SH "SEE ALSO"
mt(1),
tar(1),
tp(1),
ht(4),
tm(4),
ts(4),
mt(4),
ut(4)
.SH BUGS
E 6
I 6

#ifdef	KERNEL
/*
 * minor device number
 */

#define	T_UNIT		003		/* unit selection */
#define	T_NOREWIND	004		/* no rewind on close */
#define	T_DENSEL	030		/* density select */
#define	T_800BPI	000		/* select  800 bpi */
#define	T_1600BPI	010		/* select 1600 bpi */
#define	T_6250BPI	020		/* select 6250 bpi */
#define	T_BADBPI	030		/* undefined selection */
#endif
.Ed
.Pp
.Sh FILES
.Bl -tag -width /dev/rmt? -compact
.It Pa /dev/mt?
.It Pa /dev/rmt?
.El
.Sh SEE ALSO
.Xr mt 1 ,
.Xr tar 1 ,
.Xr tp 1 ,
.Xr ht 4 ,
.Xr tm 4 ,
.Xr ts 4 ,
.Xr mt 4 ,
.Xr ut 4
.Sh HISTORY
The
.Nm mtio
manual appeared in
.Bx 4.2 .
.Sh BUGS
E 6
The status should be returned in a device independent format.
I 3
D 6
.PP
E 6
I 6
.Pp
E 6
The special file naming should be redone in a more consistent and
understandable manner.
E 3
E 1
