h13129
s 00002/00002/00587
d D 8.1 93/06/05 13:48:54 bostic 9 8
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00330/00253/00259
d D 6.6 91/03/27 23:52:05 cael 8 7
c  macro and text revision (-mdoc version 3)
e
s 00028/00001/00484
d D 6.5 88/06/13 18:00:05 karels 7 6
c disklabel xref's in hp, uda; new error formats with diskerr
e
s 00067/00032/00418
d D 6.4 88/02/06 13:48:05 bostic 6 5
c update from Chris Torek
e
s 00368/00106/00082
d D 6.3 87/10/23 11:32:51 bostic 5 4
c new version; (Chris Torek)
e
s 00061/00029/00127
d D 6.2 86/05/16 15:55:32 karels 4 3
c updates
e
s 00001/00001/00155
d D 6.1 85/05/15 17:10:30 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00111/00095/00045
d D 5.1 85/05/15 17:09:59 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00140/00000/00000
d D 4.1 85/05/15 17:08:17 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
E 5
I 5
D 8
.\" Copyright (c) 1980, 1987 Regents of the University of California.
E 5
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 8
I 8
D 9
.\" Copyright (c) 1980, 1987, 1991 Regents of the University of California.
.\" All rights reserved.
E 9
I 9
.\" Copyright (c) 1980, 1987, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 9
E 8
.\"
D 8
.\"	%W% (Berkeley) %G%
E 8
I 8
.\" %sccs.include.redist.man%
E 8
.\"
D 2
.TH RA 4 10/8/81
E 2
I 2
D 3
.TH UDA 4 "27 July 1983"
E 3
I 3
D 8
.TH UDA 4 "%Q%"
E 3
E 2
.UC 4
.SH NAME
D 2
ra \- UDA50/RA80 Unibus disk controller and drives
E 2
I 2
D 5
uda \- UDA-50 disk controller interface
E 5
I 5
uda \- UDA50 disk controller interface
E 5
E 2
.SH SYNOPSIS
D 2
controller uda0 at uba? csr 0177550 vector udaintr
E 2
I 2
.B "controller uda0 at uba0 csr 0172150 vector udaintr"
E 2
.br
D 2
disk ra0 at uda0 drive 0
E 2
I 2
D 5
.B "disk ra0 at uda0 drive 0"
E 5
I 5
D 6
.b "disk ra0 at uda0 drive 0"
E 6
I 6
.B "disk ra0 at uda0 drive 0"
.br
.B "options MSCP_PARANOIA"
E 6
E 5
E 2
.SH DESCRIPTION
D 2
The UDA50 is an intelligent disk controller for the UNIBUS.
It supports the RA80 124MB disk drive.
E 2
I 2
D 4
This is a driver for the DEC UDA-50 disk controller.
E 4
I 4
D 5
This is a driver for the DEC UDA-50 disk controller
and for other compatible controllers.
E 4
The UDA-50 communicates with the host through a packet
oriented protocol termed the Mass Storage Control Protocol (MSCP).
E 5
I 5
This is a driver for the DEC UDA50 disk controller and other
compatible controllers.  The UDA50 communicates with the host through
a packet protocol known as the Mass Storage Control Protocol (MSCP).
E 8
I 8
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt UDA 4 vax
.Os BSD 4
.Sh NAME
.Nm uda
.Nd
.Tn UDA50
disk controller interface
.Sh SYNOPSIS
.Cd "controller uda0 at uba0 csr 0172150 vector udaintr"
.Cd "disk ra0 at uda0 drive 0"
.Cd "options MSCP_PARANOIA"
.Sh DESCRIPTION
This is a driver for the
.Tn DEC UDA50
disk controller and other
compatible controllers.  The
.Tn UDA50
communicates with the host through
a packet protocol known as the Mass Storage Control Protocol
.Pq Tn MSCP .
E 8
E 5
Consult the file
D 8
.RI < vax/mscp.h >
E 8
I 8
.Aq Pa vax/mscp.h
E 8
for a detailed description of this protocol.
E 2
D 8
.PP
Files with minor device numbers 0 through 7 refer to various portions
D 5
of drive 0;
minor devices 8 through 15 refer to drive 1, etc.
The standard device names begin with ``ra'' followed by
the drive number and then a letter a-h for partitions 0-7 respectively.
E 5
I 5
of drive 0; minor devices 8 through 15 refer to drive 1, etc.  The
standard device names begin with `ra' followed by the drive number
and then a letter a-h for partitions 0-7 respectively.
E 5
The character ? stands here for a drive number in the range 0-7.
.PP
D 2
The origin and size of the pseudo-disks on each drive are
as follows:
.PP
.nf
.ta .5i +\w'000000    'u +\w'000000    'u
RA80 124M drive partitions:
	disk	start	length
	ra?a	0	15884
	ra?b	15884	33440
	ra?c	0	237298
	ra?d	0	0
	ra?e	0	0
	ra?f	0	0
	ra?g	49324	82080
	ra?h	131404	105994
.DT
.fi
.PP
It is unwise for all of these files to be present in one installation,
since there is overlap in addresses and protection becomes
a sticky matter.
The ra?a partition is normally used for the root file system,
the ra?b partition as a paging area,
and the ra?c partition for pack-pack copying (it maps the entire disk).
Both ra?g and ra?h are used to map the
remaining cylinders.
.PP
E 2
D 5
The block files access the disk via the system's normal
buffering mechanism and may be read and written without regard to
physical disk records.  There is also a `raw' interface
which provides for direct transmission between the disk
and the user's read or write buffer.
A single read or write call results in exactly one I/O operation
and therefore raw I/O is considerably more efficient when
many words are transmitted.  The names of the raw files
conventionally begin with an extra `r.'
E 5
I 5
The block files access the disk via the system's normal buffering
mechanism mechanism and may be read and written without regard to
physical disk records.  There is also a `raw' interface which provides
for direct transmission between the disk and the user's read or write
buffer.  A single read or write call results in exactly one I/O
operation and therefore raw I/O is considerably more efficient when
many words are transmitted.  The names of the raw files conventionally
begin with an extra `r'.
E 5
.PP
In raw I/O counts should be a multiple of 512 bytes (a disk sector).
Likewise
.I seek
calls should specify a multiple of 512 bytes.
I 6
.PP
E 8
I 8
.Pp
E 8
The
D 8
.B MSCP_PARANOIA
E 8
I 8
.Nm uda
driver
is a typical block-device disk driver; see
.Xr physio 4
for a description of block
.Tn I/O .
The script
.Xr MAKEDEV 8
should be used to create the
.Nm uda
special files; should a special
file need to be created by hand, consult
.Xr mknod 8 .
.Pp
The
.Dv MSCP_PARANOIA
E 8
option enables runtime checking on all transfer completion responses
D 8
from the controller.  This increases disk I/O overhead and may
E 8
I 8
from the controller.  This increases disk
.Tn I/O
overhead and may
E 8
be undesirable on slow machines, but is otherwise recommended.
I 7
D 8
.PP
E 8
I 8
.Pp
E 8
The first sector of each disk contains both a first-stage bootstrap program
and a disk label containing geometry information and partition layouts (see
D 8
.IR disklabel (5).
E 8
I 8
.Xr disklabel 5 ) .
E 8
This sector is normally write-protected, and disk-to-disk copies should
avoid copying this sector.
The label may be updated with
D 8
.IR disklabel (8),
E 8
I 8
.Xr disklabel 8 ,
E 8
which can also be used to write-enable and write-disable the sector.
The next 15 sectors contain a second-stage bootstrap program.
E 7
E 6
I 2
D 8
.SH "DISK SUPPORT"
E 8
I 8
.Sh DISK SUPPORT
E 8
D 4
This driver handles all drives which may be connected to the
UDA-50.  Drive types per se are not recognized, but rather
the variable length partitions are defined as having an
``infinite'' length and the controller is relied on to return
an error when an inaccessible block is requested.  For
constructing file systems, however the partitions sizes are
required.
E 4
I 4
D 5
This driver configures the drive type of each drive
when it is first opened.
A partition table in the driver is required for each type of disk.
E 4
The origin and size (in sectors) of the pseudo-disks
D 4
on each drive are shown below.  Partitions are not rounded
to cylinder boundaries, as on other drives, because the type
of drive attached to the controller is discovered too late
in the autoconfiguration process to maintain separate partition
tables for each drive.  (The lack of proper drive
type recognition would be more easily dealt with if the partition
tables were read off the drive.)
E 4
I 4
on each drive are shown below.
Not all partitions begin on
cylinder boundaries, as on other drives, because previous drivers
used one partition table for all drive types.
Variants of the partition tables are common;
check the driver and the file
E 5
I 5
D 7
This driver configures the type of each drive when it is first
E 7
I 7
During autoconfiguration,
as well as when a drive is opened after all partitions are closed,
the first sector of the drive is examined for a disk label.
If a label is found, the geometry of the drive and the partition tables
are taken from it.
If no label is found,
the driver configures the type of each drive when it is first
E 7
D 6
encountered.  A partition table in the driver is required for each type
of disk.  The origin and size (in sectors) of the pseudo-disks on each
E 6
I 6
encountered.  A default partition table in the driver is used for each type
of disk when a pack is not labelled.  The origin and size
(in sectors) of the default pseudo-disks on each
E 6
drive are shown below.  Not all partitions begin on cylinder
boundaries, as on other drives, because previous drivers used one
partition table for all drive types.  Variants of the partition tables
are common; check the driver and the file
E 5
D 8
.IR /etc/disktab ( disktab (5))
E 8
I 8
.Pa /etc/disktab
.Pq Xr disktab 5
E 8
for other possibilities.
E 4
D 8
.PP
.nf
.ta .5i +\w'000000    'u +\w'000000    'u +\w'000000    'u +\w'000000    'u
.PP
I 4
D 5
RC25 partitions
	disk	start	length
	ra?a	0	15884
	ra?b	15884	10032
	ra?c	0	50902
	ra?g	25916	24986
RD52 partitions
	disk	start	length
	ra?a	0	15884
	ra?b	15884	9766
	ra?c	0	60480
	ra?g	25650	34830
RD53 partitions
	disk	start	length
	ra?a	0	15884
	ra?b	15884	33440
	ra?c	0	138672
	ra?g	49324	89348
	ra?h	15884	122788
E 5
E 4
RA60 partitions
	disk	start	length
E 8
I 8
.Pp
Special file names begin with
.Sq Li ra
and
.Sq Li rra
for the block and character files respectively. The second
component of the name, a drive unit number in the range of zero to
seven, is represented by a
.Sq Li ?
in the disk layouts below. The last component of the name is the
file system partition
designated
by a letter from
.Sq Li a
to
.Sq Li h
and which corresponds to a minor device number set: zero to seven,
eight to 15, 16 to 23 and so forth for drive zero, drive two and drive
three respectively, (see
.Xr physio 4) .
The location and size (in sectors) of the partitions:
.Bl -column header diskx undefined length
.Tn RA60 No partitions
.Sy	disk	start	length
E 8
	ra?a	0	15884
	ra?b	15884	33440
	ra?c	0	400176
D 4
	ra?g	49324	82080
	ra?h	131404	268772
E 4
I 4
	ra?d	49324	82080	same as 4.2BSD ra?g
	ra?e	131404	268772	same as 4.2BSD ra?h
	ra?f	49324	350852
	ra?g	242606	157570
	ra?h	49324	193282
E 4
D 8
.PP
I 6
RA70 partitions
	disk	start	length
E 8
I 8

.Tn RA70 No partitions
.Sy	disk	start	length
E 8
	ra?a	0	15884
	ra?b	15972	33440
	ra?c	0	547041
	ra?d	34122	15884
	ra?e	357192	55936
	ra?f	413457	133584
	ra?g	341220	205821
	ra?h	49731	29136
D 8
.PP
E 6
RA80 partitions
	disk	start	length
E 8
I 8

.Tn RA80 No partitions
.Sy	disk	start	length
E 8
	ra?a	0	15884
	ra?b	15884	33440
	ra?c	0	242606
D 4
	ra?g	49324	82080
	ra?h	131404	111202
E 4
I 4
	ra?e	49324	193282	same as old Berkeley ra?g
	ra?f	49324	82080	same as 4.2BSD ra?g
	ra?g	49910	192696
	ra?h	131404	111202	same as 4.2BSD
E 4
D 8
.PP
RA81 partitions
	disk	start	length
E 8
I 8

.Tn RA81 No partitions
.Sy	disk	start	length
E 8
	ra?a	0	15884
D 4
	ra?b	15884	33440
E 4
I 4
	ra?b	16422	66880
E 4
	ra?c	0	891072
D 4
	ra?d	340670	15884
	ra?e	356554	55936
	ra?f	412490	478582
	ra?g	49324	82080
	ra?h	131404	759668
E 4
I 4
	ra?d	375564	15884
	ra?e	391986	307200
	ra?f	699720	191352
	ra?g	375564	515508
	ra?h	83538	291346
D 8
.PP
RA81 partitions with 4.2BSD-compatible partitions
	disk	start	length
E 8
I 8

.Tn RA81 No partitions with 4.2BSD-compatible partitions
.Sy	disk	start	length
E 8
	ra?a	0	15884
	ra?b	16422	66880
	ra?c	0	891072
	ra?d	49324	82080	same as 4.2BSD ra?g
	ra?e	131404	759668	same as 4.2BSD ra?h
	ra?f	412490	478582	same as 4.2BSD ra?f
	ra?g	375564	515508
	ra?h	83538	291346
I 6
D 8
.PP
RA82 partitions
	disk	start	length
E 8
I 8

.Tn RA82 No partitions
.Sy	disk	start	length
E 8
	ra?a	0	15884
	ra?b	16245	66880
	ra?c	0	1135554
	ra?d	375345	15884
	ra?e	391590	307200
	ra?f	669390	466164
	ra?g	375345	760209
	ra?h	83790	291346
E 6
E 4
D 8
.DT
.fi
.PP
E 8
I 8
.El
.Pp
E 8
D 5
The ra?a partition is normally used for the root file system,
the ra?b partition as a paging area,
and the ra?c partition for pack-pack copying (it maps the entire disk).
E 5
I 5
The ra?a partition is normally used for the root file system, the ra?b
partition as a paging area, and the ra?c partition for pack-pack
copying (it maps the entire disk).
E 5
E 2
D 8
.SH FILES
D 2
/dev/ra[0-7][a-h]	block files
E 2
I 2
/dev/ra[0-9][a-f]
E 2
.br
D 2
/dev/rra[0-7][a-h]	raw files
.SH SEE ALSO
hk(4), hp(4), up(4)
E 2
I 2
/dev/rra[0-9][a-f]
I 7
.SH SEE ALSO
disklabel(5), disklabel(8)
E 7
E 2
.SH DIAGNOSTICS
D 2
\fBra%d%c: hard error sn%d udasa %o, state %d\fR.
.br
\fBra%d%c: hard error sn%d status %o\fR.
An unrecoverable
error occured during transfer of the specified sector of the specified
disk partition.  The contents of the udasa register are printed
in octal and symbolically with bits decoded.  The internal state is also
printed.  In the second form, the MSCP status is printed.
The error was either unrecoverable, or a large number of retry attempts
(including offset positioning and drive recalibration) could not
recover the error.
E 2
I 2
D 5
.BR "uda: ubinfo %x" .
(VAX 11/750 only.)
When allocating UNIBUS resources, the driver found it already
had resources previously allocated.  This indicates a bug in
the driver.
E 5
I 5
.TP
panic: udaslave
E 8
I 8
.Sh FILES
.Bl -tag -width /dev/rra[0-9][a-f] -compact
.It Pa /dev/ra[0-9][a-f]
.It Pa /dev/rra[0-9][a-f]
.El
.Sh DIAGNOSTICS
.Bl -diag
.It "panic: udaslave"
E 8
No command packets were available while the driver was looking
for disk drives.  The controller is not extending enough credits
to use the drives.
D 8
.TP
uda%d: no response to Get Unit Status request
E 8
I 8
.Pp
.It "uda%d: no response to Get Unit Status request"
E 8
A disk drive was found, but did not respond to a status request.
This is either a hardware problem or someone pulling unit number
plugs very fast.
D 8
.TP
uda%d: unit %d off line
E 8
I 8
.Pp
.It "uda%d: unit %d off line"
E 8
While searching for drives, the controller found one that
seems to be manually disabled.  It is ignored.
D 8
.TP
uda%d: unable to get unit status
E 8
I 8
.Pp
.It "uda%d: unable to get unit status"
E 8
Something went wrong while trying to determine the status of
a disk drive.  This is followed by an error detail.
D 8
.TP
uda%d: unit %d, next %d
E 8
I 8
.Pp
.It uda%d: unit %d, next %d
E 8
This probably never happens, but I wanted to know if it did.  I
have no idea what one should do about it.
D 8
.TP
uda%d: cannot handle unit number %d (max is %d)
E 8
I 8
.Pp
.It "uda%d: cannot handle unit number %d (max is %d)"
E 8
The controller found a drive whose unit number is too large.
Valid unit numbers are those in the range [0..7].
D 8
.TP
D 6
uda%d: unit %d (media ID `%s') is of unknown type %d; ignored
The controller found a drive whose type is not known, and thus has
no partitioning.  The drive has been ignored.  You can add the type
to the udatypes[] table, now that you know what it is:  The media
ID will be something like `DU RA25'.
E 6
I 6
ra%d: don't have a partition table for %s; using (s,t,c)=(%d,%d,%d)
E 8
I 8
.Pp
.It "ra%d: don't have a partition table for %s; using (s,t,c)=(%d,%d,%d)"
E 8
The controller found a drive whose media identifier (e.g. `RA 25')
does not have a default partition table.  A temporary partition
table containing only an `a' partition has been created covering
the entire disk, which has the indicated numbers of sectors per
track (s), tracks per cylinder (t), and total cylinders (c).
Give the pack a label with the
D 8
.I disklabel
E 8
I 8
.Xr disklabel
E 8
utility.
E 6
D 8
.TP
uda%d: uballoc map failed
E 8
I 8
.Pp
.It "uda%d: uballoc map failed"
E 8
Unibus resource map allocation failed during initialisation.  This
can only happen if you have 496 devices on a Unibus.
D 8
.TP
uda%d: timeout during init
E 8
I 8
.Pp
.It uda%d: timeout during init
E 8
The controller did not initialise within ten seconds.  A hardware
problem, but it sometimes goes away if you try again.
D 8
.TP
uda%d: init failed, sa=%b
E 8
I 8
.Pp
.It uda%d: init failed, sa=%b
E 8
The controller refused to initalise.
D 8
.TP
uda%d: controller hung
E 8
I 8
.Pp
.It uda%d: controller hung
E 8
The controller never finished initialisation.  Retrying may sometimes
fix it.
D 8
.TP
ra%d: drive will not come on line
E 8
I 8
.Pp
.It ra%d: drive will not come on line
E 8
The drive will not come on line, probably because it is spun down.
This should be preceded by a message giving details as to why the
drive stayed off line.
D 8
.TP
uda%d: still hung
E 8
I 8
.Pp
.It uda%d: still hung
E 8
When the controller hangs, the driver occasionally tries to reinitialise
it.  This means it just tried, without success.
D 8
.TP
panic: udastart: bp==NULL
E 8
I 8
.Pp
.It panic: udastart: bp==NULL
E 8
A bug in the driver has put an empty drive queue on a controller queue.
D 8
.TP
uda%d: command ring too small
If you increase NCMDL2, you may see a performance improvement.
(See /sys/vaxuba/uda.c.)
.TP
panic: udastart
E 8
I 8
.Pp
.It uda%d: command ring too small
If you increase
.Dv NCMDL2 ,
you may see a performance improvement.
(See
.Pa /sys/vaxuba/uda.c . )
.Pp
.It panic: udastart
E 8
A drive was found marked for status or on-line functions while performing
status or on-line functions.  This indicates a bug in the driver.
D 8
.TP
D 6
uda%d: controller error, sa=%b
The controller reported an error.  The driver will reset it and retry
pending I/O.
E 6
I 6
uda%d: controller error, sa=0%o (%s)
E 8
I 8
.Pp
.It "uda%d: controller error, sa=0%o (%s)"
E 8
The controller reported an error.  The error code is printed in
octal, along with a short description if the code is known (see the
D 8
.IR "UDA50 Maintenance Guide" ,
DEC part number AA-M185B-TC, pp. 18-22).
E 8
I 8
.%T UDA50 Maintenance Guide ,
.Tn DEC
part number
.Tn AA-M185B-TC ,
pp. 18-22).
E 8
If this occurs during normal
D 8
operation, the driver will reset it and retry pending I/O.  If
E 8
I 8
operation, the driver will reset it and retry pending
.Tn I/O .
If
E 8
it occurs during configuration, the controller may be ignored.
E 6
D 8
.TP
uda%d: stray intr
E 8
I 8
.Pp
.It uda%d: stray intr
E 8
The controller interrupted when it should have stayed quiet.  The
interrupt has been ignored.
D 8
.TP
uda%d: init step %d failed, sa=%b
E 8
I 8
.Pp
.It "uda%d: init step %d failed, sa=%b"
E 8
The controller reported an error during the named initialisation step.
The driver will retry initialisation later.
D 8
.TP
uda%d: version %d model %d
E 8
I 8
.Pp
.It uda%d: version %d model %d
E 8
An informational message giving the revision level of the controller.
D 8
.TP
uda%d: DMA burst size set to %d
An informational message showing the DMA burst size, in words.
.TP
panic: udaintr
Indicates a bug in the generic MSCP code.
.TP
uda%d: driver bug, state %d
E 8
I 8
.Pp
.It uda%d: DMA burst size set to %d
An informational message showing the
.Tn DMA
burst size, in words.
.Pp
.It panic: udaintr
Indicates a bug in the generic
.Tn MSCP
code.
.Pp
.It uda%d: driver bug, state %d
E 8
The driver has a bogus value for the controller state.  Something
is quite wrong.  This is immediately followed by a `panic: udastate'.
D 8
.TP
uda%d: purge bdp %d
E 8
I 8
.Pp
.It uda%d: purge bdp %d
E 8
A benign message tracing BDP purges.  I have been trying to figure
out what BDP purges are for.  You might want to comment out this
call to log() in /sys/vaxuba/uda.c.
D 8
.TP
.RI "uda%d: SETCTLRC failed: " detail
E 8
I 8
.Pp
.It uda%d: SETCTLRC failed:  `detail'
E 8
The Set Controller Characteristics command (the last part of the
controller initialisation sequence) failed.  The
D 8
.I detail
E 8
I 8
.Em detail
E 8
message tells why.
D 8
.TP
.RI "uda%d: attempt to bring ra%d on line failed: " detail
E 8
I 8
.Pp
.It "uda%d: attempt to bring ra%d on line failed:  `detail'"
E 8
The drive could not be brought on line.  The
D 8
.I detail
E 8
I 8
.Em detail
E 8
message tells why.
D 8
.TP
uda%d: ra%d: unknown type %d
E 8
I 8
.Pp
.It uda%d: ra%d: unknown type %d
E 8
The type index of the named drive is not known to the driver, so the
drive will be ignored.
D 8
.TP
D 6
ra%d: changed types! was %s
E 6
I 6
ra%d: changed types! was %d now %d
E 6
A drive somehow changed from one kind to another, e.g., from an RA80
D 6
to an RA60.  The driver believes the new type.
E 6
I 6
to an RA60.  The numbers printed are the encoded media identifiers (see
.RI < vax/mscp.h >
E 8
I 8
.Pp
.It "ra%d: changed types! was %d now %d"
A drive somehow changed from one kind to another, e.g., from an
.Tn RA80
to an
.Tn RA60 .
The numbers printed are the encoded media identifiers (see
.Ao Pa vax/mscp.h Ac
E 8
for the encoding).
The driver believes the new type.
E 6
D 8
.TP
D 6
ra%d: %s, size = %d sectors
The named drive is of the given type, and has that many sectors of
user-file area.  This is printed during configuration.
E 6
I 6
ra%d: uda%d, unit %d, size = %d sectors
E 8
I 8
.Pp
.It "ra%d: uda%d, unit %d, size = %d sectors"
E 8
The named drive is on the indicated controller as the given unit,
and has that many sectors of user-file area.  This is printed
during configuration.
E 6
D 8
.TP
.RI "uda%d: attempt to get status for ra%d failed: " detail
E 8
I 8
.Pp
.It "uda%d: attempt to get status for ra%d failed:  `detail'"
E 8
A status request failed.  The
D 8
.I detail
E 8
I 8
.Em detail
E 8
message should tell why.
D 8
.TP
D 6
ra%d: unit %d, nspt %d, group %d, ntpc %d, rctsize %d,
.br
.ti -5
nrpt %d, nrct %d
.br
Information about the geometry of the named drive.  This is not
used by the driver, but can one setting up
.I disktab
entries, e.g.  Note that the sectors per track, group, and tracks per
cylinder values are those after bad blocking is accounted for, and will
differ slightly from the actual hardware setup.  This message also
reports the MSCP unit number for the drive.  Errors tend to include
only the MSCP unit number, rather than the drive number, since that
is all the driver can tell at the time.
.TP
E 6
ra%d: bad block report: %d
E 8
I 8
.Pp
.It ra%d: bad block report: %d
E 8
The drive has reported the given block as bad.  If there are multiple
bad blocks, the drive will report only the first; in this case this
D 8
message will be followed by `+ others'.  Get DEC to forward the
block with EVRLK.
.TP
ra%d: serious exception reported
E 8
I 8
message will be followed by `+ others'.  Get
.Tn DEC
to forward the
block with
.Tn EVRLK .
.Pp
.It ra%d: serious exception reported
E 8
I have no idea what this really means.
D 8
.TP
panic: udareplace
The controller reported completion of a REPLACE operation.  The
driver never issues any REPLACEs, so something is wrong.
.TP
panic: udabb
The controller reported completion of bad block related I/O.  The
E 8
I 8
.Pp
.It panic: udareplace
The controller reported completion of a
.Tn REPLACE
operation.  The
driver never issues any
.Tn REPLACE Ns s ,
so something is wrong.
.Pp
.It panic: udabb
The controller reported completion of bad block related
.Tn I/O .
The
E 8
driver never issues any such, so something is wrong.
D 8
.TP
uda%d: lost interrupt
E 8
I 8
.Pp
.It uda%d: lost interrupt
E 8
The controller has gone out to lunch, and is being reset to try to bring
it back.
D 8
.TP
panic: mscp_go: AEB_MAX_BP too small
You defined AVOID_EMULEX_BUG and increased NCMDL2 and Emulex has
new firmware.  Raise AEB_MAX_BP or turn off AVOID_EMULEX_BUG.
.TP
uda%d: unit %d: unknown message type 0x%x ignored
E 8
I 8
.Pp
.It panic: mscp_go: AEB_MAX_BP too small
You defined
.Dv AVOID_EMULEX_BUG
and increased
.Dv NCMDL2
and Emulex has
new firmware.  Raise
.Dv AEB_MAX_BP
or turn off
.Dv AVOID_EMULEX_BUG .
.Pp
.It "uda%d: unit %d: unknown message type 0x%x ignored"
E 8
The controller responded with a mysterious message type. See
D 8
/sys/vax/mscp.h for a list of known message types.  This is probably
E 8
I 8
.Pa /sys/vax/mscp.h
for a list of known message types.  This is probably
E 8
a controller hardware problem.
D 8
.TP
uda%d: unit %d out of range
E 8
I 8
.Pp
.It "uda%d: unit %d out of range"
E 8
The disk drive unit number (the unit plug) is higher than the
maximum number the driver allows (currently 7).
D 8
.TP
uda%d: unit %d not configured, \fImessage\fP ignored
E 8
I 8
.Pp
.It "uda%d: unit %d not configured, message ignored"
E 8
The named disk drive has announced its presence to the controller,
but was not, or cannot now be, configured into the running system.
D 8
.I Message
E 8
I 8
.Em Message
E 8
is one of `available attention' (an `I am here' message) or
`stray response op 0x%x status 0x%x' (anything else).
D 8
.TP
ra%d: bad lbn (%d)?
E 8
I 8
.Pp
.It ra%d: bad lbn (%d)?
E 8
The drive has reported an invalid command error, probably due to an
invalid block number.  If the lbn value is very much greater than the
size reported by the drive, this is the problem.  It is probably due to
an improperly configured partition table.  Other invalid commands
indicate a bug in the driver, or hardware trouble.
D 8
.TP
ra%d: duplicate ONLINE ignored
E 8
I 8
.Pp
.It ra%d: duplicate ONLINE ignored
E 8
The drive has come on-line while already on-line.  This condition
can probably be ignored (and has been).
D 8
.TP
ra%d: io done, but no buffer?
Hardware trouble, or a bug; the drive has finished an I/O request,
E 8
I 8
.Pp
.It ra%d: io done, but no buffer?
Hardware trouble, or a bug; the drive has finished an
.Tn I/O
request,
E 8
but the response has an invalid (zero) command reference number.
D 8
.TP
Emulex SC41/MS screwup: uda%d, got %d correct, then
.br
.ti -5
changed 0x%x to 0x%x
.br
You turned on AVOID_EMULEX_BUG, and the driver successfully
E 8
I 8
.Pp
.It "Emulex SC41/MS screwup: uda%d, got %d correct, then changed 0x%x to 0x%x"
You turned on
.Dv AVOID_EMULEX_BUG ,
and the driver successfully
E 8
avoided the bug.  The number of correctly-handled requests is
reported, along with the expected and actual values relating to
the bug being avoided.
D 8
.TP
panic: unrecoverable Emulex screwup
You turned on AVOID_EMULEX_BUG, but Emulex was too clever and
avoided the avoidance.  Try turning on MSCP_PARANOIA instead.
.TP
uda%d: bad response packet ignored
You turned on MSCP_PARANOIA, and the driver caught the controller in
E 8
I 8
.Pp
.It panic: unrecoverable Emulex screwup
You turned on
.Dv AVOID_EMULEX_BUG ,
but Emulex was too clever and
avoided the avoidance.  Try turning on
.Dv MSCP_PARANOIA
instead.
.Pp
.It uda%d: bad response packet ignored
You turned on
.Dv MSCP_PARANOIA ,
and the driver caught the controller in
E 8
a lie.  The lie has been ignored, and the controller will soon be
reset (after a `lost' interrupt).  This is followed by a hex dump of
the offending packet.
D 8
.TP
ra%d: bogus REPLACE end
E 8
I 8
.Pp
.It ra%d: bogus REPLACE end
E 8
The drive has reported finishing a bad sector replacement, but the
driver never issues bad sector replacement commands.  The report
is ignored.  This is likely a hardware problem.
D 8
.TP
ra%d: unknown opcode 0x%x status 0x%x ignored
E 8
I 8
.Pp
.It "ra%d: unknown opcode 0x%x status 0x%x ignored"
E 8
The drive has reported something that the driver cannot understand.
D 8
Perhaps DEC has been inventive, or perhaps your hardware is ill.
E 8
I 8
Perhaps
.Tn DEC
has been inventive, or perhaps your hardware is ill.
E 8
This is followed by a hex dump of the offending packet.
I 7
D 8
.TP
\fBra%d%c: hard error %sing fsbn %d [of %d-%d] (ra%d bn %d cn %d tn %d sn %d)\fP.
E 8
I 8
.Pp
.It "ra%d%c: hard error %sing fsbn %d [of %d-%d] (ra%d bn %d cn %d tn %d sn %d)."
E 8
An unrecoverable error occurred during transfer of the specified
filesystem block number(s),
which are logical block numbers on the indicated partition.
If the transfer involved multiple blocks, the block range is printed as well.
The parenthesized fields list the actual disk sector number
relative to the beginning of the drive,
as well as the cylinder, track and sector number of the block.
E 7
D 8
.TP
uda%d: %s error datagram
E 8
I 8
.Pp
.It uda%d: %s error datagram
E 8
The controller has reported some kind of error, either `hard'
(unrecoverable) or `soft' (recoverable).  If the controller is going on
(attempting to fix the problem), this message includes the remark
`(continuing)'.  Emulex controllers wrongly claim that all soft errors
are hard errors.  This message may be followed by
one of the following 5 messages, depending on its type, and will always
be followed by a failure detail message (also listed below).
D 8
.RS
.TP
memory addr 0x%x
E 8
I 8
.Bd -filled -offset indent
.It memory addr 0x%x
E 8
A host memory access error; this is the address that could not be
read.
D 8
.TP
unit %d: level %d retry %d, %s %d
E 8
I 8
.Pp
.It "unit %d: level %d retry %d, %s %d"
E 8
A typical disk error; the retry count and error recovery levels are
printed, along with the block type (`lbn', or logical block; or `rbn',
D 8
or replacement block) and number.  If the string is something else, DEC
E 8
I 8
or replacement block) and number.  If the string is something else,
.Tn DEC
E 8
has been clever, or your hardware has gone to Australia for vacation
(unless you live there; then it might be in New Zealand, or Brazil).
D 8
.TP
unit %d: %s %d
E 8
I 8
.Pp
.It unit %d: %s %d
E 8
Also a disk error, but an `SDI' error, whatever that is.  (I doubt
it has anything to do with Ronald Reagan.)  This lists the block
D 6
type (`lbn' or `rbn') and number.
E 6
I 6
type (`lbn' or `rbn') and number.  This is followed by a second
message indicating a microprocessor error code and a front panel
code.  These latter codes are drive-specific, and are intended to
be used by field service as an aid in locating failing hardware.
The codes for RA81s can be found in the
D 8
.IR "RA81 Maintenance Guide" ,
E 8
I 8
.%T RA81 Maintenance Guide ,
E 8
DEC order number AA-M879A-TC, in appendices E and F.
E 6
D 8
.TP
unit %d: small disk error, cyl %d
E 8
I 8
.Pp
.It "unit %d: small disk error, cyl %d"
E 8
Yet another kind of disk error, but for small disks.  (`That's what
it says, guv'nor.  Dunnask me what it means.')
D 8
.TP
unit %d: unknown error, format 0x%x
E 8
I 8
.Pp
.It "unit %d: unknown error, format 0x%x"
E 8
A mysterious error: the given format code is not known.
D 8
.RE
E 5
E 2
.PP
E 8
I 8
.Ed
.Pp
E 8
D 2
\fBra%d%c: hard error sn%d OFFLINE\fR.  The drive was spun down or off
line when it was accessed.  The i/o operation is not recoverable.
E 2
I 2
D 5
.BR "udasa %o, state %d" .
(Additional status information given after a hard i/o error.)
The values of the UDA-50 status register and the internal
driver state are printed.
E 2
.PP
D 2
\fBuda%d: random interrupt ignored\fR.  The UDA received an interrupt
before it was initialized.
E 2
I 2
.BR "uda%d: random interrupt ignored" .
An unexpected interrupt was received (e.g. when no i/o was
pending).  The interrupt is ignored.
E 2
.PP
D 2
\fBuda%d: fatal error (%o)\fR.  A fatal error was noticed in the UDA
interrupt routine.  The contents of udasa are printed.  The controller
will be reinitialized.
E 2
I 2
.BR "uda%d: interrupt in unknown state %d ignored" .
An interrupt was received when the driver was in an unknown
internal state.  Indicates a hardware problem or a driver bug.
E 2
.PP
D 2
\fBuda%d: [soft|hard] error, controller error, event 0%o\fR.
.br
\fBuda%d: [soft|hard] error, host memory access error, event 0%o, addr 0%o\fR.
.br
\fBuda%d: [soft|hard] error, disk transfer error, unit %d, grp %d, cyl %d,
sec %d, trk %d, lbn %d, retry %d, level %d\fR.
.br
\fBuda%d: [soft|hard] error, SDI error, unit %d, event 0%o, cyl %d\fR.
.br
\fBuda%d: [soft|hard] error, small disk error, unit %d, event 0%o, cyl %d\fR.
.br
\fBuda%d: [soft|hard] error, unknown error, unit %d, format 0%o, event 0%o\fR.
.br
See the driver and the UDA and MSCP manuals.
.SH BUGS
In raw I/O
.I read
and
.IR write (2)
truncate file offsets to 512-byte block boundaries,
and
.I write
scribbles on the tail of incomplete blocks.
Thus,
in programs that are likely to access raw devices,
.I read, write
and
.IR lseek (2)
should always deal in 512-byte multiples.
E 2
I 2
.BR "uda%d: fatal error (%o)" .
The UDA-50 indicated a ``fatal error'' in the status returned
to the host.  The contents of the status register are displayed.
E 2
.PP
D 2
A program to analyze the logged error information (even in its
present reduced form) is needed.  Error messages should be more
consistent.
E 2
I 2
.BR OFFLINE .
(Additional status information given after a hard i/o error.)
A hard i/o error occurred because the drive was not on-line.
E 2
.PP
D 2
The partition tables for the file systems should be read off of each
pack, as they are never quite what any single installation would prefer,
and this would make packs more portable.
E 2
I 2
.BR "status %o" .
(Additional status information given after a hard i/o error.)
The status information returned from the UDA-50 is tacked onto
the end of the hard error message printed on the console.
E 2
.PP
D 2
Dumps to the swap area on system crashes are not implemented.
E 2
I 2
.BR "uda: unknown packet" .
An MSCP packet of unknown type was received from the UDA-50.
Check the cabling to the controller.
E 2
.PP
D 2
Booting via block zero is not (and will not be) supported.  The ``boot''
program must be loaded from the console storage device.
E 2
I 2
The following errors are interpretations of MSCP error messages
returned by the UDA-50 to the host.
E 2
.PP
D 2
Although the device supports unit numbers up to 255, the driver only
supports unit numbers up to 7.
E 2
I 2
.BR "uda%d: %s error, controller error, event 0%o" .
.PP
.BR "uda%d: %s error, host memory access error, event 0%o, addr 0%o" .
.PP
.BR "uda%d: %s error, disk transfer error, unit %d" .
.PP
.BR "uda%d: %s error, SDI error, unit %d, event 0%o" .
.PP
.BR "uda%d: %s error, small disk error, unit %d, event 0%o, cyl %d" .
.PP
.BR "uda%d: %s error, unknown error, unit %d, format 0%o, event 0%o" .
.SH BUGS
D 4
The partition tables are so poorly laid out that they almost
certainly force each site to tailor them to their individual
needs.  The problem is even worse when a site has a mixed collection
of drives.  The best solution would be to read the partition tables
E 4
I 4
The partition tables attempt to combine compatibility
with previous drivers and functionality; this is impossible.
The best solution would be to read the partition tables
E 4
off the drive.
E 5
I 5
The detail messages are as follows:
D 8
.RS
.TP
success (%s) (code 0, subcode %d)
E 8
I 8
.Bd -filled -offset indent
.It success (%s) (code 0, subcode %d)
E 8
Everything worked, but the controller thought it would let you know
that something went wrong.  No matter what subcode, this can probably
be ignored.
D 8
.TP
invalid command (%s) (code 1, subcode %d)
E 8
I 8
.Pp
.It "invalid command (%s) (code 1, subcode %d)"
E 8
This probably cannot occur unless the hardware is out; %s should be
`invalid msg length', meaning some command was too short or too long.
D 8
.TP
command aborted (unknown subcode) (code 2, subcode %d)
E 8
I 8
.Pp
.It "command aborted (unknown subcode) (code 2, subcode %d)"
E 8
This should never occur, as the driver never aborts commands.
D 8
.TP
unit offline (%s) (code 3, subcode %d)
E 8
I 8
.Pp
.It "unit offline (%s) (code 3, subcode %d)"
E 8
The drive is offline, either because it is not around (`unknown
drive'), stopped (`not mounted'), out of order (`inoperative'), has the
same unit number as some other drive (`duplicate'), or has been
disabled for diagnostics (`in diagnosis').
D 8
.TP
unit available (unknown subcode) (code 4, subcode %d)
E 8
I 8
.Pp
.It "unit available (unknown subcode) (code 4, subcode %d)"
E 8
The controller has decided to report a perfectly normal event as
an error.  (Why?)
D 8
.TP
media format error (%s) (code 5, subcode %d)
E 8
I 8
.Pp
.It "media format error (%s) (code 5, subcode %d)"
E 8
The drive cannot be used without reformatting.  The Format Control
Table cannot be read (`fct unread - edc'), there is a bad sector
header (`invalid sector header'), the drive is not set for 512-byte
sectors (`not 512 sectors'), the drive is not formatted (`not formatted'),
D 8
or the FCT has an uncorrectable ECC error (`fct ecc').
.TP
write protected (%s) (code 6, subcode %d)
E 8
I 8
or the
.Tn FCT
has an uncorrectable
.Tn ECC
error (`fct ecc').
.Pp
.It "write protected (%s) (code 6, subcode %d)"
E 8
The drive is write protected, either by the front panel switch
(`hardware') or via the driver (`software').  The driver never
sets software write protect.
D 8
.TP
compare error (unknown subcode) (code 7, subcode %d)
E 8
I 8
.Pp
.It "compare error (unknown subcode) (code 7, subcode %d)"
E 8
A compare operation showed some sort of difference.  The driver
never uses compare operations.
D 8
.TP
data error (%s) (code 7, subcode %d)
E 8
I 8
.Pp
.It "data error (%s) (code 7, subcode %d)"
E 8
Something went wrong reading or writing a data sector.  A `forced
error' is a software-asserted error used to mark a sector that contains
suspect data.  Rewriting the sector will clear the forced error.  This
is normally set only during bad block replacment, and the driver does
no bad block replacement, so these should not occur.  A `header
compare' error probably means the block is shot.  A `sync timeout'
presumably has something to do with sector synchronisation.
An `uncorrectable ecc' error is an ordinary data error that cannot
D 8
be fixed via ECC logic.  A `%d symbol ecc' error is a data error
that can be (and presumably has been) corrected by the ECC logic.
E 8
I 8
be fixed via
.Tn ECC
logic.  A `%d symbol ecc' error is a data error
that can be (and presumably has been) corrected by the
.Tn ECC
logic.
E 8
It might indicate a sector that is imperfect but usable, or that
is starting to go bad.  If any of these errors recur, the sector
may need to be replaced.
D 8
.TP
host buffer access error (%s) (code %d, subcode %d)
E 8
I 8
.Pp
.It "host buffer access error (%s) (code %d, subcode %d)"
E 8
Something went wrong while trying to copy data to or from the host
(Vax).  The subcode is one of `odd xfer addr', `odd xfer count',
`non-exist. memory', or `memory parity'.  The first two could be a
software glitch; the last two indicate hardware problems.
D 8
.TP
controller error (%s) (code %d, subcode %d)
E 8
I 8
.It controller error (%s) (code %d, subcode %d)
E 8
The controller has detected a hardware error in itself.  A
`serdes overrun' is a serialiser / deserialiser overrun; `edc'
probably stands for `error detection code'; and `inconsistent
internal data struct' is obvious.
D 8
.TP
drive error (%s) (code %d, subcode %d)
E 8
I 8
.Pp
.It "drive error (%s) (code %d, subcode %d)"
E 8
Either the controller or the drive has detected a hardware error
in the drive.  I am not sure what an `sdi command timeout' is, but
these seem to occur benignly on occasion.  A `ctlr detected protocol'
error means that the controller and drive do not agree on a protocol;
this could be a cabling problem, or a version mismatch.  A `positioner'
error means the drive seek hardware is ailing; `lost rd/wr ready'
means the drive read/write logic is sick; and `drive clock dropout'
means that the drive clock logic is bad, or the media is hopelessly
scrambled.  I have no idea what `lost recvr ready' means.  A `drive 
detected error' is a catch-all for drive hardware trouble; `ctlr
detected pulse or parity' errors are often caused by cabling problems.
D 8
.RE
E 8
I 8
.Ed
.El
.Sh SEE ALSO
.Xr disklabel 5 ,
.Xr disklabel 8
.Sh HISTORY
The
.Nm
driver appeared in
.Bx 4.2 .
E 8
E 5
E 2
E 1
