h23573
s 00002/00002/00229
d D 8.1 93/06/05 13:49:00 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00132/00109/00099
d D 6.4 91/03/27 23:52:06 cael 6 5
c  macro and text revision (-mdoc version 3)
e
s 00007/00005/00201
d D 6.3 88/06/13 18:00:09 karels 5 4
c disklabel xref's in hp, uda; new error formats with diskerr
e
s 00038/00005/00168
d D 6.2 86/05/16 10:08:53 mckusick 4 3
c update for new drive types
e
s 00001/00001/00172
d D 6.1 85/05/15 17:25:12 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00065/00039/00108
d D 5.1 85/05/15 17:24:59 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00147/00000/00000
d D 4.1 85/05/15 17:24:48 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
E 5
I 5
D 6
.\" Copyright (c) 1980,1988 Regents of the University of California.
E 5
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 6
I 6
D 7
.\" Copyright (c) 1980,1988, 1991 Regents of the University of California.
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1991, 1993, 19801988
.\"	The Regents of the University of California.  All rights reserved.
E 7
E 6
.\"
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
.\" %sccs.include.redist.man%
E 6
.\"
D 2
.TH UP 4 5/10/81
E 2
I 2
D 3
.TH UP 4 "27 July 1983"
E 3
I 3
D 6
.TH UP 4 "%Q%"
E 3
E 2
.UC 4
.SH NAME
up \- unibus storage module controller/drives
.SH SYNOPSIS
D 2
controller sc0 at uba? csr 0176700 vector upintr
E 2
I 2
.B "controller sc0 at uba? csr 0176700 vector upintr
E 2
.br
D 2
disk up0 at sc0 drive 0
E 2
I 2
.B "disk up0 at sc0 drive 0"
E 2
.SH DESCRIPTION
This is a generic UNIBUS storage module disk driver.
E 6
I 6
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt UP 4 vax
.Os BSD 4
.Sh NAME
.Nm up
.Nd unibus storage module controller/drives
.Sh SYNOPSIS
.Cd "controller sc0 at uba? csr 0176700 vector upintr
.Cd "disk up0 at sc0 drive 0"
.Sh DESCRIPTION
This is a generic
.Tn UNIBUS
storage module disk driver.
E 6
D 2
It is specifically designed to work with the Emulex SC-21 controller
and Ampex or CDC 300M or Fujitsu 160M drives.  It can be easily
adapted to other drives and controllers (although bootstrapping will
E 2
I 2
D 4
It is specifically designed to work with the Emulex SC-21 controller.
E 4
I 4
It is specifically designed to work with the
D 6
Emulex SC-21 and SC-31 controllers.
E 6
I 6
Emulex
.Tn SC-21
and
.Tn SC-31
controllers.
E 6
E 4
It can be easily
adapted to other controllers (although bootstrapping will
E 2
D 6
not necessarily be directly possible.)
.PP
Files with minor device numbers 0 through 7 refer to various portions
of drive 0;
minor devices 8 through 15 refer to drive 1, etc.
The standard device names begin with ``up'' followed by
the drive number and then a letter a-h for partitions 0-7 respectively.
The character ? stands here for a drive number in the range 0-7.
.PP
I 2
The block files access the disk via the system's normal
buffering mechanism and may be read and written without regard to
physical disk records.  There is also a `raw' interface
which provides for direct transmission between the disk
and the user's read or write buffer.
A single read or write call results in exactly one I/O operation
and therefore raw I/O is considerably more efficient when
many words are transmitted.  The names of the raw files
conventionally begin with an extra `r.'
.PP
In raw I/O counts should be a multiple of 512 bytes (a disk sector).
Likewise
.I seek
calls should specify a multiple of 512 bytes.
.SH "DISK SUPPORT"
E 6
I 6
not necessarily be directly possible.) 
.Pp
The script
.Xr MAKEDEV 8
should be used to create the
.Nm up
special files; consult
.Xr mknod 8
if a special file needs to be made manually.
It is recommended as a security precaution to not create special files
for devices which may never be installed.
.Sh DISK SUPPORT
E 6
The driver interrogates the controller's holding register
to determine the type of drive attached.  The driver recognizes
D 4
four different drives: AMPEX 9300, CDC 9766, AMPEX Capricorn,
and FUJITSU 160.
E 4
I 4
seven different drives:
D 6
CDC 9762, CDC 9766,
AMPEX DM980, AMPEX 9300, AMPEX Capricorn,
FUJITSU 160, and FUJITSU Eagle
E 6
I 6
.Tn CDC
9762,
.Tn CDC
9766,
.Tn AMPEX DM Ns 980 ,
.Tn AMPEX
9300,
.Tn AMPEX
Capricorn,
.Tn FUJITSU
160, and
.Tn FUJITSU
Eagle
E 6
(the Eagle is not supported by the SC-21).
E 4
E 2
D 6
The origin and size of the pseudo-disks on each drive are
as follows:
.PP
.nf
.ta .5i +\w'000000    'u +\w'000000    'u +\w'000000    'u
I 4
CDC 9762 partitions
	disk	start	length	cyls
E 6
I 6
.Pp
Special file names begin with
.Sq Li up
and
.Sq Li rup
for the block and character files respectively. The second
component of the name, a drive unit number in the range of zero to
seven, is represented by a
.Sq Li ?
in the disk layouts below. The last component of the name, the
file system partition, is
designated by a letter from
.Sq Li a
to
.Sq Li h
which also corresponds to a minor device number set: zero to seven,
eight to 15, 16 to 23 and so forth for drive zero, drive two and drive
three respectively (see
.Xr physio 4 ) .
The location and size (in 512 byte sectors) of the
partitions for the above drives:
.Bl -column header diskx undefined length
.Tn CDC No 9762 partitions
.Sy	disk	start	length	cyls
E 6
	hp?a	0	15884	0-99
	hp?b	16000	33440	100-309
	hp?c	0	131680	0-822
	hp?d	49600	15884	309-408
	hp?e	65440	55936	409-758
	hp?f	121440	10080	759-822
	hp?g	49600	82080	309-822
D 6
.PP
E 4
D 2
AMPEX/CDC 300M drive partitions:
E 2
I 2
CDC 9766 300M drive partitions:
E 2
	disk	start	length	cyl
E 6
I 6

.Tn CDC No 9766 300M drive partitions:
.Sy	disk	start	length	cyl
E 6
	up?a	0	15884	0-26
	up?b	16416	33440	27-81
I 2
	up?c	0	500384	0-822
	up?d	341696	15884	562-588
	up?e	358112	55936	589-680
	up?f	414048	861760	681-822
	up?g	341696	158528	562-822
	up?h	49856	291346	82-561
D 6
.PP
I 4
AMPEX DM980 partitions
	disk	start	length	cyls
E 6
I 6

.Tn AMPEX DM Ns No 980 partitions
.Sy	disk	start	length	cyls
E 6
	hp?a	0	15884	0-99
	hp?b	16000	33440	100-309
	hp?c	0	131680	0-822
	hp?d	49600	15884	309-408
	hp?e	65440	55936	409-758
	hp?f	121440	10080	759-822
	hp?g	49600	82080	309-822
D 6
.PP
E 4
AMPEX 9300 300M drive partitions:
	disk	start	length	cyl
E 6
I 6

.Tn AMPEX No 9300 300M drive partitions:
.Sy	disk	start	length	cyl
E 6
	up?a	0	15884	0-26
	up?b	16416	33440	27-81
E 2
	up?c	0	495520	0-814
	up?d	341696	15884	562-588
	up?e	358112	55936	589-680
D 2
	up?f	414048	81472	681-814
	up?g	341696	153824	562-814
E 2
I 2
	up?f	414048	81312	681-814
	up?g	341696	153664	562-814
E 2
	up?h	49856	291346	82-561
D 6
.PP
I 2
AMPEX Capricorn 330M drive partitions:
	disk	start	length	cyl
E 6
I 6

.Tn AMPEX No Capricorn 330M drive partitions:
.Sy	disk	start	length	cyl
E 6
	hp?a	0	15884	0-31
	hp?b	16384	33440	32-97
	hp?c	0	524288	0-1023
	hp?d	342016	15884	668-699
	hp?e	358400	55936	700-809
	hp?f	414720	109408	810-1023
	hp?g	342016	182112	668-1023
	hp?h	50176	291346	98-667
D 6
.PP
E 2
FUJITSU 160M drive partitions:
	disk	start	length	cyl
E 6
I 6

.Tn FUJITSU No 160M drive partitions:
.Sy	disk	start	length	cyl
E 6
	up?a	0	15884	0-49
	up?b	16000	33440	50-154
	up?c	0	263360	0-822
D 2
	up?h	49600	213760	155-822
E 2
I 2
	up?d	49600	15884	155-204
	up?e	65600	55936	205-379
	up?f	121600	141600	380-822
	up?g	49600	213600	155-822
I 4
D 6
.PP
FUJITSU Eagle partitions
	disk	start	length	cyls
E 6
I 6

.Tn FUJITSU No Eagle partitions
.Sy	disk	start	length	cyls
E 6
	hp?a	0	15884	0-16
	hp?b	16320	66880	17-86
	hp?c	0	808320	0-841
	hp?d	375360	15884	391-407
	hp?e	391680	55936	408-727
	hp?f	698880	109248	728-841
	hp?g	375360	432768	391-841
	hp?h	83520	291346	87-390
E 4
E 2
D 6
.DT
.fi
.PP
It is unwise for all of these files to be present in one installation,
since there is overlap in addresses and protection becomes
a sticky matter.
E 6
I 6
.El
.Pp
E 6
The up?a partition is normally used for the root file system,
the up?b partition as a paging area,
and the up?c partition for pack-pack copying (it maps the entire disk).
D 2
On 160M drives the up?h partition maps the rest of the pack.
On 300M drives both up?g and up?h are used to map the
E 2
I 2
On 160M drives the up?g partition maps the rest of the pack.
On other drives both up?g and up?h are used to map the
E 2
remaining cylinders.
D 2
.PP
The block files access the disk via the system's normal
buffering mechanism and may be read and written without regard to
physical disk records.  There is also a `raw' interface
which provides for direct transmission between the disk
and the user's read or write buffer.
A single read or write call results in exactly one I/O operation
and therefore raw I/O is considerably more efficient when
many words are transmitted.  The names of the raw files
conventionally begin with an extra `r.'
.PP
In raw I/O counts should be a multiple of 512 bytes (a disk sector).
Likewise
.I seek
calls should specify a multiple of 512 bytes.
E 2
D 6
.SH FILES
/dev/up[0-7][a-h]	block files
.br
/dev/rup[0-7][a-h]	raw files
.SH SEE ALSO
D 2
hk(4), hp(4)
E 2
I 2
hk(4), hp(4), uda(4)
E 2
.SH DIAGNOSTICS
D 5
\fBup%d%c: hard error sn%d cs2=%b er1=%b er2=%b\fR.  An unrecoverable
D 2
error occured during transfer of the specified sector of the specified
disk partition.  The contents of the cs2, er1 and er2 registers are printed
E 2
I 2
error occurred during transfer of the specified sector in the specified
disk partition.
E 5
I 5
\fBup%d%c: hard error %sing fsbn %d[-%d] cs2=%b er1=%b er2=%b\fR.
E 6
I 6
.Sh FILES
.Bl -tag -width Pa -compact
.It Pa /dev/up[0-7][a-h]
block files
.It Pa /dev/rup[0-7][a-h]
raw files
.El
.Sh DIAGNOSTICS
.Bl -diag
.It "up%d%c: hard error %sing fsbn %d[-%d] cs2=%b er1=%b er2=%b."
E 6
An unrecoverable error occurred during transfer of the specified
filesystem block number(s),
which are logical block numbers on the indicated partition.
E 5
The contents of the cs2, er1 and er2 registers are printed
E 2
in octal and symbolically with bits decoded.
The error was either unrecoverable, or a large number of retry attempts
(including offset positioning and drive recalibration) could not
recover the error.
D 6
.PP
\fBup%d: write locked\fR.  The write protect switch was set on the drive
E 6
I 6
.Pp
.It "up%d: write locked."
The write protect switch was set on the drive
E 6
when a write was attempted.  The write operation is not recoverable.
D 6
.PP
\fBup%d: not ready\fR.  The drive was spun down or off line when it was
E 6
I 6
.Pp
.It "up%d: not ready."
The drive was spun down or off line when it was
E 6
accessed.  The i/o operation is not recoverable.
D 6
.PP
D 2
\fBup%d: not ready (came back!)\fR.  The drive was not ready, but after
E 2
I 2
\fBup%d: not ready (flakey)\fR.  The drive was not ready, but after
E 6
I 6
.Pp
.It "up%d: not ready (flakey)."
The drive was not ready, but after
E 6
E 2
printing the message about being not ready (which takes a fraction
of a second) was ready.  The operation is recovered if no further
errors occur.
D 6
.PP
D 5
\fBup%d%c: soft ecc sn%d\fR.  A recoverable ECC error occurred on the
E 5
I 5
\fBup%d%c: soft ecc reading fsbn %d[-%d]\fP.
E 6
I 6
.Pp
.It "up%d%c: soft ecc reading fsbn %d[-%d]."
E 6
A recoverable ECC error occurred on the
E 5
D 2
specified sector of the specified disk partition.  This happens normally
E 2
I 2
specified sector of the specified disk partition.
This happens normally
E 2
a few times a week.  If it happens more frequently than
D 2
this the sectors where the errors are occuring should be checked to see
E 2
I 2
this the sectors where the errors are occurring should be checked to see
E 2
if certain cylinders on the pack, spots on the carriage of the drive
or heads are indicated.
D 6
.PP
\fBsc%d: lost interrupt\fR.  A timer watching the controller detecting
E 6
I 6
.Pp
.It "sc%d: lost interrupt."
A timer watching the controller detecting
E 6
no interrupt for an extended period while an operation was outstanding.
This indicates a hardware or software failure.  There is currently a
hardware/software problem with spinning down drives while they are
being accessed which causes this error to occur.
D 6
The error causes a UNIBUS reset, and retry of the pending operations.
E 6
I 6
The error causes a
.Tn UNIBUS
reset, and retry of the pending operations.
E 6
If the controller continues to lose interrupts, this error will recur
a few seconds later.
D 6
.SH BUGS
In raw I/O
.I read
and
.IR write (2)
truncate file offsets to 512-byte block boundaries,
and
.I write
scribbles on the tail of incomplete blocks.
Thus,
in programs that are likely to access raw devices,
.I read, write
and
.IR lseek (2)
should always deal in 512-byte multiples.
D 4
.PP
D 2
DEC-standard error logging and bad block forwarding should be supported;
the code to do this could be easily incorporated from the
.IR hp (4)
driver.  All that would be needed then would be a stand-alone formatting
program to detect the bad sectors, format the disk so that the sectors
were marked bad and initialize the bad sector files.
E 2
I 2
DEC-standard error logging should be supported.
E 4
E 2
.PP
E 6
I 6
.El
.Sh SEE ALSO
.Xr hk 4 ,
.Xr hp 4 ,
.Xr uda 4
.Sh HISTORY
The
.Nm up
driver appeared in
.Bx 4.0 .
.Sh BUGS
.Pp
E 6
A program to analyze the logged error information (even in its
present reduced form) is needed.
D 6
.PP
E 6
I 6
.Pp
E 6
The partition tables for the file systems should be read off of each
pack, as they are never quite what any single installation would prefer,
and this would make packs more portable.
E 1
