h47504
s 00002/00002/00082
d D 8.1 93/06/05 13:52:04 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00083/00029/00001
d D 6.3 91/04/29 04:31:30 cael 5 4
c mdoc version three/bsd copyright
e
s 00002/00002/00028
d D 6.2 86/05/19 17:32:09 karels 4 3
c trivia
e
s 00001/00001/00029
d D 6.1 85/05/15 18:14:41 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00010/00011/00020
d D 5.1 85/05/15 18:14:33 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00031/00000/00000
d D 4.1 85/05/15 18:14:26 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
D 6
.\" Copyright 1991 The Regents of the University of California.
.\" All rights reserved.
E 6
I 6
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 6
E 5
.\"
D 2
.TH ACCT 5
E 2
I 2
D 3
.TH ACCT 5 "15 January 1983"
E 3
I 3
D 5
.TH ACCT 5 "%Q%"
E 3
E 2
.AT 3
.SH NAME
acct \- execution accounting file
.SH SYNOPSIS
.B #include <sys/acct.h>
.SH DESCRIPTION
D 2
.IR Acct (2)
causes entries to be made into an accounting file
E 2
I 2
The
.IR acct (2)
D 4
system call makes entries in an accounting file
E 4
I 4
system call arranges for entries to be made in an accounting file
E 4
E 2
for each process that terminates.
The accounting file is a sequence of entries whose layout,
D 2
as defined by the include file
is:
E 2
I 2
as defined by the include file is:
E 2
.PP
.nf
D 2
.ta \w'typedef 'u +\w'comp_t  'u +\w'ac_comm[10];   'u
E 2
I 2
.ta \w'typedef 'u +\w'ACOMPAT  'u +\w'ac_comm[10];   'u
E 2
.so /usr/include/sys/acct.h
.fi
.PP
D 4
If the process does an
E 4
I 4
If the process was created by an
E 4
D 2
.IR exec (2),
E 2
I 2
.IR execve (2),
E 2
the first 10 characters of the filename appear in
.I ac_comm.
The accounting flag contains bits indicating whether
D 2
.IR exec (2)
was ever accomplished, and whether the
process ever had super-user privileges.
E 2
I 2
.IR execve (2)
was ever accomplished, and whether the process ever had super-user privileges.
E 2
.SH SEE ALSO
D 2
acct(2), sa(1)
E 2
I 2
acct(2), execve(2), sa(8)
E 5
I 5
.\" %sccs.include.redist.roff%
.\"
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt ACCT 5
.Os
.Sh NAME
.Nm acct
.Nd execution accounting file
.Sh SYNOPSIS
.Fd #include <sys/acct.h>
.Sh DESCRIPTION
The kernel maintains the following
.Fa acct
information structure for all
processes. If a process terminates, and accounting is enabled,
the kernel calls the
.Xr acct 2
function call to prepare and append the record
to the accounting file.
.Bd -literal
/*
 * Accounting structures; these use a comp_t type which is a 3 bits base 8
 * exponent, 13 bit fraction ``floating point'' number.  Units are 1/AHZ
 * seconds.
 */
typedef u_short comp_t;

struct acct {
	char	ac_comm[10];	/* name of command */
	comp_t	ac_utime;	/* user time */
	comp_t	ac_stime;	/* system time */
	comp_t	ac_etime;	/* elapsed time */
	time_t	ac_btime;	/* starting time */
	uid_t	ac_uid;		/* user id */
	gid_t	ac_gid;		/* group id */
	short	ac_mem;		/* memory usage average */
	comp_t	ac_io;		/* count of IO blocks */
	dev_t	ac_tty;		/* controlling tty */
#define	AFORK	0x01		/* forked but not execed */
#define	ASU	0x02		/* used super-user permissions */
#define	ACOMPAT	0x04		/* used compatibility mode */
#define	ACORE	0x08		/* dumped core */
#define	AXSIG	0x10		/* killed by a signal */
	char	ac_flag;	/* accounting flags */
};

/*
 * 1/AHZ is the granularity of the data encoded in the comp_t fields.
 * This is not necessarily equal to hz.
 */
#define	AHZ	64

#ifdef KERNEL
struct vnode	*acctp;
#endif
.Ed
.Pp
If a terminated process was created by an
.Xr execve 2 ,
the name of the executed file (at most ten characters of it)
is saved in the field
.Fa ac_comm
and its status is saved by setting one of more of the following flags in
.Fa ac_flag:
.Dv AFORK ,
.Dv ASU ,
.Dv ACOMPAT ,
.Dv ACORE
and
.Dv ASIG .
.Sh SEE ALSO
.Xr acct 2 ,
.Xr execve 2 ,
.Xr sa 8
.Sh HISTORY
A
.Nm
file format appeared in
.At v7 .
E 5
E 2
E 1
