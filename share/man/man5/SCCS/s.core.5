h27944
s 00002/00002/00083
d D 8.3 93/12/11 23:16:29 mckusick 8 7
c copyediting for Usenix manuals
e
s 00006/00006/00079
d D 8.2 93/11/17 09:52:26 mckusick 7 6
c name of file is programname.core
e
s 00002/00002/00083
d D 8.1 93/06/05 13:52:14 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00067/00043/00018
d D 6.3 91/04/29 04:31:32 cael 5 4
c mdoc version three/bsd copyright
e
s 00005/00002/00056
d D 6.2 86/03/09 18:53:32 karels 4 3
c machine/param.h is gone
e
s 00001/00001/00057
d D 6.1 85/05/15 18:23:18 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00034/00018/00024
d D 5.1 85/05/15 18:23:01 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00042/00000/00000
d D 4.1 85/05/15 18:22:49 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 6
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 6
I 6
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 6
E 5
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
.\" %sccs.include.redist.roff%
E 5
.\"
D 2
.TH CORE 5 
E 2
I 2
D 3
.TH CORE 5  "27 July 1983"
E 3
I 3
D 5
.TH CORE 5  "%Q%"
E 3
E 2
.UC 4
.SH NAME
core \- format of memory image file
I 2
.SH SYNOPSIS
D 4
.B #include <machine/param.h>
E 4
I 4
.B #include <sys/param.h>
E 4
E 2
.SH DESCRIPTION
D 2
UNIX
writes out a memory image of a terminated
process when any of various errors occur.
See
.IR signal (2)
for the list of reasons;
the most common are memory violations, illegal
instructions, bus errors, and user-generated
quit signals.
E 2
I 2
The UNIX System writes out a memory image of a terminated
process when any of various errors occur.  See
.IR sigvec (2)
for the list of reasons; the most common are memory violations, illegal
instructions, bus errors, and user-generated quit signals.
E 2
The memory image is called `core' and is written in the process's
D 2
working directory (provided it can be; normal
access controls apply).
E 2
I 2
working directory (provided it can be; normal access controls apply).
E 2
.PP
E 5
I 5
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt CORE 5
.Os BSD 4
.Sh NAME
.Nm core
.Nd memory image file format
.Sh SYNOPSIS
.Fd #include <sys/param.h>
.Sh DESCRIPTION
A small number of signals which cause abnormal termination of a process
also cause a record of the process's in-core state to be written
D 8
to disk for later examination by one of the aviailable debuggers.
E 8
I 8
to disk for later examination by one of the available debuggers.
E 8
(See
.Xr sigaction 2 . )
This memory image is written to a file named
D 7
.Nm core
E 7
I 7
.Nm programname.core
E 7
in the working directory;
provided the terminated process had write permission in the directory,
D 8
and provided the abnormality did not caused
E 8
I 8
and provided the abnormality did not cause
E 8
a system crash.
(In this event, the decision to save the core file is arbitrary, see
.Xr savecore 8 . )
.Pp
E 5
The maximum size of a
D 5
.I core
E 5
I 5
D 7
.Nm core
E 7
I 7
.Nm programname.core
E 7
E 5
file is limited by
D 2
.IR vlimit (2) .
E 2
I 2
D 5
.IR setrlimit (2).
E 5
I 5
.Xr setrlimit 2 .
E 5
E 2
Files which would be larger than the limit are not created.
D 5
.PP
D 2
The core file consists of the \fIu.\fR area, which currently consists
of 6 pages, beginning with a \fIuser\fR structure as given in
/usr/include/sys/user.h.
The kernel stack grows from the end of this 6 page region.
E 2
I 2
The core file consists of the
.I u.
E 5
I 5
.Pp
The
D 7
.Nm core
E 7
I 7
.Nm programname.core
E 7
file consists of the
.Fa u .
E 5
area, whose size (in pages) is
D 5
defined by the UPAGES manifest in the
D 4
.RI < machine/param.h >
E 4
I 4
.RI < sys/param.h >
E 5
I 5
defined by the
.Dv UPAGES
manifest in the
.Aq Pa sys/param.h
E 5
E 4
file.  The 
D 5
.I u.
E 5
I 5
.Fa u .
E 5
area starts with a 
D 5
.I user
E 5
I 5
.Fa user
E 5
structure as given in
D 5
.RI < sys/user.h >.
E 2
The remainder of the core file consists first of the data pages and then
E 5
I 5
.Aq Pa sys/user.h .
The remainder of the
D 7
.Nm core
E 7
I 7
.Nm programname.core
E 7
file consists of the data pages followed by
E 5
the stack pages of the process image.
I 2
D 5
The amount of data space image in the core file is given (in pages) by the
E 5
I 5
The amount of data space image in the
D 7
.Nm core
E 7
I 7
.Nm programname.core
E 7
file is given (in pages) by the
E 5
variable
D 5
.I u_dsize
E 5
I 5
.Fa u_dsize
E 5
in the
D 5
.I u.
E 5
I 5
.Fa u .
E 5
area.
The amount of stack image in the core file is given (in pages) by the
variable 
D 5
.I u_ssize
E 5
I 5
.Fa u_ssize
E 5
in the 
D 5
.I u.
E 5
I 5
.Ar u .
E 5
area.
I 4
D 5
The size of a ``page'' is given by the constant NBPG
E 5
I 5
The size of a ``page'' is given by the constant
.Dv NBPG
E 5
(also from
D 5
.RI < sys/param.h >).
E 4
E 2
.PP
In general the debugger
.IR adb (1)
is sufficient to deal with core images.
.SH "SEE ALSO"
D 2
adb(1), signal(2), vlimit(2)
E 2
I 2
adb(1), dbx(1), sigvec(2), setrlimit(2)
E 5
I 5
.Aq Pa sys/param.h ) .
.Sh SEE ALSO
.Xr adb 1 ,
.Xr dbx 1 ,
.Xr gdb 1 ,
.Xr kgdb 1 ,
.Xr sigaction 2 ,
.Xr setrlimit 2
.Sh HISTORY
A
D 7
.Nm
E 7
I 7
.Nm core
E 7
file format appeared in
.At v6 .
E 5
E 2
E 1
