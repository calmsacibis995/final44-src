h22746
s 00002/00002/00198
d D 8.1 93/06/05 13:52:47 bostic 8 7
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00106/00082/00094
d D 6.5 91/05/10 13:41:59 cael 7 6
c mdoc version three
e
s 00001/00011/00175
d D 6.4 90/06/23 18:02:06 trent 6 5
c new copyright notice
e
s 00049/00035/00137
d D 6.3 90/05/06 14:32:58 mckusick 5 4
c update for quotas, new fsck pass processing, and addition of mfs
e
s 00098/00048/00074
d D 6.2 89/08/18 19:31:26 mckusick 4 3
c update for new fstab format that supports vnodes
e
s 00001/00001/00121
d D 6.1 85/05/15 18:12:17 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00036/00041/00086
d D 5.1 85/05/15 18:12:06 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00127/00000/00000
d D 4.1 85/05/15 18:11:59 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 4
I 4
D 7
.\" Copyright (c) 1980, 1989 The Regents of the University of California.
E 7
I 7
D 8
.\" Copyright (c) 1980, 1989, 1991 The Regents of the University of California.
E 7
.\" All rights reserved.
E 8
I 8
.\" Copyright (c) 1980, 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 8
E 4
.\"
I 4
D 6
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 6
I 6
D 7
.\" %sccs.include.redist.man%
E 7
I 7
.\" %sccs.include.redist.roff%
E 7
E 6
.\"
E 4
D 7
.\"	%W% (Berkeley) %G%
E 7
I 7
.\"     %W% (Berkeley) %G%
E 7
.\"
D 2
.TH FSTAB 5 
E 2
I 2
D 3
.TH FSTAB 5  "26 June 1983"
E 3
I 3
D 7
.TH FSTAB 5  "%Q%"
E 3
E 2
.UC 4
.SH NAME
D 4
fstab \- static information about the filesystems
E 4
I 4
D 5
fstab \- static information about the file systems
E 5
I 5
fstab \- static information about the filesystems
E 5
E 4
.SH SYNOPSIS
.B #include <fstab.h>
.SH DESCRIPTION
E 7
I 7
.Dd %Q%
.Dt FSTAB 5
.Os BSD 4
.Sh NAME
.Nm fstab
.Nd static information about the filesystems
.Sh SYNOPSIS
.Fd #include <fstab.h>
.Sh DESCRIPTION
E 7
The file
D 7
.I /etc/fstab
E 7
I 7
.Nm fstab
E 7
contains descriptive information about the various file
systems.
D 7
.I /etc/fstab
E 7
I 7
.Nm fstab
E 7
D 4
is only
.I read
by programs, and not written;
E 4
I 4
is only read by programs, and not written;
E 4
it is the duty of the system administrator to properly create 
and maintain this file.
I 4
D 5
Each file system is described on a separate line;
E 5
I 5
Each filesystem is described on a separate line;
E 5
fields on each line are separated by tabs or spaces.
E 4
D 2
.PP
These programs use
.I /etc/fstab:
.I dump,
.I mount,
.I umount,
.I swapon,
.I fsck
and
.I df.
E 2
The order of records in
D 7
.I /etc/fstab
E 7
I 7
.Nm fstab
E 7
D 2
is important,
for both
E 2
I 2
is important because
E 2
D 7
.I fsck,
.I mount,
E 7
I 7
.Xr fsck 8 ,
.Xr mount 8 ,
E 7
and
D 7
.I umount
E 7
I 7
.Xr umount 8
E 7
sequentially iterate through
D 7
.I /etc/fstab
E 7
I 7
.Nm fstab
E 7
doing their thing.
D 7
.PP
D 4
The special file name is the 
.B block
special file name, 
E 4
I 4
The first field, (\c
.IR \|fs_spec ),
E 7
I 7
.Pp
The first field,
.Pq Fa fs_spec ,
E 7
describes the block special device or
D 5
remote file system to be mounted.
For file systems of type
E 5
I 5
remote filesystem to be mounted.
For filesystems of type
E 5
D 7
.BR ufs ,
E 7
I 7
.Em ufs ,
E 7
the special file name is the block special file name, 
E 4
and not the character special file name.
If a program needs the character special file name,
the program must create it by appending a ``r'' after the
last ``/'' in the special file name.
D 7
.PP
I 4
The second field, (\c
.IR \|fs_file ),
E 7
I 7
.Pp
The second field,
.Pq Fa fs_file ,
E 7
D 5
describes the mount point for the file system.
E 5
I 5
describes the mount point for the filesystem.
E 5
For swap partitions, this field should be specified as ``none''.
D 7
.PP
The third field, (\c
.IR \|fs_vfstype ),
E 7
I 7
.Pp
The third field,
.Pq Fa fs_vfstype ,
E 7
D 5
describes the type of the file system.
The system currently supports three types of file systems:
E 5
I 5
describes the type of the filesystem.
The system currently supports four types of filesystems:
E 5
D 7
.IP \fBufs\fR 8
D 5
the local UNIX file system
E 5
I 5
a local UNIX filesystem
.IP \fBmfs\fR 8
a local memory-based UNIX filesystem
E 5
.IP \fBnfs\fR 8
E 7
I 7
.Bl -tag -width indent -offset indent
.It Em ufs 
a local
.Tn UNIX
filesystem
.It Em mfs 
a local memory-based
.Tn UNIX
filesystem
.It Em nfs 
E 7
D 5
a Sun Microsystems ``Network File System''
E 5
I 5
a Sun Microsystems compatible ``Network File System''
E 5
D 7
.IP \fBswap\fR 8
E 7
I 7
.It Em swap 
E 7
a disk partition to be used for swapping
D 7
.PP
The fourth field, (\c
.IR \|fs_mntops ),
E 7
I 7
.El
.Pp
The fourth field,
.Pq Fa fs_mntops ,
E 7
D 5
describes the mount options associated with the file system.
E 5
I 5
describes the mount options associated with the filesystem.
E 5
It is formatted as a comma separated list of options.
It contains at least the type of mount (see
D 7
.I fs_type
E 7
I 7
.Fa fs_type
E 7
below) plus any additional options
D 5
appropriate to the file system type.
E 5
I 5
appropriate to the filesystem type.
E 5
D 7
.PP
E 7
I 7
.Pp
E 7
I 5
If the options ``userquota'' and/or ``groupquota'' are specified,
the filesystem is automatically processed by the
D 7
.IR quotacheck (8)
E 7
I 7
.Xr quotacheck 8
E 7
command, and user and/or group disk quotas are enabled with
D 7
.IR quotaon (8).
E 7
I 7
.Xr quotaon 8 .
E 7
By default,
filesystem quotas are maintained in files named
D 7
.I quota.user
E 7
I 7
.Pa quota.user
E 7
and
D 7
.I quota.group
E 7
I 7
.Pa quota.group
E 7
which are located at the root of the associated filesystem.
These defaults may be overridden by putting an equal sign
and an alternative absolute pathname following the quota option.
D 7
Thus, if the user quota file for /tmp is stored in /var/quotas/tmp.user,
E 7
I 7
Thus, if the user quota file for
.Pa /tmp
is stored in
.Pa /var/quotas/tmp.user ,
E 7
this location can be specified as:
D 7
.IP
	userquota=/var/quotas/tmp.user
.PP
E 7
I 7
.Bd -literal -offset indent
userquota=/var/quotas/tmp.user
.Ed
.Pp
E 7
E 5
The type of the mount is extracted from the
D 7
.I fs_mntops
E 7
I 7
.Fa fs_mntops
E 7
field and stored separately in the
D 7
.I fs_type
E 7
I 7
.Fa fs_type
E 7
field (it is not deleted from the
D 7
.I fs_mntops
E 7
I 7
.Fa fs_mntops
E 7
field).
E 4
If
D 7
.I fs_type
E 7
I 7
.Fa fs_type
E 7
D 5
is ``rw'' or ``ro'' then the file system whose name is given in the
E 5
I 5
is ``rw'' or ``ro'' then the filesystem whose name is given in the
E 5
D 7
.I fs_file
E 7
I 7
.Fa fs_file
E 7
D 2
field is normally mounted read-write or read-only on the specified special
file.
E 2
I 2
field is normally mounted read-write or read-only on the
D 5
specified special file.  If
.I fs_type
D 4
is ``rq'', then the file system is normally mounted read-write
with disk quotas enabled.
E 2
The
.I fs_freq
field is used for these file systems by the
.IR dump (8)
command to determine which file systems need to be dumped.
The
.I fs_passno
field is used by the
.IR fsck (8)
program to determine the order in which file system checks are done
at reboot time.
The root file system should be specified with a
.I fs_passno
of 1, and other file systems should have larger numbers.  File systems
within a drive should have distinct numbers, but file systems on different
drives can be checked on the same pass to utilize parallelism available in
the hardware.
.PP
E 4
I 4
is ``rq'', then the file system is normally mounted read-write,
the file system is automatically processed by the
.IR quotacheck (8)
command, and disk quotas are enabled with
.IR quotaon (8).
File system quotas are maintained in a file ``quotas'', which is
located at the root of the associated file system.
E 5
I 5
specified special file.
E 5
E 4
If
D 7
.I fs_type
E 7
I 7
.Fa fs_type
E 7
D 2
is ``sw'' then the special file is made avaiable as a piece of swap
E 2
I 2
is ``sw'' then the special file is made available as a piece of swap
E 2
space by the
D 7
.IR swapon (8)
E 7
I 7
.Xr swapon 8
E 7
command at the end of the system reboot procedure.
The fields other than
D 7
.I fs_spec
E 7
I 7
.Fa fs_spec
E 7
and
D 7
.I fs_type
E 7
I 7
.Fa fs_type
E 7
D 4
are not used in this case.
.PP
E 4
I 4
are unused.
E 4
D 2
.I Fs_type
may be specified as ``xx'' to cause an entry to be ignored.
This is useful to show disk partitions which are currently not
used but will be used later.
E 2
I 2
If
D 7
.I fs_type
E 7
I 7
.Fa fs_type
E 7
D 4
is ``rq'' then at boot time the file system is automatically
processed by the
.IR quotacheck (8)
command and disk quotas are then enabled with
.IR quotaon (8).
File system quotas are maintained in a file ``quotas'', which is
located at the root of the associated file system.
.PP
If
.I fs_type
E 4
is specified as ``xx'' the entry is ignored.
D 4
This is useful to show disk partitions which are currently not used.
E 4
I 4
This is useful to show disk partitions which are currently unused.
D 7
.PP
The fifth field, (\c
.IR \|fs_freq ),
E 7
I 7
.Pp
The fifth field,
.Pq Fa fs_freq ,
E 7
D 5
is used for these file systems by the
E 5
I 5
is used for these filesystems by the
E 5
D 7
.IR dump (8)
E 7
I 7
.Xr dump 8
E 7
D 5
command to determine which file systems need to be dumped.
E 5
I 5
command to determine which filesystems need to be dumped.
E 5
If the fifth field is not present, a value of zero is returned and
D 7
.I dump
E 7
I 7
.Xr dump
E 7
D 5
will assume that the file system does not need to be dumped.
E 5
I 5
will assume that the filesystem does not need to be dumped.
E 5
D 7
.PP
The sixth field, (\c
.IR \|fs_passno ),
E 7
I 7
.Pp
The sixth field,
.Pq Fa fs_passno ,
E 7
is used by the
D 7
.IR fsck (8)
E 7
I 7
.Xr fsck 8
E 7
D 5
program to determine the order in which file system checks are done
E 5
I 5
program to determine the order in which filesystem checks are done
E 5
at reboot time.
D 5
The root file system should be specified with a
E 5
I 5
The root filesystem should be specified with a
E 5
D 7
.I fs_passno
E 7
I 7
.Fa fs_passno
E 7
D 5
of 1, and other file systems should have larger numbers.
File systems within a drive should have distinct numbers,
but file systems on different drives can be checked on the
same pass to utilize parallelism available in the hardware.
If the sixth field is not present, a value of zero is returned and
E 5
I 5
of 1, and other filesystems should have a 
D 7
.I fs_passno
E 7
I 7
.Fa fs_passno
E 7
of 2.
Filesystems within a drive will be checked sequentially,
but filesystems on different drives will be checked at the
same time to utilize parallelism available in the hardware.
If the sixth field is not present or zero,
a value of zero is returned and
E 5
D 7
.I fsck
E 7
I 7
.Xr fsck
E 7
D 5
will assume that the file system does not need to be checked.
E 5
I 5
will assume that the filesystem does not need to be checked.
E 5
E 4
E 2
D 7
.sp 1
.nf
D 2
.ta \w'#define 'u +\w'FSTABARG(p) 'u \w'#define 'u+\w'char\ \ 'u+\w'fs_spec[FSNMLG]; 'u
#define	FSTAB		"/etc/fstab"
#define	FSNMLG		16

#define	FSTABFMT	"%16s:%16s:%2s:%d:%d\en"
#define	FSTABARG(p)	(p)\->fs_spec, (p)\->fs_file, \e
		(p)\->fs_type, &(p)\->fs_freq, &(p)\->fs_passno
#define	FSTABNARGS	5

#define	FSTAB_RW	"rw"		/* read write device */
#define	FSTAB_RO	"ro"		/* read only device */
#define	FSTAB_SW	"sw"		/* swap device */
#define	FSTAB_XX	"xx"		/* ignore totally */

.ta \w'#define 'u +\w'char\ \ 'u +\w'fs_spec[FSNMLG]; 'u
E 2
I 2
.DT
E 7
I 7
.Bd -literal
E 7
#define	FSTAB_RW	"rw"	/* read-write device */
#define	FSTAB_RO	"ro"	/* read-only device */
D 5
#define	FSTAB_RQ	"rq"	/* read-write with quotas */
E 5
#define	FSTAB_SW	"sw"	/* swap device */
#define	FSTAB_XX	"xx"	/* ignore totally */
D 7
.PP
D 4
.ta \w'#define 'u +\w'char\ \ 'u +\w'fs_passno; 'u
E 4
I 4
.ta \w'#define 'u +\w'char\ \ 'u +\w'*fs_vfstype;\ \ 'u
E 7
I 7

E 7
E 4
E 2
struct fstab {
D 2
	char	fs_spec[FSNMLG];	/* block special device name */
	char	fs_file[FSNMLG];	/* file system path prefix */
	char	fs_type[3];		/* rw,ro,sw or xx */
E 2
I 2
	char	*fs_spec;	/* block special device name */
D 5
	char	*fs_file;	/* file system path prefix */
D 4
	char	*fs_type;		/* rw,ro,sw or xx */
E 2
	int	fs_freq;		/* dump frequency, in days */
	int	fs_passno;		/* pass number on parallel dump */
E 4
I 4
	char	*fs_vfstype;	/* type of file system */
E 5
I 5
	char	*fs_file;	/* filesystem path prefix */
	char	*fs_vfstype;	/* type of filesystem */
E 5
	char	*fs_mntops;	/* comma separated mount options */
	char	*fs_type;	/* rw, ro, sw, or xx */
	int	fs_freq;	/* dump frequency, in days */
	int	fs_passno;	/* pass number on parallel dump */
E 4
};
D 7
.fi
D 2

E 2
.PP
E 7
I 7
.Ed
.Pp
E 7
The proper way to read records from
D 7
.I /etc/fstab
D 2
is to use the routines getfsent(), getfsspec() or getfsfile().
E 2
I 2
is to use the routines getfsent(), getfsspec(), getfstype(),
and getfsfile().
E 2
.SH FILES
/etc/fstab
.SH SEE ALSO
D 2
getfsent(3)
E 2
I 2
D 4
getfsent(3X)
E 4
I 4
getfsent(3)
E 7
I 7
.Pa fstab
is to use the routines
.Xr getfsent 3 ,
.Xr getfsspec 3 ,
.Xr getfstype 3 ,
and
.Xr getfsfile 3 .
.Sh FILES
.Bl -tag -width /etc/fstab -compact
.It Pa /etc/fstab
The file
.Nm fstab
resides in
.Pa /etc .
.El
.Sh SEE ALSO
.Xr getfsent 3
.Sh HISTORY
The
.Nm
file format appeared in
.Bx 4.0 .
E 7
E 4
E 2
E 1
