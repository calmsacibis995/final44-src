h46978
s 00079/00045/00076
d D 8.2 95/04/28 17:15:27 mckusick 6 5
c update for current systems
e
s 00002/00002/00119
d D 8.1 93/06/05 13:54:20 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00119/00036/00002
d D 6.2 91/04/29 04:31:29 cael 4 3
c mdoc version three/bsd copyright
e
s 00001/00001/00037
d D 6.1 85/05/15 18:13:09 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00003/00003/00035
d D 5.1 85/05/15 18:13:01 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00038/00000/00000
d D 4.1 85/05/15 18:12:55 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 4
I 4
D 5
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
E 5
I 5
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 5
E 4
.\"
D 4
.\"	%W% (Berkeley) %G%
E 4
I 4
.\" %sccs.include.redist.roff%
E 4
.\"
D 2
.TH TYPES 5
E 2
I 2
D 3
.TH TYPES 5 "1 April 1983"
E 3
I 3
D 4
.TH TYPES 5 "%Q%"
E 3
E 2
.UC 4
.SH NAME
types \- primitive system data types
.SH SYNOPSIS
.B #include <sys/types.h>
.SH DESCRIPTION
The data types defined in the include file
are used in UNIX system code;
some data of these types are accessible to user code:
.PP
.nf
.ta \w'typedef\ \ 'u +\w'minor(x)\ \ 'u +\w' short\ \ 'u
.so /usr/include/sys/types.h
.fi
.PP
The form
.I daddr_t
is used for disk addresses except in an
i-node on disk, see
D 2
.IR filsys (5).
E 2
I 2
.IR fs (5).
E 2
Times are encoded in seconds since 00:00:00 GMT, January 1, 1970.
The major and minor parts of a device code
specify kind and unit number of a device
and are installation-dependent.
Offsets are measured in bytes from the beginning of a file.
The
.I label_t
variables are used to save the processor state
while another process is running.
.SH SEE ALSO
D 2
filsys(5), time(2), lseek(2), adb(1)
E 2
I 2
fs(5), time(3), lseek(2), adb(1)
E 4
I 4
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt TYPES 5
.Os BSD 4
.Sh NAME
.Nm types
.Nd system data types
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Sh DESCRIPTION
The file
.Pa sys/types.h
contains the defined data types used in the kernel (most are
used through out the system).
.Bd -literal
D 6
#ifndef _TYPES_H_
#define	_TYPES_H_
E 6
I 6
#ifndef _SYS_TYPES_H_
#define	_SYS_TYPES_H_
E 6

D 6
typedef	short	dev_t;
#ifndef _POSIX_SOURCE
					/* major part of a device */
#define	major(x)	((int)(((unsigned)(x)>>8)&0377))
					/* minor part of a device */
#define	minor(x)	((int)((x)&0377))
					/* make a device number */
#define	makedev(x,y)	((dev_t)(((x)<<8) | (y)))
#endif
E 6
I 6
/* Machine type dependent parameters. */
#include <machine/ansi.h>
#include <machine/types.h>
E 6

I 6
#ifndef _POSIX_SOURCE
E 6
typedef	unsigned char	u_char;
typedef	unsigned short	u_short;
typedef	unsigned int	u_int;
typedef	unsigned long	u_long;
typedef	unsigned short	ushort;		/* Sys V compatibility */
I 6
typedef	unsigned int	uint;		/* Sys V compatibility */
#endif
E 6

D 6
#include <machine/ansi.h>
#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
#include <machine/types.h>
E 6
I 6
typedef	u_int64_t	u_quad_t;	/* quads */
typedef	int64_t		quad_t;
typedef	quad_t *	qaddr_t;

typedef	char *		caddr_t;	/* core address */
typedef	int32_t		daddr_t;	/* disk address */
typedef	u_int32_t	dev_t;		/* device number */
typedef u_int32_t	fixpt_t;	/* fixed point number */
typedef	u_int32_t	gid_t;		/* group id */
typedef	u_int32_t	ino_t;		/* inode number */
typedef	long		key_t;		/* IPC key (for Sys V IPC) */
typedef	u_int16_t	mode_t;		/* permissions */
typedef	u_int16_t	nlink_t;	/* link count */
typedef	quad_t		off_t;		/* file offset */
typedef	int32_t		pid_t;		/* process id */
typedef	int32_t		segsz_t;	/* segment size */
typedef	int32_t		swblk_t;	/* swap offset */
typedef	u_int32_t	uid_t;		/* user id */

/*
 * This belongs in unistd.h, but is placed here to ensure that programs
 * casting the second parameter of lseek to off_t will get the correct
 * version of lseek.
 */
#ifndef KERNEL
#include <sys/cdefs.h>
__BEGIN_DECLS
off_t	 lseek __P((int, off_t, int));
__END_DECLS
E 6
#endif

D 6
#ifdef	_CLOCK_T_
typedef	_CLOCK_T_	clock_t;
#undef	_CLOCK_T_
E 6
I 6
#ifndef _POSIX_SOURCE
							/* major number */
#define	major(x)	((int32_t)(((u_int32_t)(x) >> 8) & 0xff))
#define	minor(x)	((int32_t)((x) & 0xff))		/* minor number */
#define	makedev(x,y)	((dev_t)(((x) << 8) | (y)))	/* create dev_t */
E 6
#endif

D 6
#ifdef	_SIZE_T_
typedef	_SIZE_T_	size_t;
#undef	_SIZE_T_
E 6
I 6
#include <machine/endian.h>

#ifdef	_BSD_CLOCK_T_
typedef	_BSD_CLOCK_T_	clock_t;
#undef	_BSD_CLOCK_T_
E 6
#endif

D 6
#ifdef	_TIME_T_
typedef	_TIME_T_	time_t;
#undef	_TIME_T_
E 6
I 6
#ifdef	_BSD_SIZE_T_
typedef	_BSD_SIZE_T_	size_t;
#undef	_BSD_SIZE_T_
E 6
#endif

D 6
#ifndef _POSIX_SOURCE
typedef	struct	_uquad { unsigned long val[2]; } u_quad;
typedef	struct	_quad { long val[2]; } quad;
E 6
I 6
#ifdef	_BSD_SSIZE_T_
typedef	_BSD_SSIZE_T_	ssize_t;
#undef	_BSD_SSIZE_T_
E 6
#endif
D 6
typedef	long *	qaddr_t;	/* should be typedef quad * qaddr_t; */
E 6

D 6
typedef	long	daddr_t;
typedef	char *	caddr_t;
typedef	u_long	ino_t;
typedef	long	swblk_t;
typedef	long	segsz_t;
typedef	long	off_t;
typedef	u_short	uid_t;
typedef	u_short	gid_t;
typedef	short	pid_t;
typedef	u_short	nlink_t;
typedef	u_short	mode_t;
typedef u_long	fixpt_t;
E 6
I 6
#ifdef	_BSD_TIME_T_
typedef	_BSD_TIME_T_	time_t;
#undef	_BSD_TIME_T_
#endif
E 6

#ifndef _POSIX_SOURCE
#define	NBBY	8		/* number of bits in a byte */

/*
 * Select uses bit masks of file descriptors in longs.  These macros
 * manipulate such bit fields (the filesystem macros use chars).
 * FD_SETSIZE may be defined by the user, but the default here should
D 6
 * be >= NOFILE (param.h).
E 6
I 6
 * be enough for most uses.
E 6
 */
#ifndef	FD_SETSIZE
#define	FD_SETSIZE	256
#endif

D 6
typedef long	fd_mask;
E 6
I 6
typedef int32_t	fd_mask;
E 6
#define NFDBITS	(sizeof(fd_mask) * NBBY)	/* bits per mask */

#ifndef howmany
D 6
#define	howmany(x, y)	(((x)+((y)-1))/(y))
E 6
I 6
#define	howmany(x, y)	(((x) + ((y) - 1)) / (y))
E 6
#endif

typedef	struct fd_set {
	fd_mask	fds_bits[howmany(FD_SETSIZE, NFDBITS)];
} fd_set;

#define	FD_SET(n, p)	((p)->fds_bits[(n)/NFDBITS] |= (1 << ((n) % NFDBITS)))
#define	FD_CLR(n, p)	((p)->fds_bits[(n)/NFDBITS] &= ~(1 << ((n) % NFDBITS)))
#define	FD_ISSET(n, p)	((p)->fds_bits[(n)/NFDBITS] & (1 << ((n) % NFDBITS)))
D 6
#define	FD_ZERO(p)	bzero((char *)(p), sizeof(*(p)))
E 6
I 6
#define	FD_COPY(f, t)	bcopy(f, t, sizeof(*(f)))
#define	FD_ZERO(p)	bzero(p, sizeof(*(p)))
E 6

I 6
#if defined(__STDC__) && defined(KERNEL)
/*
 * Forward structure declarations for function prototypes.  We include the
 * common structures that cross subsystem boundaries here; others are mostly
 * used in the same place that the structure is defined.
 */
struct	proc;
struct	pgrp;
struct	ucred;
struct	rusage;
struct	file;
struct	buf;
struct	tty;
struct	uio;
#endif

E 6
#endif /* !_POSIX_SOURCE */
D 6
#endif /* !_TYPES_H_ */
E 6
I 6
#endif /* !_SYS_TYPES_H_ */
E 6
.Ed
.Sh SEE ALSO
.Xr fs 5 ,
.Xr time 3 ,
.Xr lseek 2 ,
D 6
.Xr adb 1
E 6
.Sh HISTORY
A
.Nm
file appeared in
.At v7 .
E 4
E 2
E 1
