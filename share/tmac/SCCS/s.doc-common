h46131
s 00002/00002/00403
d D 8.1 93/06/08 11:24:32 bostic 13 12
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00002/00002/00403
d D 5.9 93/05/20 13:11:23 cael 12 11
c update 4.4BSD from PRERELEASE
e
s 00016/00034/00389
d D 5.8 92/07/14 14:47:51 cael 11 10
c minor fixes (still have blank line booboo somewheres)
e
s 00004/00000/00419
d D 5.7 91/08/05 07:34:27 cael 10 9
c preening
e
s 00002/00001/00417
d D 5.6 91/07/01 13:37:04 cael 9 8
c minor fixes, line number fix
e
s 00001/00001/00417
d D 5.5 91/05/01 02:00:44 cael 8 7
c added groff compatibility
e
s 00170/00013/00248
d D 5.4 91/04/20 02:36:10 cael 7 5
c register usage changes, reorg .St macro
e
s 00011/00007/00254
d R 5.4 91/03/26 20:44:41 cael 6 5
c added `more things to go wrong'
e
s 00013/00000/00248
d D 5.3 91/03/17 03:06:36 cael 5 3
c make -mdoc break page (.bp vs 'bp) when handling multiple
c man pages, pretty up synopsis for functions, put back accidently deleted
c macro .Ss
e
s 00003/00000/00248
d R 5.3 91/03/15 19:25:27 cael 4 3
c  make -mdoc break page (.bp vs 'bp) when handling multiple
c man pages, pretty up synopsis for functions
e
s 00002/00041/00246
d D 5.2 91/03/14 15:56:43 cael 3 2
c bug fixes, added .Os string, .Ud, .At and .Bt macros
e
s 00000/00000/00287
d D 5.1 91/03/07 18:16:53 cael 2 1
c name change
e
s 00287/00000/00000
d D 1.1 91/03/07 17:17:21 cael 1 0
c date and time created 91/03/07 17:17:21 by cael
e
u
U
t
T
I 1
D 13
.\" Copyright (c) 1991 The Regents of the University of California.
.\" All rights reserved.
E 13
I 13
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 13
.\"
.\" %sccs.include.redist.man%
.\"
.\"     %W% (Berkeley) %G%
.\"
.\"     %beginstrip%
.nr %A 1
.nr %J 1
.nr %N 1
.nr %O 1
.nr %R 1
.nr %T 1
.nr %V 1
.nr Ad 12n
.nr Ac 3
.nr Ao 12n
D 11
.nr Ap 2
E 11
I 7
.nr An 12n
E 7
.nr Aq 12n
.nr Ar 12n
.nr Bc 3
.nr Bl 1
.nr Bo 12n
.nr Bq 12n
I 9
D 11
.nr Bx 12n
E 11
E 9
.nr Cd 12n
.nr Cm 10n
D 11
.nr Co 15n
.nr Cx 20n
E 11
.nr Dc 3
.nr Do 10n
.nr Dq 12n
.nr Ds 6n
.nr Dq 12n
.nr Dv 12n
D 11
.nr tI \n(Dsu
E 11
.nr Ec 3
.nr El 1
.nr Eo 12n
.nr Eq 12n
.nr Em 10n
.nr Er 12n
.nr Ev 15n
D 11
.nr Ex 10n
E 11
.nr Fa 12n
.nr Fl 10n
.nr Fc 3
.nr Fo 16n
.nr Fn 16n
D 11
.nr Hl 1
E 11
.nr I1 6n
.nr I2 12n
.nr I3 18n
.nr Ic 10n
.nr Li 16n
.nr Ms 6n
.nr Nm 10n
.nr No 12n
.nr Ns 2
.nr Oo 10n
.nr Oc 3
.nr Op 14n
.nr Pa 32n
.nr Pf 12n
.nr Pc 3
.nr Po 12n
.nr Pq 12n
.nr Ql 16n
I 10
D 11
.nr Qc 3
.nr Qo 12n
.nr Qq 12n
E 11
E 10
.nr Sc 3
.nr So 12n
.nr Sq 12n
.nr Sy 6n
.nr Sx 16n
D 11
.nr Ra 1
.nr Rj 1
.nr Rn 1
.nr Ro 1
.nr Rr 1
.nr Rt 1
E 11
.nr Rv 1
.nr Tn 10n
.nr Ta 1
.nr Tv 1
.nr Tx 22n
I 10
D 11
.nr Ux 10n
E 11
E 10
.nr Va 12n
.nr Xc 3
.nr Xo 1
.nr Xr 10n
.ds sV \& \&
.ds hV \&\ \&
.ds iV \& \&
.ds tV \&\\t\&
.\" Punctuation values (3 = closing punctuation, 4 = opening)
.nr z. 3
.nr z, 3
.nr z: 3
.nr z; 3
.nr z( 4
.nr z) 3
.nr z[ 4
.nr z] 3
.\" Matching pairs
.ds z( z)
.ds z[ z]
.ds z< z>
.\" This is disgusting, troff not parse ``if'' stmt properly
.nr z0 0
.nr z1 0
.nr z2 0
.nr z3 0
.nr z4 0
.nr z5 0
.nr z6 0
.nr z7 0
.nr z8 0
.nr z9 0
.nr z# 0
.\" Header assembly macros
.de Dt
.ds dT UNTITLED
D 7
.ds vT Local
E 7
I 7
.ds vT LOCAL
E 7
.ds cH Null
.if !"\\$1"" .ds dT \\$1
.if !"\\$2"" \{\
.	ds cH \\$2
D 7
.	if "\\$3"" \{\
E 7
I 7
.\" .	if "\\$3"" \{\
E 7
.		if \\$2>=1 .if \\$2<=8 \{\
D 11
.			ds vT UNIX Reference Manual
.			if \\$2>1 .if \\$2<6 .ds vT UNIX Programmer's Manual
.			if "\\$2"8" .ds vT UNIX System Manager's Manual
E 11
I 11
.			ds vT BSD Reference Manual
.			if \\$2>1 .if \\$2<6 .ds vT BSD Programmer's Manual
.			if "\\$2"8" .ds vT BSD System Manager's Manual
E 11
I 7
.			nr sN \\$2
E 7
.		\}
.		if "\\$2"unass"  .ds vT DRAFT
.		if "\\$2"draft"  .ds vT DRAFT
D 7
.		if "\\$2"paper"  .ds vT Null
.	\}
E 7
I 7
.		if "\\$2"paper"  .ds vT UNTITLED
.\" .	\}
E 7
.\}
.if !"\\$3"" \{\
D 11
.	if "\\$3"USD"   .ds vT UNIX User's Supplementary Documents
.	if "\\$3"PS1"   .ds vT UNIX Programmers's Supplementary Documents
.	if "\\$3"AMD"   .ds vT UNIX Ancestral Manual Documents
.	if "\\$3"SMM"   .ds vT UNIX System Manager's Manual
.	if "\\$3"URM"   .ds vT UNIX Reference Manual
.	if "\\$3"PRM"   .ds vT UNIX Programmers's Manual
.	if "\\$3"IND"   .ds vT UNIX Manual Master Index
.\" .	if "\\$3"CON"   .ds vT UNIX Contributed Software Manual
.\" .	if "\\$3"IMP"	.ds vT UNIX Implementation Notes
.\" .	if "\\$3"HOW"	.ds vT UNIX How Pocket Manual
.	if "\\$3"LOCAL" .ds vT UNIX Local Manual
E 11
I 11
.	if "\\$3"USD"   .ds vT BSD User's Supplementary Documents
.	if "\\$3"PS1"   .ds vT BSD Programmers's Supplementary Documents
.	if "\\$3"AMD"   .ds vT BSD Ancestral Manual Documents
.	if "\\$3"SMM"   .ds vT BSD System Manager's Manual
.	if "\\$3"URM"   .ds vT BSD Reference Manual
.	if "\\$3"PRM"   .ds vT BSD Programmers's Manual
.	if "\\$3"IND"   .ds vT BSD Manual Master Index
.\" .	if "\\$3"CON"   .ds vT BSD Contributed Software Manual
.\" .	if "\\$3"IMP"	.ds vT BSD Implementation Notes
.\" .	if "\\$3"HOW"	.ds vT BSD How Pocket Manual
.	if "\\$3"LOCAL" .ds vT BSD Local Manual
E 11
D 7
.	if "\\*(vT"Local" .ds vT \\$3
E 7
I 7
.	if "\\$3"tahoe" .as vT \ (Tahoe Architecture)
.	if "\\$3"vax" .as vT \ (VAX Architecture)
.	if "\\$3"hp300" .as vT \ (HP300 Architecture)
.	if "\\$3"sparc" .as vT \ (SPARC Architecture)
.	if "\\*(vT"LOCAL" .ds vT \\$3
E 7
.\}
..
I 7
.\" NS Os macro - Operating System (behaviour changes after first call)
.\" .	ds vT \f(CODRAFT\fP\ \ \-\-\ \ \\*(vT\ \ \-\-\ \ \f(CODRAFT
.\" .	ds dD \f(CODRAFT\fP\ \ \-\-\ \ \\*(dD\ \ \-\-\ \ \f(CODRAFT
.\" .ds vT \s+4\f(CODRAFT\fP\s-4\ \ \-\-\ \ \\*(vT\ \ \-\-\ \ \s+4\f(CODRAFT\s-4
.\" .ds dD \s+4\f(CODRAFT\fP\s-4\ \ \-\-\ \ \\*(dD\ \ \-\-\ \ \s+4\f(CODRAFT\s-4
E 7
.de Os
.ds oS Null
.if "\\$1"" \{\
D 3
.	ds oS 4.4 Berkeley UNIX
E 3
I 3
D 7
.	ds oS \&\fIBSD Experimental\fP
E 7
I 7
D 11
.	ds oS BSD Experimental
E 11
I 11
D 12
.	ds oS 4.4BSD PRERELEASE
E 12
I 12
.	ds oS 4.4BSD
E 12
E 11
E 7
E 3
.\}
.if "\\$2"" \{\
.	ds aa Non-Null
.\}
.if "\\$1"ATT"   \{\
.	ds oS AT&T
.	if "\\$2""    .as oS \0UNIX
.	if "\\$2"7th" .as oS \07th Edition
.	if "\\$2"7"   .as oS \07th Edition
.	if "\\$2"III" .as oS \0System III
.	if "\\$2"3"   .as oS \0System III
.	if "\\$2"V"   .as oS \0System V
.	if "\\$2"V.2" .as oS \0System V Release 2
.	if "\\$2"V.3" .as oS \0System V Release 3
.	if "\\$2"V.4" .as oS \0System V Release 4
.\}
.if "\\$1"BSD" \{\
.	if "\\$2"3"    .ds oS 3rd Berkeley Distribution
.	if "\\$2"4"    .ds oS 4th Berkeley Distribution
.	if "\\$2"4.1"  .ds oS 4.1 Berkeley Distribution
.	if "\\$2"4.2"  .ds oS 4.2 Berkeley Distribution
.	if "\\$2"4.3"  .ds oS 4.3 Berkeley Distribution
.	if "\\$2"4.3T" .ds oS 4.3-Tahoe Berkeley Distribution
.	if "\\$2"4.3R" .ds oS 4.3-Reno Berkeley Distribution
.	if "\\$2"4.3t" .ds oS 4.3-Tahoe Berkeley Distribution
.	if "\\$2"4.3r" .ds oS 4.3-Reno Berkeley Distribution
D 3
.	if "\\$2"4.4"  .ds oS 4.4 Berkeley Distribution
E 3
I 3
D 7
.	if "\\$2"4.4"  .ds oS \&\fIBSD Experimental\fP
E 7
I 7
D 11
.	if "\\$2"4.4"  .ds oS BSD Experimental
E 11
I 11
D 12
.	if "\\$2"4.4"  .ds oS 4.4BSD PRERELEASE
E 12
I 12
.	if "\\$2"4.4"  .ds oS 4.4BSD
E 12
E 11
E 7
E 3
.\}
D 7
.if "\\*(oS"Null" .ds oS \\$1
E 7
I 7
.if "\\*(oS"Null" .ds oS \0\\$1
E 7
.if "\\*(aa"Non-Null" .as oS \0\\$2
.rm aa
..
.de Dd
I 5
D 7
.if t \{\
.       if !"\\*(dD"" .nr gX 1
.\}
E 7
I 7
.if !"\\*(dD"" .nr gX 1
E 7
E 5
.ie \\n(.$>0 \{\
D 7
.	ie \\n(.$<4 \{\
E 7
I 7
.	ie \\n(.$==3 \{\
E 7
.		ds dD \\$1 \\$2 \\$3
.	\}
D 7
.	el .tm Usage: .Dd Month Day, Year (e.g July 4, 1977).
E 7
I 7
.	el \{\
.		if "\\n(mo"1"  .ds dD January
.		if "\\n(mo"2"  .ds dD February
.		if "\\n(mo"3"  .ds dD March
.		if "\\n(mo"4"  .ds dD April
.		if "\\n(mo"5"  .ds dD May
.		if "\\n(mo"6"  .ds dD June
.		if "\\n(mo"7"  .ds dD July
.		if "\\n(mo"8"  .ds dD August
.		if "\\n(mo"9"  .ds dD September
.		if "\\n(mo"10" .ds dD October
.		if "\\n(mo"11" .ds dD November
.		if "\\n(mo"12" .ds dD December
.		as dD \&\ \\n(dy, 19\\n(yr
.	\}
E 7
.\}
.el \{\
.	ds dD Epoch
.\}
..
.de hM
.ev 1
.pL
.if !\\n(cR 'sp \\n(Hmu
.tl @\\*(Hs\\*(hT\fP@\\*(Vs\\*(vT\fP@\\*(Hs\\*(hT\fP@
'sp \\n(Hmu
.ev
..
.de fM
.ie \\n(cR 'br
.el \{\
.	ev 1
.	pL
.	if !\\n(cR \{\
'		sp \\n(Fmu
.		tl @\\*(Hs\\*(oS\fP@\\*(Vs\\*(dD\fP@%@
'		bp
.	\}
.	ev
.\}
D 8
.\" .tm IN 444 fM .k == \\n(.k and nl == \\n(nl
E 8
I 8
D 9
.\" .tm BOTTOM OF FM 444 .k == \\n(.k and nl == \\n(nl
E 9
I 9
D 11
.\" .tm IN 444 fM .k == \\n(.k and nl == \\n(nl
E 11
E 9
E 8
..
.de lM
.fl
.if \\n(cR \{\
'	sp
.	tl @\\*(Hs\\*(oS\fP@\\*(Vs\\*(dD\fP@%@
.       pl \\n(nlu
.\}
..
.de Pp
.sp \\n(Ppu
.ne 2
.ns
..
.de Lp
.Pp
..
.de LP
.tm Not a \-mdoc command: .LP
..
.de PP
.tm Not a \-mdoc command: .PP
..
.de pp
.tm Not a \-mdoc command: .pp
..
D 3
.de Sh
.nr nS 0
.nr sE 0
.ie "\\$1"NAME" \{\
.	hK
'	in 0
.\}
.el \{\
.	nr nS 0
.	nr nA 0
.	nr nF 0
.	if "\\$1"SYNOPSIS" .nr nS 1
.	if "\\$1"SEE" .nr nA 1
.	if "\\$1"FILES" .nr nF 1
.	in 0
.	nr aN 0
.\}
.pL
'sp
.ns
.ta .5i 1i 1.5i 2i 2.5i 3i 3.5i 4i 4.5i 5i 5.5i 6i 6.5i
.if !\\n(cR .ne 3
'fi
\&\\*(sH\\$1 \|\\$2 \|\\$3 \|\\$4 \|\\$5 \|\\$6 \|\\$7 \|\\$8 \|\\$9
\&\fP\s0\&
.in \\n(.iu+\\n(Tiu
.if "\\$1"SEE" .nr sE 1
.ns
..
E 3
.de Nd
\&\-\& \\$1 \\$2 \\$3 \\$4 \\$5 \\$6 \\$7 \\$8 \\$9
I 5
..
.de Ss
.sp
.ne 2
.ti -.25i
\&\\*(sH\\$1 \|\\$2 \|\\$3 \|\\$4 \|\\$5 \|\\$6 \|\\$7 \|\\$8 \|\\$9
\&\fP\s0
.ta .5i 1i 1.5i 2i 2.5i 3i 3.5i 4i 4.5i 5i 5.5i 6i 6.5i
.if !\\n(cR .ne 2
.br
I 7
..
.de Rd
.tm MDOC REGISTER DUMP
.tm Db==\\n(Db register DEBUG MODE
.tm L[0-9] registers - stack of list types
.tm L0==\\n(L0
.tm L1==\\n(L1
.tm L2==\\n(L2
.tm L3==\\n(L3
.tm L4==\\n(L4
.tm L5==\\n(L5
.tm L6==\\n(L6
.tm L7==\\n(L7
.tm L8==\\n(L8
.tm L9==\\n(L9
.tm O[0-9] registers - stack of indent
.tm O0==\\n(O0
.tm O1==\\n(O1
.tm O2==\\n(O2
.tm O3==\\n(O3
.tm O4==\\n(O4
.tm O5==\\n(O5
.tm O6==\\n(O6
.tm O7==\\n(O7
.tm O8==\\n(O8
.tm O9==\\n(O9
.tm aC==\\n(aC register argument counter (aV/fV)
.tm aJ==\\n(aJ register (for vR)
.tm aN==\\n(aN register
.tm aP==\\n(aP register argument pointer (aV)
.tm aT==\\n(aT register argument type
.tm aa==\\n(aa local register
.tm bK==\\n(bK register - Book Name flag
.tm cF==\\n(cF register save current font
.tm cI==\\n(cI register - column indent width
.tm cZ==\\n(cZ register save current font size
.tm dK==\\n(dK register - Date flag
.tm d[0-9] registers - display-type stack
.tm d0==\\n(d0
.tm d1==\\n(d1
.tm d2==\\n(d2
.tm d3==\\n(d3
.tm d4==\\n(d4
.tm d5==\\n(d5
.tm d6==\\n(d6
.tm d7==\\n(d7
.tm d8==\\n(d8
.tm d9==\\n(d9
.tm dZ==\\n(dZ register diversion count
.tm fD==\\n(fD register subroutine test (in synopsis only)
.tm fV==\\n(fV register argument counter (must set to \\n(.$ prior to
.tm fY==\\n(fY register - dick with old style function declarations (fortran)
.tm fZ==\\n(fZ register also subroutine count (in synopsis only)
.tm h[0-9] register horizontal tag stack (continuous if 1, break if
.tm h0==\\n(h0
.tm h1==\\n(h1
.tm h2==\\n(h2
.tm h3==\\n(h3
.tm h4==\\n(h4
.tm h5==\\n(h5
.tm h6==\\n(h6
.tm h7==\\n(h7
.tm h8==\\n(h8
.tm h9==\\n(h9
.tm iD==\\n(iD local register
.tm iI==\\n(iI local register (indent for inline debug mode)
.tm iN==\\n(iN register DEBUG MODE (inline if 1, to stderr if
.tm iS==\\n(iS register - indent second command line in a synopsis
.tm jK==\\n(jK register - [reference] Journal Name flag
.tm jM==\\n(jM local register
.tm jN==\\n(jN local register
.tm lC==\\n(lC register - list type stack counter
.tm lK==\\n(lK register count of lines read from input file
.tm nK==\\n(nK register - [reference] issue number flag
.tm nU==\\n(nU register count
.tm oK==\\n(oK register - [reference] optional information flag
.tm oM==\\n(oM register (extension possible)
.tm o[0-9] register offset stack (nested tags)
.tm o0==\\n(o0
.tm o1==\\n(o1
.tm o2==\\n(o2
.tm o3==\\n(o3
.tm o4==\\n(o4
.tm o5==\\n(o5
.tm o6==\\n(o6
.tm o7==\\n(o7
.tm o8==\\n(o8
.tm o9==\\n(o9
.tm oM==\\n(oM register open ended line flag
.tm pK==\\n(pK register - [reference] page number flag
.tm qK==\\n(qK register - Corporate or Foreign Author flag
.tm rK==\\n(rK register - [reference] report flag
.tm rS==\\n(rS register - Reference Start flag
.tm sM==\\n(sM register - default is one (space mode on)
.tm tK==\\n(tK register - reference title flag
.tm tP==\\n(tP register tag flag (for diversions)
.tm tX==\\n(tX register (initial class)
.tm tY==\\n(tY register (next possible lC value)
.tm t[0-9] register tag string stack (nested tags)
.tm t0==\\n(t0
.tm t1==\\n(t1
.tm t2==\\n(t2
.tm t3==\\n(t3
.tm t4==\\n(t4
.tm t5==\\n(t5
.tm t6==\\n(t6
.tm t7==\\n(t7
.tm t8==\\n(t8
.tm t9==\\n(t9
.tm uK==\\n(uK register - reference author(s) counter
.tm vK==\\n(vK register - reference volume flag
.tm v[0-9] register vertical tag break stack
.tm v0==\\n(v0
.tm v1==\\n(v1
.tm v2==\\n(v2
.tm v3==\\n(v3
.tm v4==\\n(v4
.tm v5==\\n(v5
.tm v6==\\n(v6
.tm v7==\\n(v7
.tm v8==\\n(v8
.tm v9==\\n(v9
.tm w[0-9] register tag stack (nested tags)
.tm w0==\\n(w0
.tm w1==\\n(w1
.tm w2==\\n(w2
.tm w3==\\n(w3
.tm w4==\\n(w4
.tm w5==\\n(w5
.tm w6==\\n(w6
.tm w7==\\n(w7
.tm w8==\\n(w8
.tm w9==\\n(w9
.tm xX==\\n(xX local register
.tm END OF REGISTER DUMP
E 7
E 5
D 3
..
.de Ss
.sp
.ne 2
.ti -.25i
\&\\*(sH\\$1 \|\\$2 \|\\$3 \|\\$4 \|\\$5 \|\\$6 \|\\$7 \|\\$8 \|\\$9
\&\fP\s0\&
.ta .5i 1i 1.5i 2i 2.5i 3i 3.5i 4i 4.5i 5i 5.5i 6i 6.5i
.if !\\n(cR .ne 2
.br
E 3
..
E 1
