h63377
s 00002/00002/00134
d D 8.1 93/06/08 11:21:38 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00005/00003/00131
d D 5.4 91/07/22 21:57:57 cael 4 3
c Os fix
e
s 00061/00060/00073
d D 5.3 91/05/10 14:18:52 cael 3 2
c mdoc version three
e
s 00010/00000/00123
d D 5.2 91/04/20 15:35:02 bostic 2 1
c new copyright; att/bsd/shared
e
s 00123/00000/00000
d D 5.1 90/02/02 17:24:14 bostic 1 0
c date and time created 90/02/02 17:24:14 by bostic
e
u
U
t
T
I 2
D 5
.\" Copyright (c) 1991 The Regents of the University of California.
.\" All rights reserved.
E 5
I 5
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 5
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Arthur David Olson of the National Cancer Institute.
I 3
.\" modification, are permitted provided that the following conditions
.\" are met:
E 3
.\"
D 3
.\" %sccs.include.redist.roff%
E 3
I 3
D 4
.\" %sccs.include.redist.man%
E 4
I 4
.\" %sccs.include.redist.roff%
E 4
E 3
.\"
D 3
.\"	%W% (Berkeley) %G%
E 3
I 3
D 4
.\"     %W% (Berkeley) %G%
E 4
I 4
.\"	%W% (Berkeley) %G%
E 4
E 3
.\"
E 2
I 1
D 3
.TH TZFILE 5
.SH NAME
tzfile \- time zone information
.SH SYNOPSIS
.B
#include <tzfile.h>
.SH DESCRIPTION
E 3
I 3
.Dd %Q%
.Dt TZFILE 5
I 4
.Os
E 4
.Sh NAME
.Nm tzfile
.Nd time zone information
.Sh SYNOPSIS
.Fd #include <tzfile.h>
.Sh DESCRIPTION
E 3
The time zone information files used by
D 3
.IR tzset (3)
E 3
I 3
.Xr tzset 3
E 3
begin with bytes reserved for future use,
followed by four four-byte values of type
D 3
.BR long ,
E 3
I 3
.Em long ,
E 3
written in a ``standard'' byte order
(the high-order byte of the value is written first).
These values are,
in order:
D 3
.TP
.I tzh_ttisstdcnt
E 3
I 3
.Bl -tag -width tzh_ttisstdcnt
.It Fa tzh_ttisstdcnt
E 3
The number of standard/wall indicators stored in the file.
D 3
.TP
.I tzh_leapcnt
E 3
I 3
.It Fa tzh_leapcnt
E 3
The number of leap seconds for which data is stored in the file.
D 3
.TP
.I tzh_timecnt
E 3
I 3
.It Fa tzh_timecnt
E 3
The number of "transition times" for which data is stored
in the file.
D 3
.TP
.I tzh_typecnt
E 3
I 3
.It Fa tzh_typecnt
E 3
The number of "local time types" for which data is stored
in the file (must not be zero).
D 3
.TP
.I tzh_charcnt
E 3
I 3
.It Fa tzh_charcnt
E 3
The number of characters of "time zone abbreviation strings"
stored in the file.
D 3
.PP
E 3
I 3
.El
.Pp
E 3
The above header is followed by
D 3
.I tzh_timecnt
E 3
I 3
.Fa tzh_timecnt
E 3
four-byte values of type
D 3
.BR long ,
E 3
I 3
.Em long ,
E 3
sorted in ascending order.
These values are written in ``standard'' byte order.
Each is used as a transition time (as returned by
D 3
.IR time (2))
E 3
I 3
.Xr time 2 )
E 3
at which the rules for computing local time change.
Next come
D 3
.I tzh_timecnt
E 3
I 3
.Fa tzh_timecnt
E 3
one-byte values of type
D 3
.BR "unsigned char" ;
E 3
I 3
.Fa unsigned char ;
E 3
each one tells which of the different types of ``local time'' types
described in the file is associated with the same-indexed transition time.
These values serve as indices into an array of
D 3
.I ttinfo
E 3
I 3
.Fa ttinfo
E 3
structures that appears next in the file; 
these structures are defined as follows:
D 3
.in +.5i
.sp
.nf
.ta .5i +\w'unsigned int\0\0'u
E 3
I 3
.Bd -literal -offset indent
E 3
struct ttinfo {	
	long	tt_gmtoff;
	int	tt_isdst;
	unsigned int	tt_abbrind;
};
D 3
.in -.5i
.fi
.sp
E 3
I 3
.Ed
.Pp
E 3
Each structure is written as a four-byte value for
D 3
.I tt_gmtoff
E 3
I 3
.Fa tt_gmtoff
E 3
of type
D 3
.BR long ,
E 3
I 3
.Em long ,
E 3
in a standard byte order, followed by a one-byte value for
D 3
.I tt_isdst
E 3
I 3
.Fa tt_isdst
E 3
and a one-byte value for
D 3
.IR tt_abbrind .
E 3
I 3
.Fa tt_abbrind .
E 3
In each structure,
D 3
.I tt_gmtoff
E 3
I 3
.Fa tt_gmtoff
E 3
D 4
gives the number of seconds to be added to GMT,
E 4
I 4
gives the number of seconds to be added to
.Tn GMT ,
E 4
D 3
.I tt_isdst
E 3
I 3
.Fa tt_isdst
E 3
tells whether
D 3
.I tm_isdst
E 3
I 3
.Fa tm_isdst
E 3
should be set by
D 3
.I localtime (3)
E 3
I 3
.Xr localtime 3
E 3
and
D 3
.I tt_abbrind
E 3
I 3
.Fa tt_abbrind
E 3
serves as an index into the array of time zone abbreviation characters
that follow the
D 3
.I ttinfo
E 3
I 3
.Fa ttinfo
E 3
structure(s) in the file.
D 3
.PP
E 3
I 3
.Pp
E 3
Then there are
D 3
.I tzh_leapcnt
E 3
I 3
.Fa tzh_leapcnt
E 3
pairs of four-byte values, written in standard byte order;
the first value of each pair gives the time
(as returned by 
D 3
.IR time(2))
E 3
I 3
.Xr time 2 )
E 3
at which a leap second occurs;
the second gives the
D 3
.I total
E 3
I 3
.Em total
E 3
number of leap seconds to be applied after the given time.
The pairs of values are sorted in ascending order by time.
D 3
.PP
E 3
I 3
.Pp
E 3
Finally there are
D 3
.I tzh_ttisstdcnt
E 3
I 3
.Fa tzh_ttisstdcnt
E 3
standard/wall indicators, each stored as a one-byte value;
they tell whether the transition times associated with local time types
were specified as standard time or wall clock time,
D 3
and are used when a time zone file is used in handling POSIX-style
E 3
I 3
and are used when a time zone file is used in handling
.Tn POSIX Ns -style
E 3
time zone environment variables.
D 3
.PP
.I Localtime
E 3
I 3
.Pp
.Fa Localtime
E 3
uses the first standard-time
D 3
.I ttinfo
E 3
I 3
.Fa ttinfo
E 3
structure in the file
(or simply the first
D 3
.I ttinfo
E 3
I 3
.Fa ttinfo
E 3
structure in the absence of a standard-time structure)
if either
D 3
.I tzh_timecnt
E 3
I 3
.Fa tzh_timecnt
E 3
is zero or the time argument is less than the first transition time recorded
in the file.
D 3
.SH SEE ALSO
ctime(3)
.. @(#)tzfile.5	4.2
E 3
I 3
.Sh SEE ALSO
.Xr ctime 3
.Sh HISTORY
The
.Nm tzfile
file format appeared in
.Bx 4.3 tahoe.
E 3
E 1
