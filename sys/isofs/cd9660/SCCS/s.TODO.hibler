h06640
s 00003/00011/00011
d D 8.3 94/12/05 22:13:23 mckusick 3 2
c mycroft updates
e
s 00001/00000/00021
d D 8.2 94/01/22 07:39:45 hibler 2 1
c 
e
s 00021/00000/00000
d D 8.1 94/01/22 07:38:33 hibler 1 0
c date and time created 94/01/22 07:38:33 by hibler
e
u
U
t
T
I 1
1. Investiate making ISOFS another UFS shared filesystem (ala FFS/MFS/LFS).
   Since it was modelled after the inode code, we might be able to merge
   them back.  It looks like a seperate (but very similar) lookup routine
   will be needed due to the associated file stuff.

D 3
2. Make filesystem exportable.  This comes for free if stacked with UFS.
   Otherwise, the ufs_export routines need to be elevated to vfs_* routines.
I 2
	[ DONE - hibler ]
E 2

3. If it can't be merged with UFS, at least get them in sync.  For example,
   it could use the same style hashing routines as in ufs/ufs_ihash.c

4. It would be nice to be able to use the vfs_cluster code.
E 3
I 3
2. It would be nice to be able to use the vfs_cluster code.
E 3
   Unfortunately, if the logical block size is smaller than the page size,
   it won't work.  Also, if throughtput is relatively constant for any
   block size (as it is for the HP drive--150kbs) then clustering may not
   buy much (or may even hurt when vfs_cluster comes up with a large sync
   cluster).

D 3
5. Seems like there should be a "notrans" or some such mount option to show
   filenames as they really are without lower-casing, stripping of version
   numbers, etc.  Does this make sense?
E 3
I 3
3. Seems like there should be a "notrans" or some such mount option to show
   filenames as they really are without lower-casing.  Does this make sense?
E 3
E 1
