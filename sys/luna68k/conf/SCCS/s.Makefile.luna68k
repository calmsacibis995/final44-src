h49859
s 00000/00000/00165
d D 8.1 93/06/10 22:13:52 bostic 8 7
c 4.4BSD snapshot (revision 8.1)
e
s 00008/00002/00157
d D 7.7 93/06/08 10:36:31 akito 7 6
c add ${DEBUG} statment for config -g
e
s 00004/00001/00155
d D 7.6 93/06/02 09:55:30 akito 6 5
c support kernel profiling
e
s 00012/00021/00144
d D 7.5 93/05/12 04:07:46 akito 5 4
c sync up to hp300/conf/Makefile.hp300       7.21
e
s 00005/00004/00160
d D 7.4 92/09/01 16:55:27 akito 4 3
c remove kernel striping command line
e
s 00007/00002/00157
d D 7.3 92/07/23 18:46:54 bostic 3 2
c add vnode_if.c to the compile directory sources
e
s 00004/00003/00155
d D 7.2 92/07/03 04:59:47 fujita 2 1
c use libkern.a
e
s 00158/00000/00000
d D 7.1 92/06/15 06:17:13 fujita 1 0
c date and time created 92/06/15 06:17:13 by fujita
e
u
U
t
T
I 1
#	%W% (Berkeley) %G%
#
D 5
# From: hp300/conf/Makefile.luna68k	7.13 (Berkeley) 2/24/92
E 5
I 5
# from: hp300/conf/Makefile.hp300	7.21 (Berkeley) 2/12/93
E 5
#
# Makefile for 4.4 BSD
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/conf/``machineid''
# after which you should do
#	 config machineid
# Machine generic makefile changes should be made in
#	/sys/conf/Makefile.``machinetype''
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas


# DEBUG is set to -g by config if debugging is requested (config -g).
# PROF is set to -pg by config if profiling is requested (config -p).
AS=	as ${DEBUG}
CC=	cc ${DEBUG}
CPP=	cpp
LD=	ld
TOUCH=	touch -f -c

# source tree is located via $S relative to the compilation directory
S=	../..
LUNA68K=	$S/luna68k

INCLUDES= -I. -I$S -I$S/sys
D 5
COPTS=	${INCLUDES} ${IDENT} -DKERNEL -Dmc68020 -Dluna68k -DFPCOPROC -DREFBIT
E 5
I 5
COPTS=	${INCLUDES} ${IDENT} -DKERNEL -Dmc68020 -Dluna68k -DFPCOPROC
E 5
CFLAGS=	-O ${COPTS}

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.

NORMAL_C=	${CC} -c ${CFLAGS} ${PROF} $<
NORMAL_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<

DRIVER_C=	${CC} -c ${CFLAGS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<

PROFILE_C=	${CC} -S -c ${COPTS} $<; \
		sed -e s/_mcount/mcount/ -e s/subrmcount/subr_mcount/ <$*.s | \
		${AS} -o $@; \
		rm -f $*.s

NORMAL_S=	${CPP} ${COPTS} $< | ${AS} -o $@
NORMAL_S_C=	${CPP} ${COPTS} ${PARAM} $< | ${AS} -o $@

%OBJS

%CFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
D 3
SYSTEM_OBJ=	locore.o ${OBJS} param.o ioconf.o
E 3
I 3
SYSTEM_OBJ=	locore.o ${OBJS} param.o ioconf.o vnode_if.o
E 3
D 5
#SYSTEM_DEP=	Makefile symbols.sort ${SYSTEM_OBJ}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
E 5
I 5
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ} libkern.a
E 5
SYSTEM_LD_HEAD=	rm -f $@
D 5
#SYSTEM_LD=	@if [ X${DEBUG} = X-g ]; \
#		then strip=-X; \
#		else strip=-x; \
#		fi; \
D 2
#		echo ${LD} $$strip -n -o $@ -e start '$${SYSTEM_OBJ}' vers.o libquad.a; \
#		${LD} $$strip -n -o $@ -e start ${SYSTEM_OBJ} vers.o libquad.a
E 2
I 2
#		echo ${LD} $$strip -n -o $@ -e start '$${SYSTEM_OBJ}' vers.o ../../libkern/obj/libkern.a; \
#		${LD} $$strip -n -o $@ -e start ${SYSTEM_OBJ} vers.o ../../libkern/obj/libkern.a
E 5
E 2
D 7
SYSTEM_LD=	@strip=-x; \
E 7
I 7
SYSTEM_LD=	-@if [ X${DEBUG} = X-g ]; \
		then strip=-X; \
		else strip=-x; \
		fi; \
E 7
D 2
		${LD} $$strip -n -o $@ ${SYSTEM_OBJ} vers.o libquad.a
E 2
I 2
D 5
		echo ${LD} $$strip -n -o $@ '$${SYSTEM_OBJ}' vers.o ../../libkern/obj/libkern.a; \
		${LD} $$strip -n -o $@ ${SYSTEM_OBJ} vers.o ../../libkern/obj/libkern.a
E 2
#SYSTEM_LD_TAIL= @echo rearranging symbols;\
#		symorder symbols.sort $@;\
D 4
SYSTEM_LD_TAIL=	@size $@; chmod 755 $@; \
		[ X${DEBUG} = X-g ] && { \
		echo cp $@ $@.gdb; rm -f $@.gdb; cp $@ $@.gdb; \
		echo strip -d $@; strip -d $@; } || true
E 4
I 4
#SYSTEM_LD_TAIL=	@size $@; chmod 755 $@; \
#		[ X${DEBUG} = X-g ] && { \
#		echo cp $@ $@.gdb; rm -f $@.gdb; cp $@ $@.gdb; \
#		echo strip -d $@; strip -d $@; } || true
E 5
I 5
		echo ${LD} $$strip -n -o $@ '$${SYSTEM_OBJ}' vers.o libkern.a; \
		${LD} $$strip -n -o $@ ${SYSTEM_OBJ} vers.o libkern.a
E 5
D 7
SYSTEM_LD_TAIL=	@size $@; chmod 755 $@
E 7
I 7
SYSTEM_LD_TAIL=	@size $@; chmod 755 $@; \
		[ X${DEBUG} = X-g ] && { \
		echo cp $@ $@.gdb; rm -f $@.gdb; cp $@ $@.gdb; \
		echo strip -d $@; strip -d $@; } || true
E 7
E 4

%LOAD

I 5
libkern.a:
D 6
	ln -s $S/libkern/obj/libkern.a libkern.a; \
E 6
I 6
	-@if [ X${PROF} = X ]; \
	then ln -s $S/libkern/obj/libkern.a libkern.a; \
	else ln -s $S/libkern/obj/libkern_p.a libkern.a; \
	fi; \
E 6
	echo ln -s $S/libkern/obj/libkern.a libkern.a

E 5
newvers:
	sh $S/conf/newvers.sh
	${CC} $(CFLAGS) -c vers.c

clean:
	rm -f eddep *vmunix vmunix.gdb tags *.o locore.i [a-z]*.s \
		Errs errs linterrs makelinks

lint: /tmp param.c
	@lint -hbxn -DGENERIC -Dvolatile= ${COPTS} ${PARAM} -UKGDB \
	    ${LUNA68K}/luna68k/Locore.c ${CFILES} ${LUNA68K}/luna68k/swapgeneric.c \
	    ioconf.c param.c| \
	    grep -v 'struct/union .* never defined' | \
	    grep -v 'possible pointer alignment problem'

symbols.sort: ${LUNA68K}/luna68k/symbols.raw
	grep -v '^#' ${LUNA68K}/luna68k/symbols.raw \
	    | sed 's/^	//' | sort -u > symbols.sort

locore.o: assym.s ${LUNA68K}/luna68k/vectors.s ${LUNA68K}/luna68k/locore.s 
locore.o: ${LUNA68K}/include/trap.h ${LUNA68K}/include/psl.h ${LUNA68K}/luna68k/pte.h
locore.o: ${LUNA68K}/include/cpu.h
	${CPP} -DLOCORE ${COPTS} ${LUNA68K}/luna68k/locore.s | ${AS} -o locore.o

# the following is necessary because autoconf.o depends on #if GENERIC
autoconf.o: Makefile

# the following are necessary because the files depend on the types of
# hp cpu's included in the system configuration
D 5
clock.o machdep.o autoconf.o conf.o: Makefile
E 5
I 5
machdep.o sys_machdep.o pmap.o pmap_bootstrap.o trap.o: Makefile
E 5

D 5
# depend on network configuration
af.o uipc_proto.o locore.o: Makefile
E 5
I 5
# depend on network or filesystem configuration
af.o uipc_proto.o vfs_conf.o locore.o: Makefile
E 5

# depend on maxusers
assym.s: Makefile

assym.s: genassym
	./genassym >assym.s

genassym:
	${CC} ${INCLUDES} ${IDENT} ${PARAM} -Dmc68020 -Dluna68k -o genassym \
	    ${LUNA68K}/luna68k/genassym.c

D 3
depend: assym.s param.c
E 3
I 3
depend: assym.s param.c vnode_if.h
E 3
	mkdep ${COPTS} ${CFILES} ioconf.c param.c
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} ${LUNA68K}/luna68k/genassym.c

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink

tags:
	@echo "see $S/kern/Makefile for tags"

ioconf.o: ioconf.c
	${CC} -c ${CFLAGS} ioconf.c

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${CC} -c ${CFLAGS} ${PARAM} param.c
I 3

vnode_if.c: $S/kern/vnode_if.sh $S/kern/vnode_if.src
	sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
vnode_if.h: $S/kern/vnode_if.sh $S/kern/vnode_if.src
	sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
E 3

%RULES
E 1
