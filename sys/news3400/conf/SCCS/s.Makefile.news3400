h54669
s 00000/00000/00159
d D 8.1 93/06/10 23:49:26 bostic 13 12
c 4.4BSD snapshot (revision 8.1)
e
s 00007/00008/00152
d D 7.12 93/03/09 23:34:55 utashiro 12 11
c misc changes
e
s 00001/00001/00159
d D 7.11 93/01/21 02:42:08 utashiro 11 10
c added -Unews3800 -Unews3700 -Dmips for cross compile
e
s 00001/00001/00159
d D 7.10 93/01/20 00:27:11 utashiro 10 9
c Don't include sys/sys by default.
e
s 00002/00002/00158
d D 7.9 92/12/16 21:49:52 utashiro 9 8
c -traditional to -traditional-cpp
e
s 00002/00000/00158
d D 7.8 92/07/29 04:20:15 utashiro 8 7
c modify newvers script
c added vnode_if.c and vnode_if.h in clean script
e
s 00001/00001/00157
d D 7.7 92/07/29 02:51:17 utashiro 7 6
c vnode_if.o should not be deleted.
e
s 00004/00013/00154
d D 7.6 92/07/29 01:13:12 utashiro 6 5
c Now always uses GCC.  And small changes are made.
e
s 00011/00004/00156
d D 7.5 92/07/23 18:48:11 bostic 5 4
c add vnode_if.c to the compile directory sources
e
s 00000/00010/00160
d D 7.4 92/06/26 17:56:37 utashiro 4 3
c delete assym.h dependency
e
s 00018/00013/00152
d D 7.3 92/06/25 18:59:18 utashiro 3 2
c to use libkern.a
e
s 00001/00001/00164
d D 7.2 92/06/04 16:10:27 mckusick 2 1
c add SCCS headers
e
s 00165/00000/00000
d D 7.1 92/06/04 15:56:44 mckusick 1 0
c initial port from Kazumasa Utashiro
e
u
U
t
T
I 1
D 2
#	@(#)Makefile.vax	7.18 (Berkeley) 12/16/90
E 2
I 2
#	%W% (Berkeley) %G%
E 2

# Makefile for 4.4 BSD
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/vax/conf/``machineid''
# after which you should do
#	 config machineid
# Machine generic makefile changes should be made in
#	/sys/conf/Makefile.``machinetype''
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas
# -DUUDMA	compile in unibus tu58 pseudo-dma code
#

D 6
GCC=	YES

.if ${GCC} == YES
E 6
D 3
CC=	gcc -traditional -nostdinc
AS=	cc2.11 -I
LD=	/usr/local/gnu/lib/gcc-lib/mips-sony-bsd/2.1/ld
QUAD=	-DUSE_QUAD
E 3
I 3
D 9
CC=	gcc -traditional -fno-builtin -nostdinc
AS=	cc2.0 -I
E 9
I 9
CC=	gcc -traditional-cpp -fno-builtin -nostdinc
AS=	cc2.11 -I
E 9
D 12
LD=	/usr/local/gnu/lib/gcc-lib/mips-sony-bsd/2.2.2/ld
E 12
I 12
LD=	/usr/local/gnu/lib/gcc-lib/mips-sony-bsd/2.3.3/ld
E 12
E 3
D 6
FAKEMAIN=	-Dmain=Main
.else
CC=	cc2.11 -I
AS=	cc2.11 -I
LD=	/usr/bin/ld
D 3
QUAD=
E 3
.endif
E 6

S=	../..
NEWS3400=	$S/news3400

D 10
INCLUDES= -I. -I$S -I$S/sys
E 10
I 10
INCLUDES= -I. -I$S
E 10
D 3
COPTS=	${INCLUDES} ${IDENT} -DKERNEL ${QUAD} ${FAKEMAIN}
E 3
I 3
D 11
COPTS=	${INCLUDES} ${IDENT} -DKERNEL ${FAKEMAIN}
E 11
I 11
COPTS=	${INCLUDES} ${IDENT} -Unews3800 -Unews3700 -Dmips -DKERNEL
E 11
E 3
CFLAGS=	${COPTS}
AHEADS=

INLINECMD=	${NEWS3400}/inline/obj/inline
INLINE= ${INLINECMD} ${INLINEOPTS}


# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.

NORMAL_C=	${CC} -c ${CFLAGS} ${PROF} $<
NORMAL_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<

DRIVER_C=	${CC} -c ${COPTS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${COPTS} ${PROF} ${PARAM} $<

NORMAL_S=	${AS} -c ${COPTS} $<
NORMAL_S_C=	${AS} -c ${COPTS} ${PARAM} $<

%OBJS

%CFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
D 5
SYSTEM_OBJ=	locore.o ${OBJS} param.o ioconf.o vers.o
E 5
I 5
D 6
SYSTEM_OBJ=	locore.o ${OBJS} param.o ioconf.o vers.o vnode_if.o
E 6
I 6
D 7
SYSTEM_OBJ=	locore.o ${OBJS} param.o ioconf.o
E 7
I 7
SYSTEM_OBJ=	locore.o ${OBJS} param.o ioconf.o vnode_if.o
E 7
E 6
E 5
D 12
#SYSTEM_DEP=	Makefile symbols.sort ${SYSTEM_OBJ}
E 12
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	rm -f $@
D 6
SYSTEM_LD=	@echo loading vmunix;\
D 3
		${LD} -N -o $@ -e start -T 80001000 ${SYSTEM_OBJ} libquad.a
SYSTEM_LD_TAIL= 
E 3
I 3
		${LD} -N -o $@ -e start -T 80001000 ${SYSTEM_OBJ} ../../libkern/obj/libkern.a
E 6
I 6
SYSTEM_LD=	@echo loading vmunix; \
		${LD} -N -o $@ -e start -T 80001000 ${SYSTEM_OBJ} vers.o ../../libkern/obj/libkern.a
E 6
SYSTEM_LD_TAIL= @echo done
E 3
D 12
#SYSTEM_LD_TAIL= @echo rearranging symbols; symorder symbols.sort $@
E 12

%LOAD

newvers vers.c:
	sh $S/conf/newvers.sh
I 8
	${CC} $(CFLAGS) -c vers.c
E 8

clean:
D 3
	rm -f eddep *vmunix tags *.o locore.i [a-tv-z]*.s \
E 3
I 3
	rm -f eddep *vmunix tags *.o locore.i [a-tv-z]*.s assym.h \
I 8
		vnode_if.c vnode_if.h \
E 8
E 3
		Errs errs linterrs makelinks

lint: /tmp param.c
	@lint -hbxn -DGENERIC ${COPTS} ${PARAM} \
	  ${NEWS3400}/news3400/Locore.c ${CFILES} ioconf.c param.c | \
	    grep -v 'struct/union .* never defined' | \
	    grep -v 'possible pointer alignment problem'

D 12
#symbols.sort: ${NEWS3400}/news3400/symbols.raw
#	grep -v '^#' ${NEWS3400}/news3400/symbols.raw \
#	    | sed 's/^	//' | sort -u > symbols.sort

E 12
${INLINECMD}:
	cd ${NEWS3400}/inline; make

locore.o: assym.h ${AHEADS} ${NEWS3400}/news3400/locore.s
I 12
locore.o: ../../sys/errno.h
locore.o: ../../sys/syscall.h
locore.o: ../../sys/cdefs.h
locore.o: ../../sys/cdefs.h
E 12
I 3
locore.o: ${NEWS3400}/include/param.h
locore.o: ${NEWS3400}/include/vmparam.h
locore.o: ${NEWS3400}/include/psl.h
I 12
locore.o: ${NEWS3400}/include/machConst.h
E 12
locore.o: ${NEWS3400}/include/reg.h
locore.o: ${NEWS3400}/include/machAsmDefs.h
I 12
locore.o: ${NEWS3400}/include/regdef.h
E 12
E 3
locore.o: ${NEWS3400}/include/pte.h
D 3
locore.o: ${NEWS3400}/include/cpu.h
E 3
I 3
locore.o: ${NEWS3400}/include/endian.h
locore.o: ${NEWS3400}/include/adrsmap.h
E 3
D 12
locore.o:
E 12
	${AS} -c -DLOCORE ${COPTS} ${PARAM} ${NEWS3400}/news3400/locore.s

# the following is necessary because autoconf.o depends on #if GENERIC
autoconf.o tu.o: Makefile

# the following are necessary because the files depend on the types of
# vax cpu's included in the system configuration
clock.o machdep.o autoconf.o conf.o cons.o cpudata.o : Makefile

# depend on network configuration
af.o uipc_proto.o uipc_domain.o locore.o: Makefile

# depends on kdb being configured
trap.o:	Makefile

D 4
# depend on maxusers
assym.h: Makefile
assym.h: $S/sys/param.h ${NEWS3400}/include/pte.h $S/sys/buf.h
D 3
assym.h: $S/sys/vmmeter.h $S/sys/dir.h
assym.h: $S/sys/map.h $S/sys/proc.h $S/sys/msgbuf.h
E 3
I 3
assym.h: $S/sys/vmmeter.h $S/sys/dir.h $S/sys/mbuf.h $S/sys/signal.h
assym.h: $S/sys/map.h $S/sys/proc.h $S/sys/msgbuf.h $S/sys/syscall.h
E 3
assym.h: $S/sys/user.h ${NEWS3400}/news3400/genassym.c
assym.h: ${NEWS3400}/include/param.h ${NEWS3400}/include/pcb.h
D 3
assym.h: ${NEWS3400}/include/vmparam.h
E 3
I 3
assym.h: ${NEWS3400}/include/vmparam.h ${NEWS3400}/include/pmap.h
assym.h: ${NEWS3400}/include/pte.h ${NEWS3400}/include/reg.h
E 3

E 4
assym.h: genassym
	./genassym >assym.h

genassym:
D 5
	${CC} ${INCLUDES} ${IDENT} ${PARAM} -o genassym ${NEWS3400}/news3400/genassym.c
E 5
I 5
	${CC} ${INCLUDES} ${IDENT} ${PARAM} -o genassym \
	    ${NEWS3400}/news3400/genassym.c
E 5

D 5
depend: assym.h ${CFILES}
E 5
I 5
depend: assym.h param.c vnode_if.h
E 5
D 6
	mkdep ${COPTS} ${.ALLSRC:M*.c} ioconf.c
E 6
I 6
	mkdep ${COPTS} ${CFILES} ioconf.c
E 6
D 5
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} ${NEWS3400}/news3400/genassym.c
E 5
I 5
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} \
	    ${NEWS3400}/news3400/genassym.c
E 5

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
	echo 'rm -f udiv.o;ln -s ../GENERIC/udiv.o udiv.o' >> makelinks
	echo 'rm -f urem.o;ln -s ../GENERIC/urem.o urem.o' >> makelinks
	sh makelinks && rm -f dontlink

tags:
	@echo "see $S/kern/Makefile for tags"

ioconf.o:
	${CC} -c ${COPTS} ioconf.c

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${CC} -c ${CFLAGS} ${PARAM} param.c
I 5

vnode_if.c: $S/kern/vnode_if.sh $S/kern/vnode_if.src
	sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
vnode_if.h: $S/kern/vnode_if.sh $S/kern/vnode_if.src
	sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
E 5

%RULES
E 1
