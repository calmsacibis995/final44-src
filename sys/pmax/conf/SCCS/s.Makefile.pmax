h07820
s 00001/00001/00159
d D 8.2 94/02/16 12:15:34 bostic 11 10
c remove reference to af.o
c From: ralphc@pyramid.com (Ralph Campbell)
e
s 00000/00000/00160
d D 8.1 93/06/16 18:29:07 mckusick 10 9
c 4.4BSD snapshot (revision 8.1)
e
s 00002/00002/00158
d D 7.8 93/06/16 18:28:18 mckusick 9 7
c final update from Ralph
e
s 00000/00000/00160
d R 8.1 93/06/10 22:36:55 bostic 8 7
c 4.4BSD snapshot (revision 8.1)
e
s 00003/00003/00157
d D 7.7 93/02/20 19:07:42 ralph 7 6
c change ../.. to $S like hp300.
e
s 00033/00022/00127
d D 7.6 93/02/04 19:30:43 ralph 6 5
c modified to use gcc
e
s 00001/00001/00148
d D 7.5 92/10/24 14:03:22 ralph 5 4
c remove -Isys since include lines are standardized now
e
s 00014/00008/00135
d D 7.4 92/07/27 21:13:55 ralph 4 3
c changes for vnode_if.h stuff
e
s 00003/00003/00140
d D 7.3 92/02/29 15:55:49 ralph 3 2
c fix as line for locore.s
e
s 00004/00004/00139
d D 7.2 92/01/07 18:04:38 marc 2 1
c pass in ${PARAM} when building drivers and .s files
e
s 00143/00000/00000
d D 7.1 92/01/07 18:03:40 marc 1 0
c contributed by Ralph Campbell
e
u
U
t
T
I 1
#	%W% (Berkeley) %G%
#
# Makefile for 4.4 BSD
#
# This makefile is constructed from a machine description:
#	config machineid
# Most changes should be made in the machine description
#	/sys/conf/``machineid''
# after which you should do
#	 config machineid
# Machine generic makefile changes should be made in
#	/sys/conf/Makefile.``machinetype''
# after which config should be rerun for all machines of that type.
#
# N.B.: NO DEPENDENCIES ON FOLLOWING FLAGS ARE VISIBLE TO MAKEFILE
#	IF YOU CHANGE THE DEFINITION OF ANY OF THESE RECOMPILE EVERYTHING
#
# -DTRACE	compile in kernel tracing hooks
# -DQUOTA	compile in file system quotas


D 4
# DEBUG is set to -g by config if debugging is requested.
# PROF is set to -pg by config if profiling is requested.
E 4
I 4
# DEBUG is set to -g by config if debugging is requested (config -g).
# PROF is set to -pg by config if profiling is requested (config -p).
E 4
AS=	as ${DEBUG}
D 9
CC=	cc ${DEBUG}
E 9
I 9
CC=	gcc ${DEBUG}
E 9
CPP=	cpp
LD=	ld
TOUCH=	touch -f -c

# source tree is located via $S relative to the compilation directory
D 9
S=	../..
E 9
I 9
S=	/sys
E 9
PMAX=	$S/pmax

D 5
INCLUDES= -I. -I$S -I$S/sys
E 5
I 5
INCLUDES= -I. -I$S
E 5
COPTS=	${INCLUDES} ${IDENT} -DKERNEL
CFLAGS=	-O ${COPTS}
D 6
AFLAGS=	-O2 -DLOCORE ${COPTS}
E 6

# compile rules: rules are named ${TYPE}_${SUFFIX}${CONFIG_DEP}
# where TYPE is NORMAL, DRIVER, or PROFILE}; SUFFIX is the file suffix,
# capitalized (e.g. C for a .c file), and CONFIG_DEP is _C if the file
# is marked as config-dependent.

NORMAL_C=	${CC} -c ${CFLAGS} ${PROF} $<
NORMAL_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<

D 2
DRIVER_C=	${CC} -c ${CFLAGS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<
E 2
I 2
D 6
DRIVER_C=	${CC} -c ${COPTS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${COPTS} ${PROF} ${PARAM} $<
E 6
I 6
DRIVER_C=	${CC} -c ${CFLAGS} ${PROF} $<
DRIVER_C_C=	${CC} -c ${CFLAGS} ${PROF} ${PARAM} $<
E 6
E 2

D 6
PROFILE_C=	${CC} -S -c ${COPTS} $<; \
		ex - $*.s < ${GPROF.EX}; \
		${AS} -o $@ $*.s; \
		rm -f $*.s
E 6
I 6
PROFILE_C=	${CC} -p -c ${COPTS} $<
E 6

D 2
NORMAL_S=	${CPP} ${COPTS} $< | ${AS} -o $@
NORMAL_S_C=	${CPP} ${COPTS} ${PARAM} $< | ${AS} -o $@
E 2
I 2
D 3
NORMAL_S=	${AS} -o $@ ${COPTS} $<
NORMAL_S_C=	${AS} -o $@ ${COPTS} ${PARAM} $<
E 3
I 3
D 4
NORMAL_S=	${CC} -c ${COPTS} $<
E 4
I 4
D 6
NORMAL_S=	${AS} -o $@ ${COPTS} $<
E 4
NORMAL_S_C=	${CC} -c ${COPTS} ${PARAM} $<
E 6
I 6
NORMAL_S=	${CPP} ${COPTS} $< | ${AS} -o $@
NORMAL_S_C=	${CPP} ${COPTS} ${PARAM} $< | ${AS} -o $@
E 6
E 3
E 2

%OBJS

%CFILES

# load lines for config "xxx" will be emitted as:
# xxx: ${SYSTEM_DEP} swapxxx.o
#	${SYSTEM_LD_HEAD}
#	${SYSTEM_LD} swapxxx.o
#	${SYSTEM_LD_TAIL}
D 4
SYSTEM_OBJ=	locore.o ${OBJS} param.o ioconf.o
E 4
I 4
SYSTEM_OBJ=	locore.o ${OBJS} param.o ioconf.o vnode_if.o
E 4
D 6
#SYSTEM_DEP=	Makefile symbols.sort ${SYSTEM_OBJ}
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ}
SYSTEM_LD_HEAD=	@echo loading $@; rm -f $@
D 4
SYSTEM_LD=	@${LD} -N -o $@ -e start -T 80030000 ${SYSTEM_OBJ} vers.o
E 4
I 4
SYSTEM_LD=	@${LD} -N -o $@ -e start -T 80030000 ${SYSTEM_OBJ} vers.o \
			../../libkern/obj/libkern.a
E 6
I 6
#SYSTEM_DEP=	Makefile symbols.sort ${SYSTEM_OBJ} libkern.a
SYSTEM_DEP=	Makefile ${SYSTEM_OBJ} libkern.a
SYSTEM_LD_HEAD=	rm -f $@
SYSTEM_LD=	-@if [ X${DEBUG} = X-g ]; \
		then strip=-X; \
		else strip=-x; \
		fi; \
		echo ${LD} $$strip -N -o $@ -e start -Ttext 80030000 \
			'$${SYSTEM_OBJ}' vers.o libkern.a; \
		${LD} $$strip -N -o $@ -e start -Ttext 80030000 \
			${SYSTEM_OBJ} vers.o libkern.a
E 6
E 4
#SYSTEM_LD_TAIL= @echo rearranging symbols;\
#		symorder symbols.sort $@;\
#SYSTEM_LD_TAIL=	@size $@; chmod 755 $@; \
#		[ X${DEBUG} = X-g ] && { \
D 6
#		echo cp $@ $@.gdb; cp $@ $@.gdb; \
#		echo strip -d $@; strip -d $@; }
SYSTEM_LD_TAIL=	@size $@; chmod 755 $@
E 6
I 6
#		echo cp $@ $@.gdb; rm -f $@.gdb; cp $@ $@.gdb; \
#		echo strip -d $@; strip -d $@; } || true
SYSTEM_LD_TAIL=	chmod 755 $@
E 6

%LOAD

I 6
libkern.a:
	-@if [ X${PROF} = X ]; \
D 7
	then ln -s ../../libkern/obj/libkern.a libkern.a; \
	else ln -s ../../libkern/obj/libkern_p.a libkern.a; \
E 7
I 7
	then ln -s $S/libkern/obj/libkern.a libkern.a; \
	else ln -s $S/libkern/obj/libkern_p.a libkern.a; \
E 7
	fi; \
D 7
	echo ln -s ../../libkern/obj/libkern.a libkern.a
E 7
I 7
	echo ln -s $S/libkern/obj/libkern.a libkern.a
E 7

E 6
newvers:
	sh $S/conf/newvers.sh
	${CC} $(CFLAGS) -c vers.c

clean:
D 6
	rm -f eddep *vmunix tags *.o [a-z]*.s \
		errs linterrs makelinks
E 6
I 6
	rm -f eddep *vmunix vmunix.gdb tags *.o locore.i [a-z]*.s \
		Errs errs linterrs makelinks
E 6

lint: /tmp param.c
D 6
	@lint -hbxn -DGENERIC ${COPTS} ${PARAM} \
		machine/Locore.c ${CFILES} ioconf.c param.c
E 6
I 6
	@lint -hbxn -DGENERIC -Dvolatile= ${COPTS} ${PARAM} -UKGDB \
	    ${PMAX}/pmax/Locore.c ${CFILES} ${PMAX}/pmax/swapgeneric.c \
	    ioconf.c param.c
E 6

symbols.sort: ${PMAX}/pmax/symbols.raw
	grep -v '^#' ${PMAX}/pmax/symbols.raw \
	    | sed 's/^	//' | sort -u > symbols.sort

locore.o: ${PMAX}/pmax/locore.s ${PMAX}/include/machAsmDefs.h \
	${PMAX}/include/machConst.h ${PMAX}/include/reg.h assym.h
D 3
	as -o locore.o ${AFLAGS} ${PARAM} ${PMAX}/pmax/locore.s
E 3
I 3
D 4
	${CC} -c ${AFLAGS} ${PARAM} ${PMAX}/pmax/locore.s
E 4
I 4
D 6
	${AS} -o locore.o ${AFLAGS} ${PARAM} ${PMAX}/pmax/locore.s
E 6
I 6
	${CPP} ${COPTS} ${PARAM} -DLOCORE ${PMAX}/pmax/locore.s | \
	${AS} -o locore.o
E 6
E 4
E 3

# the following is necessary because autoconf.o depends on #if GENERIC
autoconf.o: Makefile

# the following are necessary because the files depend on the types of
# cpu's included in the system configuration
clock.o machdep.o autoconf.o conf.o: Makefile

# depend on network configuration
D 4
af.o uipc_proto.o: Makefile
E 4
I 4
D 11
af.o uipc_proto.o vfs_conf.o: Makefile
E 11
I 11
uipc_proto.o vfs_conf.o: Makefile
E 11
E 4

assym.h: genassym
	./genassym >assym.h

genassym: ${PMAX}/pmax/genassym.c
	${CC} ${INCLUDES} ${IDENT} ${PARAM} -o genassym ${PMAX}/pmax/genassym.c

D 4
depend: assym.h param.c
E 4
I 4
depend: assym.h param.c vnode_if.h
E 4
	mkdep ${COPTS} ${CFILES} ioconf.c param.c
	mkdep -a -p ${INCLUDES} ${IDENT} ${PARAM} ${PMAX}/pmax/genassym.c

links:
	egrep '#if' ${CFILES} | sed -f $S/conf/defines | \
	  sed -e 's/:.*//' -e 's/\.c/.o/' | sort -u > dontlink
	echo ${CFILES} | tr -s ' ' '\12' | sed 's/\.c/.o/' | \
	  sort -u | comm -23 - dontlink | \
	  sed 's,../.*/\(.*.o\),rm -f \1;ln -s ../GENERIC/\1 \1,' > makelinks
	sh makelinks && rm -f dontlink

tags:
	@echo "see $S/kern/Makefile for tags"

ioconf.o: ioconf.c
	${CC} -c ${CFLAGS} ioconf.c

param.c: $S/conf/param.c
	rm -f param.c
	cp $S/conf/param.c .

param.o: param.c Makefile
	${CC} -c ${CFLAGS} ${PARAM} param.c
I 4

vnode_if.c: $S/kern/vnode_if.sh $S/kern/vnode_if.src
	sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
vnode_if.h: $S/kern/vnode_if.sh $S/kern/vnode_if.src
	sh $S/kern/vnode_if.sh $S/kern/vnode_if.src
E 4

%RULES
E 1
