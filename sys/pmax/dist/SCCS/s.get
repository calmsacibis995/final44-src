h57808
s 00001/00001/00131
d D 8.2 93/11/30 16:21:44 mckusick 6 5
c add pax
e
s 00002/00002/00130
d D 8.1 93/06/29 15:19:04 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00015/00010/00117
d D 7.3 93/06/29 15:17:02 mckusick 4 2
c fix install tape creation (more work?)
e
s 00002/00002/00125
d R 8.1 93/06/10 22:47:34 bostic 3 2
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00052/00032/00075
d D 7.2 93/05/24 18:21:45 ralph 2 1
c update miniroot scripts
e
s 00107/00000/00000
d D 7.1 92/04/20 14:07:44 ralph 1 0
c date and time created 92/04/20 14:07:44 by ralph
e
u
U
t
T
I 1
#!/bin/sh -
#
D 5
# Copyright (c) 1992 The Regents of the University of California.
# All rights reserved.
E 5
I 5
# Copyright (c) 1992, 1993
#	The Regents of the University of California.  All rights reserved.
E 5
#
# %sccs.include.redist.sh%
#
#	%W% (Berkeley) %G%
#

# Shell script to build a mini-root file system in preparation for building
# a distribution tape.  The file system created here is image copied onto
D 2
# tape, then image copied onto disk as the "first" step in a cold boot o
# 4.3 systems.

DISTROOT=/mnt
DISTUSR=/mnt/usr/DISTUSR

E 2
I 2
# tape, then image copied onto disk as the "first" step in a cold boot of
# 4.3BSD systems.
#
DISTROOT=
#
E 2
if [ `pwd` = '/' ]
then
	echo You just '(almost)' destroyed the root
	exit
fi
D 2
#cp /tmp/stripped_vmunix vmunix
E 2

I 2
# copy in kernel
D 4
cp $DISTROOT/sys/GENERIC.pmax/vmunix .
E 4
I 4
cp $DISTROOT/sys/compile/GENERIC.pmax/vmunix .
E 4

E 2
# create necessary directories
D 2
DIRLIST="bin dev etc a tmp stand sbin usr usr/mdec sys"
E 2
I 2
DIRLIST="bin dev etc a tmp stand sbin usr usr/mdec"
E 2
rm -rf $DIRLIST
mkdir $DIRLIST

D 2
ETC="disktab"
E 2
I 2
ETC="disktab services"
E 2
for i in $ETC; do
	cp $DISTROOT/etc/$i etc/$i
done

D 2
SBIN="disklabel fsck ifconfig init mknod mount newfs restore \
	rrestore umount"
E 2
I 2
SBIN="disklabel fsck ifconfig init mknod mount newfs restore umount"
USBIN="pwd_mkdb"
E 2
for i in $SBIN; do
	cp $DISTROOT/sbin/$i sbin/$i
done
I 2
for i in $USBIN; do
	cp $DISTROOT/usr/sbin/$i sbin/$i
done
ln sbin/restore sbin/rrestore
E 2

D 2
# ed
BIN="[ cat cp dd echo expr ls mkdir mv rcp rm sh stty sync"
UBIN="awk make mt"
E 2
I 2
D 6
BIN="[ cat cp dd echo ed expr ls mkdir mv rcp rm sh stty sync"
E 6
I 6
BIN="[ cat cp dd echo ed expr ls mkdir mv pax rcp rm sh stty sync"
E 6
UBIN="awk mt"
E 2
for i in $BIN; do
	cp $DISTROOT/bin/$i bin/$i
done
for i in $UBIN; do
D 2
	cp $DISTUSR/bin/$i bin/$i
E 2
I 2
	cp $DISTROOT/usr/bin/$i bin/$i
E 2
done
D 2
ln bin/stty bin/STTY
E 2
I 2
ln bin/[ bin/test
E 2

D 2
cp $DISTROOT/.profile .profile
E 2
I 2
MDEC="rzboot bootrz"
for i in $MDEC; do
	cp $DISTROOT/usr/mdec/$i usr/mdec/$i
done
E 2

I 2
DOT=".profile"
for i in $DOT; do
	cp $DISTROOT/$i $i
done

# initialize /dev
cp $DISTROOT/dev/MAKEDEV dev/MAKEDEV
chmod +x dev/MAKEDEV
cp /dev/null dev/MAKEDEV.local
(cd dev; ./MAKEDEV std dc0 scc0 rz0 rz1 rz2 rz3 rz4 tz0 tz1 \
	pm0 cfb0 xcfb0 mfb0 pty0)

# initialize /etc/passwd
E 2
cat >etc/passwd <<EOF
D 4
root::0:10::/:/bin/sh
E 4
I 4
root::0:0::/:/bin/sh
E 4
daemon:*:1:1::/:
EOF
I 4
cat >etc/master.passwd <<EOF
root::0:0::0:0::/:/bin/sh
daemon:*:1:1::0:0::/root:
EOF
E 4

I 2
# initialize /etc/group
E 2
cat >etc/group <<EOF
system:*:0:
daemon:*:1:
uucp:*:2:
kmem:*:3:
bin:*:4:
news:*:8:
staff:*:10:
operator:*:28:
EOF

I 2
# initialize /etc/fstab
E 2
cat >etc/fstab <<EOF
D 2
/dev/rz0a	/	ufs	rw	1 1
/dev/rz0g	/usr	ufs	rw	1 2
E 2
I 2
D 4
/dev/rz0a	/	ufs	xx	1 1
E 4
I 4
/dev/rz0a	/	ufs	rw	1 1
E 4
/dev/rz0g	/usr	ufs	xx	1 2
E 2
EOF

I 2
# create xtr script
E 2
cat >xtr <<'EOF'
D 2
: ${disk?'Usage: disk=xx0 type=tt tape=yy xtr'}
: ${type?'Usage: disk=xx0 type=tt tape=yy xtr'}
: ${tape?'Usage: disk=xx0 type=tt tape=yy xtr'}
E 2
I 2
#!/bin/sh -e
D 4
: ${disk?'Usage: disk=xx0 tape=yy [type=zz] xtr'}
: ${tape?'Usage: disk=xx0 tape=yy [type=zz] xtr'}
E 4
I 4
: ${disk?'Usage: disk=xx0 tape=yy0 [type=zz] xtr'}
: ${tape?'Usage: disk=xx0 tape=yy0 [type=zz] xtr'}
E 4
E 2
echo 'Build root file system'
D 2
disklabel -r ${disk}c ${type}
E 2
I 2
D 4
disklabel -W ${disk}c ${type}
disklabel -w -r ${disk}c ${type}
E 2
newfs ${disk}a ${type}
E 4
I 4
disklabel -W /dev/r${disk}c ${type}
disklabel -w -r -B /dev/r${disk}c ${type}
newfs /dev/r${disk}a ${type}
E 4
sync
I 4
mount -u /
E 4
echo 'Check the file system'
fsck /dev/r${disk}a
mount /dev/${disk}a /a
cd /a
echo 'Rewind tape'
D 4
mt -f /dev/${tape}0 rew
E 4
I 4
mt -f /dev/${tape} rew
E 4
echo 'Restore the dump image of the root'
D 2
restore rsf 3 /dev/${tape}0
E 2
I 2
D 4
restore rsf 2 /dev/${tape}0
E 4
I 4
restore rsf 2 /dev/${tape}
E 4
E 2
cd /
sync
D 2
umount /dev/${disk}a
E 2
I 2
umount /a
E 2
sync
fsck /dev/r${disk}a
echo 'Root filesystem extracted'
EOF
I 2

# make xtr script executable
E 2
chmod +x xtr
D 2
rm -rf dev; mkdir dev
cp $DISTROOT/dev/MAKEDEV dev
chmod +x dev/MAKEDEV
cp /dev/null dev/MAKEDEV.local
cd dev
./MAKEDEV std dc0 rz0 rz1 rz2 rz3 rz4 tz0 tz1 pm0 pty0
cd ..
E 2
I 2

E 2
sync
E 1
