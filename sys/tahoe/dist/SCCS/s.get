h44643
s 00006/00006/00108
d D 1.8 91/05/21 14:37:02 karels 8 7
c need dk devices; new-style fstab; optional type for newfs (in case no label
e
s 00025/00030/00089
d D 1.7 90/07/04 20:16:32 bostic 7 6
c for Reno -- mostly file system reorg stuff
e
s 00003/00003/00116
d D 1.6 90/04/06 11:41:20 bostic 6 5
c update for HCX9 tape
e
s 00010/00005/00109
d D 1.5 88/07/07 11:58:16 bostic 5 4
c install approved copyright notice
e
s 00066/00061/00048
d D 1.4 88/06/15 11:01:12 bostic 4 3
c get rid of lists of files
e
s 00001/00000/00108
d D 1.3 88/02/29 15:41:13 bostic 3 2
c add bin/ed to list; it's nice to be able to edit things
e
s 00001/00000/00107
d D 1.2 87/04/09 16:44:05 karels 2 1
c stop xtr on err
e
s 00107/00000/00000
d D 1.1 87/04/07 19:51:14 karels 1 0
c date and time created 87/04/07 19:51:14 by karels
e
u
U
t
T
I 1
D 4
#!/bin/sh -e
E 4
I 4
#!/bin/sh -
E 4
#
D 4
# Copyright (c) 1983 Regents of the University of California.
# All rights reserved.  The Berkeley software License Agreement
# specifies the terms and conditions for redistribution.
E 4
I 4
D 7
# Copyright (c) 1988 Regents of the University of California.
E 7
I 7
# Copyright (c) 1990 The Regents of the University of California.
E 7
# All rights reserved.
E 4
#
I 4
D 7
# Redistribution and use in source and binary forms are permitted
D 5
# provided that this notice is preserved and that due credit is given
# to the University of California at Berkeley. The name of the University
# may not be used to endorse or promote products derived from this
# software without specific prior written permission. This software
# is provided ``as is'' without express or implied warranty.
E 5
I 5
# provided that the above copyright notice and this paragraph are
# duplicated in all such forms and that any documentation,
# advertising materials, and other materials related to such
# distribution and use acknowledge that the software was developed
# by the University of California, Berkeley.  The name of the
# University may not be used to endorse or promote products derived
# from this software without specific prior written permission.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
# WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 7
I 7
# %sccs.include.redist.sh%
E 7
E 5
#
E 4
#	%W% (Berkeley) %G%
#
I 7

E 7
D 4
# Shell script to build a mini-root file system
# in preparation for building a distribution tape.
# The file system created here is image copied onto
# tape, then image copied onto disk as the "first"
# step in a cold boot of 4.3 systems.
E 4
I 4
# Shell script to build a mini-root file system in preparation for building
# a distribution tape.  The file system created here is image copied onto
# tape, then image copied onto disk as the "first" step in a cold boot of
# 4.3BSD systems.
E 4
#
DISTROOT=/nbsd
#
if [ `pwd` = '/' ]
then
	echo You just '(almost)' destroyed the root
	exit
fi
I 4

# copy in kernel
E 4
D 7
cp $DISTROOT/sys/GENERIC/vmunix .
E 7
I 7
cp $DISTROOT/sys/GENERIC.alltahoe/vmunix .
E 7
D 4
rm -rf bin; mkdir bin
rm -rf etc; mkdir etc
rm -rf a; mkdir a
rm -rf tmp; mkdir tmp
rm -rf stand; mkdir stand
cp $DISTROOT/etc/disklabel etc
cp $DISTROOT/etc/disktab etc
cp $DISTROOT/etc/newfs etc
cp $DISTROOT/etc/restore etc
cp $DISTROOT/etc/rrestore etc
cp $DISTROOT/etc/init etc
cp $DISTROOT/etc/mount etc
cp $DISTROOT/etc/mknod etc
cp $DISTROOT/etc/fsck etc
cp $DISTROOT/etc/umount etc
cp $DISTROOT/etc/ifconfig etc
cp $DISTROOT/bin/dd bin
I 3
cp $DISTROOT/bin/ed bin
E 3
cp $DISTROOT/bin/mt bin
cp $DISTROOT/bin/ls bin
cp $DISTROOT/bin/sh bin
cp $DISTROOT/bin/mv bin
cp $DISTROOT/bin/sync bin
cp $DISTROOT/bin/cat bin
cp $DISTROOT/bin/mkdir bin
cp $DISTROOT/bin/stty bin; ln bin/stty bin/STTY
cp $DISTROOT/bin/echo bin
cp $DISTROOT/bin/rm bin
cp $DISTROOT/bin/cp bin
cp $DISTROOT/bin/expr bin
cp $DISTROOT/bin/[ bin
cp $DISTROOT/bin/awk bin
cp $DISTROOT/bin/make bin
cp $DISTROOT/bin/rcp bin
cp $DISTROOT/stand/copy stand
cp $DISTROOT/stand/vdformat stand
cp $DISTROOT/boot .
cp $DISTROOT/wcs .
#cp $DISTROOT/fppwcs .
#cp $DISTROOT/poc .
#cp $DISTROOT/poc1 .
#cp $DISTROOT/poc2 .
#cp $DISTROOT/fppoc .
cp $DISTROOT/.profile .profile
E 4
I 4

# create necessary directories
D 7
DIRLIST="bin dev etc a tmp stand"
E 7
I 7
DIRLIST="bin dev etc a tmp stand sbin"
E 7
rm -rf $DIRLIST
mkdir $DIRLIST

D 7
# copy in files from /etc
ETCFILE="disklabel disktab fsck ifconfig init mknod mount newfs restore \
	rrestore umount"
for i in $ETCFILE; do
E 7
I 7
ETC="disktab"
for i in $ETC; do
E 7
	cp $DISTROOT/etc/$i etc/$i
done

D 7
# copy in files from /bin
BINFILE="[ awk cat cp dd echo ed expr ls make mkdir mt mv rcp rm sh stty \
	sync"
for i in $BINFILE; do
E 7
I 7
SBIN="disklabel fsck ifconfig init mknod mount newfs restore \
	rrestore umount"
for i in $SBIN; do
	cp $DISTROOT/sbin/$i sbin/$i
done

BIN="[ cat cp dd echo ed expr ls mkdir mv rcp rm sh stty sync"
UBIN="awk make mt"
for i in $BIN; do
E 7
	cp $DISTROOT/bin/$i bin/$i
done
I 7
for i in $UBIN; do
	cp $DISTROOT/usr/bin/$i bin/$i
done
E 7
ln bin/stty bin/STTY

D 7
# copy in files from /stand
STANDFILE="copy vdformat"
for i in $STANDFILE; do
E 7
I 7
STAND="copy vdformat"
for i in $STAND; do
E 7
	cp $DISTROOT/stand/$i stand/$i
done

D 7
# copy in files from /
#DOTFILE=".profile boot fppoc fppwcs poc poc1 poc2 wcs"
D 6
DOTFILE=".profile boot wcs"
E 6
I 6
DOTFILE=".profile boot"
E 6
for i in $DOTFILE; do
E 7
I 7
DOT=".profile boot fppoc fppwcs poc poc1 poc2 wcs"
#DOT=".profile boot"
for i in $DOT; do
E 7
	cp $DISTROOT/$i $i
done

# initialize /dev
cp $DISTROOT/dev/MAKEDEV dev/MAKEDEV
chmod +x dev/MAKEDEV
cp /dev/null dev/MAKEDEV.local
D 6
(cd dev; ./MAKEDEV std dk0; ./MAKEDEV cy0; mv rmt12 cy0; rm *mt*)
E 6
I 6
D 8
(cd dev; ./MAKEDEV std hd0; ./MAKEDEV cy0; mv rmt12 cy0; rm *mt*)
E 8
I 8
(cd dev; ./MAKEDEV std hd0 hd1 dk0 dk1; ./MAKEDEV cy0; mv rmt12 cy0; rm *mt*)
E 8
E 6

# initialize /etc/passwd
E 4
cat >etc/passwd <<EOF
root::0:10::/:/bin/sh
EOF
I 4

# initialize /etc/group
E 4
cat >etc/group <<EOF
wheel:*:0:
staff:*:10:
EOF
I 4

# initialize /etc/fstab
E 4
cat >etc/fstab <<EOF
D 8
/dev/xfd0a:/a:xx:1:1
D 6
/dev/dk0a:/a:xx:1:1
E 6
I 6
/dev/hd0a:/a:xx:1:1
E 8
I 8
/dev/dk0a /a		ufs	xx 1 1
/dev/hd0a /a		ufs	xx 1 1
E 8
E 6
EOF
I 4

# create xtr script
E 4
cat >xtr <<'EOF'
I 2
#!/bin/sh -e
E 2
D 8
: ${disk?'Usage: disk=xx0 tape=yy xtr'}
: ${tape?'Usage: disk=xx0 tape=yy xtr'}
E 8
I 8
: ${disk?'Usage: disk=xx0 tape=yy [type=zz] xtr'}
: ${tape?'Usage: disk=xx0 tape=yy [type=zz] xtr'}
E 8
echo 'Build root file system'
D 8
newfs ${disk}a
E 8
I 8
newfs ${disk}a ${type}
E 8
sync
echo 'Check the file system'
fsck /dev/r${disk}a
mount /dev/${disk}a /a
cd /a
echo 'Rewind tape'
mt -f /dev/${tape}0 rew
echo 'Restore the dump image of the root'
restore rsf 3 /dev/${tape}0
cd /
sync
D 7
umount /dev/${disk}a
E 7
I 7
umount /a
E 7
sync
fsck /dev/r${disk}a
echo 'Root filesystem extracted'
EOF
I 4

# make xtr script executable
E 4
chmod +x xtr
D 4
rm -rf dev; mkdir dev
cp $DISTROOT/dev/MAKEDEV dev
chmod +x dev/MAKEDEV
cp /dev/null dev/MAKEDEV.local
cd dev
./MAKEDEV std dk0
./MAKEDEV cy0; mv rmt12 cy0; rm *mt*;
cd ..
E 4
I 4

E 4
sync
E 1
