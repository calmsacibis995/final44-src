head	1.2;
access;
symbols;
locks
	margo:1.2; strict;
comment	@# @;


1.2
date	94.10.11.17.04.26;	author margo;	state Exp;
branches;
next	1.1;

1.1
date	94.08.11.15.42.18;	author margo;	state Exp;
branches;
next	;


desc
@Main source for generation of all logging calls.
@


1.2
log
@Add generation numbers and entire dinode for remove.
@
text
@/*
 * This is the source file used to create the logging functions for logged
 * ffs.  Each type of log message and its parameters is defined.  The basic
 * format of a record definition is:
 *
 * BEGIN	<RECORD_TYPE>	SYNC|ASYNC
 * ARG|STRING|POINTER	<variable name>	<variable type> <printf format>
 * ...
 * END
 *
 * The shell script lffs_log.sh parses this file and generates a ".h" file
 * containing the static inline function declarations for each record type.
 * A second scripte lffs_read.sh parses the file and generates user-level
 * routines to read a log record and fill in appropriate valued variables.
 */

/* LOG_CREATE is used for: ufs_creat, ufs_mkdir, ufs_mknod */
BEGIN	CREATE		SYNC
ARG	type		u_long	d
ARG	new_inum	ino_t	d
ARG	new_gen		long	x
ARG	new_uid		u_long	d
ARG	new_gid		u_long	d
ARG	new_mode	u_short	hx
STRING	new_name	char *	s
ARG	dir_inum	ino_t	d
ARG	dir_gen		long	x
ARG	dir_nlink	short	hd
END

/* LOG_IALLLOC is used for ufs_ialloc */
BEGIN	IALLOC		ASYNC
ARG	type		u_long	d
ARG	new_inum	ino_t	d
END

/* LOG_REMOVE is used for ufs_rmdir, ufs_unlink
BEGIN	REMOVE		SYNC
ARG	type		u_long	d
POINTER	rem_dip		dip *	x
STRING	rem_name	char *	s
ARG	dir_inum	ino_t	d
ARG	dir_gen		long	x
END

/* LOG_LINK is used for ufs_link */
BEGIN	LINK		SYNC
ARG	type		u_long	d
STRING	new_name	char *	s
ARG	new_link_nlink	short	hd
ARG	link_inum	ino_t	d
ARG	link_gen	long	x
ARG	dir_inum	ino_t	d
ARG	dir_gen		long	x
ARG	new_dir_nlink	short	hd
END

/* LOG_SYMLINK is used for ufs_symlink */
BEGIN	SYMLINK		SYNC
ARG	type		u_long	d
ARG	new_inum	ino_t	d
ARG	new_gen		long	x
ARG	new_uid		u_long	x
ARG	new_gid		u_long	x
ARG	new_mode	u_short hx
STRING	new_name	char *	s
STING	link_name	char *	s
ARG	dir_inum	ino_t	d
ARG	dir_gen		long	x
END


/* LOG_RENAME is used for ufs_rename */
BEGIN RENAME		SYNC
ARG	type		u_long	d
ARG	ren_inum	ino_t	d
ARG	ren_gen		long	x
STRING	old_name	char *	s
STRING	new_name	char *	s
ARG	old_dir_inum	ino_t	d
ARG	old_dir_gen	long	x
ARG	old_dir_nlink	short	hd
ARG	new_dir_inum	ino_t	d
ARG	new_dir_gen	long	x
ARG	new_dir_nlink	short	hd
END

/* LOG_ALLOC is used both for allocation and deallocation */
BEGIN ALLOC		ASYNC
ARG	type		u_long	d
ARG	inum		ino_t	d
ARG	gen		long	x
ARG	lbn		daddr_t	x
ARG	pbn		daddr_t	x
ARG	nfrags		u_long	x
END

/* LOG_ABORT is used to abort a previously logged call */
BEGIN	ABORT		ASYNC
ARG	type		u_long	d
ARG	inum		ino_t	d
ARG	gen		long	x
ARG	atype		u_long	x
END

/* LOG_LOGICAL is used to log an LBN that corresponds to a physical */
/*  block that is about to be allocated */
BEGIN	LOGICAL		ASYNC
ARG	type		u_long	d
ARG	inum		ino_t	d
ARG	gen		long	x
ARG	lbn		daddr_t	x
END

@


1.1
log
@Initial revision
@
text
@d40 1
a40 3
ARG	rem_inum	ino_t	d
ARG	rem_gen		long	x
ARG	rem_links	short	hd
d92 1
d101 2
a102 1
ARG	new_inum	ino_t	d
d111 1
@
