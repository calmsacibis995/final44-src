/* DO NOT EDIT THIS FILE */
#include <db.h>

#define	REC_CREATE	1
typedef struct _CREATE_args {
	u_long machine;
	struct timeval time;
	u_long	type;
	ino_t	new_inum;
	long	new_gen;
	u_long	new_uid;
	u_long	new_gid;
	u_short	new_mode;
	char *	new_name;
	ino_t	dir_inum;
	long	dir_gen;
	short	dir_nlink;
} CREATE_args;
CREATE_args * CREATE_READ(char *buf);

int CREATE_LOG(struct vnode *vp, struct lwrite_entry *lwp, 
	u_long type, ino_t new_inum, long new_gen, u_long new_uid, 
	u_long new_gid, u_short new_mode, char * new_name, ino_t dir_inum, 
	long dir_gen, short dir_nlink);

void CREATE_PRINT(CREATE_args *argp);

void CREATE_RECOVER(DB *dbp, CREATE_args *argp);


#define	REC_IALLOC	2
typedef struct _IALLOC_args {
	u_long machine;
	struct timeval time;
	u_long	type;
	ino_t	new_inum;
} IALLOC_args;
IALLOC_args * IALLOC_READ(char *buf);

int IALLOC_LOG(struct vnode *vp, struct lwrite_entry *lwp, 
	u_long type, ino_t new_inum);

void IALLOC_PRINT(IALLOC_args *argp);

void IALLOC_RECOVER(DB *dbp, IALLOC_args *argp);


#define	REC_REMOVE	3
typedef struct _REMOVE_args {
	u_long machine;
	struct timeval time;
	u_long	type;
	struct dinode *	rem_dip;
	char *	rem_name;
	ino_t	dir_inum;
	long	dir_gen;
} REMOVE_args;
REMOVE_args * REMOVE_READ(char *buf);

int REMOVE_LOG(struct vnode *vp, struct lwrite_entry *lwp, 
	u_long type, struct dinode * rem_dip, char * rem_name, ino_t dir_inum, 
	long dir_gen);

void REMOVE_PRINT(REMOVE_args *argp);

void REMOVE_RECOVER(DB *dbp, REMOVE_args *argp);


#define	REC_LINK	4
typedef struct _LINK_args {
	u_long machine;
	struct timeval time;
	u_long	type;
	char *	new_name;
	short	new_link_nlink;
	ino_t	link_inum;
	long	link_gen;
	ino_t	dir_inum;
	long	dir_gen;
	short	new_dir_nlink;
} LINK_args;
LINK_args * LINK_READ(char *buf);

int LINK_LOG(struct vnode *vp, struct lwrite_entry *lwp, 
	u_long type, char * new_name, short new_link_nlink, ino_t link_inum, 
	long link_gen, ino_t dir_inum, long dir_gen, short new_dir_nlink);

void LINK_PRINT(LINK_args *argp);

void LINK_RECOVER(DB *dbp, LINK_args *argp);


#define	REC_SYMLINK	5
typedef struct _SYMLINK_args {
	u_long machine;
	struct timeval time;
	u_long	type;
	ino_t	new_inum;
	long	new_gen;
	u_long	new_uid;
	u_long	new_gid;
	u_short	new_mode;
	char *	new_name;
	char *	link_name;
	ino_t	dir_inum;
	long	dir_gen;
} SYMLINK_args;
SYMLINK_args * SYMLINK_READ(char *buf);

int SYMLINK_LOG(struct vnode *vp, struct lwrite_entry *lwp, 
	u_long type, ino_t new_inum, long new_gen, u_long new_uid, 
	u_long new_gid, u_short new_mode, char * new_name, char * link_name, 
	ino_t dir_inum, long dir_gen);

void SYMLINK_PRINT(SYMLINK_args *argp);

void SYMLINK_RECOVER(DB *dbp, SYMLINK_args *argp);


#define	REC_RENAME	6
typedef struct _RENAME_args {
	u_long machine;
	struct timeval time;
	u_long	type;
	ino_t	ren_inum;
	long	ren_gen;
	char *	old_name;
	char *	new_name;
	ino_t	old_dir_inum;
	long	old_dir_gen;
	short	old_dir_nlink;
	ino_t	new_dir_inum;
	long	new_dir_gen;
	short	new_dir_nlink;
} RENAME_args;
RENAME_args * RENAME_READ(char *buf);

int RENAME_LOG(struct vnode *vp, struct lwrite_entry *lwp, 
	u_long type, ino_t ren_inum, long ren_gen, char * old_name, 
	char * new_name, ino_t old_dir_inum, long old_dir_gen, short old_dir_nlink, 
	ino_t new_dir_inum, long new_dir_gen, short new_dir_nlink);

void RENAME_PRINT(RENAME_args *argp);

void RENAME_RECOVER(DB *dbp, RENAME_args *argp);


#define	REC_ALLOC	7
typedef struct _ALLOC_args {
	u_long machine;
	struct timeval time;
	u_long	type;
	ino_t	inum;
	long	gen;
	daddr_t	lbn;
	daddr_t	pbn;
	u_long	nfrags;
} ALLOC_args;
ALLOC_args * ALLOC_READ(char *buf);

int ALLOC_LOG(struct vnode *vp, struct lwrite_entry *lwp, 
	u_long type, ino_t inum, long gen, daddr_t lbn, 
	daddr_t pbn, u_long nfrags);

void ALLOC_PRINT(ALLOC_args *argp);

void ALLOC_RECOVER(DB *dbp, ALLOC_args *argp);


#define	REC_ABORT	8
typedef struct _ABORT_args {
	u_long machine;
	struct timeval time;
	u_long	type;
	ino_t	inum;
	long	gen;
	u_long	atype;
} ABORT_args;
ABORT_args * ABORT_READ(char *buf);

int ABORT_LOG(struct vnode *vp, struct lwrite_entry *lwp, 
	u_long type, ino_t inum, long gen, u_long atype);

void ABORT_PRINT(ABORT_args *argp);

void ABORT_RECOVER(DB *dbp, ABORT_args *argp);


#define	REC_LOGICAL	9
typedef struct _LOGICAL_args {
	u_long machine;
	struct timeval time;
	u_long	type;
	ino_t	inum;
	long	gen;
	daddr_t	lbn;
} LOGICAL_args;
LOGICAL_args * LOGICAL_READ(char *buf);

int LOGICAL_LOG(struct vnode *vp, struct lwrite_entry *lwp, 
	u_long type, ino_t inum, long gen, daddr_t lbn);

void LOGICAL_PRINT(LOGICAL_args *argp);

void LOGICAL_RECOVER(DB *dbp, LOGICAL_args *argp);

void *
lffs_switch(char *buf, long type);
void *
lffs_print(long type, void *rp);
void
lffs_apply_record(DB *dbp, long type, void *rp);
void *
lffs_read(int fd, char **bufpp, size_t *len, long *typep);
