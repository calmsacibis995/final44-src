h20670
s 00002/00002/00073
d D 8.1 93/06/06 14:26:02 bostic 6 5
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00026/00007/00049
d D 5.4 93/03/06 10:43:35 bostic 5 4
c document the format of the database
e
s 00004/00001/00052
d D 5.3 93/01/23 10:32:05 bostic 4 3
c add -v flag to print out number of records
e
s 00009/00003/00044
d D 5.2 92/09/08 12:01:04 elan 3 2
c Organized into sections.
e
s 00019/00065/00028
d D 5.1 92/09/02 18:19:50 elan 2 1
c Changes by Keith in style.
e
s 00093/00000/00000
d D 1.1 92/09/01 11:36:23 elan 1 0
c date and time created 92/09/01 11:36:23 by elan
e
u
U
t
T
I 1
D 6
.\" Copyright (c) 1992 The Regents of the University of California.
.\" All rights reserved.
E 6
I 6
.\" Copyright (c) 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 6
.\"
D 2
.\" This code is derived from software contributed to Berkeley by
.\" Casey Leedom of Lawrence Livermore National Laboratory.
E 2
I 2
.\" %sccs.include.redist.roff%
E 2
.\"
D 2
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
E 2
I 2
.\"	%W% (Berkeley) %G%
E 2
.\"
D 2
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @(#)cap_mkdb.1	1.2 (Berkeley) 8/11/92
.\"
.Dd "August 11, 1992"
E 2
I 2
.Dd "%Q%"
E 2
.Dt CAP_MKDB 1
.Os
.Sh NAME
D 2
.Nm Cap_mkdb
E 2
I 2
.Nm cap_mkdb
E 2
.Nd create capability database
.Pp
.Sh SYNOPSIS
.Nm cap_mkdb
I 4
.Op Fl v
E 4
.Op Fl f Ar outfile
.Ar file1
.Op Ar file2 ...
.Pp
.Sh DESCRIPTION
.Nm Cap_mkdb 
D 2
builds a hash table database out of a 
E 2
I 2
builds a hashed database out of the
E 2
.Xr getcap 3 
D 2
logical database constructed by the concatenation of each 
.Ar file 
specified.  
.Pp
The utility builds a hash database whose name is formed 
by the concatenation of the database basename (see
.Fl f
option)
and
.Nm .db 
which can then be used for record access.
The resulting database allows much faster access of the capability records by 
the  
E 2
I 2
logical database constructed by the concatenation of the specified
files .
D 5
The hashed database is stored into a file named by the basename
of the first file argument and the string
E 5
I 5
.Pp
The database is named by the basename of the first file argument and
the string
E 5
D 3
.Dq .db .
E 3
I 3
.Dq .db .  
E 3
The
E 2
.Xr getcap 3
D 2
routines than the corresponding ASCII file access routines.
E 2
I 2
routines can access the database in this form much more quickly
D 3
than they can the original text file.
E 3
I 3
than they can the original text file(s).
E 3
E 2
.Pp
I 5
The ``tc'' capabilities of the records are expanded before the
record is stored into the database.
.Pp
E 5
D 2
.Sh OPTIONS
.Bl -tag -width indent-two
E 2
I 2
D 3
The options are as follows:
E 3
I 3
D 4
.Sh OPTIONS
E 4
I 4
The options as as follows:
E 4
E 3
.Bl -tag -width XXXXXX -indent
E 2
.It Fl f Ar outfile
D 2
Specify database basename.  Default is
.Ar file1 .
.Pp
.Sh EXIT VALUES
.Nm Cap_mkdb 
exits with status 0 on success and 1 on failure.
.Pp
.Sh FILES
.Bl -tag -width Pa -compact
.It Pa ./file1.db
Default database name.
.It Pa ./outfile.db
Created with 
.Fl f 
option.
E 2
I 2
Specify a different database basename.
I 4
.It Fl v
Print out the number of capability records in the database.
E 4
E 2
.El
.Pp
I 5
.Sh FORMAT
Each record is stored in the database using two different types of keys.
.Pp
The first type is a key which consists of the first capability of
the record (not including the trailing colon (``:'')) with a data
field consisting of a special byte followed by the rest of the record.
The special byte is either a 0 or 1, where a 0 means that the record
is okay, and a 1 means that there was a ``tc'' capability in the record
that couldn't be expanded.
.Pp
The second type is a key which consists of one of the names from the
first capability of the record with a data field consisting a special
byte followed by the the first capability of the record.
The special byte is a 2.
.Pp
In normal operation names are looked up in the database, resulting
in a key/data pair of the second type.
The data field of this key/data pair is used to look up a key/data
pair of the first type which has the real data associated with the
name.
E 5
I 3
.Sh RETURN VALUE
E 3
I 2
The
.Nm cap_mkdb 
utility exits 0 on success and >0 if an error occurs.
E 2
.Sh SEE ALSO
.Xr dbopen 3 ,
.Xr getcap 3 ,
.Xr termcap 5
I 3
D 5





E 5
E 3
E 1
