h51658
s 00002/00002/00359
d D 8.1 93/06/30 10:09:00 bostic 14 13
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00007/00005/00354
d D 6.9 93/06/30 10:08:46 mckusick 13 11
c misc updates
e
s 00002/00002/00357
d R 8.1 93/06/06 14:36:38 bostic 12 11
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00004/00003/00355
d D 6.8 91/10/13 16:27:22 cael 11 10
c correct -Dstring and -Sname formatting
e
s 00057/00089/00301
d D 6.7 91/04/24 19:05:57 cael 10 9
c mdoc version three
e
s 00078/00085/00312
d D 6.6 90/07/24 22:44:06 cael 9 8
c .Xr botch fix
e
s 00337/00230/00060
d D 6.5 90/06/24 19:01:12 cael 8 7
c converted man page
e
s 00002/00002/00288
d D 6.4 86/05/19 02:25:20 lepreau 7 6
c -t was missing from synopsis
e
s 00012/00009/00278
d D 6.3 85/08/16 21:50:27 van 6 4
c corrected -c output format for newest diff, added -n flag
e
s 00011/00008/00279
d R 6.3 85/08/16 21:44:58 van 5 4
c added -n flag, correct -c output description for newest diff -c
e
s 00039/00012/00248
d D 6.2 85/06/07 04:00:53 van 4 3
c documented -w/i/t flags & new -c format.
e
s 00001/00001/00259
d D 6.1 85/04/29 14:22:33 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00002/00002/00258
d D 5.1 85/04/29 14:22:22 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00260/00000/00000
d D 4.1 85/04/29 14:22:13 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 8
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 8
I 8
D 14
.\" Copyright (c) 1980, 1990 The Regents of the University of California.
.\" All rights reserved.
E 14
I 14
.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 14
E 8
.\"
D 8
.\"	%W% (Berkeley) %G%
E 8
I 8
D 10
.\" %sccs.include.redist.man%
E 10
I 10
.\" %sccs.include.redist.roff%
E 10
E 8
.\"
D 2
.TH DIFF 1 
E 2
I 2
D 3
.TH DIFF 1  "18 January 1983"
E 3
I 3
D 8
.TH DIFF 1 "%Q%"
E 3
E 2
.UC 4
.SH NAME
diff \- differential file and directory comparator
.SH SYNOPSIS
.B diff
[
.B \-l
] [
.B \-r
] [
.B \-s
] [
D 6
\fB\-cefh\fR
E 6
I 6
\fB\-cefhn\fR
E 6
] [
D 4
.B \-b
E 4
I 4
D 7
.B \-biw
E 7
I 7
.B \-biwt
E 7
E 4
] dir1 dir2
.br
.B diff
[
D 6
\fB\-cefh
E 6
I 6
\fB\-cefhn
E 6
] [
D 4
\fB\-b\fR
E 4
I 4
D 7
\fB\-biw\fR
E 7
I 7
\fB\-biwt\fR
E 7
E 4
] file1 file2
.br
.B diff
[
.BI \-D string
] [
D 4
.B \-b
E 4
I 4
.B \-biw
E 4
]
file1 file2
.SH DESCRIPTION
E 8
I 8
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt DIFF 1
.Os BSD 4
.Sh NAME
.Nm diff
.Nd differential file and directory comparator
.Sh SYNOPSIS
.Nm diff
D 9
.Op Fl l
.Op Fl r
.Op Fl s
E 9
.Op Fl cefhn
.Op Fl biwt
D 9
.Ar dir1 dir2
.Nm diff
.Op Fl cefhn
.Op Fl biwt
E 9
.Ar file1 file2
.Nm diff
D 11
.Op Fl D Ar string
E 11
I 11
.Op Fl D Ns Ar string
E 11
.Op Fl biw
.Ar file1 file2
I 9
.Nm diff
.Op Fl l
.Op Fl r
.Op Fl s
.Op Fl cefhn
.Op Fl biwt
I 11
.Op Fl S Ns Ar name
E 11
.Ar dir1 dir2
E 9
.Sh DESCRIPTION
The
.Nm diff
utility compares the contents of
.Ar file1
and
.Ar file2
D 9
and writes to the standard output a minimal list of changes necessary to
convert one of the files into the other.
E 9
I 9
and writes to the standard output the list of changes necessary to
convert one file into the other.
E 9
No output is produced if the files are identical.
.Pp
E 8
D 9
If both arguments are directories,
D 8
.I diff
E 8
I 8
.Nm diff
E 8
sorts the contents of the directories by name, and then runs the
regular file
D 8
.I diff
algorithm (described below)
E 8
I 8
.Nm diff
algorithm, producing a change list,
E 8
on text files which are different.
Binary files which differ,
common subdirectories, and files which appear in only one directory
D 8
are listed.
E 8
I 8
are described as such.
.Pp
If only one of
.Ar file1
and
.Ar file2
is a directory,
.Nm diff
is applied to the non-directory file and the file contained in
the directory file with a filename that is the same as the
last component of the non-directory file.
.Pp
If either the
.Ar file1
or
.Ar file2
is
.Fl ,
the standard input is
used in its place.
.Pp
E 8
Options when comparing directories are:
E 9
I 9
Output options (mutually exclusive):
E 9
D 8
.TP
.B \-l
E 8
I 8
D 10
.Tw Fl
D 9
.Tp Fl l
E 8
long output format; each text file
D 8
.I diff
E 8
I 8
.Sf Nm diff \'d
E 8
is piped through
D 8
.IR pr (1)
E 8
I 8
.Xr pr  1
E 8
to paginate it,
other differences are remembered and summarized
after all text file differences are reported.
D 8
.TP
.B \-r
E 8
I 8
.Tp Fl r
E 8
causes application of
D 8
.I diff
E 8
I 8
.Nm diff
E 8
recursively to common subdirectories encountered.
D 8
.TP
.B \-s
causes 
.I diff
E 8
I 8
.Tp Fl s
causes
.Nm diff
E 8
to report files which are the same, which are otherwise not mentioned.
D 8
.TP
.B \-Sname
E 8
I 8
.Tc Fl S
.Ar name
.Cx
E 8
starts a directory
D 8
.I diff
E 8
I 8
.Nm diff
E 8
in the middle beginning with file
D 8
.I name.
.PP
When run on regular files, and when comparing text files which differ
during directory comparison,
.I diff
tells what lines must be changed in the files to bring them into agreement.
Except in rare circumstances,
.I diff
finds a smallest sufficient set of file differences.
If neither
.I file1
nor
.I file2
is a directory, then either
may be given as `\-', in which case the standard input is used.
If
.I file1
is a directory,
then a file in that directory whose file-name is the same as the file-name of
.I file2
is used (and vice versa).
.PP
There are several options for output format;
the default output format contains lines of these forms:
.IP "" 5
.I n1
a
.I n3,n4
.br
.I n1,n2
d
.I n3
.br
.I n1,n2
c
.I n3,n4
.PP
These lines resemble
.I ed
commands to convert
.I file1
into
.IR file2 .
The numbers after the letters pertain to
.IR file2 .
In fact, by exchanging `a' for `d' and reading backward
one may ascertain equally how to convert 
.I file2
into
.IR file1 .
As in 
.I ed,
identical pairs where
.I n1
=
.I n2
E 8
I 8
.Ar name .
.Tp
.Pp
Output options. Except for
.Fl b ,
.Fl w ,
.Fl i
E 8
or
D 8
.I n3
=
.I n4
are abbreviated as a single number.
.PP
Following each of these lines come all the lines that are
affected in the first file flagged by `<', 
then all the lines that are affected in the second file
flagged by `>'.
.PP
Except for
D 4
.B \-b,
E 4
I 4
\fB\-b, -w, -i\fP or \fB-t\fP
E 8
I 8
.Fl t
E 8
E 4
which may be given with any of the others,
the following options are mutually exclusive:
D 8
.TP 9
.B \-e
D 4
producing a script of
E 4
I 4
produces a script of
E 4
.I "a, c"
and 
.I d
commands for the editor
.I ed,
which will recreate
.I file2
from
.IR file1 .
In connection with
.BR \-e ,
the following shell program may help maintain
multiple versions of a file.
Only an ancestral file ($1) and a chain of 
version-to-version
.I ed
scripts ($2,$3,...) made by
.I diff
need be on hand.
A `latest version' appears on
the standard output.
.IP
\ \ \ \ \ \ \ \ (shift; cat $*; echo \'1,$p\') \(bv ed \- $1
.IP
Extra commands are added to the output when comparing directories with
.B \-e,
so that the result is a
.IR sh (1)
script for converting text files which are common to the two directories
from their state in
.I dir1
to their state in
.I dir2.
.TP 9
.B \-f
produces a script similar to that of
.B \-e,
not useful with
.I ed,
and in the opposite order.
.TP 9
I 6
.B \-n
produces a script similar to that of
.B \-e,
but in the opposite order and with a count of changed lines on each
insert or delete command.  This is the form used by
.IR rcsdiff (1).
.TP 9
E 6
.B \-c
E 8
I 8
.Tw Fl
E 9
.Tp Fl c
E 10
I 10
.Bl -tag -width Ds
.It Fl c
E 10
E 8
produces a diff with lines of context.
D 13
The default is to present 3 lines of context and may be changed, e.g to 10, by
E 13
I 13
The default is to present 3 lines of context and may be changed, e.g., to 10, by
E 13
D 8
.BR \-c10 \&.
E 8
I 8
.Fl c10 .
E 8
With
D 8
.B \-c
E 8
I 8
.Fl c
E 8
the output format is modified slightly:
the output beginning with identification of the files involved and
their creation dates and then each change is separated
by a line with a dozen *'s.
The lines removed from
D 8
.I file1
E 8
I 8
.Ar file1
E 8
D 4
are marked with `\(mi'; those added to
E 4
I 4
D 6
are marked with `\(mi<'; those added to
E 6
I 6
are marked with `\(mi '; those added to
E 6
E 4
D 8
.I file2
E 8
I 8
.Ar file2
E 8
D 4
are marked `+'.  Lines which are changed from one
file to the other are marked in both files with `!'.
E 4
I 4
D 6
are marked `+>'.  Lines which are changed from one
file to the other are marked in
.I file1
with `!<' and
.I file2
with `!>'.
E 6
I 6
are marked `+ '.  Lines which are changed from one
D 13
file to the other are marked in both files with with `! '.
E 13
I 13
file to the other are marked in both files with `! '.
E 13
E 6
D 8

E 8
Changes which lie within <context> lines of each other are grouped
together on output.  (This is a change from the previous ``diff -c''
but the resulting output is usually much easier to interpret.)
E 4
D 8
.TP 9
.B \-h
does a fast, half-hearted job.
It works only when changed stretches are short
and well separated,
but does work on files of unlimited length.
.TP
.B \-Dstring
E 8
I 8
D 10
.Tp Fl e
E 10
I 10
.It Fl e
E 10
produces output in a form suitable as input for the editor utility,
.Xr ed 1 ,
which can then be used to convert file1 into file2.
.Pp
Extra commands are added to the output when comparing directories with
.Fl e ,
so that the result is a
.Xr sh  1
script for converting text files which are common to the two directories
from their state in
.Ar dir1
to their state in
.Ar dir2 .
D 10
.Tp Fl f
E 10
I 10
.It Fl f
E 10
D 13
identical output of the
E 13
I 13
identical output to that of the
E 13
.Fl e
flag, but in reverse order.  It cannot
be digested by
.Xr ed 1 .
D 10
.Tp Fl h
E 10
I 10
.It Fl h
E 10
Invokes an alternate algorithm which can handle files of very long lengths.
There is a trade off. The algorithm can only deal with changes which are
clearly delimited and brief. Long sections of changes and overlaps will
confuse it.
D 10
.Tp Fl n
E 10
I 10
.It Fl n
E 10
produces a script similar to that of
.Fl e ,
but in the opposite order and with a count of changed lines on each
insert or delete command.  This is the form used by
.Xr rcsdiff  1  .
D 10
.Tc Fl D
.Ar string
.Cx
E 10
I 10
D 11
.It D Ns Ar string
E 11
I 11
.It Fl D Ns Ar string
E 11
E 10
E 8
D 9
causes
D 8
.I diff
E 8
I 8
.Nm diff
E 8
to create a merged version of
E 9
I 9
creates a merged version of
E 9
D 8
.I file1
E 8
I 8
.Ar file1
E 8
and
D 8
.I file2
E 8
I 8
.Ar file2
E 8
on the standard output, with C preprocessor controls included so that
D 8
a compilation of the result without defining \fIstring\fR is equivalent
E 8
I 8
a compilation of the result without defining
.Ar string
is equivalent
E 8
to compiling
D 8
.I file1,
E 8
I 8
.Ar file1 ,
E 8
while defining
D 8
.I string
E 8
I 8
.Ar string
E 8
will yield
D 8
.I file2.
D 4
.TP
E 4
I 4
.TP 9
E 4
.B \-b
E 8
I 8
.Ar file2 .
I 9
D 10
.Tp
E 10
I 10
.El
E 10
.Pp
Comparison options:
E 9
D 10
.Tp Fl b
E 10
I 10
.Bl -tag -width Ds
.It Fl b
E 10
E 8
causes trailing blanks (spaces and tabs) to be ignored, and other
strings of blanks to compare equal.
I 4
D 8
.TP 9
.B \-w
is similar to
.B \-b
but causes whitespace (blanks and tabs) to be totally ignored.  E.g.,
``if\ (\ a\ ==\ b\ )'' will compare equal to ``if(a==b)''.
.TP 9
.B \-i
E 8
I 8
D 10
.Tp Fl i
E 10
I 10
.It Fl i
E 10
E 8
ignores the case of letters.  E.g., ``A'' will compare equal to ``a''.
D 8
.TP 9
.B \-t
E 8
I 8
D 10
.Tp Fl t
E 10
I 10
.It Fl t
E 10
E 8
will expand tabs in output lines.  Normal or
D 8
.B \-c
E 8
I 8
.Fl c
E 8
output adds character(s) to the front of each line which may screw up
the indentation of the original source lines and make the output listing
difficult to interpret.  This option will preserve the original source's
indentation.
E 4
D 8
.SH FILES
/tmp/d?????
E 8
I 8
D 10
.Tp Fl w
E 10
I 10
.It Fl w
E 10
is similar to
.Fl b
but causes whitespace (blanks and tabs) to be totally ignored.  E.g.,
``if\ (\ a\ ==\ b\ )'' will compare equal to ``if(a==b)''.
D 10
.Tp
E 10
I 10
.El
E 10
I 9
.Pp
Directory comparison options:
D 10
.Tw Fl
.Tp Fl l
E 10
I 10
.Bl -tag -width Ds
.It Fl l
E 10
long output format; each text file
D 10
.Sf Nm diff \'d
E 10
I 10
D 13
.Nm diff \'d
E 13
I 13
.Nm diff Ns \'d
E 13
E 10
is piped through
.Xr pr  1
to paginate it,
other differences are remembered and summarized
after all text file differences are reported.
D 10
.Tp Fl r
E 10
I 10
.It Fl r
E 10
causes application of
.Nm diff
recursively to common subdirectories encountered.
D 10
.Tp Fl s
E 10
I 10
.It Fl s
E 10
causes
.Nm diff
to report files which are the same, which are otherwise not mentioned.
D 10
.Tc Fl S
.Ar name
.Cx
E 10
I 10
D 11
.It S Ns Ar name
E 11
I 11
.It Fl S Ns Ar name
E 11
E 10
re-starts a directory
.Nm diff
in the middle beginning with file
.Ar name .
D 10
.Tp
E 10
I 10
.El
E 10
.Pp
If both arguments are directories,
.Nm diff
sorts the contents of the directories by name, and then runs the
regular file
.Nm diff
algorithm, producing a change list,
on text files which are different.
Binary files which differ,
common subdirectories, and files which appear in only one directory
are described as such.
.Pp
If only one of
.Ar file1
and
.Ar file2
is a directory,
.Nm diff
is applied to the non-directory file and the file contained in
the directory file with a filename that is the same as the
last component of the non-directory file.
.Pp
D 13
If either the
E 13
I 13
If either
E 13
.Ar file1
or
.Ar file2
is
D 10
.Fl ,
E 10
I 10
.Sq Fl ,
E 10
the standard input is
used in its place.
E 9
.Ss Output Style
The default (without
.Fl e ,
.Fl c ,
D 9
.Fl n ,
E 9
or
D 9
.Fl t
E 9
I 9
.Fl n
E 9
.\"  -C
D 9
options) diff utility
E 9
I 9
options)
E 9
output contains lines of these forms, where
.Va XX , YY , ZZ , QQ
are line numbers respective of file order.
.Pp
D 10
.Dp Cx Li XX
.Ic a
.Li YY
.Cx
E 10
I 10
.Bl -tag -width "XX,YYcZZ,QQ" -compact
.It Li XX Ns Ic a Ns Li YY
E 10
At (the end of) line
.Va XX
of
.Ar file1 ,
append the contents
of line
.Va YY
of
.Ar file2
to make them equal.
D 10
.Dp Cx Li XX
.Ic a
.Li YY ,
.Li ZZ
.Cx
E 10
I 10
.It Li XX Ns Ic a Ns Li YY,ZZ
E 10
Same as above, but append the range of lines,
.Va YY
through
.Va ZZ
of
.Ar file2
to line
.Va XX
of file1.
D 10
.Dp Cx Li XX
.Ic d
.Li YY
.Cx
E 10
I 10
.It Li XX Ns Ic d Ns Li YY
E 10
At line
.Va XX
delete
the line. The value
.Va YY
tells to which line the change
would bring
.Ar file1
in line with
.Ar file1 .
D 10
.Dp Cx Li XX ,
.Li YY
.Ic d
.Li ZZ
.Cx
E 10
I 10
.It Li XX,YY Ns Ic d Ns Li ZZ
E 10
Delete the range of lines
.Va XX
through
.Va YY
in
.Ar file1 .
D 10
.Dp Cx Li XX
.Ic c
.Li YY
.Cx
E 10
I 10
.It Li XX Ns Ic c Ns Li YY
E 10
Change the line
.Va XX
in
.Ar file1
to the line
.Va YY
in
.Ar file2.
D 10
.Dp Cx Li XX ,
.Li YY
.Ic c
.Li ZZ
.Cx
E 10
I 10
.It Li XX,YY Ns Ic c Ns Li ZZ
E 10
Replace the range of specified lines with the line
.Va ZZ .
D 10
.Dp Cx Li XX ,
.Li YY
.Ic c
.Li ZZ ,
.Li QQ
.Cx
E 10
I 10
.It Li XX,YY Ns Ic c Ns Li ZZ,QQ
E 10
Replace the range
D 10
.Cx Va XX ,
.Va YY
.Cx
E 10
I 10
.Va XX , Ns YY
E 10
from
.Ar file1
with the range
D 10
.Cx Va ZZ ,
.Va QQ
.Cx
E 10
I 10
.Va ZZ , Ns QQ
E 10
from
.Ar file2 .
D 10
.Dp
E 10
I 10
.El
E 10
.Pp
These lines resemble
.Xr ed 1
subcommands to convert
.Ar file1
into
.Ar file2 .
The line numbers before the action letters pertain to
.Ar file1 ;
those after pertain to
.Ar file2 .
Thus, by exchanging
.Ic a
for
.Ic d
and reading the line in reverse order, one can also
determine how to convert
.Ar file2
into
.Ar file1 .
As in
.Xr ed 1 ,
identical
pairs (where num1 = num2) are abbreviated as a single
number.
.Sh ENVIRONMENT
D 10
.Tw Fl
.Tp Ev TMPDIR
E 10
I 10
.Bl -tag -width TMPDIR
.It Ev TMPDIR
E 10
If the environment variable
.Ev TMPDIR
exists,
D 10
.Nm Diff
will use the name specified by
E 10
I 10
.Nm diff
will use the directory specified by
E 10
.Ev TMPDIR
D 10
as an alternate temporary directory.
.Tp
E 10
I 10
as the temporary directory.
.El
E 10
.Sh FILES
D 10
.Dw /usr/bin/diffh
.Di L
.Dp Pa /tmp/d?????
E 8
.br
D 8
/usr/lib/diffh for 
.B \-h
.br
I 4
/bin/diff for directory diffs
.br
E 4
D 2
/usr/bin/pr
E 2
I 2
/bin/pr
E 2
.SH "SEE ALSO"
cmp(1), cc(1), comm(1), ed(1), diff3(1)
.SH DIAGNOSTICS
Exit status is 0 for no differences, 1 for some, 2 for trouble.
.SH BUGS
Editing scripts produced under the
.BR \-e " or"
.BR \-f " option are naive about"
creating lines consisting of a single `\fB.\fR'.
.PP
E 8
I 8
.Dp Pa /usr/bin/diffh
E 10
I 10
.Bl -tag -width /usr/bin/diffh -compact
.It Pa /tmp/d?????
.It Pa /usr/bin/diffh
E 10
Alternate algorithm version (used by option
.Fl h ) .
D 10
.Dp Pa /usr/bin/diff
E 10
I 10
.It Pa /usr/bin/diff
E 10
for directory diffs
D 10
.Dp Pa /usr/bin/pr
E 10
I 10
.It Pa /usr/bin/pr
E 10
used by the
.Fl l
option.
D 10
.Dp
E 10
I 10
.El
E 10
.Sh SEE ALSO
.Xr cmp 1 ,
.Xr cc 1 ,
.Xr comm 1 ,
.Xr ed 1 ,
.Xr diff3 1
I 13
.br
.ne 1i
E 13
D 10
.Sh HISTORY
.Nm Diff
appeared in Version 6 AT&T Unix.
E 10
.Sh DIAGNOSTICS
The
.Nm diff
utility exits with one of the following values:
D 10
.Dw Ds
.Dp \&0
E 10
I 10
.Pp
.Bl -tag -width Ds -compact -offset indent
.It \&0
E 10
No differences were found.
D 10
.Dp \&1
E 10
I 10
.It \&1
E 10
Differences were found.
D 10
.Dp \&>\&1
E 10
I 10
.It "\&>\&1"
E 10
An error occurred.
D 10
.Dp
E 10
I 10
.El
E 10
.Sh BUGS
The
.Fl f
and
.Fl e
options
D 9
have difficulties producing lines with the
first and only character
.Dq Li \&. ,
as this is a command character for
E 9
I 9
do not provide special handling for lines on which the
first and only character is
.Dq Li \&. .
This can cause problems for
E 9
.Xr ed 1 .
.Pp
E 8
When comparing directories with the
D 4
.B \-b
option specified,
E 4
I 4
D 8
\fB\-b, -w\fP or \fB-i\fP
E 8
I 8
.Fl b ,
.Fl w
or
.Fl i
E 8
options specified,
E 4
D 8
.I diff
E 8
I 8
.Nm diff
E 8
first compares the files ala
D 8
.I cmp,
E 8
I 8
.Ar cmp ,
E 8
and then decides to run the
D 8
.I diff
E 8
I 8
.Nm diff
E 8
algorithm if they are not equal.
This may cause a small amount of spurious output if the files
then turn out to be identical because the only differences are
D 4
insignificant blank string differences.
E 4
I 4
D 9
insignificant blank string or case differences.
E 9
I 9
insignificant white space or case differences.
E 9
I 8
D 10
.\" .Sh STANDARDS
E 10
I 10
.Sh HISTORY
A
.Nm
command appeared in
.At v6 .
E 10
E 8
E 4
E 1
