h26633
s 00002/00002/00038
d D 8.1 93/06/08 18:27:33 bostic 10 9
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00000/00016/00040
d D 5.2 93/06/05 18:00:31 mckusick 9 8
c update so no long ACM article
e
s 00005/00000/00051
d D 5.1 91/04/16 17:51:42 bostic 8 7
c new copyright; att/bsd/shared
e
s 00017/00002/00034
d D 1.7 86/06/17 14:35:31 mckusick 7 6
c add SIGPLAN copyright notice
e
s 00002/00000/00034
d D 1.6 82/03/15 13:53:31 peter 6 5
c copyright space.
e
s 00000/00002/00034
d D 1.5 82/03/14 22:10:46 peter 5 4
c no more double spacing.
e
s 00003/00003/00033
d D 1.4 82/03/13 15:29:23 peter 4 3
c diction.
e
s 00001/00001/00035
d D 1.3 82/03/12 15:49:25 peter 3 2
c kurt and tom comments.
e
s 00007/00009/00029
d D 1.2 82/03/11 21:37:44 peter 2 1
c polle changes and some other wording changes.
e
s 00038/00000/00000
d D 1.1 82/03/11 21:13:15 peter 1 0
c date and time created 82/03/11 21:13:15 by peter
e
u
U
t
T
I 8
D 10
.\" Copyright (c) 1982 The Regents of the University of California.
.\" All rights reserved.
E 10
I 10
.\" Copyright (c) 1982, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 10
.\"
.\" %sccs.include.redist.man%
.\"
E 8
I 1
D 7
\"	%W% %G%
E 7
I 7
.\"	%W% (Berkeley) %G%
.\"
E 7
D 5
.ls 1
.lp
E 5
.sp 1
D 9
.ce 1000
I 7
Reprinted from
Proceedings of the ACM SIGPLAN '82 Symposium on Compiler Construction
SIGPLAN Notices 17, 6 (June 1982), pp 120-126\*[\(dg\*]
.(f
\(dgCopyright 1982 ACM 0-89791-074-5/82/006/0120 $00.75
.br
Permission to copy without fee all or part of this material
is granted provided that the copies are not made or distributed for 
direct commercial advantage, the ACM copyright notice and the title 
of the publication and its date appear, and notice is given that
copying is by permission of the Association for Computing Machinery.
To copy otherwise, or to republish, requires a fee and / or
specific permission.
.)f
.sp 2
E 9
E 7
\fB\s+2gprof: a Call Graph Execution Profiler\s-2\fP\**
.(f
\**This work was supported by grant MCS80-05144
from the National Science Foundation.
I 6
D 7
.sp 2i
E 7
E 6
.)f
.sp 1
by
\fISusan L. Graham\fP
\fIPeter B. Kessler\fP
\fIMarshall K. McKusick\fP
.sp 1
Computer Science Division
Electrical Engineering and Computer Science Department
University of California, Berkeley
Berkeley, California 94720
.ce 0
.sp 1
I 6
.sp 0.5i
E 6
.sh 0 "Abstract"
.pp
D 2
Programs the size and complexity of compilers
are composed of a large number of small routines,
each implementing an abstraction for the routines
that call it.
E 2
I 2
D 4
Large complex programs are composed of a number of small routines
E 4
I 4
Large complex programs are composed of many small routines
E 4
that implement abstractions for the routines that call them.
E 2
To be useful, an execution profiler must attribute
D 4
execution time in a way that is meaningful in terms of the 
E 4
I 4
execution time in a way that is significant for the 
E 4
D 2
logical structure of a program 
as well as its decomposition.
The information must then be displayed to the user
E 2
I 2
D 3
logical structure of a program.
E 3
I 3
logical structure of a program
E 3
D 4
as well as in terms of its textual decomposition.
E 4
I 4
as well as for its textual decomposition.
E 4
This data must then be displayed to the user
E 2
in a convenient and informative way.
D 2
The \fBgprof\fP profiler described in this paper
incorporates the running time of called routines
E 2
I 2
The \fBgprof\fP profiler 
accounts for the running time of called routines
E 2
in the running time of the routines that call them.
The design and use of this profiler is described.
E 1
