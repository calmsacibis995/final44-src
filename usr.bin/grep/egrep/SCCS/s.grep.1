h01556
s 00002/00002/00222
d D 8.3 94/04/18 07:30:24 bostic 16 15
c spelling
e
s 00006/00005/00218
d D 8.2 93/12/30 15:38:45 mckusick 15 14
c copyediting for Usenix manuals
e
s 00002/00002/00221
d D 8.1 93/06/06 14:47:58 bostic 14 13
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00050/00054/00173
d D 6.7 91/07/29 17:53:42 cael 13 12
c mdoc version three
e
s 00003/00001/00224
d D 6.6 91/03/14 00:18:23 cael 12 10
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00001/00000/00225
d R 6.6 91/03/13 20:33:38 cael 11 10
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00009/00006/00216
d D 6.5 90/07/24 22:45:56 cael 10 9
c .Xr botch fix
e
s 00212/00152/00010
d D 6.4 90/06/24 19:04:56 cael 9 8
c converted man page
e
s 00007/00001/00155
d D 6.3 87/10/08 11:30:39 bostic 8 5
c document -h, -o flags
e
s 00002/00004/00158
d R 6.4 87/10/07 18:28:43 bostic 7 6
c fix -f for grep
e
s 00006/00000/00156
d R 6.3 87/10/07 17:38:32 bostic 6 5
c document -h, -o flags
e
s 00002/00005/00154
d D 6.2 87/10/05 09:16:20 bostic 5 3
c egrep now supports -i
e
s 00001/00002/00157
d R 6.2 87/10/05 06:50:57 bostic 4 3
c egrep now handles -i
e
s 00001/00001/00158
d D 6.1 85/04/29 14:26:20 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00046/00070/00113
d D 5.1 85/04/29 14:26:06 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00183/00000/00000
d D 4.1 85/04/29 14:25:58 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 9
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 9
I 9
D 14
.\" Copyright (c) 1980, 1990 The Regents of the University of California.
.\" All rights reserved.
E 14
I 14
.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 14
E 9
.\"
D 9
.\"	%W% (Berkeley) %G%
E 9
I 9
D 13
.\" %sccs.include.redist.man%
E 13
I 13
.\" %sccs.include.redist.roff%
E 13
E 9
.\"
D 2
.TH GREP 1 8/11/80
E 2
I 2
D 3
.TH GREP 1 "11 August 1980"
E 3
I 3
D 9
.TH GREP 1 "%Q%"
E 3
E 2
.UC 4
.SH NAME
grep, egrep, fgrep \- search a file for a pattern
.SH SYNOPSIS
.B grep
[ option ] ...
expression [ file ] ...
.LP
.B egrep 
[ option ] ...
[ expression ]
[ file ] ...
D 2
.PP
E 2
I 2
.LP
E 2
.B fgrep
[ option ] ...
[ strings ]
[ file ]
.SH DESCRIPTION
Commands of the
.I grep
family search the input
.I files
D 2
(standard input default)
for lines matching
a pattern.
Normally, each line found
is copied to the standard output.
E 2
I 2
(standard input default) for lines matching a pattern.
Normally, each line found is copied to the standard output.
E 2
.I Grep
patterns are limited regular expressions in the style of
.IR ex (1);
it uses a compact nondeterministic algorithm.
.I Egrep
D 2
patterns are full regular expressions;
it uses a fast deterministic algorithm that
sometimes needs exponential space.
E 2
I 2
patterns are full regular expressions; it uses a fast deterministic
algorithm that sometimes needs exponential space.
E 2
.I Fgrep
patterns are fixed strings; it is fast and compact.
The following options are recognized.
.TP
.B \-v
D 2
All lines but those matching
are printed.
E 2
I 2
All lines but those matching are printed.
E 2
.TP
.B \-x
(Exact) only lines matched in their entirety are printed
.RI ( fgrep
E 9
I 9
D 13
.\"     %W% (Berkeley) %G%
E 13
I 13
.\"	%W% (Berkeley) %G%
E 13
.\"
I 12
D 13
.Vx
.Vx
E 13
E 12
.Dd %Q%
.Dt GREP 1
D 12
.Os BSD 4.4
E 12
I 12
.Os
E 12
.Sh NAME
.Nm grep
.Nd file pattern searcher
.Sh SYNOPSIS
.Nm grep
.Op Fl bchilnosvw
.Op Fl e Ar pattern
D 13
.Ar
E 13
I 13
.Op Ar
E 13
.Nm egrep
.Op Fl bchilnosv
.Op Fl e Ar pattern
.Op Fl f Ar pattern_file
D 13
.Ar
E 13
I 13
.Op Ar
E 13
.Nm fgrep
.Op Fl bchilnosvx
.Op Fl e Ar pattern
.Op Fl f Ar pattern_file
D 13
.Ar
E 13
I 13
.Op Ar
E 13
.Sh DESCRIPTION
The
.Nm grep
utilities search the given input files selecting lines
which match one or more patterns; the type of patterns is controlled
by the options specified.
By default, a pattern
matches an input line if any regular expression (RE) in the
pattern matches the input line without its trailing <new-line>.
A null RE matches every line.
Each input line that matches at
least one of the patterns is written to the standard output.
.Pp
For simple patterns or
.Xr ex 1
or
.Xr ed 1
style regular expressions, the
.Nm grep
utility is used.
The
.Nm egrep
utility
can handle extended regular expressions and
D 15
embedded <newline>s in pattern
E 15
I 15
embedded <newline>s in patterns.
The
E 15
D 13
.Nm Fgrep
E 13
I 13
.Nm fgrep
E 13
D 15
is quick but is designed to handle fixed strings.
E 15
I 15
utility is quick but can handle only fixed strings.
E 15
A fixed string
is a string of characters,
each character
is matched only by itself.
The pattern
value can consist of multiple lines with
embedded <newline>s.
In this case, the <newline>s
act as alternation characters, allowing any of the
pattern lines to match a portion of the input.
.Pp
The following options are available:
.Pp
D 13
.Tw Fl
.Tp Fl b
E 13
I 13
.Bl -tag -width indent
.It Fl b
E 13
The block number on the disk in which a matched pattern is located
is displayed in front of the respective matched line.
D 13
.Tp Fl c
E 13
I 13
.It Fl c
E 13
Only a count of selected lines is written to standard
output.
D 13
.Tc Fl e
.Ws
.Ar expression
.Cx
E 13
I 13
.It Fl e Ar expression 
E 13
Specify a pattern used during the search of the
input.
Multiple
.Fl e
options can be used to specify
D 15
multiple patterns; an input line is selected of it
E 15
I 15
multiple patterns; an input line is selected if it
E 15
matches any of the specified patterns.
D 13
.Tc Fl f
.Ws
.Ar pattern_file
.Cx
E 13
I 13
.It Fl f Ar pattern_file 
E 13
The pattern is read from the file named by the
pathname pattern_file.
Trailing newlines
in the pattern_file are ignored.
D 13
.Pf \&( Nm egrep
E 13
I 13
.Pf ( Nm Egrep
E 13
and
.Nm fgrep
E 9
only).
D 9
.TP
.B \-c
Only a count of matching lines is printed.
.TP
.B \-l
D 2
The names of files with matching lines are listed (once)
separated by newlines.
E 2
I 2
The names of files with matching lines are listed (once) separated by newlines.
E 2
.TP
.B \-n
D 2
Each line is preceded by
its relative line number in the file.
E 2
I 2
Each line is preceded by its relative line number in the file.
E 2
.TP
.B \-b
D 2
Each line is preceded by the block number
on which it was found.
This is sometimes useful in locating
disk block numbers by context.
E 2
I 2
Each line is preceded by the block number on which it was found.
This is sometimes useful in locating disk block numbers by context.
E 2
.TP
I 8
.B \-h
E 9
I 9
D 13
.Tp Fl h
E 13
I 13
.It Fl h
E 13
E 9
Never print filename headers with output lines.
D 9
.TP
.B \-o
Always print filename headers with output lines.
.TP
E 8
.B \-i
D 2
The case of letters is ignored in making comparisons.
(E.g. upper and lower case are considered identical.)
(\fIgrep\fR\| and \fIfgrep\fR only)
E 2
I 2
The case of letters is ignored in making comparisons \(em that is, upper and
E 9
I 9
D 13
.Tp Fl i
E 13
I 13
.It Fl i
E 13
The case of letters is ignored in making comparisons \- that is, upper and
E 9
D 5
lower case are considered identical.  This applies to \fIgrep\fR\| and
\fIfgrep\fR only.
E 5
I 5
lower case are considered identical.
E 5
E 2
D 9
.TP
.B \-s
E 9
I 9
D 13
.Tp Fl l
E 13
I 13
.It Fl l
E 13
Only the names of files containing selected lines
are written to standard output.
Pathnames are
listed once per file searched.
If the standard
input is searched, the pathname
D 10
.Fl
E 10
I 10
.Sq Fl
E 10
is written.
D 13
.Tp Fl n
E 13
I 13
.It Fl n
E 13
Each output line is preceded by its relative line
number in the file; each file starting at line 1.
The line number counter is reset for each file processed.
This option is ignored if
.Fl c ,
.Fl l ,
or
.Fl s
is
specified.
D 13
.Tp Fl o
E 13
I 13
.It Fl o
E 13
Always print filename headers with output lines.
D 13
.Tp Fl s
E 13
I 13
.It Fl s
E 13
E 9
D 2
Silent mode.
Nothing is printed (except error messages).
E 2
I 2
Silent mode.  Nothing is printed (except error messages).
E 2
This is useful for checking the error status.
D 9
.TP
.B \-w
E 9
I 9
D 13
.Tp Fl v
E 13
I 13
.It Fl v
E 13
Selected lines are those
.Em not
matching the specified
patterns.
D 13
.Tp Fl x
E 13
I 13
.It Fl x
E 13
Only input lines selected against an entire fixed
string or regular expression are considered to be
matching lines.
D 13
.Pf \&( Nm fgrep
E 13
I 13
.Pf ( Nm Fgrep
E 13
only).
D 13
.Tp Fl w
E 13
I 13
.It Fl w
E 13
E 9
The expression is searched for as a word
(as if surrounded by `\e<' and `\e>', see
D 9
.IR ex (1).)
(\fIgrep\fR\| only)
.TP
.BI \-e " expression"
Same as a simple
.I expression 
D 2
argument,
but useful when the
E 2
I 2
argument, but useful when the
E 2
.I expression
begins with a \-.
.TP
.BI \-f " file"
D 5
The regular expression
.RI ( egrep )
or string list
E 5
I 5
D 8
The regular expression (\fIgrep\fP or \fIegrep\fP) or string list
E 8
I 8
The regular expression (\fIegrep\fP) or string list
E 8
E 5
.RI ( fgrep ) 
is taken from the
.I file.
D 2
.PP
E 2
I 2
.LP
E 2
In all cases the file name is shown if there is more than one input file.
D 2
Care should be taken when
using the characters
$ * [ ^ | ( ) and \\ in the
E 2
I 2
Care should be taken when using the characters $ * [ ^ | ( ) and \\ in the
E 2
.I expression
D 2
as they are
also meaningful to the Shell.
It is safest to enclose the
entire
E 2
I 2
as they are also meaningful to the Shell.  It is safest to enclose the entire
E 2
.I expression
argument in single quotes \' \'.
D 2
.PP
E 2
I 2
.LP
E 2
.I Fgrep
searches for lines that contain one of the (newline-separated)
.I strings.
D 2
.PP
E 2
I 2
.LP
E 2
.I Egrep
accepts extended regular expressions.
D 2
In the following description `character' excludes
newline:
E 2
I 2
In the following description `character' excludes newline:
E 2
.IP
D 2
A \e followed by a single character
other than newline
matches that character.
E 2
I 2
A \e followed by a single character other than newline matches that character.
E 2
.IP
D 2
The character ^ ($) matches the beginning (end) of
a line.
E 2
I 2
The character ^ matches the beginning of a line.
E 2
.IP
I 2
The character $ matches the end of a line.
.IP
E 2
A 
.B .
D 2
matches any character.
E 2
I 2
(period) matches any character.
E 2
.IP
A single character not otherwise endowed with special
meaning matches that character.
.IP
D 2
A string enclosed in brackets [\|]
matches any single character from the string.
Ranges of ASCII character codes may be abbreviated
as in `a\-z0\-9'.
E 2
I 2
A string enclosed in brackets [\|] matches any single character from the string.
Ranges of ASCII character codes may be abbreviated as in `a\-z0\-9'.
E 2
A ]
may occur only as the first character of the string.
D 2
A literal \- must be placed where it can't be
mistaken as a range indicator.
E 2
I 2
A literal \- must be placed where it can't be mistaken as a range indicator.
E 2
.IP
D 2
A regular expression followed by * (+, ?) matches a sequence
of 0 or more (1 or more, 0 or 1)
E 2
I 2
A regular expression followed by an * (asterisk) matches a sequence of 0
or more matches of the regular expression.
A regular expression followed by a + (plus) matches a sequence of 1 or more
E 2
matches of the regular expression.
I 2
A regular expression followed by a ? (question mark) matches a sequence of
0 or 1 matches of the regular expression.
E 2
.IP
D 2
Two regular expressions concatenated
match a match of the first followed by a match of 
the second.
E 2
I 2
Two regular expressions concatenated match a match of the first followed
by a match of the second.
E 2
.IP
Two regular expressions separated by | or newline
D 2
match either a match for the first or a match for the
second.
E 2
I 2
match either a match for the first or a match for the second.
E 2
.IP
A regular expression enclosed in parentheses
matches a match for the regular expression.
.LP
D 2
The order of precedence of operators
at the same parenthesis level
is [\|] then
*+? then concatenation then | and newline.
E 2
I 2
The order of precedence of operators at the same parenthesis level
is [\|] then *+? then concatenation then | and newline.
.LP
Ideally there should be only one
.I grep,
but we don't know a single algorithm that spans a wide enough
range of space-time tradeoffs.
E 2
.SH "SEE ALSO"
ex(1),
sed(1),
sh(1)
.SH DIAGNOSTICS
Exit status is 0 if any matches are found,
1 if none, 2 for syntax errors or inaccessible files.
.SH BUGS
E 9
I 9
.Xr ex  1  . )
D 13
.Pf \&( Nm grep
E 13
I 13
.Pf ( Nm Grep
E 13
only)
.Pp
D 13
.Tp
E 13
I 13
.El
E 13
If no file arguments are specified, the
standard input is used.
.Pp
The
.Nm grep
utility exits with one of the following values:
D 10
.Tw Ds
.Tp Li \&0
E 10
I 10
D 13
.Dw Ds
.Dp Li \&0
E 13
I 13
.Pp
.Bl -tag -width flag -compact
.It Li 0
E 13
E 10
One or more lines were selected.
D 10
.Tp Li \&1
E 10
I 10
D 13
.Dp Li \&1
E 13
I 13
.It Li 1
E 13
E 10
No lines were selected.
D 10
.Tp Li \&>1
E 10
I 10
D 13
.Dp Li \&>1
E 13
I 13
.It Li >1
E 13
E 10
An error occurred.
D 10
.Tp
E 10
I 10
D 13
.Dp
E 13
I 13
.El
E 13
E 10
.Sh EXTENDED REGULAR EXPRESSIONS
The following characters are interpreted by
.Nm egrep :
D 13
.Tw Ds
.Tp Cm \&$
E 13
I 13
.Pp
.Bl -tag -width flag -compact
.It Cm \&$
E 13
Align the match from the end of the line.
D 13
.Tp Cm \&^
E 13
I 13
.It Cm \&^
E 13
Align the match from the beginning of the line.
D 13
.Tp Cm \&|
E 13
I 13
.It Cm \&|
E 13
Add another pattern (see example below).
D 13
.Tp Cm \&?
E 13
I 13
.It Cm \&?
E 13
Match 1 or less sequential repetitions of the pattern.
D 13
.Tp Cm \&+
E 13
I 13
.It Cm \&+
E 13
Match 1 or more sequential repetitions of the pattern.
D 13
.Tp Cm \&*
E 13
I 13
.It Cm \&*
E 13
Match 0 or more sequential repetitions of the pattern.
D 13
.Tp Cm \&[]
E 13
I 13
.It Cm \&[]
E 13
Match any single character or range of characters
enclosed in the brackets.
D 13
.Tp Cm \&\e
E 13
I 13
.It Cm \&\e
E 13
Escape special characters which have meaning to
.Nm egrep ,
the set of {$,.,^,[,],|,?,+,*,(,)}.
D 13
.Tp
E 13
I 13
.El
E 13
.Sh EXAMPLES
D 15
To find all occurances of the word patricia in a file:
E 15
I 15
D 16
To find all occurences of the word patricia in a file:
E 16
I 16
To find all occurrences of the word patricia in a file:
E 16
E 15
I 10
.Pp
E 10
.Dl grep patricia myfile
.Pp
D 13
To find all occurences to the pattern
.Sq Li \&.Pp
E 13
I 13
D 16
To find all occurences of the pattern
E 16
I 16
To find all occurrences of the pattern
E 16
.Ql \&.Pp
E 13
at the beginning of a line:
I 10
.Pp
E 10
.Dl grep '^\e.Pp'
.Pp
D 15
The apostrophys assure the entire expression is evaluated by
E 15
I 15
The apostrophes assure the entire expression is evaluated by
E 15
.Nm grep
instead of by the
users shell.
The carat or hat
D 13
.Sq Li \&^
E 13
I 13
.Ql Li \&^
E 13
means
.Em from the beginning of a line ,
and the
D 13
.Sq Li \&\e
E 13
I 13
.Ql Li \&\e
E 13
escapes the
D 13
.Sq Li \&.
E 13
I 13
.Ql Li \&.
E 13
which would otherwise match any character.
.Pp
A simple example of an extended regular expression:
I 10
.Pp
E 10
.Dl egrep '19|20|25' calendar
.Pp
Peruses the file calendar looking for either 19, 20
or 25.
.Sh SEE ALSO
.Xr ed 1 ,
.Xr ex 1 ,
.Xr sed 1
.Sh HISTORY
D 13
.Nm Grep
appeared in Version 6 AT&T Unix.
E 13
I 13
The
.Nm grep
command appeared in
.At v6 .
E 13
.Sh BUGS
E 9
D 2
Ideally there should be only one
.I grep,
but we don't know a single algorithm that spans a wide enough
range of space-time tradeoffs.
.PP
Lines
are limited to 256 characters;
longer lines are truncated.
E 2
I 2
Lines are limited to 256 characters; longer lines are truncated.
E 2
E 1
