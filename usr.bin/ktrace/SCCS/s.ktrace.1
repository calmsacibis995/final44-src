h23302
s 00002/00002/00135
d D 8.1 93/06/06 14:53:16 bostic 11 10
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00003/00003/00134
d D 5.6 93/03/23 18:57:41 cael 10 9
c update .Os and history from .Ud to .Bx 4.4
e
s 00047/00050/00090
d D 5.5 91/07/26 19:05:48 cael 9 8
c mdoc version three
e
s 00002/00000/00138
d D 5.4 91/03/14 00:19:40 cael 8 6
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00001/00000/00138
d R 5.4 91/03/13 20:34:13 cael 7 6
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00004/00002/00134
d D 5.3 91/03/07 15:20:15 marc 6 5
c fixup examples
e
s 00005/00002/00131
d D 5.2 91/01/17 17:35:48 bostic 5 4
c forgot to document the -d flag (it's what -I used to be)
e
s 00063/00078/00070
d D 5.1 91/01/17 17:29:59 bostic 4 3
c KNF, lint, document all options, make man page consistent
e
s 00119/00119/00029
d D 1.3 90/07/24 22:46:42 cael 3 2
c .Xr botch fix
e
s 00034/00032/00114
d D 1.2 90/06/29 00:36:33 marc 2 1
c update manpage to new code
e
s 00146/00000/00000
d D 1.1 89/03/24 14:01:49 marc 1 0
c date and time created 89/03/24 14:01:49 by marc
e
u
U
t
T
I 1
D 3
.TH KTRACE 1
.SH NAME
.I ktrace
\- enable kernel process tracing
.SH SYNOPSIS
.ll +1i \" XXX - don't want it to wrap
.B ktrace
[
.B -Cica
]
[
.B -p
pid ]
[
.B -g
pgrp ]
[
.B -f 
trfile ]
[
.B -t 
trstr ]
.ll -1i
.br
.B ktrace
[
.B -ida
] [
.B -f
trfile ] [ command ]
.SH DESCRIPTION
.I Ktrace
D 2
enables kernel trace points on the indicated processes.  
Kernel trace data is logged to the file "ktrace.data" in the
E 2
I 2
enables kernel trace logging for the specified processes.  
Kernel trace data is logged to the file "ktrace.out" in the
E 3
I 3
D 11
.\" Copyright (c) 1990 The Regents of the University of California.
.\" All rights reserved.
E 11
I 11
.\" Copyright (c) 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 11
.\"
D 9
.\" %sccs.include.redist.man%
E 9
I 9
.\" %sccs.include.redist.roff%
E 9
.\"
D 9
.\"     %W% (Berkeley) %G%
E 9
I 9
.\"	%W% (Berkeley) %G%
E 9
.\"
I 8
D 9
.Vx
.Vx
E 9
E 8
.Dd %Q%
.Dt KTRACE 1
I 9
D 10
.Os
E 10
I 10
.Os BSD 4.4
E 10
E 9
.Sh NAME
.Nm ktrace
.Nd enable kernel process tracing
.Sh SYNOPSIS
.Nm ktrace
D 4
.Op Fl Cica
.Op Fl p Ar pid
.Op Fl g Ar pgrp
E 4
I 4
.Op Fl aCcdi
E 4
.Op Fl f Ar trfile
I 4
.Op Fl g Ar pgrp
.Op Fl p Ar pid
E 4
.Op Fl t Ar trstr
.Nm ktrace
D 4
.Op Fl ida
E 4
I 4
.Op Fl adi
E 4
.Op Fl f Ar trfile
D 4
.Op command
E 4
I 4
.Op Fl t Ar trstr
command
E 4
.Sh DESCRIPTION
.Nm Ktrace
enables kernel trace logging for the specified processes.
D 4
Kernel trace data is logged to the file
.Sq Pa ktrace.out
in the
E 3
E 2
current directory, or to the file named with the
D 3
.B -f
E 3
I 3
.Fl f
E 3
flag.
D 2
The current set of trace points include: system calls, namei translations, and i/o.
By default, system calls and namei translations
are traced.  To enable specific trace points, use the
E 2
I 2
D 3
The current set of kernel operations that can be traced
include: system calls, namei translations, signal processing, and i/o.
By default, all operations
are traced.  To restrict logging to specific operations, use the
E 2
.B -t
E 3
I 3
The current set of kernel operations that can be traced include:
system calls, namei translations, signal processing, and i/o.
By default, all operations are
traced.  To restrict logging to specific operations, use the
.Fl t
E 3
flag as described below.  Once tracing is enabled on a process,
trace data will be logged until either the process exits or the
trace point is cleared with the
D 3
.B -c
flag.
D 2
A traced process can log enormous amounts of data quickly, and compounded
with the child inherit flag, \fB\-i\fP, tracing can become unwieldly.
It is strongly recommended that one memorize
E 2
I 2
A traced process can generate enormous amounts of log
data quickly; compounded
with the action of the inherit flag, \fB\-i\fP, tracing can become unwieldly.
E 3
I 3
.Fl c
flag.  A traced process can generate enormous amounts of log
data quickly; compounded with the action of the inherit flag,
.Fl i  ,
tracing can become unwieldly.
E 3
It is strongly suggested that the user memorize
E 2
how to globally disable all tracing before attempting
to trace a process.  The following command is sufficient to
D 2
disable tracing on all owned processes (if root, all processes in the system):
E 2
I 2
D 3
disable tracing on all user owned processes (if root, all processes in the system):
E 2
.nf

	$ trace -C

.fi
D 2
The trace records are binary format: use kdump(1) to display
the trace records.
E 2
I 2
The trace file is binary format: use kdump(1) to decode
it.
E 2
Following is a description of the options:
.br
.TP
.B \-C
E 3
I 3
disable tracing on all user owned processes
(if root, all processes in the system):
E 4
I 4
D 9
Kernel trace data is logged to the file ``ktrace.out''.
E 9
I 9
Kernel trace data is logged to the file
.Pa ktrace.out .
E 9
The kernel operations that are traced include system calls, namei
D 9
translations, signal processing, and I/O.
E 9
I 9
translations, signal processing, and
.Tn I/O .
E 9
E 4
.Pp
I 4
Once tracing is enabled on a process, trace data will be logged until
either the process exits or the trace point is cleared.
A traced process can generate enormous amounts of log data quickly;
It is strongly suggested that users memorize how to disable tracing before
attempting to trace a process.
The following command is sufficient to disable tracing on all user owned
processes, and, if executed by root, all processes:
.Pp
E 4
.Dl \&$ trace -C
.Pp
D 4
The
trace file is binary format: use
E 4
I 4
The trace file is not human readable; use
E 4
.Xr kdump 1
to decode it.
D 4
Following
is a description of the options:
E 4
I 4
.Pp
The options are as follows:
E 4
D 9
.Tw Ds
I 4
.Tp Fl a
E 9
I 9
.Bl -tag -width indent
.It Fl a
E 9
Append to the trace file instead of truncating it.
E 4
D 9
.Tp Fl C
E 9
I 9
.It Fl C
E 9
E 3
D 4
Disable tracing on all user owned processes (if root, all processes in the
system).
E 4
I 4
Disable tracing on all user owned processes, and, if executed by root, all
processes in the system.
D 9
.Tp Fl c
E 9
I 9
.It Fl c
E 9
D 5
Clear the trace points associated with the specified file or process(es).
E 5
I 5
Clear the trace points associated with the specified file or processes.
D 9
.Tp Fl d
E 9
I 9
.It Fl d
E 9
Descendants; perform the operation for all current children of the
designated processes.
E 5
E 4
D 3
.TP
.B \-f trfile
Log trace records to \fBtrfile\fP instead of "trace.out".
.TP
.B \-t trstr
E 3
I 3
D 9
.Tc Fl f
.Ws
D 4
.Ar trfile
E 4
I 4
.Ar file
E 4
.Cx
E 9
I 9
.It Fl f Ar file 
E 9
Log trace records to
D 4
.Ar trfile
instead
of
.Dq Pa trace.out .
E 4
I 4
.Ar file
D 9
instead of ``ktrace.out''.
.Tc Fl g
.Ws
.Ar pgid
.Cx
E 9
I 9
instead of
.Pa ktrace.out .
.It Fl g Ar pgid 
E 9
Enable (disable) tracing on all processes in the process group (only one
.Fl g
flag is permitted).
D 9
.Tp Fl i
E 9
I 9
.It Fl i
E 9
D 5
Inherit; pass the trace flag to all future children of the designated
E 5
I 5
Inherit; pass the trace flags to all future children of the designated
E 5
processes.
D 9
.Tc Fl p
.Ws
.Ar pid
.Cx
E 9
I 9
.It Fl p Ar pid 
E 9
Enable (disable) tracing on the indicated process id (only one
.Fl p
flag is permitted).
E 4
D 9
.Tc Fl t
.Ws
.Ar trstr
.Cx
E 9
I 9
.It Fl t Ar trstr 
E 9
E 3
D 4
The string argument represents the kernel trace points, one
per letter.  The following table equates the letters with the tracepoints:
D 3
.nf

	c - trace system calls
	n - trace namei translations
D 2
	g - trace generic i/o (utilizing read(2)/write(2))
	a - all currently implemented trace points
	s - trace socket i/o (unimplemented)
	l - trace receipt of signals (unimplemented)
E 2
I 2
	i - trace I/O
	s - trace processing of signals
E 2

.fi
.TP
.B \-p pid
Enable (disable) tracing on the indicated process id (only one -p
flag allowed);
.TP
.B \-g pgid
E 3
I 3
.Dw Ds
E 4
I 4
The string argument represents the kernel trace points, one per letter.
The following table equates the letters with the tracepoints:
D 9
.Dw Dp
E 4
.Dp Cm c
E 9
I 9
.Pp
.Bl -tag -width flag -compact
.It Cm c
E 9
trace system calls
D 9
.Dp Cm n
E 9
I 9
.It Cm n
E 9
trace namei translations
D 9
.Dp Cm i
trace I/O
.Dp Cm s
E 9
I 9
.It Cm i
trace
.Tn I/O
.It Cm s
E 9
D 4
trace processing of signals
E 4
I 4
trace signal processing
E 4
D 9
.Dp
D 4
.Tc Fl p
.Ws
.Ar pid
.Cx
Enable (disable) tracing on the indicated process id (only one
.Fl p
flag
allowed);
.Tc Fl g
.Ws
.Ar pgid
.Cx
E 3
Enable (disable) tracing on all processes in the indicated
process group.
D 3
.TP
.B \-a
E 3
I 3
.Tp Fl a
E 3
Append to the tracefile instead of truncating it.
D 3
.TP
.B \-c
Clear the indicated trace points.
.TP
.B \-i
E 3
I 3
.Tp Fl c
Clear
the indicated trace points.
.Tp Fl i
E 3
D 2
Pass the trace flag to child processes on fork.  Also, descend
to all children of the indicated processes and set (clear) the trace
flags.  Be careful with this option.  For example, "ktrace -cip1"
will enable tracing on \fIall\fP processes in the system.
E 2
I 2
Pass the trace flag to all future children of the
designated processes.
E 2
D 3
.TP
I 2
.B \-I
E 3
I 3
.Tp Fl I
E 3
Pass the trace flag to all current and future children of the
designated processes.
E 4
D 3
.TP
E 2
.B command
Run \fBcommand\fP with the specified trace flags.
.LP
The -p, -g, and \fBcommand\fP options are mutually exclusive.
.SH EXAMPLES
.nf
E 3
I 3
.Tp Ar command
E 9
I 9
.El
.It Ar command
E 9
D 4
Run
E 4
I 4
Execute
E 4
.Ar command
with the specified trace flags.
D 9
.Tp
E 9
I 9
.El
E 9
.Pp
The
.Fl p ,
.Fl g ,
D 9
and command options are mutually exclusive.
E 9
I 9
and
.Ar command
options are mutually exclusive.
E 9
.Sh EXAMPLES
D 4
.Ds I
E 4
E 3
D 2
# trace system calls and namei translations of process id 34
E 2
I 2
# trace all kernel operations of process id 34
E 2
D 3

	$ ktrace -p34

E 3
I 3
D 4
.Dl $ ktrace -p34
E 4
I 4
.Dl $ ktrace -p 34
D 9
.sp
I 6
.nf
E 9
I 9
.Pp
E 9
E 6
E 4
E 3
D 2
# enable all trace points on processes in process group 15 and
E 2
I 2
# trace all kernel operations of processes in process group 15 and
E 2
# pass the trace flags to all current and future children
D 3

D 2
	$ ktrace -ta -ig15
E 2
I 2
	$ ktrace -Ig15
E 2

E 3
I 3
D 4
.Dl $ ktrace -Ig15
E 4
I 4
D 6
.Dl $ ktrace -g 15
E 6
I 6
D 9
.fi
E 9
.Dl $ ktrace -idg 15
E 6
D 9
.sp
E 9
I 9
.Pp
E 9
E 4
E 3
D 2
# disable all trace points on process 65
E 2
I 2
# disable all tracing of process 65
E 2
D 3

D 2
	$ ktrace -ta -cp65
E 2
I 2
	$ ktrace -cp65
E 2

E 3
I 3
D 4
.Dl $ ktrace -cp65
E 4
I 4
.Dl $ ktrace -cp 65
D 9
.sp
E 9
I 9
.Pp
E 9
E 4
E 3
D 2
# disable all trace points on process 70 and all children
E 2
I 2
# disable tracing signals on process 70 and all current children
E 2
D 3

D 2
	$ ktrace -ta -cip70
E 2
I 2
	$ ktrace -ts -cip70
E 2

E 3
I 3
D 4
.Dl $ ktrace -ts -cip70
E 4
I 4
D 6
.Dl $ ktrace -ts -cip 70
E 6
I 6
.Dl $ ktrace -t s -cdp 70
E 6
D 9
.sp
E 4
E 3
D 2
# enable tracing of generic i/o on process 67
E 2
I 2
# enable tracing of i/o on process 67
E 9
I 9
.Pp
# enable tracing of
.Tn I/O
on process 67
E 9
E 2
D 3

D 2
	$ ktrace -tg -p67
E 2
I 2
	$ ktrace -ti -p67
E 2

E 3
I 3
D 4
.Dl $ ktrace -ti -p67
E 4
I 4
.Dl $ ktrace -ti -p 67
D 9
.sp
E 9
I 9
.Pp
E 9
E 4
E 3
D 2
# run the command "w" with all all trace points enabled
E 2
I 2
# run the command "w", tracing only system calls
E 2
D 3

D 2
	$ ktrace -ta w
E 2
I 2
	$ ktrace -tc w
E 2

E 3
I 3
.Dl $ ktrace -tc w
I 4
D 9
.sp
E 9
I 9
.Pp
E 9
E 4
E 3
# disable all tracing to the file "tracedata"
D 3

D 2
	$ ktrace -ta -c -f tracedata
E 2
I 2
	$ ktrace -c -f tracedata
E 2

E 3
I 3
.Dl $ ktrace -c -f tracedata
I 4
D 9
.sp
E 9
I 9
.Pp
E 9
E 4
E 3
D 2
# disable tracing on all processes
E 2
I 2
# disable tracing of all processes owned by the user
E 2
D 3

	$ ktrace -C

.fi
.SH SEE ALSO
.IR kdump(1)
E 3
I 3
.Dl $ ktrace -C
D 4
.De
E 4
.Sh SEE ALSO
.Xr kdump 1
E 3
D 4
\- display kernel trace data.
E 4
I 3
.Sh HISTORY
D 9
4.4 BSD.
E 9
I 9
The
.Nm ktrace
D 10
command is
.Ud .
E 10
I 10
command appears in
.Bx 4.4 .
E 10
E 9
E 3
E 1
