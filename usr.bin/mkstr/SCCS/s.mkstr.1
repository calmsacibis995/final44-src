h36553
s 00002/00002/00109
d D 8.1 93/06/06 15:35:00 bostic 10 9
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00019/00016/00092
d D 6.6 91/05/09 23:21:04 cael 9 8
c mdoc version three
e
s 00002/00000/00106
d D 6.5 91/03/14 00:14:05 cael 8 6
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00001/00000/00106
d R 6.5 91/03/13 20:31:29 cael 7 6
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00083/00068/00023
d D 6.4 90/07/24 22:48:50 cael 6 5
c .Xr botch fix
e
s 00006/00005/00085
d D 6.3 90/06/24 19:13:47 cael 5 4
c converted man page
e
s 00000/00004/00090
d D 6.2 86/05/07 13:23:50 mckusick 4 3
c delete author
e
s 00001/00001/00093
d D 6.1 85/04/29 14:36:28 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00001/00001/00093
d D 5.1 85/04/29 14:36:14 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00094/00000/00000
d D 4.1 85/04/29 14:36:07 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 10
.\" Copyright (c) 1980, 1990 The Regents of the University of California.
.\" All rights reserved.
E 10
I 10
.\" Copyright (c) 1980, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 10
E 5
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
D 9
.\" %sccs.include.redist.man%
E 9
I 9
.\" %sccs.include.redist.roff%
E 9
E 5
.\"
D 2
.TH MKSTR 1 2/24/79
E 2
I 2
D 3
.TH MKSTR 1 "24 February 1979"
E 3
I 3
D 5
.TH MKSTR 1 "%Q%"
E 5
I 5
.\"     %W% (Berkeley) %G%
.\"
I 8
D 9
.Vx
.Vx
E 9
E 8
D 6
.TH MKSTR 1 "%Q"
E 5
E 3
E 2
.UC
.SH NAME
mkstr \- create an error message file by massaging C source
.SH SYNOPSIS
.B mkstr
[
.B \-
]
messagefile prefix file ...
.SH DESCRIPTION
.I Mkstr
is used to create files of error messages.
Its use can make programs with large numbers of error diagnostics much
smaller, and reduce system overhead in running the program as the
error messages do not have to be constantly swapped in and out.
.PP
.I Mkstr
will process each of the specified
.I files,
placing a massaged version of the input file in a file whose name
E 6
I 6
.Dd %Q%
.Dt MKSTR 1
I 9
.Os
E 9
.Sh NAME
.Nm mkstr
.Nd create an error message file by massaging C source
.Sh SYNOPSIS
.Nm mkstr
.Op Fl
.Ar messagefile
.Ar prefix file ...
.Sh DESCRIPTION
.Nm Mkstr
creates files containing error messages extracted from C source,
and restructures the same C source, to utilize the created error message
file.
The intent of
.Nm mkstr
was to reduce the size of large programs and
D 9
reduce swapping (see BUGS section below).
E 9
I 9
reduce swapping (see
.Sx BUGS
section below).
E 9
.Pp
.Nm Mkstr
processes each of the specified
.Ar files ,
placing a restructured version of the input in a file whose name
E 6
consists of the specified
D 6
.I prefix 
E 6
I 6
.Ar prefix
E 6
and the original name.
A typical usage of
D 6
.I mkstr
would be
.DT
.PP
	mkstr pistrings xx *.c
.PP
This command would cause all the error messages from the C source
E 6
I 6
.Nm mkstr
is
I 9
.Bd -literal -offset indent
mkstr pistrings xx *.c
.Ed
E 9
.Pp
D 9
.Dl mkstr pistrings xx *.c
.Pp
E 9
This command causes all the error messages from the C source
E 6
files in the current directory to be placed in the file
D 6
.I pistrings
and processed copies of the source for these files to be placed in
E 6
I 6
.Ar pistrings
and restructured copies of the sources to be placed in
E 6
files whose names are prefixed with
D 6
.I xx.
.PP
To process the error messages in the source to the message file
.I mkstr
keys on the string
\%`error("'
E 6
I 6
D 9
.Ar xx .
E 9
I 9
.Ar \&xx .
E 9
.Pp
Options:
D 9
.Tw Ds
.Tp Fl
E 9
I 9
.Bl -tag -width indent
.It Fl
E 9
Error messages are placed at the end of the specified
message file for recompiling part of a large
.Nm mkstr
ed
program.
D 9
.Tp
E 9
I 9
.El
E 9
.Pp
.Nm mkstr
finds error messages in the source by
searching for the string
.Li \&`error("'
E 6
in the input stream.
D 6
Each time it occurs, the C string starting at the `"' is placed
E 6
I 6
Each time it occurs, the C string starting at the
.Sq \&"\&
is stored
E 6
in the message file followed by a null character and a new-line character;
D 6
the null character terminates the message so it can be easily used
when retrieved, the new-line character makes it possible to sensibly
.I cat
the error message file to see its contents.
The massaged copy of the input file then contains a
.I lseek
pointer into the file which can be used to retrieve the message, i.e.:
.IP
.DT
.nf
\fBchar\fR	efilname[] =  "/usr/lib/pi_strings";
\fBint\fR	efil = -1;
.sp
E 6
I 6
The new source is restructured with
.Xr lseek 2
pointers into the error message file for retrieval.
D 9
.Ds I
E 9
I 9
.Bd -literal -offset indent
E 9
char efilname = "/usr/lib/pi_strings";
int efil = -1;

E 6
error(a1, a2, a3, a4)
D 6
{
	\fBchar\fR buf[256];
E 6
I 6
\&{
	char buf[256];
E 6

D 6
	\fBif\fR (efil < 0) {
E 6
I 6
	if (efil < 0) {
E 6
		efil = open(efilname, 0);
D 6
		\fBif\fR (efil < 0) {
E 6
I 6
		if (efil < 0) {
E 6
oops:
			perror(efilname);
D 6
			exit(1);
E 6
I 6
			exit 1 ;
E 6
		}
	}
D 6
	\fBif\fR (lseek(efil, (long) a1, 0) |\|| read(efil, buf, 256) <= 0)
		\fBgoto\fR oops;
E 6
I 6
	if (lseek(efil, (long) a1, 0) \ read(efil, buf, 256) <= 0)
		goto oops;
E 6
	printf(buf, a2, a3, a4);
}
D 6
.fi
.PP
The optional
.B \-
causes the error messages to be placed at the end of the specified
message file for recompiling part of a large
.IR mkstr \|ed
program.
.SH SEE\ ALSO
lseek(2), xstr(1)
E 6
I 6
D 9
.De
E 9
I 9
.Ed
E 9
.Sh SEE ALSO
.Xr lseek 2 ,
.Xr xstr 1
.Sh HISTORY
.Nm Mkstr
D 9
appeared in 3 BSD.
E 9
I 9
appeared in
.Bx 3.0 .
E 9
.Sh BUGS
.Nm mkstr
was intended for the limited architecture of the PDP 11 family.
D 9
Very few programs in 4.4 BSD actually use it. The pascal interpreter,
.Xr pi 1
E 9
I 9
Very few programs actually use it. The pascal interpreter,
.Xr \&pi 1
E 9
and the editor,
D 9
.Xr ex 1
E 9
I 9
.Xr \&ex 1
E 9
are two programs that are built this way.
It is not an efficient method, the error messages
should be stored in the program text.
E 6
D 4
.SH AUTHORS
William Joy and Charles Haley
...SH BUGS
...All the arguments except the name of the file to be processed could be made unnecessary.
E 4
E 1
