h07963
s 00106/00041/00395
d D 6.7 92/07/25 10:49:05 bostic 10 9
c update from Cynthia
e
s 00003/00000/00433
d D 6.6 91/06/27 17:23:32 bostic 9 8
c add POSIX/IEEE contribution notice
e
s 00418/00297/00015
d D 6.5 91/04/25 22:40:35 cael 8 7
c mdoc version three/bsd copyright
e
s 00005/00004/00307
d D 6.4 91/04/18 18:00:53 bostic 7 6
c new copyright; att/bsd/shared
e
s 00006/00002/00305
d D 6.3 90/06/24 19:15:33 cael 6 5
c converted man page
e
s 00008/00000/00299
d D 6.2 87/09/30 09:55:51 bostic 5 3
c document comments; bug report 4.3BSD/man/3
e
s 00007/00000/00299
d R 6.2 87/09/30 09:43:10 bostic 4 3
c document comments, and #n; bug report 4.3BSD/man/3
e
s 00001/00001/00298
d D 6.1 85/04/29 17:54:01 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00001/00001/00298
d D 5.1 85/04/29 17:53:47 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00299/00000/00000
d D 4.1 85/04/29 17:53:35 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
D 7
.\" Copyright (c) 1990 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 7
I 7
D 8
.\" Copyright (c) 1987 The Regents of the University of California.
E 8
I 8
.\" Copyright (c) 1991 The Regents of the University of California.
E 8
.\" All rights reserved.
E 7
E 6
.\"
I 9
.\" This code is derived from software contributed to Berkeley by
.\" the Institute of Electrical and Electronics Engineers, Inc.
.\"
E 9
D 2
.TH SED 1 
E 2
I 2
D 3
.TH SED 1  "18 January 1983"
E 3
I 3
D 6
.TH SED 1 "%Q%"
E 6
I 6
D 7
.\"     %W% (Berkeley) %G%
E 7
I 7
D 8
.\" %sccs.include.proprietary.roff%
E 8
I 8
.\" %sccs.include.redist.roff%
E 8
.\"
D 8
.\"	%W% (Berkeley) %G%
E 8
I 8
.\"     %W% (Berkeley) %G%
E 8
E 7
.\"
D 8
.TH SED 1 "%Q"
E 6
E 3
E 2
.AT 3
.SH NAME
sed \- stream editor
.SH SYNOPSIS
.B sed
[
.B \-n
]
[
.B \-e
script ] [
.B \-f
sfile ] [ file ] ...
.SH DESCRIPTION
.I Sed
copies the named
.I files
(standard input default) to the standard output,
edited according to a script of commands.
E 8
I 8
.Dd %Q%
.Dt SED 1
.Os
.Sh NAME
.Nm sed
.Nd stream editor.
.Sh SYNOPSIS
.Nm sed
.Op Fl n
.Ar script
.Ar
.Nm sed
.Op Fl n
.Op Fl e Ar script
.Op Fl f Ar script_file
.Ar
.Sh DESCRIPTION
E 8
The
D 8
.B \-f
option causes the script to be taken from file
.IR sfile ;
these options accumulate.
If there is just one
.B \-e
option and no
.BR \-f 's,
the flag
.B \-e
may be omitted.
E 8
I 8
.Nm sed
utility is a stream editor which reads one or more
text files, applies given editing command scripts,
and writes the results to standard output.
The script of editing commands can be given in the command
line, or can be contained in the file
.Ar script_file .
.Pp
Options:
.Bl -tag -width indent
.It Fl e Ar script
The command line
.Ar script
is used to edit the input.
If multiple
.Fl e
options are given, the scripts are
applied in the order given to each line of the
input files.
If a
.Fl f
option is given in addition
to
.Fl e ,
lines are acted upon by scripts first.
.It Fl f Ar script_file
The file
.Ar script_file
is expected to contain editing commands, one per line,
and these commands are applied to the input.
If multiple
.Fl f
options are given, the commands in the
.Ar script_file Ns s
are applied in
the order given to each line of the input
files.
If a
.Fl e
option is given in addition to
.Fl f ,
lines are acted upon by
the commands in the
.At script_file Ns s
first.
.It Fl n
E 8
The
D 8
.B \-n
option suppresses the default output.
.PP
A script consists of editing commands, one per line,
of the following form:
.IP
[address [, address] ] function [arguments]
.PP
In normal operation
.I sed
cyclically copies a line of input into a
.I pattern space
(unless there is something left after
a `D' command),
applies in sequence
all commands whose
.I addresses
select that pattern space,
and at the end of the script copies the pattern space
to the standard output (except under
.BR \-n )
E 8
I 8
.Fl n
option suppresses the default output, which normally
passes each line, after it is examined for editing,
to standard output.
Therefore, only lines explicitly
selected for output are written.
.El
.Pp
The following operands are available:
.Bl -tag -width file
.It Ar file
A pathname of a file whose contents are read and
edited.
If multiple file operands are given,
the named files are read in the order given and
the concatenation is edited.
If no file operands
are given, the standard input is used.
.It Ar script
The script consists of one or more editing
instructions that are entered on the command line.
.El
.\" .Pp
.\" The following environment variable affects the execution of
.\" sed:
.\" .It Ev LC_CTYPE
.\" The locale for character classification.
.Pp
.Bd -filled -offset indent -compact
.Op address Op ,address
function
.Op arguments
.Ed
.Pp
In default operation,
.Nm sed
cyclically copies a line of input
into a pattern space (unless there is something left after a
.Cm D
command), applies in sequence all commands whose addresses
select that pattern space, and at the end of the script
copies the pattern space to the standard output (except
under
.Fl n )
E 8
and deletes the pattern space.
D 8
.PP
An
.I address
is either a decimal number that counts
input lines cumulatively across files, a `$' that
addresses the last line of input, or a context address,
`/regular expression/', in the style of
.IR ed (1)
modified thus:
.IP
The escape sequence `\en' matches a
newline embedded in the pattern space.
.PP
A command line with no addresses selects every pattern space.
.PP
A command line with
one address selects each pattern space that matches the address.
.PP
A command line with
two addresses selects the inclusive range from the first
pattern space that matches the first address through
the next pattern space that matches 
the second.
(If the second address is a number less than or equal
to the line number first selected, only one
line is selected.)
Thereafter the process is repeated, looking again for the
first address.
.PP
E 8
I 8
.Pp
Some of the commands use a hold space to save all or part of
the pattern space for
subsequent retrieval.
.\" The pattern and hold spaces are each
.\" limited to
.\" .Pf { Dv SED_PATTERN_MAX Ns }
.\" bytes.
.Pp
An address is either no address; a decimal number that
counts input lines cumulatively across files; a
.Ql $
that
addresses the last line of input; a context address; or
regular expression.
.Pp
A command line with no addresses selects every pattern
space.
.Pp
A command line with one address selects each pattern space
that matches the address.
.Pp
A command line with two addresses selects the inclusive
range from the first pattern space that matches the first
address through the next pattern space which matches the
second.
(If the second address is a number less than or
equal to the line number first selected, only one line is
selected.)
Starting at the first line following the
selected range,
.Nm sed
looks again for the first address.
Thereafter the process is repeated.
.Pp
E 8
Editing commands can be applied only to non-selected pattern
D 8
spaces by use of the negation function `!' (below).
.PP
In the following list of functions the 
maximum number of permissible addresses
for each function is indicated in parentheses.
.PP
An argument denoted
.I text
consists of one or more lines,
all but the last of which end with `\e' to hide the
newline.
Backslashes in text are treated like backslashes
in the replacement string of an `s' command,
and may be used to protect initial blanks and tabs
against the stripping that is done on
every script line.
.PP
An argument denoted
.I rfile
E 8
I 8
spaces by use of the negation function
.Cm \&!
(See below.)
.Pp
The
.Nm sed
utility uses basic regular expressions, as are found in the
editor
.Xr ed 1 ,
with the following additions:
.Pp
.Bl -enum -offset indent
.It
D 10
In a context address, the construction \e?RE?, where ?
is any character, is identical to /RE/.  Note that in the
context address \exabc\exdefx, the second x stands for
itself, so that the regular expression is abcxdef.
E 10
I 10
In a context address, the construction
.Li \e?RE? ,
where ?
is any character, is identical to
.Li /RE/ .
Note that in the
context address
.Li \exabc\exdefx ,
the second
.Ql x
stands for
itself, so that the regular expression is
.Li abcxdef .
E 10
.It
D 10
The escape sequence \en matches a <newline> embedded
E 10
I 10
The escape sequence
.Ql \en
matches a <newline> embedded
E 10
in the pattern space.
.It
D 10
A period (.) matches any character except the termi-
nal <newline> of the pattern space.
E 10
I 10
A period
.Ql \&.
matches any character except the terminal <newline> of the pattern space.
E 10
.El
.Pp
In the following list of functions the maximum number of
permissible addresses for each function is indicated by
.Op 0addr ,
.Op 1addr ,
E 8
or
D 8
.I wfile
must terminate the command
line and must be preceded by exactly one blank.
E 8
I 8
.Op 2addr ;
representing zero, one, or two
addresses.
.Pp
The argument text consists of one or more lines.
E 8
Each
D 8
.I wfile
is created before processing begins.
There can be at most 10 distinct
.I wfile
E 8
I 8
embedded <newline> in the text shall be preceded by a
backslash.
Other backslashes in text are treated like
backslashes in the replacement string of an s command, and
can be used to protect initial <blank>s against the stripping
that is done on every script line.
.Pp
The
.Cm r
and
.Cm w
commands take an optional
.Ar rfile
(or
.Ar wfile )
parameter, separated from the command letter by zero or more
<blank>s.
.Pp
The argument
.Ar rfile
or the argument
.Ar wfile
shall terminate the
command line.
Each
.Ar wfile
is created before processing
begins.
There can be at most ten distinct
.Ar wfile
arguments
in the script.
.Pp
The
.Cm b , r , s , t ,
.Cm w , y , \&! ,
and
.Cm \&:
commands take additional
E 8
arguments.
D 8
.TP
(1)\|a\e
.br
.ns
.TP
.I text
.br
Append.
Place
.I text
on the output before
reading the next input line.
.TP
.RI (2)\|b " label"
Branch to the `:' command bearing the
.IR label .
If
.I label
is empty, branch to the end of the script.
.TP
(2)\|c\e
.br
.ns
.TP
.I text
.br
Change.
Delete the pattern space.
With 0 or 1 address or at the end of a 2-address range, place
.I text
on the output.
Start the next cycle.
.TP
(2)\|d
Delete the pattern space.
Start the next cycle.
.TP
(2)\|D
Delete the initial segment of the 
pattern space through the first newline.
Start the next cycle.
.TP
(2)\|g
Replace the contents of the pattern space
by the contents of the hold space.
.TP
(2)\|G
Append the contents of the hold space to the pattern space.
.TP
(2)\|h
Replace the contents of the hold space by the contents of the pattern space.
.TP
(2)\|H
Append the contents of the pattern space to the hold space.
.TP
(1)\|i\e
.br
.ns
.TP
.I text
.br
Insert.
Place
.I text
on the standard output.
.TP
(2)\|n
Copy the pattern space to the standard output.
Replace the pattern space with the next line of input.
.TP
(2)\|N
Append the next line of input to the pattern space
with an embedded newline.
(The current line number changes.)
.TP
(2)\|p
Print.
Copy the pattern space to the standard output.
.TP
(2)\|P
Copy the initial segment of the pattern space through
the first newline to the standard output.
.TP
(1)\|q
Quit.
Branch to the end of the script.
Do not start a new cycle.
.TP
.RI (2)\|r " rfile"
Read the contents of
.IR rfile .
Place them on the output before reading
the next input line.
.TP
.RI (2)\|s /regular\ expression/replacement/flags
Substitute the
.I replacement
string for instances of the
.I regular expression
in the pattern space.
Any character may be used instead of `/'.
For a fuller description see
.IR ed (1).
.I Flags
is zero or more of
.RS
.TP
g
Global.
Substitute for all nonoverlapping instances of the
.I regular expression
rather than just the
first one.
.TP
p
Print the pattern space if a replacement was made.
.TP
.RI w " wfile"
Write.
Append the pattern space to
.I wfile
if a replacement
was made.
.RE
.TP
.RI (2)\|t " label"
E 8
I 8
The following synopses indicate which arguments
are separated from the commands by <blank>s.
.Bl -tag -width addrcommandxx
D 10
.It Oo Ad 2addr Oc \&{ command_list \&}
E 10
I 10
.It Xo
.Oo Ad 2addr Oc \&{ command_list \&}
.Xc
E 10
Executes command_list only when the pattern
space is selected.
The {} braces can be preceded
and followed by white space.
D 10
.It Oo Ad 1addr Oc Ns Cm a Ar text
E 10
I 10
.It Xo
.Oo Ad 1addr Oc Ns Cm a Ar text
.Xc
E 10
Writes text to the standard output after the
pattern space is written.
D 10
.It Oo Ad 2addr Oc Ns Cm b Ar label
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm b Ar label
.Xc
E 10
Branches to the
.Cm \&:
command bearing the label.
If label is empty, branch to the end of the
script.
D 10
.It Oo Ad 2addr Oc Ns Cm c Ar text
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm c Ar text
.Xc
E 10
Deletes the pattern space.
With 0 or 1
address or at the end of a 2-address range,
places text on the output.
D 10
.It Oo Ad 2addr Oc Ns Cm d
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm d
.Xc
E 10
Deletes the pattern space and starts the next
cycle.
D 10
.It Oo Ad 2addr Oc Ns Cm D
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm D
.Xc
E 10
Deletes the initial segment of the pattern
space through the first <newline> and starts
the next cycle.
D 10
.It Oo Ad 2addr Oc Ns Cm g
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm g
.Xc
E 10
Replaces the contents of the pattern space by
the contents of the hold space.
D 10
.It Oo Ad 2addr Oc Ns Cm G
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm G
.Xc
E 10
Appends the contents of the hold space to the
pattern space.
D 10
.It Oo Ad 2addr Oc Ns Cm h
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm h
.Xc
E 10
Replaces the contents of the hold space by
the contents of the pattern space.
D 10
.It Oo Ad 2addr Oc Ns Cm H
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm H
.Xc
E 10
Appends the contents of the pattern space to
the hold space.
D 10
.It Oo Ad 1addr Oc Ns Cm i Ar text
E 10
I 10
.It Xo
.Oo Ad 1addr Oc Ns Cm i Ar text
.Xc
E 10
Writes text to the standard output before the
pattern space is written.
D 10
.It Oo Ad 2addr Oc Ns Cm l
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm l
.Xc
E 10
Lists the pattern space on the standard out-
put in an unambiguous form.
Nonprinting
characters are listed as hexadecimal digit
pairs, with a preceding backslash, with the
following exceptions:
D 10
.Pp
.ne 8
.Bd -filled -offset indent -compact
.Bl -column <carriagexreturn>
E 10
I 10
.Bl -column <carriagexreturn> -offset indent
E 10
<alert>	\ea
<backslash>	\e\e
<backspace>	\eb
<carriage return>	\er
<form-feed>	\ef
<newline>	\en
<tab>	\et
<vertical tab>	\ev
.El
D 10
.Ed
E 10
.Pp
Long lines are folded; the length at which
folding occurs is ungiven, but should be
appropriate for the output device.
D 10
.It Oo Ad 2addr Oc Ns Cm n
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm n
.Xc
E 10
Copies the pattern space to the standard output
and replaces the pattern space with the
next line of input.
D 10
.It Oo Ad 2addr Oc Ns Cm N
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm N
.Xc
E 10
Appends the next line of input to the pattern
space, using an embedded <newline> to
separate the appended material from the
original material.
Note that the current line
number changes.
D 10
.It Oo Ad 2addr Oc Ns Cm p
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm p
.Xc
E 10
Copies
.Op prints
the pattern space to the
standard output.
D 10
.It Oo Ad 2addr Oc Ns Cm P
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm P
.Xc
E 10
Copies
.Op prints
the pattern space, up to the
first <newline>, to the standard output.
D 10
.It Oo Ad 1addr Oc Ns Cm q
E 10
I 10
.It Xo
.Oo Ad 1addr Oc Ns Cm q
.Xc
E 10
Branches to the end of the script and quits
without starting a new cycle.
D 10
.It Oo Ad 1addr Oc Ns Cm r Ar rfile
E 10
I 10
.It Xo
.Oo Ad 1addr Oc Ns Cm r Ar rfile
.Xc
E 10
Read the contents of rfile.
Place them on the
output before reading the next input line.
D 10
.It Oo Ad 2addr Oc Ns \\*(cMs\\*(dF/\\*(aRregular expression\\*(dF/\\*(aRreplacement string\\*(dF/flags
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns \\*(cMs\\*(dF/\\*(aRregular expression\\*(dF/\\*(aRreplacement string\\*(dF/flags
.Xc
E 10
Substitutes the replacement string for
instances of the regular expression in the
pattern space.
Any character can be used
instead of
.Ql / .
The value of flags is zero or
more of:
.Bl -tag -width Ds
.It Ar n
D 10
n=1-512.  Substitutes for the nth
E 10
I 10
n=1-512.  Substitutes for the
.Ar n Ns th
E 10
occurrence only of the regular
expression found within the pattern space.
.It Cm g
Globally substitutes for all
non-overlapping instances of the regular
expression rather than just
the first one.  If both
.Cm g
and
.Cm n
are given,
.Cm g
takes precedence.
.It Cm p
Prints the pattern space if a
replacement was made.
.It Cm w Ar wfile
Write.  Appends the pattern space
to
.Ar wfile
if a replacement was
made.
.El
D 10
.It Oo Ad 2addr Oc Ns Cm t Ar label
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm t Ar label
.Xc
E 10
E 8
Test.
D 8
Branch to the `:' command bearing the
.I label
if any
substitutions have been made since the most recent
reading of an input line or execution of a `t'.
If 
.I label
is empty, branch to the end of the script.
.TP
.RI (2)\|w " wfile"
Write.
Append the pattern space to
.IR wfile .
.TP
.RI (2)\|x
Exchange the contents of the pattern and hold spaces.
.TP
.RI (2)\|y /string1/string2/
Transform.
Replace all occurrences of characters in
.I string1
with the corresponding character in
.I string2.
E 8
I 8
Branches to the
.Cm \&:
command bearing the
label if any substitutions have been made
since the most recent reading of an input
line or execution of a
.Cm t .
If label is empty,
branches to the end of the script.
D 10
.It Oo Ad 2addr Oc Ns Cm w Ar wfile
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm w Ar wfile
.Xc
E 10
Appends
.Op writes
the pattern space to
.Ar wfile .
D 10
.It Oo Ad 2addr Oc Ns Cm x
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns Cm x
.Xc
E 10
Exchanges the contents of the pattern and
hold spaces.
D 10
.It Oo Ad 2addr Oc Ns \\*(cMy\\*(dF/\\*(aRstring1\\*(dF/\\*(aRstring2\\*(dF/
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns \\*(cMy\\*(dF/\\*(aRstring1\\*(dF/\\*(aRstring2\\*(dF/
.Xc
E 10
Replaces all occurrences of collating
elements in
.Ar string1
with the corresponding
collating element in
.Ar string2 .
E 8
The lengths of
D 8
.I
string1
E 8
I 8
.Ar string1
E 8
and
D 8
.I string2
must be equal.
.TP
.RI (2)! " function"
Don't.
Apply the
.I function
(or group, if
.I function
is `{') only to lines
.I not
selected by the address(es).
.TP
.RI (0)\|: " label"
This command does nothing; it bears a
.I label
for `b' and `t' commands to branch to.
.TP
(1)\|=
Place the current line number on the standard output as a line.
.TP
(2)\|{
Execute the following commands through a matching `}'
only when the pattern space is selected.
.TP
(0)\|
E 8
I 8
.Ar string2
shall be equal.
D 10
.It Oo Ad 2addr Oc Ns \\*(cM!\\*(dFfunction
E 10
I 10
.It Xo
.Oo Ad 2addr Oc Ns \\*(cM!\\*(dFfunction
.Xc
E 10
Applies the function (or group, if function
is {) only to the lines that are not selected
by the address(es).
D 10
.It Oo Ad 0addr Oc Ns \\*(cM:\\*(dFlabel
E 10
I 10
.It Xo
.Oo Ad 0addr Oc Ns \\*(cM:\\*(dFlabel
.Xc
E 10
This command does nothing; it bears a label
for the b and t commands to branch to.
D 10
.It Oo Ad 1addr Oc Ns Cm \&=
E 10
I 10
.It Xo
.Oo Ad 1addr Oc Ns Cm \&=
.Xc
E 10
Places the current line number on the standard
output as a line with its own line
number.
D 10
.It Oo Ad 0addr Oc
E 10
I 10
.It Xo
.Oo Ad 0addr Oc
.Xc
E 10
E 8
An empty command is ignored.
I 5
D 8
.TP
(0)\|#
If a \fI#\fP appears as the first character on a line of a script,
then that entire line is treated as a comment, with one exception.
If the first line of the script starts with the characters ``\fI#\fPn'',
then the default output will be suppressed.  The rest of the line after
``\fI#\fPn'' will also be ignored.  A script file must contain at least one
non-comment line.
E 5
.SH SEE ALSO
ed(1), grep(1), awk(1), lex(1)
E 8
I 8
D 10
.It Oo Ad 0addr Oc Cm #
E 10
I 10
.It Xo
.Oo Ad 0addr Oc Cm #
.Xc
E 10
If a
.Cm #
appears as the first character on any
line of a script file, that entire line is
ignored (treated as a comment), with the single
exception that if the first line of the
script file begins with
.Cm Ns #n ,
the default
output is suppressed.
.El
.Pp
The
.Nm sed
utility exits 0 on success, and >0 if an error occurs.
.Pp
If one or more of the input (not script) files cannot be
opened for reading,
.Nm sed
continues to process the remaining
files.
.Sh STANDARDS
The
.Nm sed
utility is expected to be
.St -p1003.2
compatible.
E 8
E 1
