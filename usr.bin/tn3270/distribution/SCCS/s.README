h09432
s 00000/00000/00099
d D 8.1 93/06/06 16:40:58 bostic 9 8
c 4.4BSD snapshot (revision 8.1)
e
s 00001/00001/00098
d D 4.2 89/02/06 19:42:48 minshall 8 7
c New minor version.
e
s 00001/00001/00098
d D 4.1 88/12/04 15:10:42 minshall 7 6
c Release 4.1
e
s 00052/00049/00047
d D 1.6 88/12/04 14:59:58 minshall 6 5
c Version 4.0 readme
e
s 00006/00000/00090
d D 1.5 87/07/31 15:53:25 minshall 5 4
c Add "makefile_4.2".
e
s 00004/00000/00086
d D 1.4 87/07/31 15:14:46 minshall 4 3
c tarread.exe location information.
e
s 00077/00005/00009
d D 1.3 87/07/31 14:42:10 minshall 3 2
c New README for new version.
e
s 00011/00019/00003
d D 1.2 87/07/03 12:20:06 minshall 2 1
c First draft, really.
e
s 00022/00000/00000
d D 1.1 87/07/03 12:16:44 minshall 1 0
c date and time created 87/07/03 12:16:44 by minshall
e
u
U
t
T
I 1
D 2
There are 3 interfaces we define.
E 2
I 2
D 3
Welcome to the new tn3270.
E 3
I 3
D 6
Welcome to the new (beta) tn3270.
E 6
I 6
D 7
Welcome to the new tn3270 - version 4.0.
E 7
I 7
D 8
Welcome to the new tn3270 - version 4.1.
E 8
I 8
Welcome to the new tn3270 - version 4.1.1.
E 8
E 7
E 6
E 3
E 2

D 2
One is that between the host computer and the 3274 controller.  This
interface specifies the AIDs, orders, commands, attributes, WCC, formats
of various read and write commands, etc., that are transmitted to and
from the host.  Additionally, the mapping between EBCDIC and the
internal 3270 display code occurs at this interface.
E 2
I 2
D 3
Unfortunately, things are much more complicated that ever.  There are now
subdirectories.
E 2

E 3
D 2
The logic for this interface is in outbound.c and inbound.c.  The interface
is parameterized in 3270.h and ebc_disp.[hc].
E 2
I 2
D 6
The good news is that MOST system dependent code is in a few subdirectories
(mostly in sys_curses, on Unix, or sys_dos, on MS_DOS).
E 6
I 6
This version consists entirely of bug fixes to the August 1987 beta release
of tn3270.  This version will now deal with CICS and VM/XA on the IBM
side, and with SunOS 4.0 on Sun 3's and Sun 4's.
E 6
E 2

D 2
The second interface is between the keyboard and the 3274 controller.
This interface specifies which keyboard scan codes perform which
function (either are a character like A, or some function like EEOF, or
some AID-generating function like CLEAR or PFK1).

The logic for this interface is in inbound.c, and is parameterized in
kbd3270.h and hits.c.

The third and last interface is between the screen and the 3274 controller.
This interface specifies the internal 3270 display code, error messages
which may be presented to the screen by the 3274, and the bell.
E 2
I 2
D 3
On MS_DOS, the INCLUDE environmental variable is assumed to point to
E 3
I 3
D 6
Internally, the code has changed substantially.  We now look (to the
best of our limited ability) like a 3274 controller.  The screen buffer
is kept in 3270 display code format; keystokes are defined in terms
of 3270 scan codes (but, no changes to /etc/map3270 are required).
E 6
I 6
This version has been tested on various versions of BSD Unix, including
4.2 and 4.3 (but there are never vanilla versions) and the post-4.3 systems
running at Berkeley.  It has been tested on CCI's, Vaxen, Sun 3's and Sun 4's.
However, it doesn't necessarily work on all systems (nor has the testing
been as intensive as one might like).
E 6

D 6
Unfortunately, things are much more complicated that ever.  There are now
subdirectories.  To wit:
E 6
I 6
This version should build on any Berkeley-derived system.
E 6

I 6
There are two alternate make files:  ./makefile_4.2 and telnet/Makefile_ultrix.

****    Try ./makefile_4.2 if you get compile-time errors, or get
	"multiply defined" messages for "_putchar" from the loader.

****    Try telnet/Makefile_ultrix if your make(1) utility doesn't
	support VPATH.  Also try this makefile if your ld(1) doesn't
	support the -r flag correctly.

The bad news is that I've had to drop MS-DOS support.  The good news here is
that there are various versions available for MS-DOS (from FTP Software in
Cambridge, Mass.; from IBM; from Excelan; and probably from others).  The
hooks are still there, as well as some code to update the screen.  However,
I just haven't had the time to produce a fully integrated version that would
"just make".  I suspect that a future release may have MS-DOS support back
in it.

There is no Mac support.  Contact Peter DiCamillo at Brown University if
you need a Mac tn3270.

The main code change in this version is to what used to be called "telnet.c".
This is now replaced with a version of telnet (substantially what appeared
in the "4.3tahoe" release from CSRG) which is broken into separate files.

Here is an overview of the directory structure:

E 6
    api/		General library of function needed by API
			(and, to some extent, by the rest of tn3270).

    arpa/		Location of "telnet.h" (for non-4.3 systems).

    ascii/		Routines necessary to handle the case of running
			from an ASCII-oriented system (ie: unix).

    ctlr/		The main part of the emulator.  Handles 3270 scan
			codes, 3270 data stream, 3270 display codes,
			and EBCDIC.  Also, the internal API function
			lives here.

    general/		Some general subroutines and data structures of
			interest to the emulator only.

    sys_curses/		System-dependent code for a curses-based environment.

    sys_dos/		System-dependent code for an MS-DOS-base environment.
I 6
			Remember that this is included for your developmental
			needs (ie: it doesn't work).
E 6

I 6
    telnet/		Where the telnet portion of tn3720 is built.

E 6
    tools/		Various tools.  Most of these are used during the
			build process.  One (prt3270) is a debugging tool.
			One (mkmake.y) is quite horrible, and attempts to
			transform Unix makefiles into PC makefiles.

    utilities/		The source for tnrecv, which receives files
			(fairly slowly) from an IBM host.  We don't
			include the IBM side, because we really aren't
			happy with very much of it (except that it does,
			sometimes, work).  Hopefully, when we get past
			the beta stage we will have more robust (and
			complete) code to share.

The fact that system dependancies are isolated should make it easy
to port to other systems.  I would like to hear about problems porting
to new areas.

D 6
WHAT IS NOT IN THIS VERSION (sigh):
E 6
I 6
In the August, 1987 README file, the following appeared:
E 6

D 6
1)	We don't have a native X version yet.  I am waiting for X version 11
	(though this is mostly an excuse; I could have done version 10,
	but I haven't had the time).
E 6
I 6
> WHAT IS NOT IN THIS VERSION (sigh):
E 6

D 6
2)	We don't process structured fields.
E 6
I 6
> 1)	We don't have a native X version yet.  I am waiting for X version 11
> 	(though this is mostly an excuse; I could have done version 10,
> 	but I haven't had the time).
E 6

D 6
3)	We don't do 3270-style graphics (ala 3193, say).
E 6
I 6
> 2)	We don't process structured fields.
E 6

D 6
The above three items WILL be in the next version, which should come
along "any day now" (say 6 months) (but, they WON'T be in the production
release of this version).
E 6
I 6
> 3)	We don't do 3270-style graphics (ala 3193, say).
E 6

I 5
D 6
4.2 NOTE:
E 6
I 6
> The above three items WILL be in the next version, which should come
> along "any day now" (say 6 months) (but, they WON'T be in the production
> release of this version).
E 6

D 6
If you run 4.2 on a vax, you may get error messages involving assignments
to variables which are pointers to void returning functions.  These
errors can be corrected by using makefile_4.2 as your makefile.

E 5
MS-DOS NOTES:

This version can be built on an MS-DOS system.

We use version 4.0 of the MicroSoft C compiler.  We use version 4.0
of the MicroSoft assembler.  We use "PolyMake" from "POLYTRON"
(P.O. Box 787; Hillsboro, OR 97123; (503)648-8595).

There is a problem in that, on a 512KB PC, memory fills up.  Possibly,
before saying make in the "tn3270" directory, you should say make
in the "tn3270/api" directory.

The INCLUDE environmental variable is assumed to point to
E 3
the standard include files, plus to whereever the networking include
files are located.  These are files like <sys/socket.h>.  This is
assuming that you have a 4.2/3 network emulation package (UB offers such
a package with their product; my understanding is that FTP Software
is, or soon will be, offering such a package).
I 3

As mentioned in the last paragraph, we use Ungermann-Bass's library
to perform the networking functions.  Probably other vendors' libraries
could be integrated as well.
I 4

The file utilities/tarread.exe is a small program which reads tar
files on MS-DOS.  It is from Drew Perkins and CMU.  Many thanks
to them.
E 6
I 6
The next piece of bad news is that none of the above have happened yet,
and I don't know when they might occur.
E 6
E 4
E 3
E 2
E 1
