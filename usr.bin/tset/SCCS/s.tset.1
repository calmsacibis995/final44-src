h11590
s 00002/00002/00377
d D 8.1 93/06/09 22:54:11 bostic 15 14
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00052/00017/00327
d D 6.11 91/12/28 16:47:21 bostic 14 13
c add -S option back in
e
s 00032/00025/00312
d D 6.10 91/12/24 10:33:35 bostic 13 12
c add the -a, -d, -p and -r options back in
e
s 00011/00013/00326
d D 6.9 91/12/23 15:04:42 bostic 12 11
c minor rewording
e
s 00266/00462/00073
d D 6.8 91/12/22 18:57:42 bostic 11 10
c broken up into multiple modules -- rewrite lots of it, reorganize the
c rest.  No longer diffable, but hopefully at least understandable
e
s 00160/00170/00375
d D 6.7 91/07/27 16:11:26 cael 10 9
c mdoc version three
e
s 00002/00000/00543
d D 6.6 91/03/14 00:29:00 cael 9 7
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00001/00000/00543
d R 6.6 91/03/13 20:38:53 cael 8 7
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00003/00003/00540
d D 6.5 90/07/24 22:52:21 cael 7 6
c .Xr botch fix
e
s 00357/00252/00186
d D 6.4 90/06/11 06:01:15 cael 6 5
c converted man page
e
s 00014/00003/00424
d D 6.3 88/10/25 15:23:51 bostic 5 4
c Berkeley copyright notice
e
s 00017/00008/00410
d D 6.2 86/05/05 22:13:24 bloom 4 3
c add bug from reset manual page, document setable interrupt character, 
c fix summary of reset
e
s 00029/00020/00389
d D 6.1 85/04/29 19:42:23 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00269/00080/00140
d D 5.1 85/04/29 19:41:38 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00220/00000/00000
d D 4.1 85/04/29 19:40:56 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 6
.\" Copyright (c) 1985 The Regents of the University of California.
E 6
I 6
D 15
.\" Copyright (c) 1985, 1990 The Regents of the University of California.
E 6
.\" All rights reserved.
E 15
I 15
.\" Copyright (c) 1985, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 15
.\"
D 6
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 6
I 6
D 10
.\" %sccs.include.redist.man%
E 10
I 10
.\" %sccs.include.redist.roff%
E 10
E 6
E 5
.\"
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
D 10
.\"     %W% (Berkeley) %G%
E 10
I 10
.\"	%W% (Berkeley) %G%
E 10
E 6
.\"
I 9
D 10
.Vx
.Vx
E 10
E 9
D 2
.TH TSET 1 4/1/81
E 2
I 2
D 3
.\"	@(#)tset.1	1.2
.TH TSET 1 "16 October 1982"
E 3
I 3
D 6
.TH TSET 1 "%Q%"
E 3
E 2
.UC 4
.SH NAME
D 2
tset \- set terminal modes
E 2
I 2
tset \- terminal dependent initialization
E 2
.SH SYNOPSIS
.B tset
D 2
[
options
] [
E 2
I 2
[ options ] [
E 2
.B \-m
D 2
[\fIident\fP][\fItest
.IR baudrate ]:\fItype
E 2
I 2
[ident][test baudrate]:type ] \&... [ type ]
.sp 1
.B reset
E 2
D 4
\&...
E 4
I 4
[ options ] [
.B \-m
[ident][test baudrate]:type ] \&... [ type ]
E 4
D 2
] [
type
]
E 2
.SH DESCRIPTION
.I Tset
E 6
I 6
.Dd %Q%
.Dt TSET 1
.Os BSD 4
.Sh NAME
.Nm tset
D 11
.Nd terminal dependent initialization
E 11
I 11
.Nd terminal initialization
E 11
.Sh SYNOPSIS
.Nm tset
D 11
.Op Ar options
D 10
.Cx \&[\ \&
E 10
I 10
.Oo
E 10
.Fl m
D 10
.Cx \&\ \&
.Op Ar ident
.Op Ar test baudrate
.Cx Cm \&:
.Ar type
.Cx \&]\ \&...
.Cx
.Op  type
.Pp
E 10
I 10
.Oo
.Ar ident
.Oc Ns Oo
.Ar test baudrate
.Oc Ns Cm \&: Ns Ar type
.Oc ...
.Op type
E 11
I 11
D 13
.Op Fl IQs
E 13
I 13
D 14
.Op Fl IQrs
E 14
I 14
.Op Fl IQrSs
E 14
E 13
.Op Fl
.Op Fl e Ar ch
.Op Fl i Ar ch
.Op Fl k Ar ch
.Op Fl m Ar mapping
.Op Ar terminal
.br
E 11
E 10
.Nm reset
D 11
.Op Ar options
D 10
.Cx \&[\ \&
E 10
I 10
.Oo
E 10
.Fl m
D 10
.Cx \&\ \&
.Op Ar ident
.Op Ar test baudrate
.Cx Cm \&:
.Ar type
.Cx \&]\ \&...
.Cx
.Op  type
E 10
I 10
.Oo
.Ar ident
.Oc Ns Oo
.Ar test baudrate
.Oc Ns Cm \&: Ns Ar type
.Oc ...
.Op type
E 11
I 11
D 13
.Op Fl IQs
E 13
I 13
D 14
.Op Fl IQrs
E 14
I 14
.Op Fl IQrSs
E 14
E 13
.Op Fl
.Op Fl e Ar ch
.Op Fl i Ar ch
.Op Fl k Ar ch
.Op Fl m Ar mapping
.Op Ar terminal
E 11
E 10
.Sh DESCRIPTION
.Nm Tset
E 6
D 2
causes terminal dependent processing such as setting
E 2
I 2
D 10
sets up your terminal when you first log in to a UNIX system.
E 10
I 10
D 11
sets up your terminal when you first log in to a
.Tn UNIX
system.
E 10
It does terminal dependent processing such as setting
E 2
erase and kill characters, setting or resetting delays,
I 2
sending any sequences needed to properly initialized the terminal,
E 2
and the like.
It first determines the
D 6
.I type
E 6
I 6
.Ar type
E 6
D 2
of terminal involved, names for which are specified by the
.I /etc/termcap
data base, and then
does necessary initializations and mode settings.
In the case where no argument types are specified,
E 2
I 2
of terminal involved,
and then does necessary initializations and mode settings.
D 6
The type of terminal attached to each \s-2UNIX\s0 port is specified in the
D 3
.I /etc/ttytype
E 3
I 3
.IR /etc/ttys (5)
E 6
I 6
The type of terminal attached to each
D 10
UNIX
E 10
I 10
.Tn UNIX
E 10
port is specified in the
.Xr ttys  5
E 6
E 3
database.
Type names for terminals may be found in the
D 6
.IR termcap (5)
E 6
I 6
.Xr termcap  5
E 6
database.
If a port is not wired permanently to a specific terminal (not hardwired)
it will be given an appropriate generic identifier such as
D 6
.IR dialup .
.PP
E 6
I 6
D 10
.Ar dialup  .
E 10
I 10
.Em dialup  .
E 11
I 11
initializes terminals.
.Nm Tset
first determines the type of terminal that you are using.
This determination is done as follows, using the first terminal type found.
.sp
.Bl -bullet -compact -offset indent
.It
The
.Ar terminal
argument specified on the command line.
.It
The value of the
.Ev TERM
environmental variable.
.It
The terminal type associated with the standard error output device in the
.Pa /etc/ttys
file.
.It
The default terminal type, ``unknown''.
.El
E 11
E 10
.Pp
E 6
D 11
In the case where no arguments are specified,
E 11
I 11
If the terminal type was not specified on the command-line, the
.Fl m
option mappings are then applied (see below for more information).
Then, if the terminal type begins with a question mark (``?''), the user is
prompted for confirmation of the terminal type.
An empty response confirms the type, or, another type can be entered to
specify a new type.
Once the terminal type has been determined, the termcap entry for the terminal
is retrieved.
If no termcap entry is found for the type, the user is prompted for another
terminal type.
.Pp
Once the termcap entry is retrieved, the window size, backspace, interrupt
and line kill characters (among many other things) are set and the terminal
and tab initialization strings are sent to the standard error output.
Finally, if the erase, interrupt and line kill characters have changed,
or are not set to their default values, their values are displayed to the
standard error output.
.Pp
When invoked as
.Nm reset ,
E 11
E 2
D 6
.I tset
simply reads the terminal type out of the environment variable TERM
E 6
I 6
.Nm tset
D 11
simply reads the terminal type out of the environment variable
.Ev TERM
E 6
D 10
and re-initializes the terminal.  The rest of this manual concerns
E 10
I 10
and re-initializes the terminal.
The rest of this manual concerns
E 10
D 2
itself with type initialization, done typically once at login, and options
E 2
I 2
itself with mode and environment initialization,
typically done once at login, and options
E 2
used at initialization time to determine the terminal type and set up
terminal modes.
E 11
I 11
sets cooked and echo modes, turns off cbreak and raw modes, turns on
newline translation and resets any unset special characters to their
default values before doing the terminal initialization described above.
This is useful after a program dies leaving a terminal in a abnormal state.
Note, you may have to type
.Dq Li <LF>reset<LF>
(the line-feed character is normally control-J) to get the terminal
to work, as carriage-return may no longer work in the abnormal state.
Also, the terminal will often not echo the command.
E 11
D 6
.PP
D 2
When used in a startup script
.I \&.profile
(for
E 2
I 2
When used in a startup script (\fI\&.profile\fR for
E 2
.IR sh (1)
E 6
I 6
.Pp
I 11
The options are as follows:
E 11
D 10
.Tw Ds
.Tp Cx Fl e
.Ar c
.Cx
E 10
I 10
.Bl -tag -width flag
D 11
.It Fl e Ns Ar c
E 10
set the erase character to be the named character
.Ar c
on all terminals,
the default being the backspace character on the terminal, usually ^H.
The character
.Ar c
can either be typed directly, or entered using the hat
notation used here.
D 10
.Tp Cx Fl k
.Ar c
.Cx
E 10
I 10
.It Fl k Ns Ar c
E 10
is similar to
.Fl e
but for the line kill character rather than the erase character;
.Ar c
defaults to ^X (for purely historical reasons).
The kill characters is left alone if
.Fl k
is not specified.
The hat notation can also be used for this option.
D 10
.Tp Cx Fl i
.Ar c
.Cx
E 10
I 10
.It Fl i Ns Ar c
E 10
is similar to
.Fl e
but for the interrupt character rather than the erase character;
.Ar c
D 10
defaults to ^C.  The hat notation can also be used for this option.
.Tp Fl
E 10
I 10
defaults to ^C.
The hat notation can also be used for this option.
E 11
.It Fl
E 10
D 11
The name of the terminal finally decided upon is output on the
standard output.
This is intended to be captured by the shell and placed in the
environment variable
.Ev TERM.
E 11
I 11
The terminal type is displayed to the standard output, and the terminal is
not initialized in any way.
.It Fl e
Set the erase character to
.Ar ch .
.It Fl I
Do not send the terminal or tab initialization strings to the terminal.
.It Fl i
Set the interrupt character to
.Ar ch .
.It Fl k
Set the line kill character to
.Ar ch .
.It Fl m
Specify a mapping from a port type to a terminal.
See below for more information.
I 14
.It Fl Q
Don't display any values for the erase, interrupt and line kill characters.
E 14
I 13
.It Fl r
Print the terminal type to the standard error output.
I 14
.It Fl S
Print the terminal type and the termcap entry to the standard output.
See the section below on setting the environment for details.
E 14
E 13
E 11
D 10
.Tp Fl s
E 10
I 10
.It Fl s
E 10
D 11
Print the sequence of
.Xr csh 1
commands to initialize the environment variables
E 11
I 11
Print the sequence of shell commands to initialize the environment variables
E 11
.Ev TERM
and
.Ev TERMCAP
D 11
based on
the name of the terminal finally decided upon.
D 10
.Tp Fl m
E 10
I 10
.It Fl m
E 10
The
.FL m
Specify what terminal type to use on specific ports (i.e. map the
terminal type to a port as found in
.Xr ttys 5 . )
See below.
D 10
.Tp Fl n
On systems with the Berkeley 4BSD tty driver,
E 10
I 10
.It Fl n
On systems with the
.Bx 4
driver,
E 10
specifies that the new tty driver modes should be initialized for this terminal.
For a
D 10
.Li CRT ,
E 10
I 10
.Tn CRT ,
E 10
the
D 10
.Li CRTERASE
E 10
I 10
.Dv CRTERASE
E 10
and
D 10
.Li CRTKILL
E 10
I 10
.Dv CRTKILL
E 10
modes are set only if the baud rate is 1200 or greater.
See
.Xr tty 4
for more detail.
D 10
.Tp Fl I
E 10
I 10
.It Fl I
E 10
suppresses transmitting terminal initialization strings.
E 11
I 11
to the standard output.
E 11
D 10
.Tp Fl Q
E 10
I 10
D 14
.It Fl Q
E 10
D 11
suppresses printing the
D 10
.Dq Li Erase set to
E 10
I 10
.Dq Li "Erase set to"
E 10
and
D 10
.Dq Li Kill set to
E 10
I 10
.Dq Li "Kill set to"
E 10
messages.
E 11
I 11
D 13
Don't display any values for the erase, interrupt and line kill characters. 
E 13
I 13
Don't display any values for the erase, interrupt and line kill characters.
E 14
I 14
See the section below on setting the environment for details.
E 14
E 13
E 11
D 10
.Tp
E 10
I 10
.El
E 10
.Pp
D 7
When used in a startup script (
.Pa \&.profile
E 7
I 7
D 11
When used in a startup script
E 11
I 11
The arguments for the
.Fl e ,
.Fl i
and
.Fl k
options may either be entered as actual characters or by using the
.Dq hat
notation, i.e. control-h may be specified as
.Dq Li ^H
or
.Dq Li ^h .
.Sh SETTING THE ENVIRONMENT
D 14
It is often desirable to set the terminal type and information about the
terminal's capabilities in the shell's environment.
This is done with the
E 14
I 14
It is often desirable to enter the terminal type and information about
the terminal's capabilities into the shell's environment.
This is done using the
.Fl S
and
E 14
.Fl s
D 14
option; when this option is specified, the commands to enter the information
into the shell's environment are output to the standard output.
E 14
I 14
options.
.Pp
When the
.Fl S
option is specified, the terminal type and the termcap entry are written
to the standard output, separated by a space and without a terminating
newline.
This can be assigned to an array by
.Nm csh
and
.Nm ksh
users and then used like any other shell array.
.Pp
When the
.Fl s
option is specified, the commands to enter the information into the
shell's environment are written to the standard output.
E 14
If the
.Ev SHELL
D 14
environmental variable ends in ``csh'', the output commands are for the
.Xr csh 1 ,
E 14
I 14
environmental variable ends in ``csh'', the commands are for the
.Nm csh ,
E 14
otherwise, they are for
D 14
.Xr sh 1 .
Note, the output commands for the
E 14
I 14
.Xr sh .
Note, the
E 14
.Nm csh
D 14
set and unset the shell variable
.Dq noglob .
E 14
I 14
commands set and unset the shell variable
.Dq noglob ,
leaving it unset.
E 14
The following line in the
.Pa .login
or
.Pa .profile
files will initialize the environment correctly:
.Bd -literal -offset indent
eval \`tset -s options ... \`
.Ed
I 14
.Pp
To demonstrate a simple use of the
.Fl S
option, the following lines in the
.Pa .login
file have an equivalent effect:
.Bd -literal -offset indent
set noglob
set term=(`tset -S options ...`)
setenv TERM $term[1]
setenv TERMCAP "$term[2]"
unset term
unset noglob
.Ed
E 14
.Sh TERMINAL TYPE MAPPING
When the terminal is not hardwired into the system (or the current system
information is incorrect) the terminal type derived from the
.Pa /etc/ttys
file or the
.Ev TERM
environmental variable is often something generic like
.Dq network ,
.Dq dialup ,
or
.Dq unknown .
When
.Nm tset
is used in a startup script
E 11
D 10
.Pf \&( Pa \&.profile
E 10
I 10
.Pf ( Pa .profile
E 10
E 7
for
D 11
.Xr sh  1
E 11
I 11
.Xr sh 1
E 11
E 6
D 2
users) or
E 2
I 2
users or
E 2
D 6
.I \&.login
E 6
I 6
D 10
.Pa \&.login
E 10
I 10
.Pa .login
E 10
E 6
D 2
(for
E 2
I 2
for
E 2
D 6
.IR csh (1)
E 6
I 6
D 10
.Xr csh  1
E 10
I 10
.Xr csh 1
E 10
E 6
D 2
users) it is desirable to give information about the types of terminal
usually used on terminals which are not hardwired.
These ports are initially identified as being
E 2
I 2
D 11
users) it is desirable to give information about the type of terminal
you will usually use on ports which are not hardwired.
These ports are identified in
D 3
.I /etc/ttytype
E 3
I 3
D 6
.I /etc/ttys
E 6
I 6
.Xr ttys 5
E 6
E 3
as
E 2
D 6
.I dialup
E 6
I 6
.Li dialup
E 6
or
D 6
.I plugboard
E 6
I 6
.Li plugboard
E 6
or
D 2
.I arpanet
E 2
I 2
D 6
.I arpanet,
E 6
I 6
.Li arpanet ,
E 6
E 2
etc.
To specify
D 2
what terminal type is usually used on these ports
E 2
I 2
what terminal type you usually use on these ports, the
E 11
I 11
users) it is often desirable to provide information about the type of
terminal used on such ports.
The purpose of the
E 11
E 2
D 6
.B \-m
E 6
I 6
.Fl m
E 6
D 2
is followed by the appropriate port type identifier,
an optional baud-rate specification,
and the terminal type to be used if the mapping conditions are satisfied.
E 2
I 2
D 11
(map) option flag is followed by the appropriate port type identifier,
an optional baud rate specification,
and the terminal type.
(The effect is to ``map'' from some conditions to a terminal type,
that is, to tell
E 11
I 11
option is to
.Dq map
from some set of conditions to a terminal type, that is, to
tell
E 11
D 6
.I tset
E 6
I 6
.Nm tset
E 6
D 11
``If I'm on this kind of port, guess that I'm on that kind of terminal''.)
E 2
If more than one mapping is specified, the first applicable mapping prevails.
D 2
A missing type identifier matches all identifiers.
E 2
I 2
A missing port type identifier matches all identifiers.
Any of the alternate generic names given in
D 6
.I termcap
E 6
I 6
.Xr termcap 5
E 6
may be used for the identifier.
E 11
I 11
``If I'm on this port at a particular speed, guess that I'm on that
kind of terminal''.
E 11
E 2
D 6
.PP
E 6
I 6
.Pp
E 6
D 2
Baud rates are specified as with
E 2
I 2
D 11
A
D 6
.I baudrate
E 6
I 6
.Ar baudrate
E 6
is specified as with
E 2
D 6
.IR stty (1),
E 6
I 6
D 10
.Xr stty  1  ,
E 10
I 10
.Xr stty  1 ,
E 10
E 6
D 2
and are compared with the
speed of the diagnostic output (which is almost always the control terminal).
The baud rate test may be any combination of:
.B >,
.B =,
.B <,
.B @,
E 2
I 2
and is compared with the
speed of the diagnostic output (which should be the control terminal).
The baud rate
D 6
.I test
E 6
I 6
.Ar test
E 6
may be any combination of:
D 6
.BR > ,
.BR @ ,
.BR < ,
E 6
I 6
D 10
.Ic \&> ,
.Ic \&@ ,
.Ic \&< ,
E 10
I 10
.Cm \&> ,
.Cm \&@ ,
.Cm \&< ,
E 11
I 11
The argument to the
.Fl m
option consists of an optional port type, an optional operator, an optional
baud rate specification, an optional colon (``:'') character and a terminal
type.
The port type is a string (delimited by either the operator or the colon
character).
The operator may be any combination of:
.Dq Li \&> ,
.Dq Li \&< ,
.Dq Li \&@ ,
E 11
E 10
E 6
E 2
and
D 2
.B !;
E 2
I 2
D 6
.BR ! ;
E 2
.B @
E 6
I 6
D 10
.Ic \&! ;
.Ic \&@
E 10
I 10
D 11
.Cm \&! ;
.Cm \&@
E 10
E 6
D 2
is a synonym for
.B =
E 2
I 2
means ``at''
E 11
I 11
.Dq Li \&! ;
.Dq Li \&>
means greater than,
.Dq Li \&<
means less than,
.Dq Li \&@
means equal to
E 11
E 2
and
D 6
.B !
E 6
I 6
D 10
.Ic \&!
E 6
inverts the sense of the test.  To avoid problems with metacharacters, it
E 10
I 10
D 11
.Cm \&!
E 11
I 11
.Dq Li \&!
E 11
inverts the sense of the test.
D 11
To avoid problems with metacharacters, it
E 10
is best to place the entire argument to
E 11
I 11
The baud rate is specified as a number and is compared with the speed
of the standard error output (which should be the control terminal).
The terminal type is a string.
.Pp
If the terminal type is not specified on the command line, the
E 11
D 6
.B \-m
E 6
I 6
.Fl m
E 6
D 11
within ``\''' characters; users of
D 6
.IR csh (1)
E 6
I 6
.Xr csh  1
E 6
must also put a ``\e'' before any ``!'' used here.
D 6
.PP
I 2
.KS
E 2
Thus
.IP
E 6
I 6
D 10
.Pp
.Df I
E 10
I 10
.Bd -filled -offset indent
E 10
E 6
D 2
tset \-m  \'dialup>300:adm3a\'  \-m  dialup:dw2  \-m  \'plugboard:?adm3a\'
E 2
I 2
tset \-m \'dialup>300:adm3a\' -m dialup:dw2 -m \'plugboard:?adm3a\'
D 6
.KE
E 2
.LP
E 6
I 6
D 10
.De
E 10
I 10
.Ed
E 11
I 11
mappings are applied to the terminal type.
If the port type and baud rate match the mapping, the terminal type specified
in the mapping replaces the current type.
If more than one mapping is specified, the first applicable mapping is used.
E 11
E 10
.Pp
E 6
D 11
causes the terminal type to be set to an
D 6
.I adm3a
E 6
I 6
.Ar adm3a
E 6
if the port in use is a dialup at a speed greater than 300 baud;
D 6
to a 
.I dw2
E 6
I 6
to a
.Ar dw2
E 6
if the port is (otherwise) a dialup (i.e. at 300 baud or less).
I 2
D 6
(\fBNOTE:\fP the examples given here appear to take up more than
E 6
I 6
D 10
.Ar NOTE :
E 10
I 10
.Sy NOTE :
E 10
the examples given here appear to take up more than
E 6
D 10
one line, for text processing reasons.  When you type in real
E 10
I 10
one line, for text processing reasons.
When you type in real
E 10
D 6
.I tset
commands, you must enter them entirely on one line.)
E 6
I 6
.Nm tset
commands, you must enter them entirely on one line.
E 6
E 2
If the
D 6
.I type
E 6
I 6
.Ar type
E 6
D 2
above begins with a question mark,
E 2
I 2
finally determined by
D 6
.I tset
E 6
I 6
.Nm tset
E 6
begins with a question mark,
E 2
the user is asked if s/he really wants that type.
A null response means to use that type;
otherwise, another type can be entered which will be used instead.
D 2
Thus, in this case, the user will be queried on a plugboard port
as to whether they are using an
.I adm3a.
For other ports the port type will be taken from the
/etc/ttytype file or a final, default
E 2
I 2
Thus, in the above case, the user will be queried on a plugboard port
as to whether they are actually using an
D 6
.IR adm3a .
.PP
E 6
I 6
D 10
.Ar adm3a  .
E 10
I 10
.Ar adm3a .
E 11
I 11
D 14
For example, consider the following:
E 14
I 14
For example, consider the following mapping:
E 14
.Dq Li dialup>9600:vt100 .
The port type is
.Dq Li dialup ,
the operator is
.Dq Li > ,
the baud rate specification is
.Dq Li 9600 ,
and the terminal type is
.Dq Li vt100 .
The result of this mapping is to specify that if the terminal type is
.Dq Li dialup ,
and the baud rate is greater than 9600 baud, a terminal type of
.Dq Li vt100
will be used.
E 11
E 10
.Pp
E 6
D 11
If no mapping applies and a final
E 2
D 6
.I type
E 6
I 6
.Ar type
E 6
D 2
option may be given on the command line not preceded by a
.B \-m.
E 2
I 2
option, not preceded by a
D 6
.BR \-m ,
E 6
I 6
.Fl m  ,
E 6
is given on the command line
then that type is used;
D 3
otherwise the identifier found in the
.I /etc/ttytype
E 3
I 3
otherwise the type found in the
D 6
.I /etc/ttys
E 6
I 6
.Xr ttys 5
E 6
E 3
database will be taken to be the terminal type.
This should always be the case for hardwired ports.
E 11
I 11
If no port type is specified, the terminal type will match any port type,
D 13
for example, 
E 13
I 13
for example,
E 13
.Dq Li -m dialup:vt100 -m :?xterm
will cause any dialup port, regardless of baud rate, to match the terminal
type
.Dq Li vt100 ,
and any non-dialup port type to match the terminal type
.Dq Li ?xterm .
Note, because of the leading question mark, the user will be
queried on a default port as to whether they are actually using an
.Ar xterm
terminal.
E 11
E 2
D 6
.PP
E 6
I 6
.Pp
E 6
D 2
It is often desirable to return the terminal type, as specified by the
.B \-m
options, and information about the terminal
E 2
I 2
D 11
It is usually desirable to return the terminal type, as finally determined by
D 6
.IR tset ,
E 6
I 6
.Nm tset  ,
E 6
and information about the terminal's capabilities
E 2
D 10
to a shell's environment.  This can be done using the
E 10
I 10
to a shell's environment.
This can be done using the
E 10
D 2
.B \-s
E 2
I 2
D 6
.B \-
E 6
I 6
.Fl
E 6
E 2
option; using the Bourne shell,
D 6
.IR sh (1):
.IP
D 2
eval \`tset \-s \fIoptions...\fR\`
E 2
I 2
export TERM; TERM=\`tset \- \fIoptions...\fR\`
E 2
.LP
E 6
I 6
D 10
.Xr sh  1  :
E 10
I 10
.Xr \&sh  1  :
.Bd -literal -offset indent
export TERM; TERM=\`tset options ... \`
.Ed
E 10
.Pp
D 10
.Df I
.Li export TERM; TERM=\&\`tset \-
.Ar options ...
.Li \&\`
.De
.Pp
E 10
E 6
or using the C shell,
D 6
.IR csh (1):
.IP
D 2
set noglob; eval \`tset \-s \fIoptions...\fR\`
E 2
I 2
setenv TERM \`tset - \fIoptions...\fR\`
E 2
.PP
E 6
I 6
.Xr csh  1  :
I 10
.Bd -literal -offset indent
setenv TERM \`tset \- options ...  \`
.Ed
E 10
.Pp
D 10
.Df I
.Li setenv TERM \`tset \-
.Ar options . . .
.Li \&\`
.De
.Pp
E 10
E 6
I 2
With
D 6
.I csh
E 6
I 6
.Xr csh 1
E 6
D 3
it is convenient to make an alias in your .cshrc:
E 3
I 3
D 10
it is preferable to use the following command in your .login file to
E 10
I 10
it is preferable to use the following command in one's
.Pa .login
file to
E 10
D 6
initialize the TERM and TERMCAP environment variables at the same time.
.IP
eval \`tset -s \fIoptions...\fR\`
E 3
.PP
E 6
I 6
initialize the
.Ev TERM
and
.Ev TERMCAP
environment variables at the same time.
I 10
.Bd -literal -offset indent
eval \`tset -s options ... \`
.Ed
E 10
.Pp
D 10
.Df I
.Li eval \`tset -s
.Ar options ...
.Li \&\`
.De
.Pp
E 10
E 6
D 3
.RS
alias tset \'setenv TERM \`tset \- \e!*\`\'
.RE
Either of these aliases allow the command
.RS
E 3
I 3
It is also convenient to make an alias in your .cshrc:
I 10
.Bd -literal -offset indent
alias tset \'eval \`tset \-s \e!*\`\'
.Ed
E 10
D 6
.IP
alias tset \'eval \`tset \-s \e!*\`\'
.PP
E 6
I 6
.Pp
D 10
.Dl alias tset \'eval \`tset \-s \e!*\`\'
.Pp
E 10
E 6
This allows the command:
D 6
.IP
E 3
tset 2621
D 3
.RE
to be invoked at any time from your login csh.
E 3
I 3
.PP
E 6
I 6
.Pp
.Dl tset 2621
.Pp
E 6
to be invoked at any time to set the terminal and environment.
E 3
D 6
.B "Note to Bourne Shell users:"
E 6
I 6
.Sy Note to Bourne Shell users:
E 6
It is
D 6
.B not
E 6
I 6
.Em not
E 6
possible to get this aliasing effect with a shell script,
because shell scripts cannot set the environment of their parent.
(If a process could set its parent's environment,
none of this nonsense would be necessary in the first place.)
D 6
.PP
E 6
I 6
.Pp
E 6
E 2
These commands cause
D 6
.I tset
E 6
I 6
.Nm tset
E 6
D 2
to generate as output a sequence of shell commands which place the variables
TERM and TERMCAP in the environment; see
.IR environ (5).
E 2
I 2
to place the name of your terminal in the variable
D 6
TERM in the environment; see
.IR environ (7).
E 2
.PP
E 6
I 6
.Ev TERM
in the environment; see
.Xr environ  7  .
.Pp
E 6
Once the terminal type is known,
D 6
.I tset
E 6
I 6
.Nm tset
E 6
D 2
engages in terminal mode setting.
E 2
I 2
engages in terminal driver mode setting.
E 2
This normally involves sending an initialization sequence to the
D 2
terminal and setting the single character erase (and optionally
the line-kill (full line erase)) characters.
E 2
I 2
terminal, setting the single character erase (and optionally
the line-kill (full line erase)) characters,
and setting special character delays.
Tab and newline expansion are turned off during transmission of
the terminal initialization sequence.
E 2
D 6
.PP
E 6
I 6
.Pp
E 6
On terminals that can backspace but not overstrike
D 6
(such as a \s-2CRT\s0),
E 6
I 6
(such as a
D 10
.Em CRT ) ,
E 10
I 10
.Tn CRT ) ,
E 10
E 6
and when the erase character is the default erase character
(`#' on standard systems),
D 2
the erase character is changed to a Control-H
(backspace).
E 2
I 2
D 6
the erase character is changed to \s-2BACKSPACE\s0 (Control-H).
E 2
.PP
The options are:
.TP
D 2
.B \-e
E 2
I 2
.B \-e\fIc
E 2
set the erase character to be the named character
.I c
on all terminals,
the default being the backspace character on the terminal, usually ^H.
I 2
The character
.I c
can either be typed directly, or entered using the hat
notation used here.
E 2
.TP
D 2
.B \-k
E 2
I 2
.B \-k\fIc
E 2
is similar to
.B \-e
but for the line kill character rather than the erase character;
.I c
D 2
defaults to ^X (for purely historical reasons); ^U is the preferred setting.
No kill processing is done if
E 2
I 2
defaults to ^X (for purely historical reasons).
The kill characters is left alone if
E 2
.B \-k
is not specified.
I 2
The hat notation can also be used for this option.
E 2
.TP
I 4
.B \-i\fIc
is similar to
.B \-e
but for the interrupt character rather than the erase character;
.I c
defaults to ^C.  The hat notation can also be used for this option.
.TP
E 4
I 2
.B \-
The name of the terminal finally decided upon is output on the
standard output.
This is intended to be captured by the shell and placed in the
environment variable TERM.
.TP
I 3
.B \-s
Print the sequence of
.I csh
commands to initialize the environment variables TERM and TERMCAP based on
the name of the terminal finally decided upon.
.TP
E 3
.B \-n
On systems with the Berkeley 4BSD tty driver,
specifies that the new tty driver modes should be initialized for this terminal.
For a \s-2CRT\s0,
the CRTERASE and CRTKILL
modes are set only if the baud rate is 1200 or greater.
See tty(4) for more detail.
.TP
E 2
.B \-I
D 2
supresses outputting terminal initialization strings.
E 2
I 2
suppresses transmitting terminal initialization strings.
E 2
.TP
.B \-Q
D 2
supresses printing the
E 2
I 2
suppresses printing the
E 2
``Erase set to'' and ``Kill set to'' messages.
D 2
.TP
.B \-S
Outputs the strings to be assigned to
TERM and TERMCAP in the environment rather than commands for a shell.
E 2
I 2
.PP
E 6
I 6
the erase character is changed to
D 10
.Li BACKSPACE
E 10
I 10
.Dv BACKSPACE
E 10
(Control-H).
.Pp
E 6
If
D 6
.B tset
E 6
I 6
.Nm tset
E 6
is invoked as
D 6
.BR reset ,
E 6
I 6
.Nm reset  ,
E 6
it will set cooked and echo modes, turn off cbreak and raw modes,
turn on newline translation, and restore special characters
to a sensible state before any terminal dependent processing is done.
D 6
Any special character that is found to be \s-2NULL\s0
E 6
I 6
Any special character that is found to be
D 10
.Li NULL
E 6
D 4
or ``\-1'' is reset to its default value.
E 4
I 4
or ``\-1'' is reset to its default value.  All arguments to
E 10
I 10
.Tn NULL
or ``\-1'' is reset to its default value.
All arguments to
E 10
D 6
.I tset
E 6
I 6
.Nm tset
E 6
may be used with reset.
E 4
D 6
.PP
E 6
I 6
.Pp
E 6
This is most useful after a program dies leaving a terminal in a funny
D 6
state. You may have to type ``\s-2<LF>\s0reset\s-2<LF>\s0'' to get it to work
since \s-2<CR>\s0 may not work in this state. Often none of this will echo.
.SH EXAMPLES
.PP
These examples all assume the Bourne shell and use the - option.
E 6
I 6
D 7
state. You may have to type ``
E 7
I 7
D 10
state. You may have to type
E 10
I 10
state.
You may have to type
E 10
E 7
.Dq Li <LF>reset<LF>
to get it to work
since
.Li <CR>
D 10
may not work in this state. Often none of this will echo.
E 10
I 10
may not work in this state.
Often none of this will echo.
E 10
.Sh EXAMPLES
.Pp
These examples all assume the Bourne shell and use the
.Fl
option.
E 6
If you use
D 6
.IR csh ,
E 6
I 6
.Xr csh  ,
E 6
use one of the variations described above.
Note that a typical use of
D 6
.I tset
in a .profile or .login will also use the
.B \-e
E 6
I 6
.Nm tset
in a
D 10
.Pa .profile or
E 10
I 10
.Pa .profile
or
E 10
.Pa .login
will also use the
.Fl e
E 6
and
D 6
.B \-k
E 6
I 6
.Fl k
E 6
options, and often the
D 6
.B \-n
E 6
I 6
.Fl n
E 6
or
D 6
.B \-Q
E 6
I 6
.Fl Q
E 6
options as well.
These options have not been included here to keep the examples small.
D 6
(\fBNOTE:\fP some of the examples given here appear to take up more than
E 6
I 6
.Sy NOTE :
some of the examples given here appear to take up more than
E 6
D 10
one line, for text processing reasons.  When you type in real
E 10
I 10
one line, for text processing reasons.
When you type in real
E 10
D 6
.I tset
commands, you must enter them entirely on one line.)
.PP
At the moment, you are on a 2621.
E 6
I 6
.Nm tset
commands, you must enter them entirely on one line.
.Pp
At the moment, you are on a
.Li 2621 .
E 6
This is suitable for typing by hand but
D 6
not for a .profile, unless you are
.I always
E 6
I 6
not for a
.Pa .profile, unless you are
.Em always
E 6
on a 2621.
I 10
.Bd -literal -offset indent
export TERM; TERM=\`tset \- 2621\`
.Ed
E 10
D 6
.IP
export TERM; TERM=\`tset \- 2621\`
.PP
E 6
I 6
.Pp
D 10
.Dl export TERM; TERM=\`tset \- 2621\`
.Pp
E 10
E 6
You have an h19 at home which you dial up on, but your office terminal
D 3
is hardwired and known in /etc/ttytype.
E 3
I 3
D 6
is hardwired and known in /etc/ttys.
E 3
.IP
export TERM; TERM=\`tset \- \-m dialup:h19\`
.PP
E 6
I 6
is hardwired and known in
D 10
Xr ttys 5 .
E 10
I 10
.Xr ttys 5 .
.Bd -literal -offset indent
export TERM; TERM=\`tset \- \-m dialup:h19\`
.Ed
E 10
.Pp
D 10
.Dl export 
TERM; TERM=\`tset \- \-m dialup:h19\`
.Pp
E 10
E 6
You have a switch which connects everything to everything, making
it nearly impossible to key on what port you are coming in on.
You use a vt100 in your office at 9600 baud, and dial up to switch
ports at 1200 baud from home on a 2621.
Sometimes you use someone elses terminal at work,
so you want it to ask you to make sure what terminal
type you have at high speeds, but at 1200 baud you are
always on a 2621.
Note the placement of the question mark, and the quotes
to protect the greater than and question mark from
interpretation by the shell.
I 10
.Bd -literal -offset indent
export TERM; TERM=\`tset \- \-m 'switch>1200:?vt100'\e
\-m 'switch<=1200:2621'
.Ed
E 10
D 6
.IP
export TERM; TERM=\`tset \- \-m 'switch>1200:?vt100' \-m 'switch<=1200:2621'
.PP
E 6
I 6
.Pp
D 10
.Df I
.Li export TERM;
.Li TERM=\`tset \- \-m 'switch>1200:?vt100'
.Li \-m 'switch<=1200:2621'
.De
.Pp
E 10
E 6
All of the above entries will fall back on the terminal type
specified in
D 3
.I /etc/ttytype
E 3
I 3
D 6
.I /etc/ttys
E 6
I 6
.Xr ttys 5
E 6
E 3
if none of the conditions hold.
The following entry is appropriate if
you always dial up, always at the same baud rate,
on many different kinds of terminals.
Your most common terminal is an adm3a.
It always asks you what kind of terminal you are on,
defaulting to adm3a.
I 10
.Bd -literal -offset indent
export TERM; TERM=\`tset \- ?adm3a\`
.Ed
E 10
D 6
.IP
export TERM; TERM=\`tset \- \?adm3a\`
.PP
E 6
I 6
.Pp
D 10
.Dl export TERM; TERM=\`tset \- \?adm3a\`
.Pp
E 10
E 6
If the file
D 3
.I /etc/ttytype
E 3
I 3
D 6
.I /etc/ttys
E 6
I 6
.Xr ttys 5
E 6
E 3
is not properly installed and you want to
key entirely on the baud rate, the following can be used:
I 10
.Bd -literal -offset indent
export TERM; TERM=\`tset \- \-m '>1200:vt100' 2621\`
.Ed
E 10
D 6
.IP
export TERM; TERM=\`tset \- \-m '>1200:vt100' 2621\`
.PP
E 6
I 6
.Pp
D 10
.Dl export TERM; TERM=\`tset \- \-m '>1200:vt100' 2621\`
.Pp
E 10
E 6
Here is a fancy example to illustrate the power of
D 6
.I tset
E 6
I 6
.Nm tset
E 6
and to hopelessly confuse anyone who has made it this far.
You dial up at 1200 baud or less on a concept100,
sometimes over switch ports and sometimes over regular dialups.
You use various terminals at speeds higher than 1200 over switch ports,
most often the terminal in your office, which is a vt100.
However, sometimes you log in from the university you used to go to,
D 10
over the ARPANET; in this case you are on an ALTO emulating a dm2500.
E 10
I 10
over the
.Tn ARPANET ;
in this case you are on an
.Tn ALTO
emulating a dm2500.
E 10
You also often log in on various hardwired ports, such as the console,
all of which are properly entered in
D 3
.IR /etc/ttytype .
E 3
I 3
D 6
.IR /etc/ttys .
E 6
I 6
.Xr ttys 5 .
E 6
E 3
You want your erase character set to control H,
your kill character set to control U,
and don't want
D 6
.I tset
to print the ``Erase set to Backspace, Kill set to Control U'' message.
.IP
export TERM; TERM=\`tset \-e \-k^U \-Q \- \-m 'switch<=1200:concept100' \-m 'switch:?vt100' \-m dialup:concept100 \-m arpanet:dm2500\`
E 2
.SH FILES
.DT
D 2
/etc/ttytype		terminal id to type map database
E 2
I 2
D 3
/etc/ttytype	port name to terminal type mapping database
E 3
I 3
/etc/ttys	port name to terminal type mapping database
E 3
E 2
.br
/etc/termcap	terminal capability database
.SH SEE\ ALSO
D 2
csh(1), setenv(1), sh(1), stty(1), environ(5), ttytype(5), termcap(5)
.SH AUTHOR
E 2
I 2
D 3
csh(1), sh(1), stty(1), ttytype(5), termcap(5), environ(7)
E 3
I 3
csh(1), sh(1), stty(1), ttys(5), termcap(5), environ(7)
E 3
D 4
.SH AUTHORS
E 2
Eric Allman
I 2
.br
David Wasley
.br
Mark Horton
E 4
E 2
.SH BUGS
D 2
Should be merged with
.IR stty (1).
E 2
I 2
.PP
E 6
I 6
.Nm tset
to print the
.Dq Li Erase set to Backspace ,
.Dq Li Kill set to Control U
message.
D 10
.Pp
.Df I
.Li export TERM;
.Li TERM=\`tset \-e \-k^U \-Q \-
.Li \-m 'switch<=1200:concept100'
.Li \-m 'switch:?vt100'
.Li \-m dialup:concept100
.Li \-m arpanet:dm2500\`
.De
E 10
I 10
.Bd -literal -offset indent
export TERM; TERM=\`tset \-e \-k^U \-Q \-\e
\-m 'switch<=1200:concept100' \-m 'switch:?vt100'\e
\-m dialup:concept100 \-m arpanet:dm2500\`
.Ed
E 11
I 11
No whitespace characters are permitted in the
.Fl m
option argument.
D 12
A missing port type matches all port types.
To avoid problems with metacharacters, it is best to place the entire
E 12
I 12
Also, to avoid problems with metacharacters, it is suggested that the entire
E 12
.Fl m
D 12
option within single quote characters.
.Nm Csh
users normally must also place a backslash character (``\e'') before any
exclamation marks (``!'').
E 12
I 12
option argument be placed within single quote characters, and that
.Nm csh
users insert a backslash character (``\e'') before any exclamation
marks (``!'').
E 12
E 11
E 10
.Sh ENVIRONMENT
E 6
The
D 6
.I tset
E 6
I 6
.Nm tset
command utilizes the
I 11
D 12
.Ev SHELL ,
E 11
.Ev TERM
E 12
I 12
.Ev SHELL
E 12
and
D 12
.Ev TERMCAP
E 12
I 12
.Ev TERM
E 12
environment variables.
.Sh FILES
D 10
.Dw /usr/share/misc/termcap
.Di L
.Dp Pa /etc/ttys
E 10
I 10
.Bl -tag -width /usr/share/misc/termcap -compact
.It Pa /etc/ttys
E 10
D 11
port name to terminal type mapping database
E 11
I 11
system port name to terminal type mapping database
E 11
D 10
.Dp Pa /usr/share/misc/termcap
E 10
I 10
.It Pa /usr/share/misc/termcap
E 10
terminal capability database
D 10
.Dp
E 10
I 10
.El
E 10
.Sh SEE ALSO
.Xr csh 1 ,
.Xr sh 1 ,
.Xr stty 1 ,
D 11
.Xr ttys 5 ,
E 11
I 11
.Xr tty 4 ,
E 11
.Xr termcap 5 ,
I 11
.Xr ttys 5 ,
E 11
.Xr environ 7
.Sh HISTORY
D 10
.Nm Tset
appeared in 3 BSD.
E 10
I 10
The
.Nm tset
command appeared in
.Bx 3.0 .
E 10
D 11
.Sh BUGS
.Pp
E 11
I 11
.Sh COMPATIBILITY
D 13
The historic
E 13
I 13
The
E 13
.Fl A ,
D 13
.Fl a ,
.Fl d ,
E 13
.Fl E ,
.Fl h ,
D 13
.Fl p ,
.Fl r ,
E 13
D 14
.Fl S ,
E 14
.Fl u
D 13
and 
E 13
I 13
and
E 13
.Fl v
options have been deleted from the
.Nm tset
utility.
D 12
None of these flags were documented in 4.3BSD and all are of limited
utility at best.
E 12
I 12
None of them were documented in 4.3BSD and all are of limited utility at
best.
E 12
D 13
Executing
.Nm tset
as
.Nm reset
no longer implies the
.Fl Q
option.
E 13
E 11
The
I 13
.Fl a ,
.Fl d
and
.Fl p
options are similarly not documented or useful, but were retained as they
appear to be in widespread use.
It is strongly recommended that any usage of these three options be
changed to use the
.Fl m
option instead.
The
E 13
I 11
.Fl n
option remains, but has no effect.
D 13
.Pp
E 13
It is still permissible to specify the
.Fl e ,
.Fl i
and
.Fl k
options without arguments, although it is strongly recommended that such
D 13
usage be fixed to conform to
.Xr getopt 3 .
Also, some historic implementations of
E 13
I 13
usage be fixed to explicitly specify the character.
.Pp
Executing
E 13
E 11
.Nm tset
E 6
D 11
command is one of the first commands a user must master when getting
D 10
started on a UNIX system.
E 10
I 10
started on a
.Tn UNIX
system.
E 10
Unfortunately, it is one of the most complex,
largely because of the extra effort the user must go through
to get the environment of the login shell set.
Something needs to be done to make all this simpler,
either the
D 6
.IR login (1)
E 6
I 6
.Xr login  1
E 6
program should do this stuff,
or a default shell alias should be made,
or a way to set the environment of the parent should exist.
E 11
I 11
D 13
had an interaction between the
E 13
I 13
as
.Nm reset
no longer implies the
.Fl Q
option.
Also, the interaction between the
E 13
.Fl
D 13
option and the 
E 13
I 13
option and the
E 13
.Ar terminal
D 13
argument.
This is no longer true.
E 13
I 13
argument in some historic implementations of
.Nm tset
has been removed.
E 13
E 11
I 4
D 6
.PP
E 6
I 6
.Pp
E 6
D 11
This program can't intuit personal choices for erase, interrupt
and line kill characters, so it leaves these set to the local system
standards.
E 4
D 10
.ig
E 2
D 6
.SH NOTES
E 6
I 6
.Sh NOTES
E 6
For compatibility with earlier versions of
D 6
.I tset
E 6
I 6
.Nm tset
E 6
a number of flags are accepted whose use is discouraged:
D 6
.TP 10
\fB\-d\fR type
E 6
I 6
.Tw Fl
.Tp Cx Fl d
.Ar type
.Cx
E 6
equivalent to
D 6
.B \-m
dialup:type
.TP 10
\fB\-p\fR type
E 6
I 6
.Fl m
.Ar dialup:type
.Tp Cx Fl p
.Ar type
.Cx
E 6
equivalent to
D 6
.B \-m
plugboard:type
.TP 10
\fB\-a\fR type
E 6
I 6
.Fl m
.Ar plugboard:type
.Tp Cx Fl a
.Ar type
.Cx
E 6
equivalent to
D 6
.B \-m
arpanet:type
.TP 10
\fB\-E\fR c
E 6
I 6
.Fl m
.Ar arpanet:type
.Cx
.Tp Cx Fl E
.Ar c
.Cx
E 6
Sets the erase character to
D 6
.I c
E 6
I 6
.Ar c
E 6
only if the terminal can backspace.
D 6
.TP 10
\fB\-\fR
E 6
I 6
.Tp Fl
E 6
prints the terminal type on the standard output
D 6
.TP 10
\fB\-r\fR
E 6
I 6
.Tp Fl r
E 6
prints the terminal type on the diagnostic output.
I 6
.Tp
E 6
I 2
..
E 10
I 10
.\" .ig
.\" .Sh NOTES
.\" For compatibility with earlier versions of
.\" .Nm tset
.\" a number of flags are accepted whose use is discouraged:
.\" .Bl -tag -width Fl
.\" .It Fl d Ns Ar type
.\" equivalent to
.\" .Fl m
.\" .Ar dialup:type
.\" .It Fl p Ns Ar type
.\" equivalent to
.\" .Fl m
.\" .Ar plugboard:type
.\" .It Fl a Ns Ar type
.\" equivalent to
.\" .Fl m
.\" .Ar arpanet:type
.\" .It Fl E Ns Ar c
.\" Sets the erase character to
.\" .Ar c
.\" only if the terminal can backspace.
.\" .It Fl
.\" prints the terminal type on the standard output
.\" .It Fl r
.\" prints the terminal type on the diagnostic output.
.\" .El
E 11
I 11
Finally, the
.Nm tset
D 12
implementation has been completely redone as part of the addition to the
E 12
I 12
implementation has been completely redone (as part of the addition to the
E 12
system of a
.St -p1003.1-88
D 12
compliant terminal interface, and will no longer compile on systems with
E 12
I 12
compliant terminal interface) and will no longer compile on systems with
E 12
older terminal interfaces.
E 11
E 10
E 2
E 1
