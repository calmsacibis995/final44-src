h01282
s 00003/00004/00136
d D 8.2 94/04/01 06:52:28 bostic 8 7
c minor wordsmithing
e
s 00002/00002/00138
d D 8.1 93/06/06 16:40:38 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00092/00064/00048
d D 6.5 91/04/23 16:56:44 cael 6 4
c mdoc version three/bsd copyright
e
s 00091/00063/00049
d R 6.5 91/04/23 16:55:31 cael 5 4
c mdoc version three
e
s 00001/00011/00111
d D 6.4 91/04/16 16:50:54 bostic 4 3
c new copyright; att/bsd/shared
e
s 00065/00071/00057
d D 6.3 88/12/14 14:50:53 bostic 3 2
c new versions from Dave Yost (grand!day@uunet.UU.NET)
e
s 00014/00003/00111
d D 6.2 88/12/13 18:42:33 bostic 2 1
c written by Dave Yost; add Berkeley specific copyright
e
s 00114/00000/00000
d D 6.1 85/04/29 21:49:36 mckusick 1 0
c manual page first distributed with 4.3BSD
e
u
U
t
T
I 1
D 2
.\" Copyright (c) 1985 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 2
I 2
D 6
.\" Copyright (c) 1985 The Regents of the University of California.
E 6
I 6
D 7
.\" Copyright (c) 1985, 1991 The Regents of the University of California.
E 6
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Dave Yost.
.\"
D 4
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 4
I 4
D 6
.\" %sccs.include.redist.man%
E 6
I 6
.\" %sccs.include.redist.roff%
E 6
E 4
E 2
.\"
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
.\"     %W% (Berkeley) %G%
E 6
.\"
D 6
.TH UNIFDEF 1 "%Q%"
D 3
.UC 6
E 3
.SH NAME
unifdef \- remove ifdef'ed lines
.SH SYNOPSIS
D 3
.B unifdef
E 3
I 3
\fBunifdef\fR
E 3
[
D 3
.B \-t
.B \-l
.B \-c
.BI \-D sym
.BI \-U sym
.BI \-id sym
.BI \-iu sym
E 3
I 3
\fB\-t\fR
\fB\-l\fR
\fB\-c\fR
\fB\-D\fR\fIsym\fR 
\fB\-U\fR\fIsym\fR 
\fB\-iD\fR\fIsym\fR
\fB\-iD\fR\fIsym\fR
E 3
] ...  [ file ]
.SH DESCRIPTION
D 3
.I Unifdef
is useful for removing ifdef'ed lines from a file while otherwise leaving the
file alone.
.I Unifdef
is like a stripped-down C preprocessor:
it is smart enough to deal with the nested ifdefs, comments,
single and double
quotes of C syntax so that it can do its job, but it doesn't do any including
or interpretation of macros.
Neither does it strip out comments, though it recognizes and ignores them.
E 3
I 3
\fIUnifdef\fR is useful for removing ifdef'ed lines
E 6
I 6
.Dd %Q%
.Dt UNIFDEF 1
.Os BSD 4.3
.Sh NAME
.Nm unifdef
.Nd remove ifdef'ed lines
.Sh SYNOPSIS
.Nm unifdef
I 8
.Op Fl clt
E 8
.Oo
D 8
.Fl t l c
E 8
.Fl D Ns Ar sym
.Fl U Ns Ar sym
.Fl iD Ns Ar sym
.Fl iD Ns Ar sym
.Oc
.Ar ...
.Op Ar file
.Sh DESCRIPTION
.Nm Unifdef
is useful for removing ifdef'ed lines
E 6
from a file while otherwise leaving the file alone.
D 6
\fIUnifdef\fR acts on
E 6
I 6
.Nm Unifdef
acts on
E 6
#ifdef, #ifndef, #else, and #endif lines,
and it knows only enough about C
to know when one of these is inactive
because it is inside
a comment,
or a single or double quote.
Parsing for quotes is very simplistic:
when it finds an open quote,
it ignores everything (except escaped quotes)
until it finds a close quote, and
it will not complain if it gets
to the end of a line and finds no backslash for continuation.
D 6
.PP
If you want to use \fIunifdef\fR
for plain text (not C code),
use the \fB\-t\fR option,
which disables this parsing for
C comments and quotes.
.PP
E 3
You specify which symbols you want defined
D 3
.BI \-D sym
E 3
I 3
(\fB\-D\fR\fIsym\fR)
E 3
or undefined
D 3
.BI \-U sym
E 3
I 3
(\fB\-U\fR\fIsym\fR)
E 6
I 6
.Pp
Available options:
.Bl -tag -width Ds -compact
.It Fl D Ns Ar sym
.It Fl U Ns Ar sym
Specify which symbols to define or undefine.
E 6
E 3
and the lines inside those ifdefs will be copied to the output or removed as
appropriate.
The ifdef, ifndef, else, and endif lines associated with
D 3
.I sym
will also be removed.
Ifdefs involving symbols you don't specify are untouched and copied out
E 3
I 3
D 6
\fIsym\fR will also be removed.
E 6
I 6
.Ar sym
will also be removed.
E 6
Ifdefs involving symbols you don't specify
and ``#if'' control lines
are untouched and copied out
E 3
along with their associated
ifdef, else, and endif lines.
If an ifdef X occurs nested inside another ifdef X, then the
inside ifdef is treated as if it were an unrecognized symbol.
D 3
If the same symbol appears in more than one argument, only the first
occurrence is significant.
E 3
I 3
If the same symbol appears in more than one argument,
the last occurrence dominates.
E 3
D 6
.PP
D 3
The
.B \-l
option causes
.I unifdef
E 3
I 3
The \fB\-l\fR option causes \fIunifdef\fR
E 3
to replace removed lines with blank lines
E 6
I 6
.Pp
.It Fl c
If the
.Fl c
flag is specified,
then the operation of
.Nm unifdef
is complemented,
i.e. the lines that would have been removed or blanked
are retained and vice versa.
.Pp
.It Fl l
Replace removed lines with blank lines
E 6
instead of deleting them.
D 6
.PP
E 6
I 6
.It Fl t
D 8
Disables parsing for
C comments and quotes useful for plain text
(not C code).
E 8
I 8
Disables parsing for C comments and quotes, which is useful
for plain text.
E 8
.Pp
.It Fl iD Ns Ar sym
.It Fl iU Ns Ar sym
Ignore ifdefs.
E 6
D 3
If you use ifdefs to delimit non-C lines, such as comments
E 3
I 3
If your C code uses ifdefs to delimit non-C lines,
such as comments
E 3
or code which is under construction,
D 3
then you must tell
.I unifdef
E 3
I 3
D 6
then you must tell \fIunifdef\fR
E 6
I 6
then you must tell
.Nm unifdef
E 6
E 3
which symbols are used for that purpose so that it won't try to parse
for quotes and comments
D 3
in those ifdef'ed lines.
You specify that you want the lines inside certain ifdefs to be ignored
but copied out with
.BI \-id sym
E 3
I 3
inside those ifdefs.
D 6
You specify ignored ifdefs with
\fB\-iD\fR\fIsym\fR
E 6
I 6
One specifies ignored ifdefs with
.Fl iD Ns Ar sym
E 6
E 3
and
D 3
.BI \-iu sym
E 3
I 3
D 6
\fB\-iU\fR\fIsym\fR
E 6
I 6
.Fl iU Ns Ar sym
E 6
E 3
similar to
D 3
.BI \-D sym
E 3
I 3
D 6
\fB\-D\fR\fIsym\fR
E 6
I 6
.Fl D Ns Ar sym
E 6
E 3
and
D 3
.BI \-U sym
E 3
I 3
D 6
\fB\-U\fR\fIsym\fR
E 6
I 6
.Fl U Ns Ar sym
E 6
E 3
above.
D 6
.PP
D 3
If you want to use
.I unifdef
for plain text (not C code), use the
.B \-t
option.
This makes
.I unifdef
refrain from attempting to recognize comments and single and double quotes.
.PP
.I Unifdef
copies its output to
.I stdout
and will take its input from
.I stdin
if no
.I file
argument is given.
If the
.B \-c
argument is specified, then the operation of
.I unifdef
is complemented,
E 3
I 3
\fIUnifdef\fR copies its output to \fIstdout\fR
and will take its input from \fIstdin\fR
if no \fIfile\fR argument is given.
If the \fB\-c\fR argument is specified,
then the operation of \fIunifdef\fR is complemented,
E 3
i.e. the lines that would have been removed or blanked
are retained and vice versa.
I 3
.PP
\fIUnifdef\fR works nicely with the \fB\-D\fR\fIsym\fR option added
to \fIdiff\fR(1) as of the 4.1 Berkeley Software Distribution.
E 3
.SH "SEE ALSO"
diff(1)
.SH DIAGNOSTICS
E 6
I 6
.El
.Pp
.Nm Unifdef
copies its output to
.Em stdout
and will take its input from
.Em stdin
if no
.Ar file
argument is given.
.Pp
.Nm Unifdef
works nicely with the
.Fl D Ns Ar sym
option added to
.Xr diff 1
as of the 4.1 Berkeley Software Distribution.
.Sh SEE ALSO
.Xr diff 1
.Sh DIAGNOSTICS
E 6
D 3
Premature EOF, inappropriate else or endif.
E 3
I 3
Inappropriate else or endif.
.br
D 6
Premature EOF with line numbers of the unterminated #ifdefs.
E 3
.PP
E 6
I 6
Premature
.Tn EOF
with line numbers of the unterminated #ifdefs.
.Pp
E 6
Exit status is 0 if output is exact copy of input, 1 if not, 2 if trouble.
I 3
D 6
.SH AUTHOR
Dave Yost for The Rand Corporation.
.br
Still maintained independently by Dave Yost as of 3/85
E 3
.SH BUGS
E 6
I 6
.Sh BUGS
E 6
D 3
Does not know how to deal with \fIcpp\fP consructs such as
E 3
I 3
Should try to deal with ``#if'' lines.
E 3
D 6
.br
E 6
I 6
.Pp
E 6
D 3
.sp
.nf
	#if	defined(X) || defined(Y)
.sp
.fi
.SH AUTHOR
Dave Yost
E 3
I 3
Doesn't work correctly if input contains null characters.
I 6
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.3 .
E 6
E 3
E 1
