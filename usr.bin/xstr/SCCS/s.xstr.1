h46026
s 00001/00001/00132
d D 8.2 93/12/30 15:39:42 mckusick 8 7
c copyediting for Usenix manuals
e
s 00002/00002/00131
d D 8.1 93/06/09 22:58:01 bostic 7 6
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00088/00078/00045
d D 6.4 91/04/24 00:30:54 cael 6 5
c mdoc version three
e
s 00004/00004/00119
d D 6.3 90/06/06 10:28:58 bostic 5 4
c Berkeley copyright notice, written by Bill Joy
e
s 00000/00002/00123
d D 6.2 86/05/07 13:30:48 mckusick 4 3
c delete author
e
s 00001/00001/00124
d D 6.1 85/04/29 15:12:36 mckusick 3 2
c 4.3BSD beta release manual page
e
s 00001/00001/00124
d D 5.1 85/04/29 15:12:27 mckusick 2 1
c manual page distributed with 4.2BSD
e
s 00125/00000/00000
d D 4.1 85/04/29 15:12:19 mckusick 1 0
c manual page distributed with 4.1BSD
e
u
U
t
T
I 1
D 5
.\" Copyright (c) 1980 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 5
I 5
D 7
.\" Copyright (c) 1980 The Regents of the University of California.
.\" All rights reserved.
E 7
I 7
.\" Copyright (c) 1980, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 7
E 5
.\"
D 5
.\"	%W% (Berkeley) %G%
E 5
I 5
D 6
.\" %sccs.include.redist.man%
E 6
I 6
.\" %sccs.include.redist.roff%
E 6
E 5
.\"
I 5
D 6
.\"	%W% (Berkeley) %G%
E 5
D 2
.TH XSTR 1 2/24/79
E 2
I 2
D 3
.TH XSTR 1 "24 February 1979"
E 3
I 3
.TH XSTR 1 "%Q%"
E 3
E 2
.UC
.SH NAME
xstr \- extract strings from C programs to implement shared strings
.SH SYNOPSIS
.B xstr
[
.B \-c
] [
.B \-
] [
file
]
.SH DESCRIPTION
.I Xstr
E 6
I 6
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt XSTR 1
.Os BSD 3
.Sh NAME
.Nm xstr
.Nd "extract strings from C programs to implement shared strings"
.Sh SYNOPSIS
.Nm xstr
.Op Fl c
.Op Fl 
.Op Ar file
.Sh DESCRIPTION
.Nm Xstr
E 6
maintains a file
D 6
.I strings
E 6
I 6
.Pa strings
E 6
into which strings in component parts of a large program are hashed.
These strings are replaced with references to this common area.
This serves to implement shared constant strings, most useful if they
are also read-only.
D 6
.PP
The command
.PP
.DT
	\fBxstr \-c\fR name
.PP
will extract the strings from the C source in name, replacing
E 6
I 6
.Pp
Available options:
.Bl -tag -width Ds
.It Fl
.Nm Xstr
reads from the standard input.
.It Fl c
.Nm Xstr
will extract the strings from the C source
.Ar file
or the standard input
.Pq Fl ,
replacing
E 6
string references by expressions of the form (&xstr[number])
for some number.
An appropriate declaration of
D 6
.I xstr
E 6
I 6
.Nm xstr
E 6
is prepended to the file.
The resulting C text is placed in the file
D 6
.I x.c,
E 6
I 6
.Pa x.c ,
E 6
to then be compiled.
The strings from this file are placed in the
D 6
.I strings
E 6
I 6
.Pa strings
E 6
data base if they are not there already.
D 8
Repeated strings and strings which are suffices of existing strings
E 8
I 8
Repeated strings and strings which are suffixes of existing strings
E 8
do not cause changes to the data base.
D 6
.PP
E 6
I 6
.El
.Pp
E 6
After all components of a large program have been compiled a file
D 6
.I xs.c
E 6
I 6
.Pa xs.c
E 6
declaring the common
D 6
.I xstr
E 6
I 6
.Nm xstr
E 6
space can be created by a command of the form
D 6
.PP
.DT
	\fBxstr\fR
.PP
This
.I xs.c
file should then be compiled and loaded with the rest
E 6
I 6
.Bd -literal -offset indent
xstr
.Ed
.Pp
The file
.Pa xs.c
should then be compiled and loaded with the rest
E 6
of the program.
If possible, the array can be made read-only (shared) saving
space and swap overhead.
D 6
.PP
.I Xstr
E 6
I 6
.Pp
.Nm Xstr
E 6
can also be used on a single file.
A command
D 6
.PP
.DT
	\fBxstr\fR name
.PP
E 6
I 6
.Bd -literal -offset indent
xstr name
.Ed
.Pp
E 6
creates files
D 6
.I x.c
E 6
I 6
.Pa x.c
E 6
and
D 6
.I xs.c
E 6
I 6
.Pa xs.c
E 6
as before, without using or affecting any
D 6
.I strings
E 6
I 6
.Pa strings
E 6
file in the same directory.
D 6
.PP
E 6
I 6
.Pp
E 6
It may be useful to run
D 6
.I xstr
E 6
I 6
.Nm xstr
E 6
after the C preprocessor if any macro definitions yield strings
or if there is conditional code which contains strings
which may not, in fact, be needed.
D 6
.I Xstr
reads from its standard input when the argument `\-' is given.
E 6
An appropriate command sequence for running
D 6
.I xstr
E 6
I 6
.Nm xstr
E 6
after the C preprocessor is:
D 6
.PP
.nf
.DT
	\fBcc \-E\fR name.c | \fBxstr \-c\fR \-
	\fBcc \-c\fR x.c
	\fBmv\fR x.o name.o
.fi
.PP
.I Xstr
E 6
I 6
.Pp
.Bd -literal -offset indent -compact
cc \-E name.c | xstr \-c \-
cc \-c x.c
mv x.o name.o
.Ed
.Pp
.Nm Xstr
E 6
does not touch the file
D 6
.I strings
E 6
I 6
.Pa strings
E 6
unless new items are added, thus
D 6
.I make
E 6
I 6
.Xr make 1
E 6
can avoid remaking
D 6
.I xs.o
E 6
I 6
.Pa xs.o
E 6
unless truly necessary.
D 6
.SH FILES
.DT
strings		Data base of strings
.br
x.c		Massaged C source
.br
xs.c		C source for definition of array `xstr'
.br
/tmp/xs*	Temp file when `xstr name' doesn't touch
.I strings
.SH "SEE ALSO"
mkstr(1)
D 4
.SH AUTHOR
William Joy
E 4
.SH BUGS
E 6
I 6
.Sh FILES
.Bl -tag -width /tmp/xsxx* -compact
.It Pa strings
Data base of strings
.It Pa x.c
Massaged C source
.It Pa xs.c
C source for definition of array `xstr'
.It Pa /tmp/xs*
Temp file when `xstr name' doesn't touch
.Pa strings
.El
.Sh SEE ALSO
.Xr mkstr 1
.Sh BUGS
E 6
If a string is a suffix of another string in the data base,
but the shorter string is seen first by
D 6
.I xstr
E 6
I 6
.Nm xstr
E 6
both strings will be placed in the data base, when just
placing the longer one there will do.
I 6
.Sh HISTORY
The
.Nm
command appeared in
.Bx 3.0 .
E 6
E 1
