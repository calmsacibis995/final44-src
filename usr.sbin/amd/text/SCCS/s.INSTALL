h10383
s 00001/00001/00193
d D 8.2 95/04/28 14:18:29 bostic 7 6
c POSIX says that -s precedes init signal names
c From: Charles Hannum <mycroft@NetBSD.ORG>
e
s 00000/00000/00194
d D 8.1 93/06/06 12:09:15 bostic 6 5
c 4.4BSD snapshot (revision 8.1)
e
s 00006/00014/00188
d D 1.5 92/06/18 15:04:39 pendry 5 4
c code refresh
e
s 00001/00001/00201
d D 1.4 92/02/09 08:46:11 pendry 4 3
c merge in new release
e
s 00000/00000/00202
d D 1.3 91/05/12 16:00:24 pendry 3 2
c checkpoint for network tape
e
s 00076/00048/00126
d D 1.2 91/03/17 13:55:20 pendry 2 1
c from amd5.3 alpha11
e
s 00174/00000/00000
d D 1.1 91/03/17 11:16:11 pendry 1 0
c date and time created 91/03/17 11:16:11 by pendry
e
u
U
t
T
I 1
Installation Notes for Amd.

NOTE: Please read all of this before starting.
      It is not very long and may save you time in the long term.

1.  ``Getting started...''

D 2
If you got this release in a shar file then run the shell script Configure in
the top directory.  If you got this release in a tar file then you are all
set (though if you feel left out you can run Configure anyway).
E 2
I 2
If you don't know what an Automounter does for you then read the
documentation in doc/amdref.texinfo.  You can either use TeX to print
it out or read it directly using the GNU info package.
E 2

2.  ``Find out what version of UN*X you are running...''

D 2
To install Amd you need a port for your version of UN*X.  In this directory
are several files called os-*.h.  One of these should correspond to your
version of UN*X.  Look at the comments at the top of each file to determine
which one applies to you.  If none of them do, then either no-one has yet
done a port, or your version of UN*X is so braindead that a port is not
possible (e.g. System V without reliable signals).  Run the program
"config/os-type" in the current directory to see whether you and Amd are in
agreement about your operating system type.  The current known operating
systems (grouped by architecture) are:
E 2
I 2
To install Amd you need a port for your version of UN*X.  In the
config/ directory are several files called os-*.h.  One of these
should correspond to your version of UN*X.  Run the program
"config/os-type" to find out what system Amd thinks you have.  Check
the correspondong config/os-??? file to make sure that you and Amd are
in agreement.  If os-type returns "unknown" then either no-one has yet
done a port, or your version of UN*X is so braindead that a port is
not possible (e.g. System V without reliable signals).  The current
known operating systems (grouped by architecture) are:
E 2

	acis43			(AOS) ACIS 4.3BSD on an IBM RT
D 5
	aix3			AIX 3.1
E 5
I 5
	aix3			AIX 3.2
E 5
	aux			Apple A/UX
	bsd44			4.4 BSD on whatever
	concentrix		Concentrix on an Alliant
I 2
	dgux			Data General AViiON
E 2
	fpx4			Celerity FPX 4.1/2
	hlh42			4.2 BSD on HLH Orion 1/05
	hpux			HP-UX 6.* and 7.* on a HP9000/300
I 2
D 5
	irix			SGI Iris
E 5
I 5
	irix3			SGI Iris
	irix4			SGI Iris w/Irix 4.0.x
E 5
	next			NeXT
E 2
	riscix			4.3 BSD on an Acorn Archimedes
	sos3, sos4		SunOS 3.* and 4.* on a Sun-3 and Sun-4
	u2_2			Ultrix 2.2 (or 2.*?) on a VAX (broken)
D 2
	u3_0			Ultrix 3.0/4.0 (or 3.*?) on a VAX
E 2
I 2
D 5
	u3_0			Ultrix 3.0/4.0 (or 3.*?) on a VAX (broken)
E 5
I 5
	u3_0			Ultrix 3.0 (or 3.*?) on a VAX (broken)
	u4_2			Ultrix 4.2
E 5
E 2
	umax43			4.3 BSD on an Encore Multimax
D 2
	utx32			UTX/32 Rel2.1a on a Gould (not yet complete)
E 2
	xinu43			More/BSD (4.3 BSD) on a VAX or HP9000/300

	+ some others...

D 2
If you do define a new operating system type foo, you may care to create a
E 2
I 2
If you do define a new operating system type foo, you may need to create a
E 2
file called Makefile.foo which defines the special Makefile parameters.

3.  ``Hacking the Makefile...''

D 2
Some UN*X programs come with a Makefile which has to be manually configured
for your particular operating system and hardware.  However, Amd tries very
hard to determine what type of machine you are using and how best to compile
itself.  If this does not work then you will have to find some heuristic
which can differentiate your configuration.  You may need to edit
"config/arch" and "config/os-type".  If you do make sure your changes can
cope if /etc/motd is missing and please send it to the address below.
E 2
I 2
Amd tries very hard to determine what type of machine you are using
and how best to compile itself.  If this does not work then you will
have to find some heuristic which can differentiate your
configuration.  You may need to edit "config/arch" and
"config/os-type".  If you do make sure your changes can cope if
/etc/motd is missing and please send it to the address below.
E 2

I 2
To check whether things are working, run:
	sh config/arch
	sh config/os-type

E 2
You may care to tailor some site specific preferences in "Makefile.com".  The
D 2
variables most likely to be changes are at the top.  Any changes are best put
in the file Makefile.local (if they are applicable to all operating systems
at your site) or Makefile.local.foo (where foo is the OS type as determined
in part 1).
E 2
I 2
variables most likely to be changes are at the top.  Any changes should be
added to a file called config/Makefile.local (if they are applicable to all
operating systems at your site) or Makefile.local.foo (where foo is the OS type
as determined in part 2).
E 2

Additionally, some configuration options may be altered in
"config/Makefile.config".  This means that you should not need to edit any
distributed files apart from "config/Makefile.config".  As a minimum, you
should check:

* You are using the correct C compiler.  Amd, as shipped, does not use GCC.
  Note that using GCC version 1.34 or later (e.g. 1.36) gives structure
  passing problems with some parts of Sun's RPC library at least on Sun-4's.
  The current workaround is to use the system CC to compile the part of the
  automounter that gets hit by this problem.  [[This is not the same problem
  that is fixed by -fpcc-struct-return.]]  Amd contains no "register"
  declarations, so using old PCC based code generators is probably bad news.

I 2
  To use GNU CC, add the following to config/Makefile.local{.os-type}:

	CC = gcc ${GCCOPTS}

E 2
* The installation directory (ETC) is set up correctly.

* If you are running tests then it may be worth switching on the DEBUG flag
D 2
  which will cause a running commentary to be printed to the log file.
E 2
I 2
  which will cause a running commentary to be printed to the log file.  To
  compile in the debug code, add the following to
  config/Makefile.local{.os-type}:
E 2

I 2
	DEBUG = -DDEBUG
	CCOPTS = -g

  The -g option will also allow you to use gdb.  Using dbx is not advisable
  since it puts a breakpoint on exit() which causes all of Amd's child
  processes to dump core.  gdb does not suffer from this problem.

E 2
4.  ``Build the executable...''

Now you need to compile the automounter.  To do this you type:

	make

I 2
in the top-level directory.  You can also go into each of the program
directories and just run make there.

E 2
If you are porting to a new machine you may want to do:

	make OS=foo

where foo is the name of your version of UN*X as determined in part 1, until
you have made the changes to config/os-type and/or config/arch.  When the
D 2
compilation is complete you will end up with a program called "A.arch_foo/Amd".
E 2
I 2
compilation is complete you will end up with a program called "A.arch_foo/amd".
E 2

Try running:

	A.arch_foo/amd -v

and check the output.  It should look something like:

D 2
  amd 5.2 of 90/06/23 23:55:04 Rel5.2 #0: Sat Jun 23 16:24:42 PDT 1990
E 2
I 2
  Copyright (c) 1990 Jan-Simon Pendry
  Copyright (c) 1990 Imperial College of Science, Technology & Medicine
  Copyright (c) 1990 The Regents of the University of California.
  amd 5.2.1.5 of 90/09/16 13:22:46 5.3Alpha5 #0: Sun Sep 16 13:23:28 BST 1990
E 2
  Built by pendry@okeeffe.Berkeley.EDU for a tahoe running bsd44 (big-endian)
  Map support for: root, passwd, nis, file, error.
I 2
  fstypes: ufs, nfs, nfsx, host, link, program, auto, direct, toplvl, error.
E 2

Make sure the O/S and architecture types were correctly derived during the
build.

5.  ``Installation...''

If you are not just testing Amd, then you can install it by typing:

	make install

D 2
to install "A.arch_foo/Amd" in "/usr/local/etc/amd" (or as otherwise
modified in part 2).
E 2
I 2
to install "A.arch_foo/amd" in "/usr/local/etc/amd" (or as otherwise
modified in part 3).
E 2

6.  ``Update /etc/rpc''

Amq uses Sun RPC to talk to Amd using program number 300019 which has
been registered with Sun.  Add the following lines to /etc/rpc or your
YP or Hesiod master:

# Automount control protocol
amd	300019	amq

I 2
Amd does not require this addition - it just keeps rpcinfo happy.

E 2
7.  ``Hanging your machine...''

WARNING:  THIS MAY HANG YOUR MACHINE IF YOU GET IT WRONG.

Running Amd with a carelessly thought out mount map can cause your Amd to
enter a deadlock inside the kernel.  For example, attempting to automount a
D 2
directory which is automounted can cause the automounter to issue a mount
E 2
I 2
directory which is automounted.  This will cause the automounter to issue a mount
E 2
request causing the kernel to send an NFS request back to the same automounter,
which is currently stuck in a system call and unable to respond - even
D 7
kill -KILL won't get you out of this one.
E 7
I 7
kill -s KILL won't get you out of this one.
E 7

There is nothing you can do to fix it without rebooting your machine, so...

Find a diskless workstation and play with that first before trying this on
your main 200 user service machine (unless you hate your users).  Something
like a diskless Sun-4 is best for development testing - you can compile on a
Sun-4 server and run the binary on the diskless node.  They reboot very fast
as well between tests.

Now you can try running Amd.  Please read the documentation in doc/Amd.tex
D 2
for more details.  The configuration file "a_master" provides a sample for
E 2
I 2
for more details.  The configuration file "maps/a_master" provides a sample for
E 2
you to play with.  Something like:

D 2
	./amd -c 40 -D test,nodaemon /tmp/amnt a_master &
E 2
I 2
	./amd -c 40 -D test,nodaemon /tmp/amnt ../maps/a_master &
E 2

is good for testing.  Note that Amd will clean up correctly if you send it a
SIGINT or SIGTERM.  Other signals are either ignored or will blow it away,
D 2
leaving your machine in a potentially dangerous state - usually a reboot is
all that is required to fix it though ;-)
E 2
I 2
leaving your machine in a potentially dangerous state.
E 2

D 2
Remember that Amd needs to run as root in order to do mounts/unmounts though
it does check this condition somewhere near line one of main().  It will also
need write permission in the working directory if you have built it with
DEBUG defined.  Watch out for NFS stepping in and mapping root to nobody.
E 2
I 2
Remember that Amd needs to run as root in order to do mounts/unmounts
though it does check this condition somewhere near line one of main().
It will also need write permission in the working directory if you
have built it with DEBUG defined and your system's mount table is
reflected in a file.  In this case watch out for NFS stepping in and
mapping root to nobody.
E 2

8.  ``Report what happened...''

If anything interesting happened, eg it didn't work, please report it to me
-- Jan-Simon Pendry <jsp@doc.ic.ac.uk> -- as detailed in the README file.

D 5
KNOWN PROBLEMS - Contact me for more details

D 2
* Amd does not work correctly on a DecStation 3100 system running Ultrix 3.1.
  This is a bug in Ultrix.  Quite how the Ultrix mount command works is a
  total mystery, but in any case the mount system call does not behave as
  documented.  Possibly fixed in Ultrix 4.0?
E 2
I 2
* Amd does not work correctly on a DecStation 3100 system running
  Ultrix 3.1 or 4.0.  This is a bug in Ultrix.  This is caused by a data structure
  size problem in the Ultrix kernel.  Last I heard, this was still not fixed in
  Ultrix 4.0.  Patches are available for anonymous ftp from dip.cs.wisc.edu:
     pub/nfs_subr.o-3.1  (For Ultrix 3.1 -- probably breaks with 3.1C/D)
     pub/nfs_subr.o-4.0  (For Ultrix 4.0, rev 179)
  Thanks to Bruce Cole <cole@cs.wisc.edu> for making them available.
E 2

D 2
* It is reported that amd deadlocks the kernel on a Sequent Symmetry.
  Obviously this is a kernel bug.

$Id: INSTALL,v 5.2 90/06/23 22:21:31 jsp Rel $
E 2
I 2
D 4
$Id: INSTALL,v 5.2.1.3 91/03/03 21:25:18 jsp Alpha $
E 4
I 4
$Id: INSTALL,v 5.2.2.1 1992/02/09 15:11:34 jsp beta $
E 5
I 5
$Id: INSTALL,v 5.2.2.2 1992/05/31 16:49:22 jsp Exp $
E 5
E 4
E 2
E 1
