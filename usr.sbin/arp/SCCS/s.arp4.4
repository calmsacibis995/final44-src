h08125
s 00064/00056/00034
d D 6.5 94/04/18 16:41:07 bostic 6 5
c use mandoc macros for arp.4, update the Makefil to install it
e
s 00054/00094/00036
d D 6.4 94/04/18 15:22:27 bostic 5 4
c This man page got lost in the "move to local directories" shuffle
c Bring it back, Mike Karels reworked it for 4.4BSD
e
s 00017/00005/00113
d D 6.3 88/09/19 21:07:43 bostic 4 3
c Berkeley copyright
e
s 00042/00019/00076
d D 6.2 86/05/15 17:55:38 karels 3 2
c trailer negotiation and formatting
e
s 00069/00011/00026
d D 6.1 85/05/15 17:39:08 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00037/00000/00000
d D 5.1 85/05/15 17:37:18 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 4
I 4
D 5
.\" Copyright (c) 1985 The Regents of the University of California.
.\" All rights reserved.
E 5
I 5
.\" Copyright (c) 1985, 1986, 1988, 1994
.\"	The Regents of the University of California.  All rights reserved.
E 5
E 4
.\"
I 4
D 5
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 5
I 5
.\" %sccs.include.redist.roff%
E 5
.\"
E 4
.\"	%W% (Berkeley) %G%
.\"
D 2
.TH ARP 4P "18 July 1983"
E 2
I 2
D 4
.TH ARP 4P "%Q%"
E 4
I 4
D 5
.TH <PROGNAME> <SECTION> "%Q%"
E 5
D 6
.TH ARP 4 "%Q%"
E 4
E 2
.UC 5
.SH NAME
arp \- Address Resolution Protocol
.SH SYNOPSIS
D 2
.B pseudo-device ether
E 2
I 2
.B "pseudo-device ether"
E 2
.SH DESCRIPTION
D 5
ARP is a protocol used to dynamically map between DARPA Internet
E 5
I 5
The Address Resolution Protocol
(ARP) is a protocol used to dynamically map between Internet host addresses
E 5
D 2
and 10Mb/s Ethernet addresses on a local area network.  It is
used by all the 10Mb/s Ethernet interface drivers and is not
directly accessible to users.
E 2
I 2
and 10Mb/s Ethernet addresses.  It is
used by all the 10Mb/s Ethernet interface drivers.
E 6
I 6
.Dd %Q%
.Dt ARP 4
.Os BSD 4
.Sh NAME
.Nm arp
.Nd Address Resolution Protocol
.Sh SYNOPSIS
.Em "pseudo-device ether"
.Sh DESCRIPTION
The Address Resolution Protocol (ARP) is a protocol used to dynamically
map between Internet host addresses and 10Mb/s Ethernet addresses.
It is used by all the 10Mb/s Ethernet interface drivers.
E 6
I 3
It is not specific to Internet protocols or to 10Mb/s Ethernet,
but this implementation currently supports only that combination.
E 3
E 2
D 6
.PP
ARP caches Internet-Ethernet address mappings.  When an interface
requests a mapping for an address not in the cache, ARP queues the
message which requires the mapping and broadcasts
E 6
I 6
.Pp
ARP caches Internet-Ethernet address mappings. 
When an interface requests a mapping for an address not in the cache,
ARP queues the message which requires the mapping and broadcasts
E 6
a message on the associated network requesting the address mapping.
If a response is provided, the new mapping is cached and any pending
D 2
messages are transmitted.  ARP itself is not Internet or Ethernet
specific; this implementation, however, is.  ARP will queue
E 2
I 2
D 3
messages are transmitted.
E 3
I 3
message is transmitted.
E 3
D 6
ARP will queue
E 2
D 5
at most one packet while waiting for a mapping request to be responded to;
E 5
I 5
at most one packet while waiting for a response to a mapping request;
E 6
I 6
ARP will queue at most one packet while waiting for a response to a
mapping request;
E 6
E 5
only the most recently ``transmitted'' packet is kept.
I 5
If the target host does not respond after several requests,
the host is considered to be down for a short period (normally 20 seconds),
D 6
allowing an error to be returned to transmission attempts
during this interval.
E 6
I 6
allowing an error to be returned to transmission attempts during this
interval.
E 6
The error is
.Li EHOSTDOWN
for a non-responding destination host, and
.Li EHOSTUNREACH
for a non-responding router.
E 5
D 6
.PP
I 2
D 3
To enable communications with systems which do not use ARP, ioctls
E 3
I 3
D 5
To facilitate communications with systems which do not use ARP,
.IR ioctl \^s
E 3
are provided to enter and delete entries in the Internet-to-Ethernet tables.
Usage:
.LP
.nf
.ft B
	#include <sys/ioctl.h>
	#include <sys/socket.h>
	#include <net/if.h>
	struct arpreq arpreq;

	ioctl(s, SIOCSARP, (caddr_t)&arpreq);
	ioctl(s, SIOCGARP, (caddr_t)&arpreq);
	ioctl(s, SIOCDARP, (caddr_t)&arpreq);
.fi
.ft R
Each ioctl takes the same structure as an argument.
SIOCSARP sets an ARP entry, SIOCGARP gets an ARP entry, and SIOCDARP
deletes an ARP entry.  These ioctls may be applied to any socket descriptor
.I s,
but only by the super-user.
The
.I arpreq
structure contains:
.LP
I 3
.RS
.ta \w'#define\ \ 'u +\w'ATF_USETRAILERS\ \ 'u +\w'0x08\ \ \ \  'u
E 3
.nf
D 3
	/*
	 * ARP ioctl request
	 */
	struct arpreq {
		struct sockaddr	arp_pa;		/* protocol address */
		struct sockaddr	arp_ha;		/* hardware address */
		int	arp_flags;		/* flags */
	};
	/*  arp_flags field values */
	#define ATF_COM		2	/* completed entry (arp_ha valid) */
	#define	ATF_PERM	4	/* permanent entry */
	#define	ATF_PUBL	8	/* publish (respond for other host) */
E 3
I 3
/*
 * ARP ioctl request
 */
struct arpreq {
	struct sockaddr	arp_pa;		/* protocol address */
	struct sockaddr	arp_ha;		/* hardware address */
	int	arp_flags;		/* flags */
};
/*  arp_flags field values */
#define ATF_COM		0x02	/* completed entry (arp_ha valid) */
#define	ATF_PERM	0x04	/* permanent entry */
#define	ATF_PUBL	0x08	/* publish (respond for other host) */
#define	ATF_USETRAILERS	0x10	/* send trailer packets to host */
E 3
.fi
I 3
.RE
E 3
.LP
The address family for the
.I arp_pa
sockaddr must be AF_INET; for the 
.I arp_ha
sockaddr it must be AF_UNSPEC.
D 3
The only flag bits which may be written are ATF_PERM and ATF_PUBL.
E 3
I 3
The only flag bits which may be written are ATF_PERM, ATF_PUBL
and ATF_USETRAILERS.
E 3
ATF_PERM causes the entry to be permanent if the ioctl call succeeds.
The peculiar nature of the ARP tables may cause the ioctl to fail if more
D 3
than 4 (permanent) Internet host addresses hash to the same slot.
E 3
I 3
than 8 (permanent) Internet host addresses hash to the same slot.
E 3
ATF_PUBL specifies that the ARP code should respond to ARP requests for the
indicated host coming from other machines.  This allows a host to act as an
D 3
"ARP server" which may be useful in convincing an ARP-only machine to talk
E 3
I 3
``ARP server,'' which may be useful in convincing an ARP-only machine to talk
E 3
to a non-ARP machine.
E 5
I 5
The ARP cache is stored in the system routing table
as dynamically-created host routes.
The route to a directly-attached Ethernet network is installed
as a
.\"XXX want macro for "quoted string"
.quote cloning
route
(one with the
E 6
I 6
.Pp
The ARP cache is stored in the system routing table as
dynamically-created host routes.
The route to a directly-attached Ethernet network is installed as a
.Dq cloning
route (one with the
E 6
.Li RTF_CLONING
flag set),
D 6
causing routes to individual hosts on that network to be created on demand.
These routes time out periodically (normally 20 minutes after
validated; entries are not validated when not in use).
E 6
I 6
causing routes to individual hosts on that network to be created on
demand.
These routes time out periodically (normally 20 minutes after validated;
entries are not validated when not in use).
E 6
An entry for a host which is not responding is a
D 6
.\"XXX want macro for "quoted string"
.quote reject
route
(one with the
E 6
I 6
.Dq reject
route (one with the
E 6
.Li RTF_REJECT
flag set).
E 5
D 6
.PP
I 3
D 5
ARP is also used to negotiate the use of trailer IP encapsulations;
trailers are an alternate encapsulation used to allow efficient packet
alignment for large packets despite variable-sized headers.
Hosts which wish to receive trailer encapsulations so indicate
by sending gratuitous ARP translation replies along with replies
to IP requests; they are also sent in reply to IP translation replies.
The negotiation is thus fully symmetrical, in that either or both hosts
may request trailers.
The ATF_USETRAILERS flag is used to record the receipt of such a reply,
and enables the transmission of trailer packets to that host.
E 5
I 5
ARP entries may be added, deleted or changed with
.Xr arp 8 .
E 6
I 6
.Pp
ARP entries may be added, deleted or changed with the
.Xr arp 8
utility.
E 6
Manually-added entries may be temporary or permanent,
and may be
D 6
.\" XXX
.quote published ,
E 6
I 6
.Dq published ,
E 6
in which case the system will respond to ARP requests for that host
as if it were the target of the request.
E 5
D 6
.PP
I 5
In the past, ARP was used to negotiate the use of a trailer encapsulation.
E 6
I 6
.Pp
In the past,
ARP was used to negotiate the use of a trailer encapsulation.
E 6
This is no longer supported.
D 6
.PP
E 6
I 6
.Pp
E 6
E 5
E 3
E 2
ARP watches passively for hosts impersonating the local host (i.e. a host
D 2
which responds to an ARP mapping request for the local host's address)
and will, optionally, periodically probe a network looking for impostors.
E 2
I 2
which responds to an ARP mapping request for the local host's address).
E 2
D 6
.SH DIAGNOSTICS
D 2
.B "duplicate IP address!! sent from ethernet address: %x %x %x %x %x %x".
E 2
I 2
D 5
.B "duplicate IP address!! sent from ethernet address: %x:%x:%x:%x:%x:%x."
E 5
I 5
.B "duplicate IP address %x!! sent from ethernet address: %x:%x:%x:%x:%x:%x."
E 6
I 6
.Sh DIAGNOSTICS
.Em "duplicate IP address %x!! sent from ethernet address: %x:%x:%x:%x:%x:%x."
E 6
E 5
E 2
ARP has discovered another host on the local network which responds to
D 5
mapping requests for its own Internet address.
E 5
I 5
D 6
mapping requests for its own Internet address with a different
Ethernet address, generally indicating that two hosts are attempting
to use the same Internet address.
E 5
.SH SEE ALSO
D 2
ec(4), il(4)
E 2
I 2
D 4
ec(4), de(4), il(4), inet(4F), arp(8C), ifconfig(8C)
E 4
I 4
D 5
ec(4), de(4), il(4), inet(4), arp(8), ifconfig(8)
E 5
I 5
inet(4), route(4), arp(8), ifconfig(8), route(8)
E 5
E 4
.br
D 3
An Ethernet Address Resolution Protocol, RFC826, Dave Plummer, MIT.
E 3
I 3
``An Ethernet Address Resolution Protocol,'' RFC826, Dave Plummer,
D 5
Network Information Center, SRI.
E 5
I 5
Network Information Center.
E 5
.br
``Trailer Encapsulations,'' RFC893, S.J. Leffler and M.J. Karels,
D 5
Network Information Center, SRI.
E 3
.SH BUGS
D 3
ARP packets on the Ethernet use only 42 bytes of data, however, the smallest
E 3
I 3
ARP packets on the Ethernet use only 42 bytes of data; however, the smallest
E 3
legal Ethernet packet is 60 bytes (not including CRC).
Some systems may not enforce the minimum packet size, others will.
E 5
I 5
Network Information Center.
E 6
I 6
mapping requests for its own Internet address with a different Ethernet
address, generally indicating that two hosts are attempting to use the
same Internet address.
.Sh SEE ALSO
.Xr inet 4 ,
.Xr route 4 ,
.Xr arp 8 ,
.Xr ifconfig 8 ,
.Xr route 8
.sp
.Rs
.%A Plummer, D.
.%B "An Ethernet Address Resolution Protocol"
.%T RFC826
.Re
.Rs
.%A Leffler, S.J.
.%A Karels, M.J.
.%B "Trailer Encapsulations
.%T RFC893
.Re
E 6

E 5
E 2
E 1
