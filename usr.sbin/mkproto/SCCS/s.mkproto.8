h64783
s 00002/00002/00118
d D 8.1 93/06/06 14:02:39 bostic 5 4
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00052/00047/00068
d D 6.3 91/03/16 18:12:55 cael 4 3
c macro and text revision (-mdoc version 3)
e
s 00001/00001/00114
d D 6.2 90/06/24 22:26:58 trent 3 2
c new pathname (mkproto)
e
s 00001/00001/00114
d D 6.1 85/04/27 15:36:14 mckusick 2 1
c 4.3BSD beta release manual page
e
s 00115/00000/00000
d D 5.1 85/04/27 15:35:45 mckusick 1 0
c manual page first distributed with 4.2BSD
e
u
U
t
T
I 1
D 4
.\" Copyright (c) 1983 Regents of the University of California.
.\" All rights reserved.  The Berkeley software License Agreement
.\" specifies the terms and conditions for redistribution.
E 4
I 4
D 5
.\" Copyright (c) 1983, 1991 Regents of the University of California.
.\" All rights reserved.
E 5
I 5
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 5
E 4
.\"
D 4
.\"	%W% (Berkeley) %G%
E 4
I 4
.\" %sccs.include.redist.man%
E 4
.\"
D 2
.TH MKPROTO 8 "10 May 1982"
E 2
I 2
D 4
.TH MKPROTO 8 "%Q%"
E 2
.UC 5
.SH NAME
mkproto \- construct a prototype file system
.SH SYNOPSIS
D 3
.B /etc/mkproto
E 3
I 3
.B mkproto
E 3
special proto
.SH DESCRIPTION
.I Mkproto
E 4
I 4
.\"     %W% (Berkeley) %G%
.\"
.Dd %Q%
.Dt MKPROTO 8
.Os BSD 4.2
.Sh NAME
.Nm mkproto
.Nd construct a prototype file system
.Sh SYNOPSIS
.Nm mkproto
.Ar special proto
.Sh DESCRIPTION
.Nm Mkproto
E 4
is used to bootstrap a new file system.
First a new file system is created using
D 4
.IR newfs (8).
.I Mkproto 
E 4
I 4
.Xr newfs 8 .
.Nm Mkproto
E 4
is then used to copy files from the old file system into the new
file system according to the directions found in the prototype file
D 4
.I proto.
E 4
I 4
.Ar proto .
E 4
The prototype file
contains tokens separated by spaces or
new lines.
The first tokens comprise the specification
for the root directory.
File specifications consist of tokens
giving the mode,
the user-id,
the group id,
and the initial contents of the file.
The syntax of the contents field
depends on the mode.
D 4
.PP
E 4
I 4
.Pp
E 4
The mode token for a file is a 6 character string.
The first character
specifies the type of the file.
(The characters
D 4
.B \-bcd
E 4
I 4
.Fl bcd
E 4
specify regular, block special,
character special and directory files
respectively.)
The second character of the type
is either
D 4
.B u
E 4
I 4
.Cm u
E 4
or
D 4
.B \-
E 4
I 4
.Ql Fl
E 4
to specify set-user-id mode or not.
The third is
D 4
.B g
E 4
I 4
.Cm g
E 4
or
D 4
.B \-
E 4
I 4
.Ql Fl
E 4
for the set-group-id mode.
The rest of the mode
is a three digit octal number giving the
owner, group, and other read, write, execute
permissions, see
D 4
.IR chmod (1).
.PP
E 4
I 4
.Xr chmod 1 .
.Pp
E 4
Two decimal number
tokens come after the mode; they specify the
user and group ID's of the owner of the file.
D 4
.PP
E 4
I 4
.Pp
E 4
If the file is a regular file,
the next token is a pathname
whence the contents and size are copied.
D 4
.PP
E 4
I 4
.Pp
E 4
If the file is a block or character special file,
two decimal number tokens
follow which give the major and minor device numbers.
D 4
.PP
E 4
I 4
.Pp
E 4
If the file is a directory,
D 4
.I mkproto
E 4
I 4
.Nm mkproto
E 4
makes the entries
D 4
.BR . ""
E 4
I 4
.Ql \&.
E 4
and
D 4
.B  ..
E 4
I 4
.Ql \&..
E 4
and then
reads a list of names and
(recursively)
file specifications for the entries
in the directory.
The scan is terminated with the
token
D 4
.BR $ .
.PP
E 4
I 4
.Cm $ .
.Pp
E 4
A sample prototype specification follows:
D 4
.PP
.nf
.in +5
E 4
I 4
.Bd -literal -offset indent
E 4
d\-\-777 3 1
usr	d\-\-777 3 1
	sh	\-\-\-755 3 1 /bin/sh
	ken	d\-\-755 6 1
		$
	b0	b\-\-644 3 1 0 0
	c0	c\-\-644 3 1 0 0
	$
$
D 4
.in -5
.fi
.dt
.SH "SEE ALSO"
fs(5),
dir(5),
fsck(8),
newfs(8)
.SH BUGS
E 4
I 4
.Ed
.Sh SEE ALSO
.Xr fs 5 ,
.Xr dir 5 ,
.Xr fsck 8 ,
.Xr newfs 8
.Sh BUGS
E 4
There should be some way to specify links.
D 4
.PP
E 4
I 4
.Pp
E 4
There should be some way to specify bad blocks.
D 4
.PP
Mkproto can only be run on virgin file systems.
E 4
I 4
.Pp
.Nm Mkproto
can only be run on virgin file systems.
E 4
It should be possible to copy files into existent file systems.
I 4
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.2 .
E 4
E 1
