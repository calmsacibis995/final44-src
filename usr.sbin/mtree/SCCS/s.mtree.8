h33633
s 00001/00001/00222
d D 8.2 93/12/11 23:44:43 mckusick 15 14
c copyediting for Usenix manuals
e
s 00002/00002/00221
d D 8.1 93/06/06 14:03:06 bostic 14 13
c 4.4BSD snapshot (revision 8.1); add 1993 to copyright
e
s 00098/00076/00125
d D 5.11 91/12/11 17:56:14 bostic 13 12
c version 2; add cksum, make keywords flexible, new output format
e
s 00002/00002/00199
d D 5.10 91/07/30 18:19:51 cael 12 11
c pretty-up the lists
e
s 00045/00043/00156
d D 5.9 91/05/31 17:23:04 cael 11 9
c version three mdoc
e
s 00045/00043/00156
d R 5.9 91/05/31 17:15:35 cael 10 9
c version three mdoc
e
s 00003/00001/00196
d D 5.8 91/03/14 00:30:21 cael 9 7
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00001/00000/00197
d R 5.8 91/03/13 20:39:38 cael 8 7
c add .Vx so tmac.andoc will call tmac.mdoc-old
e
s 00002/00004/00195
d D 5.7 90/07/24 22:49:08 cael 7 6
c .Xr botch fix
e
s 00098/00102/00101
d D 5.6 90/06/11 05:57:32 cael 6 5
c converted man page
e
s 00007/00000/00196
d D 5.5 90/05/25 16:50:47 bostic 5 4
c add modification time keyword
e
s 00129/00164/00067
d D 5.4 90/05/25 13:53:15 bostic 4 3
c new version, lots of changes
e
s 00010/00007/00221
d D 5.3 89/09/19 09:58:32 bostic 3 2
c use .IP, not tables
e
s 00060/00045/00168
d D 5.2 89/09/05 12:20:48 bostic 2 1
c minor reformatting, couple of typos
e
s 00213/00000/00000
d D 5.1 89/09/04 16:24:52 bostic 1 0
c date and time created 89/09/04 16:24:52 by bostic
e
u
U
t
T
I 1
D 6
.\" Copyright (c) 1989 The Regents of the University of California.
E 6
I 6
D 14
.\" Copyright (c) 1989, 1990 The Regents of the University of California.
E 6
.\" All rights reserved.
E 14
I 14
.\" Copyright (c) 1989, 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
E 14
.\"
D 4
.\" Redistribution and use in source and binary forms are permitted
.\" provided that the above copyright notice and this paragraph are
.\" duplicated in all such forms and that any documentation,
.\" advertising materials, and other materials related to such
.\" distribution and use acknowledge that the software was developed
.\" by the University of California, Berkeley.  The name of the
.\" University may not be used to endorse or promote products derived
.\" from this software without specific prior written permission.
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
E 4
I 4
D 11
.\" %sccs.include.redist.man%
E 11
I 11
.\" %sccs.include.redist.roff%
E 11
E 4
.\"
D 6
.\"	%W% (Berkeley) %G%
E 6
I 6
.\"     %W% (Berkeley) %G%
E 6
.\"
I 9
D 11
.Vx
.Vx
E 11
E 9
D 6
.TH MTREE 8 "%Q%"
.UC 7
.SH NAME
mtree \- map a directory hierarchy
.SH SYNOPSIS
D 4
.B mtree
[
.B \-cderux
] [
.B \-f
spec ] [
.B \-p
path ]
E 4
I 4
.nf
.ft B
mtree [ \-cderux ] [ \-f spec ] [ \-p path ]
.ft R
.fi
E 4
.SH DESCRIPTION
.I Mtree
E 6
I 6
.Dd %Q%
.Dt MTREE 8
D 9
.Os BSD 4.4
E 9
I 9
.Os
E 9
.Sh NAME
.Nm mtree
.Nd map a directory hierarchy
.Sh SYNOPSIS
.Nm mtree
.Op Fl cderux
.Op Fl f Ar spec
I 13
.Op Fl K Ar keywords
.Op Fl k Ar keywords
E 13
.Op Fl p Ar path
I 13
.Op Fl s Ar seed
E 13
.Sh DESCRIPTION
D 11
.Nm Mtree
E 11
I 11
The utility
.Nm mtree
E 11
E 6
D 4
maps a directory hierarchy, or tree, to a specification.
The
specification is read from the standard input by default, or from
the file
.I spec
if the
D 2
.I -f
E 2
I 2
.I \-f
E 2
option is provided.
E 4
I 4
D 13
compares a directory hierarchy against a specification for a
directory hierarchy.
By default, the specification is read from the standard input.
E 4
D 6
.I Mtree
E 6
I 6
.Nm Mtree
E 6
D 4
then walks the tree specified by the
D 2
.I -p
E 2
I 2
.I \-p
E 2
option, or by default, the tree rooted in the current directory, and
verifies that the tree matches the specification.
Messages are written to standard output for any nodes which exist
only in the specification or the tree and for any nodes whose
characteristics do not match those of the specification.
E 4
I 4
verifies that the tree rooted in the current directory matches the
specification.
E 13
I 13
compares the file hierarchy rooted in the current directory against a
specification read from the standard input.
Messages are written to the standard output for any files whose
D 15
characteristics do not match the specification's, or which are
E 15
I 15
characteristics do not match the specifications, or which are
E 15
missing from either the file hierarchy or the specification.
E 13
E 4
D 6
.PP
E 6
I 6
.Pp
E 6
I 4
D 13
Messages are written to standard output for any files whose
characteristics do not match those of the specification, or which are
missing from either the specification or the tree.
D 6
.PP
E 6
I 6
.Pp
E 13
E 6
E 4
The options are as follows:
D 6
.TP
D 2
-c
E 2
I 2
\-c
E 6
I 6
D 11
.Tp Fl c
E 11
I 11
D 12
.Bl -tag -width Fl c
E 12
I 12
.Bl -tag -width flag
E 12
.It Fl c
E 11
E 6
E 2
D 4
Print to standard output a specification for the tree.
E 4
I 4
D 13
Print a specification for the tree to standard output.
E 13
I 13
Print a specification for the file hierarchy to the standard output.
E 13
E 4
D 6
.TP
D 2
-d
E 2
I 2
\-d
E 6
I 6
D 11
.Tp Fl d
E 11
I 11
.It Fl d
E 11
E 6
E 2
D 4
Ignore everything except directory type nodes.
E 4
I 4
Ignore everything except directory type files.
E 4
D 6
.TP
D 2
-e
E 2
I 2
\-e
E 6
I 6
D 11
.Tp Fl e
E 11
I 11
.It Fl e
E 11
E 6
E 2
D 4
Stops
.I mtree
from objecting to nodes that are in the tree but not in the
specification.
E 4
I 4
D 13
Don't object to files that are in the tree but not in the specification.
E 13
I 13
Don't complain about files that are in the file hierarchy, but not in the
specification.
E 13
E 4
D 6
.TP
I 4
\-f
E 6
I 6
D 11
.Tp Fl f
E 11
I 11
.It Fl f
E 11
E 6
Read the specification from
D 6
.IR file ,
E 6
I 6
.Ar file  ,
E 6
D 13
instead of from standard input.
E 13
I 13
instead of from the standard input.
.It Fl K
Add the specified (whitespace or comma separated) keywords to the current
set of keywords.
.It Fl k
Use the ``type'' keyword plus the specified (whitespace or comma separated)
keywords instead of the current set of keywords.
E 13
D 6
.TP
\-p
E 6
I 6
D 11
.Tp Fl p
E 11
I 11
.It Fl p
E 11
E 6
D 13
Traverse the tree rooted in
E 13
I 13
Use the file hierarchy rooted in
E 13
D 6
.IR path ,
E 6
I 6
.Ar path  ,
E 6
instead of the current directory.
D 6
.TP
E 4
D 2
-r
E 2
I 2
\-r
E 6
I 6
D 11
.Tp Fl r
E 11
I 11
.It Fl r
E 11
E 6
E 2
D 4
Remove any nodes in the tree that are not described in the
E 4
I 4
D 13
Remove any files in the tree that are not described in the
E 13
I 13
Remove any files in the file hierarchy that are not described in the
E 13
E 4
specification.
I 13
.It Fl s
Display a single checksum to the standard error output that represents all
of the files for which the keyword
.Cm cksum
was specified.
The checksum is seeded with the specified value.
E 13
D 6
.TP
D 2
-u
E 2
I 2
\-u
E 6
I 6
D 11
.Tp Fl u
E 11
I 11
.It Fl u
E 11
E 6
E 2
D 4
The
D 2
.I -u
E 2
I 2
.I \-u
E 2
option causes
.I mtree
to modify the owner, group, and permissions of existing nodes to
match the specification.
Missing directories are also created.
E 4
I 4
Modify the owner, group, and permissions of existing files to match
D 13
the specification, as well as create any missing directories.
Owner, group, and permissions must all be specified for missing
directories to be created.
E 13
I 13
the specification and create any missing directories.
User, group, and permissions must all be specified for missing directories
to be created.
E 13
E 4
D 6
.TP
D 2
-x
E 2
I 2
\-x
E 6
I 6
D 11
.Tp Fl x
E 11
I 11
.It Fl x
E 11
E 6
E 2
D 4
Don't traverse any mount points when creating a specification.
E 4
I 4
D 13
Don't descend below any mount points.
E 13
I 13
Don't descend below mount points in the file hierarchy.
E 13
E 4
D 6
.PP
E 6
I 6
D 11
.Tp
E 11
I 11
.El
E 11
.Pp
E 6
D 4
Specifications consist of ``keywords'', i.e. special strings that specify
values relating to nodes.
E 4
I 4
Specifications are mostly composed of ``keywords'', i.e. strings that
that specify values relating to files.
E 4
D 13
No keywords have default values, and if a keyword has no set value no
E 13
I 13
No keywords have default values, and if a keyword has no value set, no
E 13
D 4
checks on it are performed.
The only keyword which
.B must
D 2
be set is ``type''.
E 2
I 2
be set is
.BR type .
E 4
I 4
checks based on it are performed.
D 6
.PP
E 6
I 6
.Pp
E 6
E 4
E 2
Currently supported keywords are as follows:
D 6
.TP
D 2
cksum
E 2
I 2
.B cksum
E 6
I 6
D 11
.Tw Cm
.Tp Cm cksum
E 11
I 11
.Bl -tag -width Cm
.It Cm cksum
E 11
E 6
E 2
D 13
The checksum of the file using the algorithm specified by
the program
D 6
.IR cksum (1).
D 2
Ignored for any nodes other than type file.
E 2
I 2
D 4
Ignored for any nodes other than type
.BR file .
E 4
E 2
.TP
D 2
dmode
E 2
I 2
D 4
.B dmode
E 2
The directory type node's permissions as an octal value.
This keyword may only be used globally, i.e. not as part of a node
specification line.
E 4
I 4
.B ignore
E 6
I 6
.Xr cksum  1  .
E 13
I 13
The checksum of the file using the default algorithm specified by
the
.Xr cksum 1
utility.
E 13
D 11
.Tp Cm ignore
E 11
I 11
.It Cm ignore
E 11
E 6
D 13
Causes the hierarchy below the file to be ignored.
E 4
D 6
.TP
D 2
fmode
E 2
I 2
D 4
.B fmode
E 2
The file type node's permissions as an octal value.
This keyword may only be used globally, i.e. not as part of a node
specification line.
.TP
E 4
D 2
group
E 2
I 2
.B group
E 6
I 6
D 11
.Tp Cm group
E 11
I 11
.It Cm group
E 11
E 6
E 2
D 4
The group of the node; may be either numeric or symbolic.
E 4
I 4
The group of the file; may be either numeric or symbolic.
E 13
I 13
Ignore any file hierarchy below this file.
.It Cm gid
The file group as a numeric value.
.It Cm gname
The file group as a symbolic name.
E 13
E 4
D 6
.TP
D 2
mode
E 2
I 2
.B mode
E 6
I 6
D 11
.Tp Cm mode
E 11
I 11
.It Cm mode
E 11
E 6
E 2
D 4
The current node's permissions as an octal value.
This keyword may only be used locally, i.e. not for setting a value
to be retained for future node specifications.
E 4
I 4
D 13
The current file's permissions as an absolute (octal) or symbolic
value (see
D 6
.IR chmod (1)).
E 4
.TP
D 2
nlink
E 2
I 2
.B nlink
E 6
I 6
.Xr chmod  1  ) .
E 13
I 13
The current file's permissions as a numeric (octal) or symbolic
value.
E 13
D 11
.Tp Cm nlink
E 11
I 11
.It Cm nlink
E 11
E 6
E 2
D 4
The number of hard links the node is expected to have.
D 2
Ignored for nodes of type directory.
E 2
I 2
Ignored for nodes of type
.BR directory .
E 4
I 4
The number of hard links the file is expected to have.
E 4
E 2
D 6
.TP
D 2
owner
E 2
I 2
.B owner
E 6
I 6
D 11
.Tp Cm owner
E 11
I 11
D 13
.It Cm owner
E 11
E 6
E 2
D 4
The owner of the node; may be either numeric or symbolic.
E 4
I 4
The owner of the file; may be either numeric or symbolic.
E 13
I 13
.It Cm uid
The file owner as a numeric value.
.It Cm uname
The file group as a symbolic name.
E 13
E 4
D 6
.TP
D 2
size
E 2
I 2
.B size
E 6
I 6
D 11
.Tp Cm size
E 11
I 11
.It Cm size
E 11
E 6
E 2
D 4
The size, in bytes, of the node.
D 2
Ignored for any nodes other than type file.
E 2
I 2
Ignored for any nodes other than type
.BR file .
E 4
I 4
The size, in bytes, of the file.
E 4
E 2
D 6
.TP
D 2
slink
E 2
I 2
D 4
.B slink
E 4
I 4
.B link
E 6
I 6
D 11
.Tp Cm link
E 11
I 11
.It Cm link
E 11
E 6
E 4
E 2
D 13
The file a symbolic link is expected to reference.
E 13
I 13
The file the symbolic link is expected to reference.
E 13
I 2
D 4
Ignored for any nodes other than type
.BR link .
E 4
E 2
D 6
.TP
I 5
.B time
E 6
I 6
D 11
.Tp Cm time
E 11
I 11
.It Cm time
E 11
E 6
The last modification time of the file.
D 6
.TP
E 5
D 2
type
E 2
I 2
.B type
E 6
I 6
D 11
.Tp Cm type
E 11
I 11
.It Cm type
E 11
E 6
E 2
D 4
The type of the node; may be set to one of the following:
D 3
.TS
l l.
E 3
I 3
.IP
E 3
D 2
block	block special device
char	character special device
dir	directory
file	regular file
link	symbolic link
socket	socket
E 2
I 2
\fBblock\fP	block special device
D 3
\fBchar\fP	character special device
\fBdir\fP	directory
\fBfile\fP	regular file
\fBlink\fP	symbolic link
E 3
I 3
.IP
\fBchar\fP		character special device
.IP
\fBdir\fP		directory
.IP
\fBfile\fP		regular file
.IP
\fBlink\fP		symbolic link
.IP
E 3
\fBsocket\fP	socket
E 4
I 4
The type of the file; may be set to any one of the following:
I 13
.sp
E 13
D 6
.RS
.TP
.B block
E 6
I 6
D 11
.Tw Cm
D 7
.Tp Tp Cm block
E 7
I 7
.Tp Cm block
E 11
I 11
D 12
.Bl -tag -width Cm
E 12
I 12
.Bl -tag -width Cm -compact
E 12
.It Cm block
E 11
E 7
E 6
block special device
D 6
.TP
.B char
E 6
I 6
D 11
.Tp Cm char
E 11
I 11
.It Cm char
E 11
E 6
character special device
D 6
.TP
.B dir
E 6
I 6
D 11
.Tp Cm dir
E 11
I 11
.It Cm dir
E 11
E 6
directory
D 6
.TP
.B fifo
E 6
I 6
D 11
.Tp Cm fifo
E 11
I 11
.It Cm fifo
E 11
E 6
fifo
D 6
.TP
.B file
E 6
I 6
D 11
.Tp Cm file
E 11
I 11
.It Cm file
E 11
E 6
regular file
D 6
.TP
.B link
E 6
I 6
D 11
.Tp Cm link
E 11
I 11
.It Cm link
E 11
E 6
symbolic link
D 6
.TP
.B socket
E 6
I 6
D 11
.Tp Cm socket
E 11
I 11
.It Cm socket
E 11
E 6
socket
D 6
.RE
E 4
E 2
D 3
.TE
E 3
.PP
E 6
I 6
D 11
.Tp
.Tp
E 11
I 11
.El
.El
E 11
.Pp
I 13
The default set of keywords are
.Cm gid ,
.Cm mode ,
.Cm nlink ,
.Cm size ,
.Cm slink ,
.Cm time ,
and
.Cm uid .
.Pp
E 13
E 6
D 4
There are five types of lines in a specification.
E 4
I 4
There are four types of lines in a specification.
E 4
D 6
.PP
E 6
I 6
.Pp
E 6
D 4
The first type sets the value of a keyword and consists of three fields:
D 2
the string ``/set'', a keyword, an equals sign, and the keyword's value.
Whitespace is required between the ``set'' and the keyword, but no
whitespace is allowed in the rest of the line.
E 2
I 2
the string
.BR /set ,
a keyword, an equals sign, and the keyword's value.
Whitespace is required between the
.B set
and the keyword, but no whitespace is allowed in the rest of the line.
E 2
Once a key word is set, the value remains unchanged until either
reset or unset.
E 4
I 4
D 13
The first type of line sets a ``global'' value for a keyword, and
consists of a leading ``/set'' followed by whitespace, followed by
sets of keyword/value pairs, separated by whitespace.
Keyword/value pairs consist of a keyword, followed by a equals sign
(``=''), followed by a value, without intervening whitespace.
E 13
I 13
The first type of line sets a global value for a keyword, and consists of
the string ``/set'' followed by whitespace, followed by sets of keyword/value
pairs, separated by whitespace.
Keyword/value pairs consist of a keyword, followed by an equals sign
(``=''), followed by a value, without whitespace characters.
E 13
Once a keyword has been set, its value remains unchanged until either
D 13
set again or unset.
E 13
I 13
reset or unset.
E 13
E 4
D 6
.PP
E 6
I 6
.Pp
E 6
D 4
The second type of line unsets keywords and consists of two fields:
D 2
the string ``/unset'' and a keyword, separated by whitespace.
E 2
I 2
the string
.B /unset
and a keyword, separated by whitespace.
E 4
I 4
D 13
The second type of line unsets keywords and consists of a leading
E 13
I 13
The second type of line unsets keywords and consists of the string
E 13
``/unset'', followed by whitespace, followed by one or more keywords,
separated by whitespace.
E 4
E 2
D 6
.PP
E 6
I 6
.Pp
E 6
D 2
The third type of line consists of two fields: the string ``/ignore'' and
a name, separated by whitespace.
E 2
I 2
D 4
The third type of line consists of two fields: the string
.B /ignore
and a name, separated by whitespace.
E 2
This causes
.I mtree
to ignore the referenced file as well as all files below it in the tree.
E 4
I 4
The third type of line is a file specification and consists of a file
name, followed by whitespace, followed by zero or more whitespace
separated keyword/value pairs.
D 13
The file name may be preceded by any number of whitespace characters.
E 13
I 13
The file name may be preceded by whitespace characters.
E 13
The file name may contain any of the standard file name matching
characters (``['', ``]'', ``?'' or ``*''), in which case files
in the hierarchy will be associated with the first pattern that
they match.
E 4
D 6
.PP
E 6
I 6
.Pp
E 6
D 4
The fourth type of line is a node specification and consists of the name
of a file followed by zero or more whitespace separated fields.
I 2
The name may be preceded by any amount of whitespace characters.
E 2
Each of these fields consists of a keyword, followed by an equals
sign (=), followed by the keyword's value, without intervening whitespace.
The values override, without changing, the current value of the
E 4
I 4
Each of the keyword/value pairs consist of a keyword, followed by an
D 13
equals sign (``=''), followed by the keyword's value, without intervening
whitespace.
E 13
I 13
equals sign (``=''), followed by the keyword's value, without
whitespace characters.
E 13
These values override, without changing, the global value of the
E 4
corresponding keyword.
D 6
.PP
E 6
I 6
.Pp
E 6
D 4
The node name may contain any of the standard file name matching characters.
In this case, any file in the current directory with a name matching the
pattern will have the specification applied to it.
.PP
E 4
All paths are relative.
D 4
Any directory specification will cause the current directory path to
descend one level.
Any non-directory will be presumed to be below the current directory
path.
E 4
I 4
Specifying a directory will cause subsequent files to be searched
for in that directory hierarchy.
E 4
Which brings us to the last type of line in a specification: a line
D 2
containing just the string ``..'' causes the current directory path to
ascend one level.
E 2
I 2
D 4
containing just the string
.B ..
causes the current directory path to ascend one level.
E 4
I 4
D 6
containing only the string ``\fB..\fR'' causes the current directory
E 6
I 6
containing only the string
.Dq Nm \&..
causes the current directory
E 6
path to ascend one level.
E 4
E 2
D 6
.PP
E 6
I 6
.Pp
E 6
D 2
Empty lines and lines beginning with a hash mark (``#'') are ignored.
E 2
I 2
D 4
Empty lines and lines whose first non-whitespace character is a hash mark
(``#'') are ignored.
E 4
I 4
Empty lines and lines whose first non-whitespace character is a hash
mark (``#'') are ignored.
E 4
E 2
D 6
.PP
.I Mtree
E 6
I 6
.Pp
D 13
.Nm Mtree
E 6
D 4
exits 0 on success and >0 if an error occurred or the tree did not
match the specification.
E 4
I 4
exits with a status of 0 on success and >0 if an error occurred or the
tree did not match the specification.
E 13
I 13
The
.Nm mtree
utility exits with a status of 0 on success, 1 if any error occurred,
and 2 if the file hierarchy did not match the specification.
.Sh EXAMPLES
To detect system binaries that have been ``trojan horsed'', it is recommended
that
.Nm mtree
be run on the file systems, and a copy of the results stored on a different
machine, or, at least, in encrypted form.
The seed for the
.Fl s
option should not be an obvious value and the final checksum should not be
stored on-line under any circumstances!
Then, periodically,
.Nm mtree
should be run against the on-line specifications and the final checksum
compared with the previous value.
While it is possible for the bad guys to change the on-line specifications
to conform to their modified binaries, it shouldn't be possible for them
to make it produce the same final checksum value.
If the final checksum value changes, the off-line copies of the specification
can be used to detect which of the binaries have actually been modified.
.Pp
The
.Fl d
and
.Fl u
options can be used in combination to create directory hierarchies
for distributions and other such things.
E 13
D 6
.SH FILES
/etc/mtree	system specification directory
E 4
.SH "SEE ALSO"
D 4
find(1), stat(2), ftwalk(3), mkproto(8)
E 4
I 4
chmod(1), chown(1), chgrp(1), cksum(1), find(1), stat(2), fts(3), mkproto(8)
.SH BUGS
E 6
I 6
.Sh FILES
D 11
.Dw /etc/mtree
.Di L
.Dp Pa /etc/mtree
E 11
I 11
.Bl -tag -width /etc/mtree -compact
.It Pa /etc/mtree
E 11
system specification directory
D 11
.Dp
E 11
I 11
.El
E 11
.Sh SEE ALSO
.Xr chmod 1 ,
.Xr chown 1 ,
.Xr chgrp 1 ,
.Xr cksum 1 ,
D 13
.Xr find 1 ,
E 13
.Xr stat 2 ,
.Xr fts 3 ,
D 13
.Xr mkproto 8
.Sh BUGS
E 6
The
D 6
.I cksum
E 6
I 6
.Cm cksum
E 6
keyword is not yet implemented.
I 5
D 6
.br
E 6
I 6
.Pp
E 6
The
D 6
.I time
E 6
I 6
.Cm time
E 6
keyword should be specifiable in human readable terms.
E 5
E 4
D 6
.SH EXAMPLE
D 4
.TS
l l l l l l.
# BSD root file system
#
D 2
set type=file
set owner=bin
set group=bin
set dmode=755
set fmode=555
set links=1
E 2
I 2
/set type=file
/set owner=bin
/set group=bin
/set dmode=755
/set fmode=555
/set links=1
E 4
I 4
.nf
E 6
I 6
.Sh EXAMPLE
D 11
.Ds I
E 11
I 11
.Bd -literal -offset indent -compact
E 11
E 6
#	  fs: /a/staff/rick/mybin
#	  by: rick
#	date: Fri May 25 12:26:57 1990
E 4
E 2
D 6

E 6
I 6
D 11
.sp
E 11
I 11

E 11
E 6
D 4
bin				type=directory
	adb
	cat
\..
D 2
set fmode=640
E 2
I 2
/set fmode=640
E 2
dev
	MAKEDEV
	kmem			type=char group=kmem
	null			type=char group=kmem
	rdk*			type=char group=operator
	dk*			type=block group=operator
\..
etc				type=directory
	disklabels			type=directory
		*		mode=444
	\..
\..
.TE
E 4
I 4
/set group=staff mode=0555 nlink=1 owner=rick type=file
D 6
[		nlink=2 size=6144
E 6
I 6
[ 		nlink=2 size=6144
E 6
adb		size=53248
df		group=operator mode=02555 size=20480
ps		group=kmem mode=02555 size=54272
rcp		owner=root mode=04555 size=79872
test		nlink=2 size=6144
D 6

E 6
I 6
D 11
.sp
E 11
I 11

E 11
E 6
/set group=wheel mode=0444 nlink=1 owner=rick type=file
manpages	type=dir mode=0775 nlink=2 size=1024
D 6
		adb.man	size=9473
		df.man	size=5263
		tar.man	size=3324
E 6
I 6
adb.man	size=9473
df.man	size=5263
tar.man	size=3324
E 6
\&..
D 6
.fi
E 6
I 6
D 11
.De
E 11
I 11
.Ed
E 13
E 11
D 7
.\" .Sh ENVIRONMENT
E 7
.Sh HISTORY
D 7
.Nm Mtree
debuts in 4.4 BSD.
E 7
I 7
D 11
4.3 Reno BSD.
E 11
I 11
The
.Nm mtree
utility appeared in
.Bx 4.3 Reno .
E 11
E 7
E 6
E 4
E 1
